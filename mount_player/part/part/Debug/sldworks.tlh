// Created by Microsoft (R) C/C++ Compiler Version 15.00.21022.08 (7adcb206).
//
// h:\part\part\debug\sldworks.tlh
//
// C++ source equivalent of Win32 type library sldworks.tlb
// compiler-generated file created 07/23/10 at 11:06:25 - DO NOT EDIT!

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

namespace SldWorks {

//
// Forward references and typedefs
//

struct __declspec(uuid("83a33d31-27c5-11ce-bfd4-00400513bb57"))
/* LIBID */ __SldWorks;
struct __declspec(uuid("83a33d22-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ISldWorks;
struct __declspec(uuid("83a33d46-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IModelDoc;
struct __declspec(uuid("83a33d59-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ISelectionMgr;
struct __declspec(uuid("83a33d9a-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IComponent;
struct __declspec(uuid("83a33d3c-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IBody;
struct __declspec(uuid("83a33d3e-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IFace;
struct __declspec(uuid("83a33d40-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ISurface;
struct __declspec(uuid("83a33d44-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ICurve;
struct __declspec(uuid("3a075bfd-9962-4431-8321-7af4903c55ad"))
/* dual interface */ IBody2;
struct __declspec(uuid("4a8ba4d8-da25-4b75-8e2d-4922b74d81ed"))
/* dual interface */ IFace2;
struct __declspec(uuid("83a33d42-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IEdge;
struct __declspec(uuid("83a33d61-27c5-11ce-bfd4-00400513bb57"))
/* interface */ IEnumCoEdges;
struct __declspec(uuid("83a33d57-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ICoEdge;
struct __declspec(uuid("83a33d53-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ILoop;
struct __declspec(uuid("83a33d5f-27c5-11ce-bfd4-00400513bb57"))
/* interface */ IEnumEdges;
struct __declspec(uuid("9350ca6e-0adb-485a-8941-9407dd7b3b8e"))
/* dual interface */ ILoop2;
struct __declspec(uuid("83a33d63-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IVertex;
struct __declspec(uuid("b90793fb-ef3d-4b80-a5c4-99959cdb6ceb"))
/* dual interface */ IModelDoc2;
struct __declspec(uuid("83a33d4c-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IModelView;
struct __declspec(uuid("f7d97f82-162e-11d4-aeab-00c04fa0ac51"))
/* dual interface */ IMathTransform;
struct __declspec(uuid("f7d97f86-162e-11d4-aeab-00c04fa0ac51"))
/* dual interface */ IMathVector;
struct __declspec(uuid("f7d97f84-162e-11d4-aeab-00c04fa0ac51"))
/* dual interface */ IMathPoint;
struct __declspec(uuid("48bf52ea-4654-4227-8c54-8af49c3bcef2"))
/* dual interface */ ICamera;
struct __declspec(uuid("9ed126f7-935e-4279-9171-4086a235719b"))
/* dual interface */ IMouse;
struct __declspec(uuid("83a33d51-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ISketch;
struct __declspec(uuid("83a33dcd-27c5-11ce-bfd4-00400513bb57"))
/* interface */ IEnumSketchPoints;
struct __declspec(uuid("83a33dbd-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ISketchPoint;
struct __declspec(uuid("9caaa1aa-f2fc-11d5-af66-00c04f603faf"))
/* dual interface */ ICallout;
struct __declspec(uuid("7033ea1b-744a-44f3-a2b4-e450d4c99f0e"))
/* dual interface */ ISketchRelation;
struct __declspec(uuid("4df2e524-c744-4c8b-92d5-1b96eca5a0d0"))
/* dual interface */ ISelectData;
struct __declspec(uuid("83a33d50-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IView;
struct __declspec(uuid("83a33d55-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ INote;
struct __declspec(uuid("83a33db9-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ITextFormat;
struct __declspec(uuid("83a33da9-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IAnnotation;
struct __declspec(uuid("83a33d9c-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IDisplayData;
struct __declspec(uuid("78d7fda3-83d7-4c01-9e54-73ab4827cc4e"))
/* dual interface */ IAnnotationView;
struct __declspec(uuid("01eb5266-6ca9-4f59-b0b4-a040dd1ccfb6"))
/* dual interface */ IMultiJogLeader;
struct __declspec(uuid("4944f9e6-bf50-11d5-af56-00c04f603faf"))
/* dual interface */ IBalloonStack;
struct __declspec(uuid("83a33d4a-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IGtol;
struct __declspec(uuid("83a33d8e-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ISFSymbol;
struct __declspec(uuid("83a33d90-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IDatumTag;
struct __declspec(uuid("83a33d92-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IDatumTargetSym;
struct __declspec(uuid("83a33d94-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IWeldSymbol;
struct __declspec(uuid("83a33d9e-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ICThread;
struct __declspec(uuid("83a33da1-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IDisplayDimension;
struct __declspec(uuid("83a33d3a-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IDimension;
struct __declspec(uuid("83a33d38-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IFeature;
struct __declspec(uuid("83a33dab-27c5-11ce-bfd4-00400513bb57"))
/* interface */ IEnumDisplayDimensions;
struct __declspec(uuid("655d6f2a-5441-45d1-8cba-d35fb26988e4"))
/* dual interface */ IComponent2;
struct __declspec(uuid("97a9befa-6814-4fa6-acb4-8cc84f76fb99"))
/* interface */ IEnumBodies2;
struct __declspec(uuid("83a33d67-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IAttributeDef;
struct __declspec(uuid("83a33d65-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IEntity;
struct __declspec(uuid("83a33d71-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IAttribute;
struct __declspec(uuid("83a33d69-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IParameter;
struct __declspec(uuid("f25e6093-1a6f-46d3-9866-860934df611d"))
/* dual interface */ IDrawingComponent;
struct __declspec(uuid("b81f43f1-8f16-4482-bf05-8bee973b6ce8"))
/* dual interface */ ITexture;
struct __declspec(uuid("263f0ff6-4c7e-477a-b0ae-49ee41e43351"))
/* dual interface */ IDecal;
struct __declspec(uuid("d3bd935b-dfb4-4eda-b03a-da4eb2024f3f"))
/* dual interface */ IRenderMaterial;
struct __declspec(uuid("f1938d94-0d1f-4e88-9874-164b1e6568f1"))
/* dual interface */ ICustomPropertyManager;
struct __declspec(uuid("4e23a946-7d96-40a2-bda0-fdf9767c438d"))
/* dual interface */ IComment;
struct __declspec(uuid("f43444a8-1d72-4178-95c8-7108cf29e016"))
/* dual interface */ IDimensionTolerance;
struct __declspec(uuid("83a33d82-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IBomTable;
struct __declspec(uuid("83a33db5-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ICustomSymbol;
struct __declspec(uuid("f183a33f-d4db-11d3-aeb2-00c04f603faf"))
/* dual interface */ IDrSection;
struct __declspec(uuid("51efb944-d449-11d3-aebe-00c04f683cba"))
/* interface */ IEnumComponents;
struct __declspec(uuid("f6804d12-b73a-49af-81c6-05babb58b812"))
/* interface */ IEnumComponents2;
struct __declspec(uuid("585a6a15-e95b-11d3-aebc-00c04f603faf"))
/* interface */ IEnumDrSections;
struct __declspec(uuid("4b65a34a-4c44-11d4-aef6-00c04f683cba"))
/* dual interface */ IDetailCircle;
struct __declspec(uuid("83a33dbf-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ISketchSegment;
struct __declspec(uuid("41a80156-183c-4b30-a757-8b13aab4e7c5"))
/* dual interface */ ISketchPath;
struct __declspec(uuid("a2227e65-a3a7-11d4-aeff-00c04f603faf"))
/* dual interface */ IProjectionArrow;
struct __declspec(uuid("55aacd8b-97c5-11d5-af4b-00c04f603faf"))
/* dual interface */ IDowelSymbol;
struct __declspec(uuid("992a14b6-15cf-11d6-af6e-00c04f603faf"))
/* dual interface */ IBlockInstance;
struct __declspec(uuid("8cd8314a-1677-11d6-af6e-00c04f603faf"))
/* dual interface */ IBlockDefinition;
struct __declspec(uuid("54e1ffbc-d989-437f-a701-62bda39fd195"))
/* dual interface */ IBreakLine;
struct __declspec(uuid("e0a98a37-8780-4e5f-a28a-c7c6af25231c"))
/* dual interface */ IFaceHatch;
struct __declspec(uuid("6beb0423-eda4-11d5-af64-00c04f603faf"))
/* dual interface */ ICenterMark;
struct __declspec(uuid("90de8cd7-cffc-414b-8380-131c739f9fb5"))
/* dual interface */ ICenterLine;
struct __declspec(uuid("c108723c-ac56-4c08-9591-7980b0a5aab2"))
/* dual interface */ ITableAnnotation;
struct __declspec(uuid("846c6e0f-7319-4c13-b12e-a6b231dacc89"))
/* dual interface */ IGeneralTableFeature;
struct __declspec(uuid("61e4109e-d5d1-48cb-8593-8283ef0bb79a"))
/* dual interface */ IHoleTableAnnotation;
struct __declspec(uuid("727dd5df-15f4-4916-854a-be9e30614c97"))
/* dual interface */ IHoleTable;
struct __declspec(uuid("5d9a743b-fa81-4d23-ab0a-2898584f6f1e"))
/* dual interface */ IDatumOrigin;
struct __declspec(uuid("98fd64dc-285d-4b48-9bdb-d85c253e2baf"))
/* dual interface */ IBomTableAnnotation;
struct __declspec(uuid("3368f34b-85f2-4d61-9325-3353cf110d5a"))
/* dual interface */ IBomFeature;
struct __declspec(uuid("66f09b08-8a71-4283-a943-3f905653c859"))
/* dual interface */ IWeldBead;
struct __declspec(uuid("83a33d80-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ISheet;
struct __declspec(uuid("931374cc-ce0e-11d5-af59-00c04f603faf"))
/* dual interface */ IPageSetup;
struct __declspec(uuid("175ca9e4-b05a-48ba-8047-da3d9bb6b583"))
/* dual interface */ IRevisionTableAnnotation;
struct __declspec(uuid("660caf6b-65a0-4664-ad9f-81ab7a4664b7"))
/* dual interface */ IRevisionTableFeature;
struct __declspec(uuid("94d89c12-93e7-4da1-9239-5e93830b5635"))
/* dual interface */ ITableAnchor;
struct __declspec(uuid("0a002df8-354e-4376-9a08-e31352e61d32"))
/* dual interface */ ITitleBlock;
struct __declspec(uuid("5253c565-2195-4e99-a353-cb62f5e5963b"))
/* dual interface */ IWeldmentCutListAnnotation;
struct __declspec(uuid("3cd5de06-83f6-4a7c-a288-d8a41f9f0351"))
/* dual interface */ IWeldmentCutListFeature;
struct __declspec(uuid("83a33dcf-27c5-11ce-bfd4-00400513bb57"))
/* interface */ IEnumSketchSegments;
struct __declspec(uuid("54729b8e-4086-11d3-ae9b-00c04f683cba"))
/* interface */ IEnumSketchHatches;
struct __declspec(uuid("c3d00926-4068-11d3-ae9b-00c04f683cba"))
/* dual interface */ ISketchHatch;
struct __declspec(uuid("d5f6d2c9-79d6-4cc8-ad19-dff1aed88fe5"))
/* dual interface */ ISketchRelationManager;
struct __declspec(uuid("93f9a5a6-a4f6-435e-bcc6-b4592c06858f"))
/* dual interface */ ISketchBlockInstance;
struct __declspec(uuid("82dc842f-001e-4b72-a762-540dcfb70705"))
/* dual interface */ ISketchBlockDefinition;
struct __declspec(uuid("0aba4670-6fbe-4f2e-be80-5c33ea2cf77b"))
/* dual interface */ ISketchPicture;
struct __declspec(uuid("eb53b511-e23d-4b6a-b48d-21828af5f151"))
/* dual interface */ ISketchRegion;
struct __declspec(uuid("eb53b513-e23d-4b6a-b48d-21828af5f151"))
/* dual interface */ ISketchContour;
struct __declspec(uuid("e64199c3-6876-412b-a924-5f62af5e6c83"))
/* dual interface */ ISketchSlot;
struct __declspec(uuid("5b6e8476-461f-43af-b784-90d3cd74337c"))
/* dual interface */ IMidSurface2;
struct __declspec(uuid("83a33d75-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IFeatMgrView;
struct __declspec(uuid("83a33d98-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IConfiguration;
struct __declspec(uuid("7241680b-0bc6-11d4-aeee-00c04f61025c"))
/* dual interface */ IExplodeStep;
struct __declspec(uuid("83a33da3-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IReferenceCurve;
struct __declspec(uuid("83a33da5-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IColorTable;
struct __declspec(uuid("83a33db1-27c5-11ce-bfd4-00400513bb57"))
/* interface */ IEnumModelViews;
struct __declspec(uuid("83a33db7-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IDetailingDefaults;
struct __declspec(uuid("75173e30-f19e-11d2-b8e9-00c04f8ef738"))
/* dual interface */ ILayerMgr;
struct __declspec(uuid("04b7287c-f19d-11d2-b8e9-00c04f8ef738"))
/* dual interface */ ILayer;
struct __declspec(uuid("ce1eaa88-25ad-11d3-ae91-00c04f683cba"))
/* dual interface */ IDesignTable;
struct __declspec(uuid("83a33d84-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IRefPlane;
struct __declspec(uuid("e981b4fa-7e86-11d4-aef2-00c04f603faf"))
/* dual interface */ IPropertyManagerPage;
struct __declspec(uuid("82071121-8b32-4f51-8983-9304756503e7"))
/* dual interface */ IUserUnit;
struct __declspec(uuid("83a33dc5-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ISketchText;
struct __declspec(uuid("02272ce8-fe52-4b94-b120-6d1826fdbe32"))
/* dual interface */ IEquationMgr;
struct __declspec(uuid("6b39655e-381b-4bd0-89f5-640d48593f15"))
/* dual interface */ IFeatureManager;
struct __declspec(uuid("442b6462-0350-4f5c-a168-3f753f6ca792"))
/* dual interface */ ICustomBendAllowance;
struct __declspec(uuid("3aea5179-14d5-407c-b669-48e9209043d2"))
/* dual interface */ ITreeControlItem;
struct __declspec(uuid("1aa249ff-b758-440a-8b88-26512f385bf3"))
/* dual interface */ IModelViewManager;
struct __declspec(uuid("c73d0a8d-b615-4f79-bf31-9ec49016a861"))
/* dual interface */ IManipulator;
struct __declspec(uuid("f73fa7fd-c4e7-44ac-82fa-3e03a11ddb21"))
/* dual interface */ ISectionViewData;
struct __declspec(uuid("99f4d4af-f268-4ee1-8c55-041f7becf879"))
/* dual interface */ IModelDocExtension;
struct __declspec(uuid("158bad02-d515-4400-ada4-f9941c974dc1"))
/* dual interface */ IMassProperty;
struct __declspec(uuid("b0bad545-4dd8-4d2a-8dde-438124126932"))
/* dual interface */ ISwOLEObject;
struct __declspec(uuid("41bd2a2f-bf57-49d6-9a56-d46b82da04c8"))
/* dual interface */ IPrint3DDialog;
struct __declspec(uuid("151497a7-8b45-4a2c-9da1-cad54eef5855"))
/* dual interface */ IMeasure;
struct __declspec(uuid("8db64337-f36e-47cc-bbbc-b4b979d31505"))
/* dual interface */ IConfigurationManager;
struct __declspec(uuid("9ce9dace-e595-4d8f-b893-5ae4899517de"))
/* dual interface */ ISketchManager;
struct __declspec(uuid("83a33dcb-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ISketchSpline;
struct __declspec(uuid("41607756-57a8-4e03-9bac-2444b5fabc9d"))
/* dual interface */ ISplineHandle;
struct __declspec(uuid("9ef72595-1414-46bf-b4bb-b0da133c893c"))
/* dual interface */ IFaultEntity;
struct __declspec(uuid("9a6ad388-3fc9-48de-bfa5-b8953433ab36"))
/* interface */ IEnumLoops2;
struct __declspec(uuid("49077ce2-d642-464c-bc16-fc45c5e3ac86"))
/* dual interface */ IFaceDecalProperties;
struct __declspec(uuid("61ecff18-ac2c-405e-b9b8-30d85fdb5087"))
/* interface */ IEnumFaces2;
struct __declspec(uuid("83a33d32-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IPartDoc;
struct __declspec(uuid("83a33d96-27c5-11ce-bfd4-00400513bb57"))
/* interface */ IEnumBodies;
struct __declspec(uuid("66e0fcbd-16d4-4483-8731-db08f90218da"))
/* dual interface */ IMaterialVisualPropertiesData;
struct __declspec(uuid("699c7492-db56-4cc2-b7a2-9ffd56698434"))
/* dual interface */ ITessellation;
struct __declspec(uuid("08cc54d0-eca9-416c-abf0-07586843d51d"))
/* dual interface */ IDiagnoseResult;
struct __declspec(uuid("83a33d5d-27c5-11ce-bfd4-00400513bb57"))
/* interface */ IEnumLoops;
struct __declspec(uuid("83a33d5b-27c5-11ce-bfd4-00400513bb57"))
/* interface */ IEnumFaces;
struct __declspec(uuid("83a33d88-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IMidSurface;
struct __declspec(uuid("83a33d48-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IFrame;
struct __declspec(uuid("931f2702-3257-4372-bbcc-cbd4a7fbbc41"))
/* dual interface */ IStatusBarPane;
struct __declspec(uuid("84bc447e-d4a9-43cf-8287-5d9f5ab0ca41"))
/* dual interface */ IModelWindow;
struct __declspec(uuid("83a33d35-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IAssemblyDoc;
struct __declspec(uuid("83a33d4e-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IMember;
struct __declspec(uuid("e0aace0f-3a47-437e-99b4-9330cd6186ba"))
/* dual interface */ IDragOperator;
struct __declspec(uuid("b09d234a-7581-408e-b3b3-fc0a514aafa8"))
/* dual interface */ IMate2;
struct __declspec(uuid("ce7fe69d-bcfa-441f-a37d-e740546458a4"))
/* dual interface */ IMateEntity2;
struct __declspec(uuid("35627cfb-32e3-468c-aaa3-9222d2f190bd"))
/* dual interface */ IMateLoadReference;
struct __declspec(uuid("b2a77cec-857c-43be-9e28-106201212b43"))
/* dual interface */ ISimulation;
struct __declspec(uuid("4f50fa8d-bcf3-4395-b146-b5ae933affd5"))
/* dual interface */ IAnimation;
struct __declspec(uuid("f40e5fa3-6c6a-4c23-a5af-628357ccee50"))
/* dual interface */ IAdvancedSelectionCriteria;
struct __declspec(uuid("eae282bd-588a-4c1b-ad99-5fe6081c4585"))
/* dual interface */ IInterferenceDetectionMgr;
struct __declspec(uuid("f04ec279-edf3-4a8e-bf87-e3237cbccd8c"))
/* dual interface */ IInterference;
struct __declspec(uuid("83a33d33-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IDrawingDoc;
struct __declspec(uuid("83a33d73-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IModeler;
struct __declspec(uuid("0f8f1b36-faba-4552-82c3-5511ca5124e6"))
/* dual interface */ ISpring;
struct __declspec(uuid("83a33d78-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IEnvironment;
struct __declspec(uuid("83a33db3-27c5-11ce-bfd4-00400513bb57"))
/* interface */ IEnumDocuments;
struct __declspec(uuid("f7d97f80-162e-11d4-aeab-00c04fa0ac51"))
/* dual interface */ IMathUtility;
struct __declspec(uuid("76d82d71-339a-4d1c-91a1-f6ac0cf9b625"))
/* interface */ IEnumDocuments2;
struct __declspec(uuid("b92e624a-0dc3-11d5-af1e-00c04f603faf"))
/* dual interface */ IPropertyManagerPage2;
struct __declspec(uuid("2e23d2ee-0f57-11d5-af1f-00c04f603faf"))
/* dual interface */ IPropertyManagerPageGroup;
struct __declspec(uuid("ced9caf4-16fa-11d5-af24-00c04f603faf"))
/* dual interface */ IPropertyManagerPageControl;
struct __declspec(uuid("22bcfa78-d2bf-449c-88ab-99cbc4468bdb"))
/* dual interface */ IPropertyManagerPageTab;
struct __declspec(uuid("edbba0e9-b701-419e-a4ae-3409dbf12d40"))
/* dual interface */ ITaskpaneView;
struct __declspec(uuid("2a586331-a56d-44c9-aa32-2868a96f044d"))
/* dual interface */ IPtnrPMPage;
struct __declspec(uuid("f61069cf-2e42-4ac4-a517-6a95b79e45ee"))
/* dual interface */ ICommandManager;
struct __declspec(uuid("ff545450-b559-400d-964c-a3811f209148"))
/* dual interface */ ICommandGroup;
struct __declspec(uuid("fc248e07-607d-4429-960b-e4ce20ab55ab"))
/* dual interface */ ICommandTab;
struct __declspec(uuid("1dbaab20-9626-4cb8-a275-c346ac425362"))
/* dual interface */ ICommandTabBox;
struct __declspec(uuid("01e97594-34eb-46bd-9036-518c1b352245"))
/* dual interface */ IUserProgressBar;
struct __declspec(uuid("338d2790-a47f-45bc-aa03-e70b711ca811"))
/* dual interface */ IJournalManager;
struct __declspec(uuid("71520755-04d2-4075-b756-124495c591c5"))
/* dual interface */ IRefPoint;
struct __declspec(uuid("83a33d86-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IRefAxis;
struct __declspec(uuid("83a33d8a-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IMate;
struct __declspec(uuid("83a33d8c-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IMateEntity;
struct __declspec(uuid("83a33da7-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ISWPropertySheet;
struct __declspec(uuid("83a33dad-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IRibFeatureData;
struct __declspec(uuid("83a33daf-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IDomeFeatureData;
struct __declspec(uuid("83a33dc1-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ISketchLine;
struct __declspec(uuid("83a33dc3-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ISketchArc;
struct __declspec(uuid("83a33dc7-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ISketchEllipse;
struct __declspec(uuid("83a33dc9-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ISketchParabola;
struct __declspec(uuid("83a33df1-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ILightDialog;
struct __declspec(uuid("5b57e3bc-7139-11d3-aea2-00c04f683cba"))
/* interface */ IEnumCurves;
struct __declspec(uuid("1d06fd54-96dd-11d3-aeaa-00c04f683cba"))
/* dual interface */ ISimpleHoleFeatureData;
struct __declspec(uuid("887ab457-a739-11d3-b97f-001083029a97"))
/* dual interface */ IWizardHoleFeatureData;
struct __declspec(uuid("b1edf95c-e764-486a-a82e-8402d6553992"))
/* dual interface */ IHoleSeriesFeatureData;
struct __declspec(uuid("7271d7c7-acc9-11d3-b97f-001083029a97"))
/* dual interface */ IChamferFeatureData;
struct __declspec(uuid("bc633ce1-b367-11d3-b981-001083029a97"))
/* dual interface */ IDraftFeatureData;
struct __declspec(uuid("cc929f0b-b404-11d3-b981-001083029a97"))
/* dual interface */ ISimpleFilletFeatureData;
struct __declspec(uuid("cc929f0d-b404-11d3-b981-001083029a97"))
/* dual interface */ IVariableFilletFeatureData;
struct __declspec(uuid("908a7175-b72c-11d3-b981-001083029a97"))
/* dual interface */ IExtrudeFeatureData;
struct __declspec(uuid("b7fff613-b735-11d3-b981-001083029a97"))
/* dual interface */ IRevolveFeatureData;
struct __declspec(uuid("414f4f1e-30ec-11d4-aeeb-00c04f683cba"))
/* dual interface */ IMirrorPatternFeatureData;
struct __declspec(uuid("dbbf39de-7ab5-11d4-aeb6-00c04fa0ac51"))
/* dual interface */ ICircularPatternFeatureData;
struct __declspec(uuid("f86d1e94-7de8-11d4-aeb7-00c04fa0ac51"))
/* dual interface */ ILinearPatternFeatureData;
struct __declspec(uuid("e5d1af7c-7f5d-11d4-aeb7-00c04fa0ac51"))
/* dual interface */ ITablePatternFeatureData;
struct __declspec(uuid("ae998464-8050-11d4-aeb7-00c04fa0ac51"))
/* dual interface */ ISketchPatternFeatureData;
struct __declspec(uuid("e9172718-836b-11d4-aeb7-00c04fa0ac51"))
/* dual interface */ IMirrorSolidFeatureData;
struct __declspec(uuid("2f6c1e88-f2d6-11d4-aed5-00c04fa0ac51"))
/* dual interface */ ISheetMetalFeatureData;
struct __declspec(uuid("0c02ad40-f6e6-11d4-aed6-00c04fa0ac51"))
/* dual interface */ IOneBendFeatureData;
struct __declspec(uuid("f3bdb64e-f7c6-11d4-aed6-00c04fa0ac51"))
/* dual interface */ IBendsFeatureData;
struct __declspec(uuid("c61e9dd6-0813-11d5-aedd-00c04fa0ac51"))
/* dual interface */ IBaseFlangeFeatureData;
struct __declspec(uuid("b58e432a-09c8-11d5-aedd-00c04fa0ac51"))
/* dual interface */ IEdgeFlangeFeatureData;
struct __declspec(uuid("e6194f72-0cec-11d5-aedd-00c04fa0ac51"))
/* dual interface */ IMiterFlangeFeatureData;
struct __declspec(uuid("a4d90a70-0da5-11d5-aedd-00c04fa0ac51"))
/* dual interface */ ISketchedBendFeatureData;
struct __declspec(uuid("2134cbfc-0dda-11d5-aedd-00c04fa0ac51"))
/* dual interface */ IClosedCornerFeatureData;
struct __declspec(uuid("32700a62-0e5c-11d5-aedd-00c04fa0ac51"))
/* dual interface */ IFoldsFeatureData;
struct __declspec(uuid("00644208-0e6c-11d5-aedd-00c04fa0ac51"))
/* dual interface */ IFlatPatternFeatureData;
struct __declspec(uuid("9890c04c-1196-11d5-aede-00c04fa0ac51"))
/* dual interface */ ILocalLinearPatternFeatureData;
struct __declspec(uuid("f2e81434-13fb-11d5-aede-00c04fa0ac51"))
/* dual interface */ ILocalCircularPatternFeatureData;
struct __declspec(uuid("98eadb32-141a-11d5-aede-00c04fa0ac51"))
/* dual interface */ IDerivedPatternFeatureData;
struct __declspec(uuid("ebbd7b58-170d-11d5-af24-00c04f603faf"))
/* dual interface */ IPropertyManagerPageLabel;
struct __declspec(uuid("ebbd7b5a-170d-11d5-af24-00c04f603faf"))
/* dual interface */ IPropertyManagerPageCheckbox;
struct __declspec(uuid("3a66c294-17ce-11d5-af24-00c04f603faf"))
/* dual interface */ IPropertyManagerPageButton;
struct __declspec(uuid("3a66c296-17ce-11d5-af24-00c04f603faf"))
/* dual interface */ IPropertyManagerPageOption;
struct __declspec(uuid("eb18a468-1800-11d5-af24-00c04f603faf"))
/* dual interface */ IPropertyManagerPageTextbox;
struct __declspec(uuid("0bd2ba62-18c5-11d5-af24-00c04f603faf"))
/* dual interface */ IPropertyManagerPageCombobox;
struct __declspec(uuid("ff956369-ae71-4643-afa8-83d7548f758a"))
/* dual interface */ IPropertyManagerPageActiveX;
struct __declspec(uuid("e508ce7d-0439-4c3d-a61f-a7c9ecdc78bd"))
/* dual interface */ IPropertyManagerPageBitmapButton;
struct __declspec(uuid("459f4b5c-7f8c-4a7e-8aa0-fcfb6ed2d286"))
/* dual interface */ IProjectionCurveFeatureData;
struct __declspec(uuid("e7631115-f299-4852-9d37-fc9508a00bc1"))
/* dual interface */ IScaleFeatureData;
struct __declspec(uuid("58252a5a-82af-49ef-a2fe-e8c995132f84"))
/* dual interface */ IShellFeatureData;
struct __declspec(uuid("07799f9d-7e4f-40de-87ae-aebaaba6a3bc"))
/* dual interface */ ISweepFeatureData;
struct __declspec(uuid("ee8d87fe-5202-45e9-8e5c-91084c134168"))
/* dual interface */ ILoftFeatureData;
struct __declspec(uuid("85f4dd78-9430-4937-8504-55d24f2cee41"))
/* dual interface */ IThickenFeatureData;
struct __declspec(uuid("dfb6c63b-287c-4141-a610-08d94cece976"))
/* dual interface */ ISurfaceCutFeatureData;
struct __declspec(uuid("d7792e79-5983-45c7-ae7d-966fcb6604d8"))
/* dual interface */ IReplaceFaceFeatureData;
struct __declspec(uuid("739ac7ce-9017-11d5-af07-0002b34143e5"))
/* dual interface */ IMacroFeatureData;
struct __declspec(uuid("496a6d86-2180-46d8-a973-7885554efaf3"))
/* dual interface */ ICurveDrivenPatternFeatureData;
struct __declspec(uuid("d3352f26-3333-455e-910b-e0f3a44e76fd"))
/* dual interface */ IRipFeatureData;
struct __declspec(uuid("d1e54427-2421-413f-9eb3-f568a6bf826d"))
/* dual interface */ IHemFeatureData;
struct __declspec(uuid("df91cd7f-f4d5-471a-831b-e201b2c02090"))
/* dual interface */ IBreakCornerFeatureData;
struct __declspec(uuid("c75ca537-4aba-44f3-ac3b-73d5dcd0c834"))
/* dual interface */ IJogFeatureData;
struct __declspec(uuid("157ce6b0-16bc-49a3-b207-95159b02306c"))
/* dual interface */ ISurfExtrudeFeatureData;
struct __declspec(uuid("38d7f138-4403-4eb0-8e9e-7daf6ba385cf"))
/* dual interface */ ISurfRevolveFeatureData;
struct __declspec(uuid("214152e2-2f73-42e3-ab88-690c2ed9910d"))
/* dual interface */ ISurfaceOffsetFeatureData;
struct __declspec(uuid("6ce5bd99-0769-4daf-8206-07513b6c0005"))
/* dual interface */ ISurfaceKnitFeatureData;
struct __declspec(uuid("72249e3d-b571-416d-9034-de3be1d9937c"))
/* dual interface */ ISurfaceExtendFeatureData;
struct __declspec(uuid("6a0860dc-bc79-4dfd-8a06-252efccfcd37"))
/* dual interface */ ISurfacePlanarFeatureData;
struct __declspec(uuid("c9943dee-40de-4eb9-a3c5-7d5cabee3e85"))
/* dual interface */ ISurfaceTrimFeatureData;
struct __declspec(uuid("82f0509d-402b-4d79-ab6b-aa2888fc1e81"))
/* dual interface */ ISurfaceRadiateFeatureData;
struct __declspec(uuid("02b5cbf8-5104-41f7-901d-a4dcba547029"))
/* dual interface */ IRefPlaneFeatureData;
struct __declspec(uuid("887a2421-50f5-443f-acd9-62e9832ab519"))
/* dual interface */ IRefPointFeatureData;
struct __declspec(uuid("4010a7f4-b516-4e35-b9b9-6e871355db9e"))
/* dual interface */ IRuledSurfaceFeatureData;
struct __declspec(uuid("a72beb28-2c74-4bcf-880c-6496ac9005fa"))
/* dual interface */ ICavityFeatureData;
struct __declspec(uuid("619dee3d-3398-48fe-8818-edd4169fddb8"))
/* dual interface */ ILoftedBendsFeatureData;
struct __declspec(uuid("8066432c-1376-4d6b-aa64-46b2d3cc5d60"))
/* dual interface */ IReferencePointCurveFeatureData;
struct __declspec(uuid("c11527fa-e833-4453-80dd-229f6bacc5d9"))
/* dual interface */ IFreePointCurveFeatureData;
struct __declspec(uuid("8d5cfab8-a9f9-4b7f-9275-27e2062c324e"))
/* dual interface */ ICompositeCurveFeatureData;
struct __declspec(uuid("70e634ee-890a-421f-abce-5208a563423c"))
/* dual interface */ IHelixFeatureData;
struct __declspec(uuid("6dc71ec8-09f6-4d6f-ac3f-19d8ea258e0b"))
/* dual interface */ IImportedCurveFeatureData;
struct __declspec(uuid("dae93be3-b9dc-4748-ad03-94ca1d644e59"))
/* dual interface */ ICosmeticThreadFeatureData;
struct __declspec(uuid("1c4bc27b-4b76-4390-ae66-4a21a96c0c9c"))
/* dual interface */ IMateInPlace;
struct __declspec(uuid("3adb2157-cf50-46ad-b1f6-0e8db36c29b0"))
/* dual interface */ IRefAxisFeatureData;
struct __declspec(uuid("ccb5966e-03d5-4169-a303-ad49265a7b36"))
/* dual interface */ IEdgePoint;
struct __declspec(uuid("2c1bf8ee-6886-4e8e-9ef2-1c48ae94958b"))
/* dual interface */ IMateReference;
struct __declspec(uuid("76c0e8b6-0f1b-4da1-9812-c46c0e6ad9c0"))
/* dual interface */ IPartingLineFeatureData;
struct __declspec(uuid("243d4c1d-6a24-4ff9-83b7-d409ec6b5185"))
/* dual interface */ IPartingSurfaceFeatureData;
struct __declspec(uuid("5f20a7b3-ed48-4103-8d00-4ca38b1a7c73"))
/* dual interface */ IDeleteBodyFeatureData;
struct __declspec(uuid("dbe5bcc6-faf5-441a-abe5-53bf2bba90d0"))
/* dual interface */ IShutOffSurfaceFeatureData;
struct __declspec(uuid("e6fa7aee-8f47-4187-9c15-75549645016f"))
/* dual interface */ IToolingSplitFeatureData;
struct __declspec(uuid("4afd6ad9-af35-44eb-8e9b-e15007fbda62"))
/* dual interface */ ISplitBodyFeatureData;
struct __declspec(uuid("a8f7e532-ff58-4ea2-9b61-9963dfb78ff7"))
/* dual interface */ ISaveBodyFeatureData;
struct __declspec(uuid("173137b4-84ac-428c-8f04-ec0e9fcea390"))
/* dual interface */ ITriadManipulator;
struct __declspec(uuid("a4e370f5-9bfb-4e7d-880c-94da7ea2440d"))
/* dual interface */ IJoinFeatureData;
struct __declspec(uuid("57eb6a78-6e88-4ce9-baab-897ccc74a899"))
/* dual interface */ IFillSurfaceFeatureData;
struct __declspec(uuid("6d5845f5-68f8-4492-9220-58ea193a7b24"))
/* dual interface */ IMoveCopyBodyFeatureData;
struct __declspec(uuid("215b0bec-ddcd-4ece-bd49-b22c8aed9e7d"))
/* dual interface */ ISplitLineFeatureData;
struct __declspec(uuid("ed645449-bd48-47e6-9a7f-a8782e849b09"))
/* dual interface */ IWrapSketchFeatureData;
struct __declspec(uuid("f3f83396-6439-46bd-9927-2449083ecdc2"))
/* dual interface */ IStructuralMemberFeatureData;
struct __declspec(uuid("9db80806-edb1-4463-b0f3-d3f3beae465e"))
/* dual interface */ IEndCapFeatureData;
struct __declspec(uuid("ae327ce4-caee-42c6-9820-121001113e06"))
/* dual interface */ IGussetFeatureData;
struct __declspec(uuid("526d5a18-6855-411a-9003-7345dd56e5e3"))
/* dual interface */ ICombineBodiesFeatureData;
struct __declspec(uuid("ac44bc75-60b1-44b5-ba39-32cc6ed6729e"))
/* dual interface */ ILibraryFeatureData;
struct __declspec(uuid("51cb1551-09a0-408f-b911-dafe792debfa"))
/* dual interface */ ISimulationGravityFeatureData;
struct __declspec(uuid("d06c413a-fa92-4147-85c5-47fe67c5879d"))
/* dual interface */ ISimulationMotorFeatureData;
struct __declspec(uuid("3c9c2ba4-b021-4bb8-a992-500575b08e72"))
/* dual interface */ ISimulationLinearSpringFeatureData;
struct __declspec(uuid("c4799cd9-d4ce-4452-be95-64fc26016dd0"))
/* dual interface */ ISimulationSpringFeatureData;
struct __declspec(uuid("d1d31986-c631-4726-9988-a45f592cfab2"))
/* dual interface */ IWeldmentTrimExtendFeatureData;
struct __declspec(uuid("93f2e4d8-ad2d-41b6-a5f7-6e7e628ccfab"))
/* dual interface */ IWeldmentBeadFeatureData;
struct __declspec(uuid("bcb39259-f2aa-47fd-8099-065b095095ad"))
/* dual interface */ IBodyFolder;
struct __declspec(uuid("900b5953-3bd3-43ab-b190-67eacd25a69a"))
/* dual interface */ ICoreFeatureData;
struct __declspec(uuid("693e3d8b-3cb9-4d5c-9fcf-e021149bbc38"))
/* dual interface */ ICommentFolder;
struct __declspec(uuid("57988505-3843-4124-9cbe-af121d9e0be8"))
/* dual interface */ IImportIgesData;
struct __declspec(uuid("11f1f395-9064-44cb-ae29-e1a3a543aedc"))
/* dual interface */ IImportDxfDwgData;
struct __declspec(uuid("ad749a73-9aa2-4a3e-bca5-8fc012114bb0"))
/* dual interface */ IImportStepData;
struct __declspec(uuid("33d23c34-d27a-4635-91df-8beffe51900a"))
/* dual interface */ IExportPdfData;
struct __declspec(uuid("cf38209e-52dc-414c-81bd-ebac6c10692d"))
/* dual interface */ IPropertyManagerPageSlider;
struct __declspec(uuid("4a9ce84f-42b5-4047-bf37-ec2e101b42a2"))
/* dual interface */ IDragArrowManipulator;
struct __declspec(uuid("bc300b17-346f-4511-8d31-969c580bb16b"))
/* dual interface */ IMoveFaceFeatureData;
struct __declspec(uuid("cfbd8d35-9c42-44f5-af20-a27988f95fd9"))
/* dual interface */ IHealEdgesFeatureData;
struct __declspec(uuid("b7a5b9b2-ca73-45b8-a41d-38fb6f2d3b6e"))
/* dual interface */ ISilhouetteEdge;
struct __declspec(uuid("a1672af7-e65f-46e8-800c-7cbf4da6e80f"))
/* dual interface */ IDerivedPartFeatureData;
struct __declspec(uuid("2fc5ea82-b937-4719-814f-2103aa157f35"))
/* dual interface */ IDocumentSpecification;
struct __declspec(uuid("7e4684a4-9af8-4d28-953d-56cabf23d1bd"))
/* dual interface */ IMidSurface3;
struct __declspec(uuid("0d637236-51bb-4559-9fdc-866321c599cb"))
/* dual interface */ ISimulationDamperFeatureData;
struct __declspec(uuid("1a546f45-179e-44b3-93cf-e1c98f42a1ae"))
/* dual interface */ ISimulation3DContactFeatureData;
struct __declspec(uuid("131a6028-590b-4790-a36c-56cc84f5af26"))
/* dual interface */ ISimulationForceFeatureData;
struct __declspec(uuid("9a543f7e-b9e9-49f4-b18a-bc310c8f079b"))
/* dual interface */ ICoordinateSystemFeatureData;
struct __declspec(uuid("83a33d22-37c5-11ce-bfd4-00400513bb57"))
/* dispinterface */ DSldWorksEvents;
struct /* coclass */ SldWorks;
struct __declspec(uuid("83a33d32-37c5-11ce-bfd4-00400513bb57"))
/* dispinterface */ DPartDocEvents;
struct /* coclass */ PartDoc;
struct __declspec(uuid("83a33d34-37c5-11ce-bfd4-00400513bb57"))
/* dispinterface */ DDrawingDocEvents;
struct /* coclass */ DrawingDoc;
struct __declspec(uuid("83a33d35-37c5-11ce-bfd4-00400513bb57"))
/* dispinterface */ DAssemblyDocEvents;
struct /* coclass */ AssemblyDoc;
struct /* coclass */ Feature;
struct /* coclass */ Dimension;
struct /* coclass */ Body;
struct /* coclass */ Face;
struct /* coclass */ Surface;
struct /* coclass */ Edge;
struct /* coclass */ Curve;
struct /* coclass */ ModelDoc;
struct /* coclass */ Frame;
struct /* coclass */ Gtol;
struct __declspec(uuid("83a33d4c-37c5-11ce-bfd4-00400513bb57"))
/* dispinterface */ DModelViewEvents;
struct /* coclass */ ModelView;
struct /* coclass */ Member;
struct /* coclass */ View;
struct /* coclass */ Sketch;
struct /* coclass */ Loop;
struct /* coclass */ Note;
struct /* coclass */ CoEdge;
struct /* coclass */ Vertex;
struct /* coclass */ SelectionMgr;
struct /* coclass */ EnumFaces;
struct /* coclass */ EnumFaces2;
struct /* coclass */ EnumLoops;
struct /* coclass */ EnumLoops2;
struct /* coclass */ EnumEdges;
struct /* coclass */ EnumCoEdges;
struct /* coclass */ EnumBodies;
struct /* coclass */ EnumBodies2;
struct /* coclass */ Entity;
struct /* coclass */ AttributeDef;
struct /* coclass */ Parameter;
struct /* coclass */ Attribute;
struct /* coclass */ Modeler;
struct __declspec(uuid("83a33d76-27c5-11ce-bfd4-00400513bb57"))
/* dispinterface */ DFeatMgrViewEvents;
struct /* coclass */ FeatMgrView;
struct /* coclass */ Environment;
struct /* coclass */ Sheet;
struct /* coclass */ BomTable;
struct /* coclass */ RefPlane;
struct /* coclass */ RefAxis;
struct /* coclass */ MidSurface;
struct /* coclass */ Mate;
struct /* coclass */ MateEntity;
struct /* coclass */ SFSymbol;
struct /* coclass */ DatumTag;
struct /* coclass */ DatumTargetSym;
struct /* coclass */ WeldSymbol;
struct /* coclass */ Configuration;
struct /* coclass */ Component;
struct /* coclass */ DisplayData;
struct /* coclass */ CThread;
struct /* coclass */ DisplayDimension;
struct /* coclass */ ReferenceCurve;
struct /* coclass */ ColorTable;
struct __declspec(uuid("e05ff9e0-fc82-11d2-9395-00c04f79bffe"))
/* dispinterface */ DSWPropertySheetEvents;
struct /* coclass */ SWPropertySheet;
struct /* coclass */ Annotation;
struct /* coclass */ EnumDisplayDimensions;
struct /* coclass */ RibFeatureData;
struct /* coclass */ DomeFeatureData;
struct /* coclass */ EnumModelViews;
struct /* coclass */ EnumDocuments;
struct /* coclass */ EnumDocuments2;
struct /* coclass */ CustomSymbol;
struct /* coclass */ DetailingDefaults;
struct /* coclass */ TextFormat;
struct /* coclass */ SketchPoint;
struct /* coclass */ SketchSegment;
struct /* coclass */ SketchLine;
struct /* coclass */ SketchArc;
struct /* coclass */ SketchText;
struct /* coclass */ SketchEllipse;
struct /* coclass */ SketchParabola;
struct /* coclass */ SketchSpline;
struct /* coclass */ SketchSlot;
struct /* coclass */ EnumSketchPoints;
struct /* coclass */ EnumSketchSegments;
struct /* coclass */ LightDialog;
struct /* coclass */ Layer;
struct /* coclass */ LayerMgr;
struct /* coclass */ DesignTable;
struct /* coclass */ SketchHatch;
struct /* coclass */ EnumSketchHatches;
struct /* coclass */ EnumCurves;
struct /* coclass */ SimpleHoleFeatureData;
struct /* coclass */ WizardHoleFeatureData;
struct /* coclass */ ChamferFeatureData;
struct /* coclass */ DraftFeatureData;
struct /* coclass */ SimpleFilletFeatureData;
struct /* coclass */ VariableFilletFeatureData;
struct /* coclass */ ExtrudeFeatureData;
struct /* coclass */ RevolveFeatureData;
struct __declspec(uuid("ac048cea-ae93-11d3-aea7-00c04f60f02a"))
/* dispinterface */ ISdmDoc;
struct /* coclass */ SdmDoc;
struct /* coclass */ DrSection;
struct /* coclass */ EnumComponents;
struct /* coclass */ EnumComponents2;
struct /* coclass */ EnumDrSections;
struct /* coclass */ ExplodeStep;
struct /* coclass */ MathUtility;
struct /* coclass */ MathTransform;
struct /* coclass */ MathPoint;
struct /* coclass */ MathVector;
struct /* coclass */ MirrorPatternFeatureData;
struct /* coclass */ DetailCircle;
struct /* coclass */ CircularPatternFeatureData;
struct /* coclass */ LinearPatternFeatureData;
struct /* coclass */ TablePatternFeatureData;
struct /* coclass */ SketchPatternFeatureData;
struct /* coclass */ MirrorSolidFeatureData;
struct /* coclass */ PropertyManagerPage;
struct /* coclass */ ProjectionArrow;
struct /* coclass */ Tessellation;
struct /* coclass */ SheetMetalFeatureData;
struct /* coclass */ OneBendFeatureData;
struct /* coclass */ BendsFeatureData;
struct /* coclass */ UserUnit;
struct /* coclass */ BaseFlangeFeatureData;
struct /* coclass */ EdgeFlangeFeatureData;
struct /* coclass */ MiterFlangeFeatureData;
struct /* coclass */ SketchedBendFeatureData;
struct /* coclass */ ClosedCornerFeatureData;
struct /* coclass */ FoldsFeatureData;
struct /* coclass */ FlatPatternFeatureData;
struct /* coclass */ LocalLinearPatternFeatureData;
struct /* coclass */ LocalCircularPatternFeatureData;
struct /* coclass */ DerivedPatternFeatureData;
struct /* coclass */ Body2;
struct /* coclass */ Face2;
struct /* coclass */ ModelDoc2;
struct /* coclass */ Loop2;
struct /* coclass */ MidSurface2;
struct /* coclass */ Component2;
struct /* coclass */ PropertyManagerPage2;
struct /* coclass */ PropertyManagerPageGroup;
struct /* coclass */ PropertyManagerPageControl;
struct /* coclass */ PropertyManagerPageLabel;
struct /* coclass */ PropertyManagerPageCheckbox;
struct /* coclass */ PropertyManagerPageButton;
struct /* coclass */ PropertyManagerPageOption;
struct /* coclass */ PropertyManagerPageTextbox;
struct __declspec(uuid("cdb49982-1a18-11d5-af24-00c04f603faf"))
/* dual interface */ IPropertyManagerPageListbox;
struct /* coclass */ PropertyManagerPageListbox;
struct /* coclass */ PropertyManagerPageCombobox;
struct __declspec(uuid("96567554-1eda-11d5-af25-00c04f603faf"))
/* dual interface */ IPropertyManagerPageNumberbox;
struct /* coclass */ PropertyManagerPageNumberbox;
struct __declspec(uuid("96567556-1eda-11d5-af25-00c04f603faf"))
/* dual interface */ IPropertyManagerPageSelectionbox;
struct /* coclass */ PropertyManagerPageSelectionbox;
struct /* coclass */ MultiJogLeader;
struct /* coclass */ ProjectionCurveFeatureData;
struct /* coclass */ ScaleFeatureData;
struct /* coclass */ ShellFeatureData;
struct /* coclass */ SweepFeatureData;
struct /* coclass */ LoftFeatureData;
struct /* coclass */ ThickenFeatureData;
struct /* coclass */ SurfCutFeatureData;
struct /* coclass */ ReplaceFaceFeatureData;
struct __declspec(uuid("efe4958e-b373-4849-a93c-01bfdebc830d"))
/* dual interface */ IRibFeatureData2;
struct /* coclass */ RibFeatureData2;
struct __declspec(uuid("6e8fab36-9e1c-4a84-a160-1e68b703431c"))
/* dual interface */ IDomeFeatureData2;
struct /* coclass */ DomeFeatureData2;
struct __declspec(uuid("d98e9f26-73db-4bd2-a967-31bf7ef35b5b"))
/* dual interface */ ISimpleHoleFeatureData2;
struct /* coclass */ SimpleHoleFeatureData2;
struct __declspec(uuid("7a472c09-437c-4c4b-b34c-a144d0e2546c"))
/* dual interface */ IWizardHoleFeatureData2;
struct /* coclass */ WizardHoleFeatureData2;
struct __declspec(uuid("8427d092-a1fc-49c9-b1ed-ec52d2389e9a"))
/* dual interface */ IChamferFeatureData2;
struct /* coclass */ ChamferFeatureData2;
struct __declspec(uuid("fd9b0999-d519-41ab-acaa-4f2adedd7015"))
/* dual interface */ IDraftFeatureData2;
struct /* coclass */ DraftFeatureData2;
struct __declspec(uuid("9fe7c8db-8a4c-41bb-8e3b-7600692dbc92"))
/* dual interface */ ISimpleFilletFeatureData2;
struct /* coclass */ SimpleFilletFeatureData2;
struct __declspec(uuid("ffcdc95c-1ba9-423a-877e-cb7aa60de9b4"))
/* dual interface */ IVariableFilletFeatureData2;
struct /* coclass */ VariableFilletFeatureData2;
struct __declspec(uuid("931e939e-2fde-49a8-8472-abcf79e9f5cc"))
/* dual interface */ IExtrudeFeatureData2;
struct /* coclass */ ExtrudeFeatureData2;
struct __declspec(uuid("e055f0ed-db3e-4528-a982-d66d289190a0"))
/* dual interface */ IRevolveFeatureData2;
struct /* coclass */ RevolveFeatureData2;
struct /* coclass */ MacroFeatureData;
struct /* coclass */ DowelSymbol;
struct /* coclass */ DragOperator;
struct /* coclass */ CurveDrivenPatternFeatureData;
struct /* coclass */ BalloonStack;
struct /* coclass */ StatusBarPane;
struct /* coclass */ EquationMgr;
struct /* coclass */ PageSetup;
struct /* coclass */ RipFeatureData;
struct /* coclass */ HemFeatureData;
struct /* coclass */ BreakCornerFeatureData;
struct /* coclass */ JogFeatureData;
struct /* coclass */ SurfExtrudeFeatureData;
struct /* coclass */ SurfRevolveFeatureData;
struct /* coclass */ SurfaceOffsetFeatureData;
struct /* coclass */ SurfaceKnitFeatureData;
struct /* coclass */ SurfaceExtendFeatureData;
struct /* coclass */ SurfacePlanarFeatureData;
struct /* coclass */ CenterMark;
struct /* coclass */ SurfaceTrimFeatureData;
struct /* coclass */ SurfaceRadiateFeatureData;
struct /* coclass */ RefPlaneFeatureData;
struct /* coclass */ Callout;
struct /* coclass */ CustomBendAllowance;
struct /* coclass */ BlockInstance;
struct /* coclass */ BlockDefinition;
struct /* coclass */ BreakLine;
struct /* coclass */ FaceHatch;
struct /* coclass */ PropertyManagerPageActiveX;
struct /* coclass */ LoftedBendsFeatureData;
struct /* coclass */ FeatureManager;
struct /* coclass */ ModelViewManager;
struct /* coclass */ ModelDocExtension;
struct /* coclass */ ConfigurationManager;
struct /* coclass */ CosmeticThreadFeatureData;
struct /* coclass */ CenterLine;
struct /* coclass */ ReferencePointCurveFeatureData;
struct /* coclass */ FreePointCurveFeatureData;
struct /* coclass */ CompositeCurveFeatureData;
struct /* coclass */ HelixFeatureData;
struct /* coclass */ ImportedCurveFeatureData;
struct /* coclass */ SketchRegion;
struct /* coclass */ SketchContour;
struct /* coclass */ MassProperty;
struct /* coclass */ DrawingComponent;
struct /* coclass */ SketchRelationManager;
struct /* coclass */ SketchRelation;
struct /* coclass */ Mate2;
struct /* coclass */ MateEntity2;
struct /* coclass */ SelectData;
struct /* coclass */ TableAnnotation;
struct /* coclass */ HoleTableAnnotation;
struct /* coclass */ HoleTable;
struct /* coclass */ DatumOrigin;
struct /* coclass */ BomTableAnnotation;
struct /* coclass */ BomFeature;
struct /* coclass */ RevisionTableAnnotation;
struct /* coclass */ RevisionTableFeature;
struct /* coclass */ MateInPlace;
struct /* coclass */ PropertyManagerPageBitmapButton;
struct /* coclass */ CustomPropertyManager;
struct __declspec(uuid("9eeb4de9-ac14-4a80-b484-7e41af41b56c"))
/* dual interface */ ILight;
struct /* coclass */ Light;
struct /* coclass */ RefPointFeatureData;
struct /* coclass */ RefPoint;
struct /* coclass */ RefAxisFeatureData;
struct /* coclass */ EdgePoint;
struct __declspec(uuid("d78003d7-378a-46d5-93b3-bcd8abc9d34b"))
/* dispinterface */ DTaskpaneViewEvents;
struct /* coclass */ TaskpaneView;
struct /* coclass */ Texture;
struct /* coclass */ MateReference;
struct /* coclass */ PartingLineFeatureData;
struct /* coclass */ DeleteBodyFeatureData;
struct /* coclass */ PartingSurfaceFeatureData;
struct /* coclass */ ShutOffSurfaceFeatureData;
struct /* coclass */ ToolingSplitFeatureData;
struct /* coclass */ PtnrPMPage;
struct /* coclass */ JoinFeatureData;
struct /* coclass */ Manipulator;
struct /* coclass */ TriadManipulator;
struct /* coclass */ FillSurfaceFeatureData;
struct /* coclass */ MoveCopyBodyFeatureData;
struct /* coclass */ RuledSurfaceFeatureData;
struct /* coclass */ CavityFeatureData;
struct /* coclass */ WeldBead;
struct /* coclass */ SplitLineFeatureData;
struct /* coclass */ WrapSketchFeatureData;
struct /* coclass */ StructuralMemberFeatureData;
struct /* coclass */ EndCapFeatureData;
struct /* coclass */ GussetFeatureData;
struct /* coclass */ SplitBodyFeatureData;
struct /* coclass */ CombineBodiesFeatureData;
struct /* coclass */ SketchManager;
struct /* coclass */ DiagnoseResult;
struct /* coclass */ Spring;
struct /* coclass */ FaultEntity;
struct /* coclass */ SwOLEObject;
struct /* coclass */ LibraryFeatureData;
struct /* coclass */ Simulation;
struct /* coclass */ SimulationGravityFeatureData;
struct /* coclass */ SimulationMotorFeatureData;
struct /* coclass */ SimulationLinearSpringFeatureData;
struct /* coclass */ Camera;
struct /* coclass */ WeldmentBeadFeatureData;
struct /* coclass */ WeldmentTrimExtendFeatureData;
struct /* coclass */ PropertyManagerPageTab;
struct /* coclass */ BodyFolder;
struct /* coclass */ CommandManager;
struct /* coclass */ CommandGroup;
struct /* coclass */ CoreFeatureData;
struct /* coclass */ AdvancedSelectionCriteria;
struct /* coclass */ GeneralTableFeature;
struct /* coclass */ DimensionTolerance;
struct /* coclass */ CommentFolder;
struct /* coclass */ Comment;
struct /* coclass */ Animation;
struct /* coclass */ ImportIgesData;
struct /* coclass */ TableAnchor;
struct /* coclass */ PropertyManagerPageSlider;
struct /* coclass */ MateLoadReference;
struct /* coclass */ SketchBlockDefinition;
struct /* coclass */ SketchBlockInstance;
struct /* coclass */ UserProgressBar;
struct /* coclass */ DragArrowManipulator;
struct /* coclass */ MoveFaceFeatureData;
struct /* coclass */ HealEdgesFeatureData;
struct /* coclass */ WeldmentCutListAnnotation;
struct /* coclass */ WeldmentCutListFeature;
struct /* coclass */ ModelWindow;
struct __declspec(uuid("5266b813-fb5f-4831-aed1-a60ab431994a"))
/* dispinterface */ DMouseEvents;
struct /* coclass */ Mouse;
struct /* coclass */ ImportDxfDwgData;
struct /* coclass */ InterferenceDetectionMgr;
struct /* coclass */ Interference;
struct /* coclass */ SplineHandle;
struct /* coclass */ SectionViewData;
struct /* coclass */ MaterialVisualPropertiesData;
struct __declspec(uuid("363f31c7-54c0-4d22-afc3-e82fd482caf6"))
/* dual interface */ IPropertyManagerPageBitmap;
struct /* coclass */ PropertyManagerPageBitmap;
struct /* coclass */ ExportPdfData;
struct /* coclass */ Print3DDialog;
struct /* coclass */ SilhouetteEdge;
struct /* coclass */ AnnotationView;
struct /* coclass */ DerivedPartFeatureData;
struct /* coclass */ Measure;
struct /* coclass */ ImportStepData;
struct /* coclass */ SketchPicture;
struct /* coclass */ SketchPath;
struct /* coclass */ Decal;
struct /* coclass */ FaceDecalProperties;
struct /* coclass */ RenderMaterial;
struct /* coclass */ CommandTab;
struct /* coclass */ CommandTabBox;
struct /* coclass */ HoleSeriesFeatureData;
struct /* coclass */ JournalManager;
struct /* coclass */ DocumentSpecification;
struct /* coclass */ MidSurface3;
struct /* coclass */ SimulationDamperFeatureData;
struct /* coclass */ Simulation3DContactFeatureData;
struct /* coclass */ SimulationForceFeatureData;
struct /* coclass */ SaveBodyFeatureData;
struct /* coclass */ TreeControlItem;
struct /* coclass */ CoordinateSystemFeatureData;
struct /* coclass */ TitleBlock;
struct /* coclass */ SimulationSpringFeatureData;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(IMouse, __uuidof(IMouse));
_COM_SMARTPTR_TYPEDEF(ISketchRelation, __uuidof(ISketchRelation));
_COM_SMARTPTR_TYPEDEF(ITextFormat, __uuidof(ITextFormat));
_COM_SMARTPTR_TYPEDEF(IDisplayData, __uuidof(IDisplayData));
_COM_SMARTPTR_TYPEDEF(IParameter, __uuidof(IParameter));
_COM_SMARTPTR_TYPEDEF(ITexture, __uuidof(ITexture));
_COM_SMARTPTR_TYPEDEF(IDecal, __uuidof(IDecal));
_COM_SMARTPTR_TYPEDEF(IRenderMaterial, __uuidof(IRenderMaterial));
_COM_SMARTPTR_TYPEDEF(ICustomPropertyManager, __uuidof(ICustomPropertyManager));
_COM_SMARTPTR_TYPEDEF(IDimensionTolerance, __uuidof(IDimensionTolerance));
_COM_SMARTPTR_TYPEDEF(IBomTable, __uuidof(IBomTable));
_COM_SMARTPTR_TYPEDEF(IPageSetup, __uuidof(IPageSetup));
_COM_SMARTPTR_TYPEDEF(ISketchRelationManager, __uuidof(ISketchRelationManager));
_COM_SMARTPTR_TYPEDEF(IFeatMgrView, __uuidof(IFeatMgrView));
_COM_SMARTPTR_TYPEDEF(IColorTable, __uuidof(IColorTable));
_COM_SMARTPTR_TYPEDEF(IDetailingDefaults, __uuidof(IDetailingDefaults));
_COM_SMARTPTR_TYPEDEF(ILayer, __uuidof(ILayer));
_COM_SMARTPTR_TYPEDEF(ILayerMgr, __uuidof(ILayerMgr));
_COM_SMARTPTR_TYPEDEF(IDesignTable, __uuidof(IDesignTable));
_COM_SMARTPTR_TYPEDEF(IPropertyManagerPage, __uuidof(IPropertyManagerPage));
_COM_SMARTPTR_TYPEDEF(IUserUnit, __uuidof(IUserUnit));
_COM_SMARTPTR_TYPEDEF(IEquationMgr, __uuidof(IEquationMgr));
_COM_SMARTPTR_TYPEDEF(ICustomBendAllowance, __uuidof(ICustomBendAllowance));
_COM_SMARTPTR_TYPEDEF(ITreeControlItem, __uuidof(ITreeControlItem));
_COM_SMARTPTR_TYPEDEF(ISwOLEObject, __uuidof(ISwOLEObject));
_COM_SMARTPTR_TYPEDEF(IPrint3DDialog, __uuidof(IPrint3DDialog));
_COM_SMARTPTR_TYPEDEF(IMeasure, __uuidof(IMeasure));
_COM_SMARTPTR_TYPEDEF(ISplineHandle, __uuidof(ISplineHandle));
_COM_SMARTPTR_TYPEDEF(IFaceDecalProperties, __uuidof(IFaceDecalProperties));
_COM_SMARTPTR_TYPEDEF(IMaterialVisualPropertiesData, __uuidof(IMaterialVisualPropertiesData));
_COM_SMARTPTR_TYPEDEF(IStatusBarPane, __uuidof(IStatusBarPane));
_COM_SMARTPTR_TYPEDEF(IMember, __uuidof(IMember));
_COM_SMARTPTR_TYPEDEF(IAnimation, __uuidof(IAnimation));
_COM_SMARTPTR_TYPEDEF(IAdvancedSelectionCriteria, __uuidof(IAdvancedSelectionCriteria));
_COM_SMARTPTR_TYPEDEF(IEnvironment, __uuidof(IEnvironment));
_COM_SMARTPTR_TYPEDEF(ITaskpaneView, __uuidof(ITaskpaneView));
_COM_SMARTPTR_TYPEDEF(IPtnrPMPage, __uuidof(IPtnrPMPage));
_COM_SMARTPTR_TYPEDEF(ICommandGroup, __uuidof(ICommandGroup));
_COM_SMARTPTR_TYPEDEF(ICommandTabBox, __uuidof(ICommandTabBox));
_COM_SMARTPTR_TYPEDEF(ICommandTab, __uuidof(ICommandTab));
_COM_SMARTPTR_TYPEDEF(ICommandManager, __uuidof(ICommandManager));
_COM_SMARTPTR_TYPEDEF(IUserProgressBar, __uuidof(IUserProgressBar));
_COM_SMARTPTR_TYPEDEF(IJournalManager, __uuidof(IJournalManager));
_COM_SMARTPTR_TYPEDEF(IRefAxis, __uuidof(IRefAxis));
_COM_SMARTPTR_TYPEDEF(ISWPropertySheet, __uuidof(ISWPropertySheet));
_COM_SMARTPTR_TYPEDEF(IRibFeatureData, __uuidof(IRibFeatureData));
_COM_SMARTPTR_TYPEDEF(ILightDialog, __uuidof(ILightDialog));
_COM_SMARTPTR_TYPEDEF(IChamferFeatureData, __uuidof(IChamferFeatureData));
_COM_SMARTPTR_TYPEDEF(IDraftFeatureData, __uuidof(IDraftFeatureData));
_COM_SMARTPTR_TYPEDEF(IRevolveFeatureData, __uuidof(IRevolveFeatureData));
_COM_SMARTPTR_TYPEDEF(IPropertyManagerPageLabel, __uuidof(IPropertyManagerPageLabel));
_COM_SMARTPTR_TYPEDEF(IPropertyManagerPageCheckbox, __uuidof(IPropertyManagerPageCheckbox));
_COM_SMARTPTR_TYPEDEF(IPropertyManagerPageButton, __uuidof(IPropertyManagerPageButton));
_COM_SMARTPTR_TYPEDEF(IPropertyManagerPageOption, __uuidof(IPropertyManagerPageOption));
_COM_SMARTPTR_TYPEDEF(IPropertyManagerPageTextbox, __uuidof(IPropertyManagerPageTextbox));
_COM_SMARTPTR_TYPEDEF(IPropertyManagerPageCombobox, __uuidof(IPropertyManagerPageCombobox));
_COM_SMARTPTR_TYPEDEF(IPropertyManagerPageActiveX, __uuidof(IPropertyManagerPageActiveX));
_COM_SMARTPTR_TYPEDEF(IPropertyManagerPageBitmapButton, __uuidof(IPropertyManagerPageBitmapButton));
_COM_SMARTPTR_TYPEDEF(IFreePointCurveFeatureData, __uuidof(IFreePointCurveFeatureData));
_COM_SMARTPTR_TYPEDEF(IHelixFeatureData, __uuidof(IHelixFeatureData));
_COM_SMARTPTR_TYPEDEF(IEdgePoint, __uuidof(IEdgePoint));
_COM_SMARTPTR_TYPEDEF(ISimulationGravityFeatureData, __uuidof(ISimulationGravityFeatureData));
_COM_SMARTPTR_TYPEDEF(ISimulationLinearSpringFeatureData, __uuidof(ISimulationLinearSpringFeatureData));
_COM_SMARTPTR_TYPEDEF(IImportIgesData, __uuidof(IImportIgesData));
_COM_SMARTPTR_TYPEDEF(IImportDxfDwgData, __uuidof(IImportDxfDwgData));
_COM_SMARTPTR_TYPEDEF(IImportStepData, __uuidof(IImportStepData));
_COM_SMARTPTR_TYPEDEF(IExportPdfData, __uuidof(IExportPdfData));
_COM_SMARTPTR_TYPEDEF(IPropertyManagerPageSlider, __uuidof(IPropertyManagerPageSlider));
_COM_SMARTPTR_TYPEDEF(IDocumentSpecification, __uuidof(IDocumentSpecification));
_COM_SMARTPTR_TYPEDEF(ISimulation3DContactFeatureData, __uuidof(ISimulation3DContactFeatureData));
_COM_SMARTPTR_TYPEDEF(DSldWorksEvents, __uuidof(DSldWorksEvents));
_COM_SMARTPTR_TYPEDEF(DPartDocEvents, __uuidof(DPartDocEvents));
_COM_SMARTPTR_TYPEDEF(DDrawingDocEvents, __uuidof(DDrawingDocEvents));
_COM_SMARTPTR_TYPEDEF(DAssemblyDocEvents, __uuidof(DAssemblyDocEvents));
_COM_SMARTPTR_TYPEDEF(DModelViewEvents, __uuidof(DModelViewEvents));
_COM_SMARTPTR_TYPEDEF(DFeatMgrViewEvents, __uuidof(DFeatMgrViewEvents));
_COM_SMARTPTR_TYPEDEF(DSWPropertySheetEvents, __uuidof(DSWPropertySheetEvents));
_COM_SMARTPTR_TYPEDEF(ISdmDoc, __uuidof(ISdmDoc));
_COM_SMARTPTR_TYPEDEF(IPropertyManagerPageListbox, __uuidof(IPropertyManagerPageListbox));
_COM_SMARTPTR_TYPEDEF(IPropertyManagerPageNumberbox, __uuidof(IPropertyManagerPageNumberbox));
_COM_SMARTPTR_TYPEDEF(ILight, __uuidof(ILight));
_COM_SMARTPTR_TYPEDEF(DTaskpaneViewEvents, __uuidof(DTaskpaneViewEvents));
_COM_SMARTPTR_TYPEDEF(DMouseEvents, __uuidof(DMouseEvents));
_COM_SMARTPTR_TYPEDEF(IPropertyManagerPageBitmap, __uuidof(IPropertyManagerPageBitmap));
_COM_SMARTPTR_TYPEDEF(ISldWorks, __uuidof(ISldWorks));
_COM_SMARTPTR_TYPEDEF(IModelDoc, __uuidof(IModelDoc));
_COM_SMARTPTR_TYPEDEF(IEnumDocuments, __uuidof(IEnumDocuments));
_COM_SMARTPTR_TYPEDEF(ISelectionMgr, __uuidof(ISelectionMgr));
_COM_SMARTPTR_TYPEDEF(IComponent, __uuidof(IComponent));
_COM_SMARTPTR_TYPEDEF(IEnumComponents, __uuidof(IEnumComponents));
_COM_SMARTPTR_TYPEDEF(IExplodeStep, __uuidof(IExplodeStep));
_COM_SMARTPTR_TYPEDEF(ISimpleFilletFeatureData, __uuidof(ISimpleFilletFeatureData));
_COM_SMARTPTR_TYPEDEF(IBody, __uuidof(IBody));
_COM_SMARTPTR_TYPEDEF(IEnumBodies, __uuidof(IEnumBodies));
_COM_SMARTPTR_TYPEDEF(IFace, __uuidof(IFace));
_COM_SMARTPTR_TYPEDEF(IEnumFaces, __uuidof(IEnumFaces));
_COM_SMARTPTR_TYPEDEF(IDomeFeatureData, __uuidof(IDomeFeatureData));
_COM_SMARTPTR_TYPEDEF(ISurface, __uuidof(ISurface));
_COM_SMARTPTR_TYPEDEF(ICurve, __uuidof(ICurve));
_COM_SMARTPTR_TYPEDEF(IEnumCurves, __uuidof(IEnumCurves));
_COM_SMARTPTR_TYPEDEF(IBody2, __uuidof(IBody2));
_COM_SMARTPTR_TYPEDEF(IEnumBodies2, __uuidof(IEnumBodies2));
_COM_SMARTPTR_TYPEDEF(IImportedCurveFeatureData, __uuidof(IImportedCurveFeatureData));
_COM_SMARTPTR_TYPEDEF(IFace2, __uuidof(IFace2));
_COM_SMARTPTR_TYPEDEF(IFaceHatch, __uuidof(IFaceHatch));
_COM_SMARTPTR_TYPEDEF(IEnumFaces2, __uuidof(IEnumFaces2));
_COM_SMARTPTR_TYPEDEF(IEdge, __uuidof(IEdge));
_COM_SMARTPTR_TYPEDEF(IEnumEdges, __uuidof(IEnumEdges));
_COM_SMARTPTR_TYPEDEF(IMidSurface2, __uuidof(IMidSurface2));
_COM_SMARTPTR_TYPEDEF(IReferenceCurve, __uuidof(IReferenceCurve));
_COM_SMARTPTR_TYPEDEF(ISketchText, __uuidof(ISketchText));
_COM_SMARTPTR_TYPEDEF(ITessellation, __uuidof(ITessellation));
_COM_SMARTPTR_TYPEDEF(IMidSurface, __uuidof(IMidSurface));
_COM_SMARTPTR_TYPEDEF(IMidSurface3, __uuidof(IMidSurface3));
_COM_SMARTPTR_TYPEDEF(IEnumCoEdges, __uuidof(IEnumCoEdges));
_COM_SMARTPTR_TYPEDEF(ICoEdge, __uuidof(ICoEdge));
_COM_SMARTPTR_TYPEDEF(ILoop, __uuidof(ILoop));
_COM_SMARTPTR_TYPEDEF(IDiagnoseResult, __uuidof(IDiagnoseResult));
_COM_SMARTPTR_TYPEDEF(IEnumLoops, __uuidof(IEnumLoops));
_COM_SMARTPTR_TYPEDEF(ILoop2, __uuidof(ILoop2));
_COM_SMARTPTR_TYPEDEF(IEnumLoops2, __uuidof(IEnumLoops2));
_COM_SMARTPTR_TYPEDEF(IVertex, __uuidof(IVertex));
_COM_SMARTPTR_TYPEDEF(ISimpleHoleFeatureData, __uuidof(ISimpleHoleFeatureData));
_COM_SMARTPTR_TYPEDEF(IWizardHoleFeatureData, __uuidof(IWizardHoleFeatureData));
_COM_SMARTPTR_TYPEDEF(IVariableFilletFeatureData, __uuidof(IVariableFilletFeatureData));
_COM_SMARTPTR_TYPEDEF(IExtrudeFeatureData, __uuidof(IExtrudeFeatureData));
_COM_SMARTPTR_TYPEDEF(IModelDoc2, __uuidof(IModelDoc2));
_COM_SMARTPTR_TYPEDEF(IModelWindow, __uuidof(IModelWindow));
_COM_SMARTPTR_TYPEDEF(IFrame, __uuidof(IFrame));
_COM_SMARTPTR_TYPEDEF(IEnumDocuments2, __uuidof(IEnumDocuments2));
_COM_SMARTPTR_TYPEDEF(IModelView, __uuidof(IModelView));
_COM_SMARTPTR_TYPEDEF(IEnumModelViews, __uuidof(IEnumModelViews));
_COM_SMARTPTR_TYPEDEF(IMathTransform, __uuidof(IMathTransform));
_COM_SMARTPTR_TYPEDEF(IMassProperty, __uuidof(IMassProperty));
_COM_SMARTPTR_TYPEDEF(IMathVector, __uuidof(IMathVector));
_COM_SMARTPTR_TYPEDEF(IMathPoint, __uuidof(IMathPoint));
_COM_SMARTPTR_TYPEDEF(ICamera, __uuidof(ICamera));
_COM_SMARTPTR_TYPEDEF(ICallout, __uuidof(ICallout));
_COM_SMARTPTR_TYPEDEF(IRefPlane, __uuidof(IRefPlane));
_COM_SMARTPTR_TYPEDEF(ISectionViewData, __uuidof(ISectionViewData));
_COM_SMARTPTR_TYPEDEF(ISpring, __uuidof(ISpring));
_COM_SMARTPTR_TYPEDEF(IMathUtility, __uuidof(IMathUtility));
_COM_SMARTPTR_TYPEDEF(IRefPoint, __uuidof(IRefPoint));
_COM_SMARTPTR_TYPEDEF(ITriadManipulator, __uuidof(ITriadManipulator));
_COM_SMARTPTR_TYPEDEF(IDragArrowManipulator, __uuidof(IDragArrowManipulator));
_COM_SMARTPTR_TYPEDEF(IPropertyManagerPageSelectionbox, __uuidof(IPropertyManagerPageSelectionbox));
_COM_SMARTPTR_TYPEDEF(ISketch, __uuidof(ISketch));
_COM_SMARTPTR_TYPEDEF(IEnumSketchPoints, __uuidof(IEnumSketchPoints));
_COM_SMARTPTR_TYPEDEF(ISketchPoint, __uuidof(ISketchPoint));
_COM_SMARTPTR_TYPEDEF(ISketchSlot, __uuidof(ISketchSlot));
_COM_SMARTPTR_TYPEDEF(ISketchSpline, __uuidof(ISketchSpline));
_COM_SMARTPTR_TYPEDEF(ISketchLine, __uuidof(ISketchLine));
_COM_SMARTPTR_TYPEDEF(ISketchArc, __uuidof(ISketchArc));
_COM_SMARTPTR_TYPEDEF(ISketchEllipse, __uuidof(ISketchEllipse));
_COM_SMARTPTR_TYPEDEF(ISketchParabola, __uuidof(ISketchParabola));
_COM_SMARTPTR_TYPEDEF(ISelectData, __uuidof(ISelectData));
_COM_SMARTPTR_TYPEDEF(ISketchHatch, __uuidof(ISketchHatch));
_COM_SMARTPTR_TYPEDEF(IEnumSketchHatches, __uuidof(IEnumSketchHatches));
_COM_SMARTPTR_TYPEDEF(ISketchRegion, __uuidof(ISketchRegion));
_COM_SMARTPTR_TYPEDEF(IManipulator, __uuidof(IManipulator));
_COM_SMARTPTR_TYPEDEF(IModelViewManager, __uuidof(IModelViewManager));
_COM_SMARTPTR_TYPEDEF(IView, __uuidof(IView));
_COM_SMARTPTR_TYPEDEF(IProjectionArrow, __uuidof(IProjectionArrow));
_COM_SMARTPTR_TYPEDEF(IBreakLine, __uuidof(IBreakLine));
_COM_SMARTPTR_TYPEDEF(ISilhouetteEdge, __uuidof(ISilhouetteEdge));
_COM_SMARTPTR_TYPEDEF(INote, __uuidof(INote));
_COM_SMARTPTR_TYPEDEF(IBalloonStack, __uuidof(IBalloonStack));
_COM_SMARTPTR_TYPEDEF(IAnnotation, __uuidof(IAnnotation));
_COM_SMARTPTR_TYPEDEF(IAnnotationView, __uuidof(IAnnotationView));
_COM_SMARTPTR_TYPEDEF(IMultiJogLeader, __uuidof(IMultiJogLeader));
_COM_SMARTPTR_TYPEDEF(IGtol, __uuidof(IGtol));
_COM_SMARTPTR_TYPEDEF(ISFSymbol, __uuidof(ISFSymbol));
_COM_SMARTPTR_TYPEDEF(IDatumTag, __uuidof(IDatumTag));
_COM_SMARTPTR_TYPEDEF(IDatumTargetSym, __uuidof(IDatumTargetSym));
_COM_SMARTPTR_TYPEDEF(IWeldSymbol, __uuidof(IWeldSymbol));
_COM_SMARTPTR_TYPEDEF(ICThread, __uuidof(ICThread));
_COM_SMARTPTR_TYPEDEF(ICustomSymbol, __uuidof(ICustomSymbol));
_COM_SMARTPTR_TYPEDEF(IDowelSymbol, __uuidof(IDowelSymbol));
_COM_SMARTPTR_TYPEDEF(ICenterMark, __uuidof(ICenterMark));
_COM_SMARTPTR_TYPEDEF(ICenterLine, __uuidof(ICenterLine));
_COM_SMARTPTR_TYPEDEF(IWeldBead, __uuidof(IWeldBead));
_COM_SMARTPTR_TYPEDEF(IDisplayDimension, __uuidof(IDisplayDimension));
_COM_SMARTPTR_TYPEDEF(IEnumDisplayDimensions, __uuidof(IEnumDisplayDimensions));
_COM_SMARTPTR_TYPEDEF(IDimension, __uuidof(IDimension));
_COM_SMARTPTR_TYPEDEF(IFeature, __uuidof(IFeature));
_COM_SMARTPTR_TYPEDEF(IComment, __uuidof(IComment));
_COM_SMARTPTR_TYPEDEF(ITableAnchor, __uuidof(ITableAnchor));
_COM_SMARTPTR_TYPEDEF(ITitleBlock, __uuidof(ITitleBlock));
_COM_SMARTPTR_TYPEDEF(ISketchPicture, __uuidof(ISketchPicture));
_COM_SMARTPTR_TYPEDEF(ISimulation, __uuidof(ISimulation));
_COM_SMARTPTR_TYPEDEF(IModeler, __uuidof(IModeler));
_COM_SMARTPTR_TYPEDEF(IBodyFolder, __uuidof(IBodyFolder));
_COM_SMARTPTR_TYPEDEF(ICommentFolder, __uuidof(ICommentFolder));
_COM_SMARTPTR_TYPEDEF(IComponent2, __uuidof(IComponent2));
_COM_SMARTPTR_TYPEDEF(IDrawingComponent, __uuidof(IDrawingComponent));
_COM_SMARTPTR_TYPEDEF(IEnumComponents2, __uuidof(IEnumComponents2));
_COM_SMARTPTR_TYPEDEF(IDrSection, __uuidof(IDrSection));
_COM_SMARTPTR_TYPEDEF(IEnumDrSections, __uuidof(IEnumDrSections));
_COM_SMARTPTR_TYPEDEF(IConfiguration, __uuidof(IConfiguration));
_COM_SMARTPTR_TYPEDEF(IConfigurationManager, __uuidof(IConfigurationManager));
_COM_SMARTPTR_TYPEDEF(IDragOperator, __uuidof(IDragOperator));
_COM_SMARTPTR_TYPEDEF(IMateEntity2, __uuidof(IMateEntity2));
_COM_SMARTPTR_TYPEDEF(IInterference, __uuidof(IInterference));
_COM_SMARTPTR_TYPEDEF(IInterferenceDetectionMgr, __uuidof(IInterferenceDetectionMgr));
_COM_SMARTPTR_TYPEDEF(IMateEntity, __uuidof(IMateEntity));
_COM_SMARTPTR_TYPEDEF(IMirrorPatternFeatureData, __uuidof(IMirrorPatternFeatureData));
_COM_SMARTPTR_TYPEDEF(ICircularPatternFeatureData, __uuidof(ICircularPatternFeatureData));
_COM_SMARTPTR_TYPEDEF(ILinearPatternFeatureData, __uuidof(ILinearPatternFeatureData));
_COM_SMARTPTR_TYPEDEF(ITablePatternFeatureData, __uuidof(ITablePatternFeatureData));
_COM_SMARTPTR_TYPEDEF(ISketchPatternFeatureData, __uuidof(ISketchPatternFeatureData));
_COM_SMARTPTR_TYPEDEF(IMirrorSolidFeatureData, __uuidof(IMirrorSolidFeatureData));
_COM_SMARTPTR_TYPEDEF(ISheetMetalFeatureData, __uuidof(ISheetMetalFeatureData));
_COM_SMARTPTR_TYPEDEF(IBendsFeatureData, __uuidof(IBendsFeatureData));
_COM_SMARTPTR_TYPEDEF(IBaseFlangeFeatureData, __uuidof(IBaseFlangeFeatureData));
_COM_SMARTPTR_TYPEDEF(IEdgeFlangeFeatureData, __uuidof(IEdgeFlangeFeatureData));
_COM_SMARTPTR_TYPEDEF(IMiterFlangeFeatureData, __uuidof(IMiterFlangeFeatureData));
_COM_SMARTPTR_TYPEDEF(ISketchedBendFeatureData, __uuidof(ISketchedBendFeatureData));
_COM_SMARTPTR_TYPEDEF(IClosedCornerFeatureData, __uuidof(IClosedCornerFeatureData));
_COM_SMARTPTR_TYPEDEF(IFoldsFeatureData, __uuidof(IFoldsFeatureData));
_COM_SMARTPTR_TYPEDEF(IFlatPatternFeatureData, __uuidof(IFlatPatternFeatureData));
_COM_SMARTPTR_TYPEDEF(ILocalLinearPatternFeatureData, __uuidof(ILocalLinearPatternFeatureData));
_COM_SMARTPTR_TYPEDEF(ILocalCircularPatternFeatureData, __uuidof(ILocalCircularPatternFeatureData));
_COM_SMARTPTR_TYPEDEF(IDerivedPatternFeatureData, __uuidof(IDerivedPatternFeatureData));
_COM_SMARTPTR_TYPEDEF(IProjectionCurveFeatureData, __uuidof(IProjectionCurveFeatureData));
_COM_SMARTPTR_TYPEDEF(IScaleFeatureData, __uuidof(IScaleFeatureData));
_COM_SMARTPTR_TYPEDEF(IShellFeatureData, __uuidof(IShellFeatureData));
_COM_SMARTPTR_TYPEDEF(ISweepFeatureData, __uuidof(ISweepFeatureData));
_COM_SMARTPTR_TYPEDEF(ILoftFeatureData, __uuidof(ILoftFeatureData));
_COM_SMARTPTR_TYPEDEF(IThickenFeatureData, __uuidof(IThickenFeatureData));
_COM_SMARTPTR_TYPEDEF(ISurfaceCutFeatureData, __uuidof(ISurfaceCutFeatureData));
_COM_SMARTPTR_TYPEDEF(IReplaceFaceFeatureData, __uuidof(IReplaceFaceFeatureData));
_COM_SMARTPTR_TYPEDEF(IMacroFeatureData, __uuidof(IMacroFeatureData));
_COM_SMARTPTR_TYPEDEF(ICurveDrivenPatternFeatureData, __uuidof(ICurveDrivenPatternFeatureData));
_COM_SMARTPTR_TYPEDEF(IRipFeatureData, __uuidof(IRipFeatureData));
_COM_SMARTPTR_TYPEDEF(IHemFeatureData, __uuidof(IHemFeatureData));
_COM_SMARTPTR_TYPEDEF(IBreakCornerFeatureData, __uuidof(IBreakCornerFeatureData));
_COM_SMARTPTR_TYPEDEF(IJogFeatureData, __uuidof(IJogFeatureData));
_COM_SMARTPTR_TYPEDEF(ISurfExtrudeFeatureData, __uuidof(ISurfExtrudeFeatureData));
_COM_SMARTPTR_TYPEDEF(ISurfRevolveFeatureData, __uuidof(ISurfRevolveFeatureData));
_COM_SMARTPTR_TYPEDEF(ISurfaceOffsetFeatureData, __uuidof(ISurfaceOffsetFeatureData));
_COM_SMARTPTR_TYPEDEF(ISurfaceKnitFeatureData, __uuidof(ISurfaceKnitFeatureData));
_COM_SMARTPTR_TYPEDEF(ISurfaceExtendFeatureData, __uuidof(ISurfaceExtendFeatureData));
_COM_SMARTPTR_TYPEDEF(ISurfacePlanarFeatureData, __uuidof(ISurfacePlanarFeatureData));
_COM_SMARTPTR_TYPEDEF(ISurfaceTrimFeatureData, __uuidof(ISurfaceTrimFeatureData));
_COM_SMARTPTR_TYPEDEF(ISurfaceRadiateFeatureData, __uuidof(ISurfaceRadiateFeatureData));
_COM_SMARTPTR_TYPEDEF(IRefPlaneFeatureData, __uuidof(IRefPlaneFeatureData));
_COM_SMARTPTR_TYPEDEF(IRefPointFeatureData, __uuidof(IRefPointFeatureData));
_COM_SMARTPTR_TYPEDEF(IRuledSurfaceFeatureData, __uuidof(IRuledSurfaceFeatureData));
_COM_SMARTPTR_TYPEDEF(ICavityFeatureData, __uuidof(ICavityFeatureData));
_COM_SMARTPTR_TYPEDEF(ILoftedBendsFeatureData, __uuidof(ILoftedBendsFeatureData));
_COM_SMARTPTR_TYPEDEF(IReferencePointCurveFeatureData, __uuidof(IReferencePointCurveFeatureData));
_COM_SMARTPTR_TYPEDEF(ICompositeCurveFeatureData, __uuidof(ICompositeCurveFeatureData));
_COM_SMARTPTR_TYPEDEF(ICosmeticThreadFeatureData, __uuidof(ICosmeticThreadFeatureData));
_COM_SMARTPTR_TYPEDEF(IMateInPlace, __uuidof(IMateInPlace));
_COM_SMARTPTR_TYPEDEF(IRefAxisFeatureData, __uuidof(IRefAxisFeatureData));
_COM_SMARTPTR_TYPEDEF(IPartingLineFeatureData, __uuidof(IPartingLineFeatureData));
_COM_SMARTPTR_TYPEDEF(IPartingSurfaceFeatureData, __uuidof(IPartingSurfaceFeatureData));
_COM_SMARTPTR_TYPEDEF(IDeleteBodyFeatureData, __uuidof(IDeleteBodyFeatureData));
_COM_SMARTPTR_TYPEDEF(IShutOffSurfaceFeatureData, __uuidof(IShutOffSurfaceFeatureData));
_COM_SMARTPTR_TYPEDEF(IToolingSplitFeatureData, __uuidof(IToolingSplitFeatureData));
_COM_SMARTPTR_TYPEDEF(ISplitBodyFeatureData, __uuidof(ISplitBodyFeatureData));
_COM_SMARTPTR_TYPEDEF(ISaveBodyFeatureData, __uuidof(ISaveBodyFeatureData));
_COM_SMARTPTR_TYPEDEF(IJoinFeatureData, __uuidof(IJoinFeatureData));
_COM_SMARTPTR_TYPEDEF(IFillSurfaceFeatureData, __uuidof(IFillSurfaceFeatureData));
_COM_SMARTPTR_TYPEDEF(ISplitLineFeatureData, __uuidof(ISplitLineFeatureData));
_COM_SMARTPTR_TYPEDEF(IWrapSketchFeatureData, __uuidof(IWrapSketchFeatureData));
_COM_SMARTPTR_TYPEDEF(IEndCapFeatureData, __uuidof(IEndCapFeatureData));
_COM_SMARTPTR_TYPEDEF(IGussetFeatureData, __uuidof(IGussetFeatureData));
_COM_SMARTPTR_TYPEDEF(ICombineBodiesFeatureData, __uuidof(ICombineBodiesFeatureData));
_COM_SMARTPTR_TYPEDEF(ILibraryFeatureData, __uuidof(ILibraryFeatureData));
_COM_SMARTPTR_TYPEDEF(ISimulationMotorFeatureData, __uuidof(ISimulationMotorFeatureData));
_COM_SMARTPTR_TYPEDEF(ISimulationSpringFeatureData, __uuidof(ISimulationSpringFeatureData));
_COM_SMARTPTR_TYPEDEF(IWeldmentTrimExtendFeatureData, __uuidof(IWeldmentTrimExtendFeatureData));
_COM_SMARTPTR_TYPEDEF(IWeldmentBeadFeatureData, __uuidof(IWeldmentBeadFeatureData));
_COM_SMARTPTR_TYPEDEF(ICoreFeatureData, __uuidof(ICoreFeatureData));
_COM_SMARTPTR_TYPEDEF(IMoveFaceFeatureData, __uuidof(IMoveFaceFeatureData));
_COM_SMARTPTR_TYPEDEF(IHealEdgesFeatureData, __uuidof(IHealEdgesFeatureData));
_COM_SMARTPTR_TYPEDEF(IDerivedPartFeatureData, __uuidof(IDerivedPartFeatureData));
_COM_SMARTPTR_TYPEDEF(ISimulationDamperFeatureData, __uuidof(ISimulationDamperFeatureData));
_COM_SMARTPTR_TYPEDEF(ISimulationForceFeatureData, __uuidof(ISimulationForceFeatureData));
_COM_SMARTPTR_TYPEDEF(ICoordinateSystemFeatureData, __uuidof(ICoordinateSystemFeatureData));
_COM_SMARTPTR_TYPEDEF(IRibFeatureData2, __uuidof(IRibFeatureData2));
_COM_SMARTPTR_TYPEDEF(IDomeFeatureData2, __uuidof(IDomeFeatureData2));
_COM_SMARTPTR_TYPEDEF(ISimpleHoleFeatureData2, __uuidof(ISimpleHoleFeatureData2));
_COM_SMARTPTR_TYPEDEF(IWizardHoleFeatureData2, __uuidof(IWizardHoleFeatureData2));
_COM_SMARTPTR_TYPEDEF(IChamferFeatureData2, __uuidof(IChamferFeatureData2));
_COM_SMARTPTR_TYPEDEF(ISimpleFilletFeatureData2, __uuidof(ISimpleFilletFeatureData2));
_COM_SMARTPTR_TYPEDEF(IVariableFilletFeatureData2, __uuidof(IVariableFilletFeatureData2));
_COM_SMARTPTR_TYPEDEF(IExtrudeFeatureData2, __uuidof(IExtrudeFeatureData2));
_COM_SMARTPTR_TYPEDEF(IRevolveFeatureData2, __uuidof(IRevolveFeatureData2));
_COM_SMARTPTR_TYPEDEF(IAttributeDef, __uuidof(IAttributeDef));
_COM_SMARTPTR_TYPEDEF(IEntity, __uuidof(IEntity));
_COM_SMARTPTR_TYPEDEF(IAttribute, __uuidof(IAttribute));
_COM_SMARTPTR_TYPEDEF(IFeatureManager, __uuidof(IFeatureManager));
_COM_SMARTPTR_TYPEDEF(IFaultEntity, __uuidof(IFaultEntity));
_COM_SMARTPTR_TYPEDEF(IPartDoc, __uuidof(IPartDoc));
_COM_SMARTPTR_TYPEDEF(IMate, __uuidof(IMate));
_COM_SMARTPTR_TYPEDEF(IHoleSeriesFeatureData, __uuidof(IHoleSeriesFeatureData));
_COM_SMARTPTR_TYPEDEF(IMateReference, __uuidof(IMateReference));
_COM_SMARTPTR_TYPEDEF(IDraftFeatureData2, __uuidof(IDraftFeatureData2));
_COM_SMARTPTR_TYPEDEF(IDetailCircle, __uuidof(IDetailCircle));
_COM_SMARTPTR_TYPEDEF(ISketchSegment, __uuidof(ISketchSegment));
_COM_SMARTPTR_TYPEDEF(ISketchPath, __uuidof(ISketchPath));
_COM_SMARTPTR_TYPEDEF(IEnumSketchSegments, __uuidof(IEnumSketchSegments));
_COM_SMARTPTR_TYPEDEF(ISketchContour, __uuidof(ISketchContour));
_COM_SMARTPTR_TYPEDEF(IOneBendFeatureData, __uuidof(IOneBendFeatureData));
_COM_SMARTPTR_TYPEDEF(IStructuralMemberFeatureData, __uuidof(IStructuralMemberFeatureData));
_COM_SMARTPTR_TYPEDEF(IBlockInstance, __uuidof(IBlockInstance));
_COM_SMARTPTR_TYPEDEF(IBlockDefinition, __uuidof(IBlockDefinition));
_COM_SMARTPTR_TYPEDEF(ITableAnnotation, __uuidof(ITableAnnotation));
_COM_SMARTPTR_TYPEDEF(IGeneralTableFeature, __uuidof(IGeneralTableFeature));
_COM_SMARTPTR_TYPEDEF(IHoleTableAnnotation, __uuidof(IHoleTableAnnotation));
_COM_SMARTPTR_TYPEDEF(IHoleTable, __uuidof(IHoleTable));
_COM_SMARTPTR_TYPEDEF(IDatumOrigin, __uuidof(IDatumOrigin));
_COM_SMARTPTR_TYPEDEF(IBomTableAnnotation, __uuidof(IBomTableAnnotation));
_COM_SMARTPTR_TYPEDEF(IBomFeature, __uuidof(IBomFeature));
_COM_SMARTPTR_TYPEDEF(IModelDocExtension, __uuidof(IModelDocExtension));
_COM_SMARTPTR_TYPEDEF(ISheet, __uuidof(ISheet));
_COM_SMARTPTR_TYPEDEF(IDrawingDoc, __uuidof(IDrawingDoc));
_COM_SMARTPTR_TYPEDEF(IRevisionTableAnnotation, __uuidof(IRevisionTableAnnotation));
_COM_SMARTPTR_TYPEDEF(IRevisionTableFeature, __uuidof(IRevisionTableFeature));
_COM_SMARTPTR_TYPEDEF(IWeldmentCutListAnnotation, __uuidof(IWeldmentCutListAnnotation));
_COM_SMARTPTR_TYPEDEF(IWeldmentCutListFeature, __uuidof(IWeldmentCutListFeature));
_COM_SMARTPTR_TYPEDEF(ISketchBlockInstance, __uuidof(ISketchBlockInstance));
_COM_SMARTPTR_TYPEDEF(ISketchBlockDefinition, __uuidof(ISketchBlockDefinition));
_COM_SMARTPTR_TYPEDEF(ISketchManager, __uuidof(ISketchManager));
_COM_SMARTPTR_TYPEDEF(IAssemblyDoc, __uuidof(IAssemblyDoc));
_COM_SMARTPTR_TYPEDEF(IMate2, __uuidof(IMate2));
_COM_SMARTPTR_TYPEDEF(IMateLoadReference, __uuidof(IMateLoadReference));
_COM_SMARTPTR_TYPEDEF(IMoveCopyBodyFeatureData, __uuidof(IMoveCopyBodyFeatureData));
_COM_SMARTPTR_TYPEDEF(IPropertyManagerPage2, __uuidof(IPropertyManagerPage2));
_COM_SMARTPTR_TYPEDEF(IPropertyManagerPageGroup, __uuidof(IPropertyManagerPageGroup));
_COM_SMARTPTR_TYPEDEF(IPropertyManagerPageControl, __uuidof(IPropertyManagerPageControl));
_COM_SMARTPTR_TYPEDEF(IPropertyManagerPageTab, __uuidof(IPropertyManagerPageTab));

//
// Type library items
//

struct __declspec(uuid("9ed126f7-935e-4279-9171-4086a235719b"))
IMouse : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Move (
        /*[in]*/ long X,
        /*[in]*/ long Y,
        /*[in]*/ long Flags,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall MoveXYZ (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in]*/ long Flags,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall MouseWheelXYZ (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in]*/ long Clicks,
        /*[in]*/ long Flags,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("7033ea1b-744a-44f3-a2b4-e450d4c99f0e"))
ISketchRelation : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetEntities (
        /*[out,retval]*/ VARIANT * Entities ) = 0;
      virtual HRESULT __stdcall GetEntitiesCount (
        /*[out,retval]*/ long * EntityCount ) = 0;
      virtual HRESULT __stdcall IGetEntities (
        /*[in]*/ long NumEntities,
        /*[out,retval]*/ IDispatch * * EntityArray ) = 0;
      virtual HRESULT __stdcall GetRelationType (
        /*[out,retval]*/ long * RelationType ) = 0;
      virtual HRESULT __stdcall GetEntitiesType (
        /*[out,retval]*/ VARIANT * EntArr ) = 0;
      virtual HRESULT __stdcall IGetEntitiesType (
        /*[in]*/ long NumEntities,
        /*[out,retval]*/ long * EntitiesType ) = 0;
      virtual HRESULT __stdcall GetDefinitionEntities (
        /*[out,retval]*/ VARIANT * Entities ) = 0;
      virtual HRESULT __stdcall IGetDefinitionEntities (
        /*[in]*/ long NumEntities,
        /*[out,retval]*/ IDispatch * * EntityArray ) = 0;
      virtual HRESULT __stdcall get_Suppressed (
        /*[out,retval]*/ VARIANT_BOOL * Suppresed ) = 0;
      virtual HRESULT __stdcall put_Suppressed (
        /*[in]*/ VARIANT_BOOL Suppresed ) = 0;
      virtual HRESULT __stdcall ReplaceEntity (
        /*[in]*/ IDispatch * OldEntity,
        /*[in]*/ IDispatch * NewEntity,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("83a33db9-27c5-11ce-bfd4-00400513bb57"))
ITextFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetAllValues (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetAllValues (
        /*[in]*/ long Count,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_Italic (
        /*[out,retval]*/ VARIANT_BOOL * Italic ) = 0;
      virtual HRESULT __stdcall put_Italic (
        /*[in]*/ VARIANT_BOOL Italic ) = 0;
      virtual HRESULT __stdcall get_Underline (
        /*[out,retval]*/ VARIANT_BOOL * Underline ) = 0;
      virtual HRESULT __stdcall put_Underline (
        /*[in]*/ VARIANT_BOOL Underline ) = 0;
      virtual HRESULT __stdcall get_Strikeout (
        /*[out,retval]*/ VARIANT_BOOL * Strikeout ) = 0;
      virtual HRESULT __stdcall put_Strikeout (
        /*[in]*/ VARIANT_BOOL Strikeout ) = 0;
      virtual HRESULT __stdcall get_Bold (
        /*[out,retval]*/ VARIANT_BOOL * Bold ) = 0;
      virtual HRESULT __stdcall put_Bold (
        /*[in]*/ VARIANT_BOOL Bold ) = 0;
      virtual HRESULT __stdcall get_Escapement (
        /*[out,retval]*/ double * Escapement ) = 0;
      virtual HRESULT __stdcall put_Escapement (
        /*[in]*/ double Escapement ) = 0;
      virtual HRESULT __stdcall get_LineSpacing (
        /*[out,retval]*/ double * Spacing ) = 0;
      virtual HRESULT __stdcall put_LineSpacing (
        /*[in]*/ double Spacing ) = 0;
      virtual HRESULT __stdcall get_CharHeight (
        /*[out,retval]*/ double * Height ) = 0;
      virtual HRESULT __stdcall put_CharHeight (
        /*[in]*/ double Height ) = 0;
      virtual HRESULT __stdcall get_CharHeightInPts (
        /*[out,retval]*/ int * Height ) = 0;
      virtual HRESULT __stdcall put_CharHeightInPts (
        /*[in]*/ int Height ) = 0;
      virtual HRESULT __stdcall IsHeightSpecifiedInPts (
        /*[out,retval]*/ VARIANT_BOOL * InPts ) = 0;
      virtual HRESULT __stdcall get_TypeFaceName (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_TypeFaceName (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_WidthFactor (
        /*[out,retval]*/ double * Spacing ) = 0;
      virtual HRESULT __stdcall put_WidthFactor (
        /*[in]*/ double Spacing ) = 0;
      virtual HRESULT __stdcall get_ObliqueAngle (
        /*[out,retval]*/ double * ObliqueAngle ) = 0;
      virtual HRESULT __stdcall put_ObliqueAngle (
        /*[in]*/ double ObliqueAngle ) = 0;
      virtual HRESULT __stdcall get_LineLength (
        /*[out,retval]*/ double * LineLength ) = 0;
      virtual HRESULT __stdcall put_LineLength (
        /*[in]*/ double LineLength ) = 0;
      virtual HRESULT __stdcall get_Vertical (
        /*[out,retval]*/ VARIANT_BOOL * Vertical ) = 0;
      virtual HRESULT __stdcall put_Vertical (
        /*[in]*/ VARIANT_BOOL Vertical ) = 0;
      virtual HRESULT __stdcall get_BackWards (
        /*[out,retval]*/ VARIANT_BOOL * BackWards ) = 0;
      virtual HRESULT __stdcall put_BackWards (
        /*[in]*/ VARIANT_BOOL BackWards ) = 0;
      virtual HRESULT __stdcall get_UpsideDown (
        /*[out,retval]*/ VARIANT_BOOL * UpsideDown ) = 0;
      virtual HRESULT __stdcall put_UpsideDown (
        /*[in]*/ VARIANT_BOOL UpsideDown ) = 0;
      virtual HRESULT __stdcall get_CharSpacingFactor (
        /*[out,retval]*/ double * Factor ) = 0;
      virtual HRESULT __stdcall put_CharSpacingFactor (
        /*[in]*/ double Factor ) = 0;
};

struct __declspec(uuid("83a33d9c-27c5-11ce-bfd4-00400513bb57"))
IDisplayData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetTextCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTextAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetTextHeightAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTextPositionAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTextPositionAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTextAngleAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTextRefPositionAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTextInvertAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTextFontAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetLineCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetLineAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetLineAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetArcCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetArcAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetArcAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetArrowHeadCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetArrowHeadAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetArrowHeadAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTriangleCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTriangleAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTriangleAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetPolyLineCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetPolylineSizeAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetPolylineAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetPolylineAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetEllipseCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetEllipseAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetEllipseAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTextLineSpacingAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetLineAtIndex2 (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetLineAtIndex2 (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetArcAtIndex2 (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetArcAtIndex2 (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetPolylineSizeAtIndex2 (
        /*[in]*/ long Index,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetPolylineAtIndex2 (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetPolylineAtIndex2 (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetEllipseAtIndex2 (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetEllipseAtIndex2 (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall Dummy1 ( ) = 0;
      virtual HRESULT __stdcall Dummy2 ( ) = 0;
      virtual HRESULT __stdcall Dummy3 ( ) = 0;
      virtual HRESULT __stdcall Dummy4 ( ) = 0;
      virtual HRESULT __stdcall GetParabolaCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetParabolaAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetParabolaAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetPolygonCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetPolygonSizeAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetPolygonAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetPolygonAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTextInBoxStyleAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTextInBoxWidthAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTextInBoxHeightAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetLineAtIndex3 (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetLineAtIndex3 (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetPointCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetPointAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetPointAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
};

struct __declspec(uuid("83a33d69-27c5-11ce-bfd4-00400513bb57"))
IParameter : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetDoubleValue (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall SetDoubleValue (
        /*[in]*/ double Value,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetType (
        /*[out,retval]*/ long * OptionValue ) = 0;
      virtual HRESULT __stdcall GetName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetOption (
        /*[in]*/ long WhichOption,
        /*[out,retval]*/ long * OptionValue ) = 0;
      virtual HRESULT __stdcall SetOption (
        /*[in]*/ long WhichOption,
        /*[in]*/ long OptionValue,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetStringValue (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetStringValue (
        /*[in]*/ BSTR StringValue,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetVector (
        /*[out]*/ double * X,
        /*[out]*/ double * Y,
        /*[out]*/ double * Z ) = 0;
      virtual HRESULT __stdcall SetVector (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetVectorVB (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall SetDoubleValue2 (
        /*[in]*/ double Value,
        /*[in]*/ long ConfigurationOption,
        /*[in]*/ BSTR ConfigurationName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetStringValue2 (
        /*[in]*/ BSTR StringValue,
        /*[in]*/ long ConfigurationOption,
        /*[in]*/ BSTR ConfigurationName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetVector2 (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in]*/ long ConfigurationOption,
        /*[in]*/ BSTR ConfigurationName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("b81f43f1-8f16-4482-bf05-8bee973b6ce8"))
ITexture : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_MaterialName (
        /*[out,retval]*/ BSTR * MatName ) = 0;
      virtual HRESULT __stdcall put_MaterialName (
        /*[in]*/ BSTR MatName ) = 0;
      virtual HRESULT __stdcall get_ScaleFactor (
        /*[out,retval]*/ double * Val ) = 0;
      virtual HRESULT __stdcall put_ScaleFactor (
        /*[in]*/ double Val ) = 0;
      virtual HRESULT __stdcall get_Angle (
        /*[out,retval]*/ double * Val ) = 0;
      virtual HRESULT __stdcall put_Angle (
        /*[in]*/ double Val ) = 0;
      virtual HRESULT __stdcall get_BlendColor (
        /*[out,retval]*/ VARIANT_BOOL * BVal ) = 0;
      virtual HRESULT __stdcall put_BlendColor (
        /*[in]*/ VARIANT_BOOL BVal ) = 0;
      virtual HRESULT __stdcall GetSystemTextureName (
        /*[in]*/ BSTR FileNameIn,
        /*[out]*/ VARIANT_BOOL * Res,
        /*[out,retval]*/ BSTR * UiString ) = 0;
};

struct __declspec(uuid("263f0ff6-4c7e-477a-b0ae-49ee41e43351"))
IDecal : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DecalID (
        /*[out,retval]*/ long * DecalID ) = 0;
      virtual HRESULT __stdcall get_Hidden (
        /*[out,retval]*/ VARIANT_BOOL * HiddenState ) = 0;
      virtual HRESULT __stdcall put_Hidden (
        /*[in]*/ VARIANT_BOOL HiddenState ) = 0;
      virtual HRESULT __stdcall get_MaskType (
        /*[out,retval]*/ long * MaskType ) = 0;
      virtual HRESULT __stdcall put_MaskType (
        /*[in]*/ long MaskType ) = 0;
      virtual HRESULT __stdcall get_MaskFilename (
        /*[out,retval]*/ BSTR * MaskFilename ) = 0;
      virtual HRESULT __stdcall put_MaskFilename (
        /*[in]*/ BSTR MaskFilename ) = 0;
      virtual HRESULT __stdcall get_MaskInvert (
        /*[out,retval]*/ VARIANT_BOOL * MaskInvert ) = 0;
      virtual HRESULT __stdcall put_MaskInvert (
        /*[in]*/ VARIANT_BOOL MaskInvert ) = 0;
      virtual HRESULT __stdcall GetMaskExcludedColorsCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetMaskExcludedColors (
        /*[in]*/ long Count,
        /*[out,retval]*/ long * MaskColors ) = 0;
      virtual HRESULT __stdcall ISetMaskExcludedColors (
        /*[in]*/ long Count,
        /*[in]*/ long * MaskColors ) = 0;
};

struct __declspec(uuid("d3bd935b-dfb4-4eda-b03a-da4eb2024f3f"))
IRenderMaterial : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Ambient (
        /*[out,retval]*/ double * Ambient ) = 0;
      virtual HRESULT __stdcall put_Ambient (
        /*[in]*/ double Ambient ) = 0;
      virtual HRESULT __stdcall get_XPosition (
        /*[out,retval]*/ double * X ) = 0;
      virtual HRESULT __stdcall put_XPosition (
        /*[in]*/ double X ) = 0;
      virtual HRESULT __stdcall get_YPosition (
        /*[out,retval]*/ double * Y ) = 0;
      virtual HRESULT __stdcall put_YPosition (
        /*[in]*/ double Y ) = 0;
      virtual HRESULT __stdcall get_RotationAngle (
        /*[out,retval]*/ double * Ang ) = 0;
      virtual HRESULT __stdcall put_RotationAngle (
        /*[in]*/ double Ang ) = 0;
      virtual HRESULT __stdcall get_Direction1RotationAngle (
        /*[out,retval]*/ double * Direction1RotAngle ) = 0;
      virtual HRESULT __stdcall put_Direction1RotationAngle (
        /*[in]*/ double Direction1RotAngle ) = 0;
      virtual HRESULT __stdcall get_Direction2RotationAngle (
        /*[out,retval]*/ double * Direction2RotAngle ) = 0;
      virtual HRESULT __stdcall put_Direction2RotationAngle (
        /*[in]*/ double Direction2RotAngle ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * Width ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double Width ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * Height ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double Height ) = 0;
      virtual HRESULT __stdcall get_WidthMirror (
        /*[out,retval]*/ VARIANT_BOOL * WidthMirror ) = 0;
      virtual HRESULT __stdcall put_WidthMirror (
        /*[in]*/ VARIANT_BOOL WidthMirror ) = 0;
      virtual HRESULT __stdcall get_HeightMirror (
        /*[out,retval]*/ VARIANT_BOOL * HeightMirror ) = 0;
      virtual HRESULT __stdcall put_HeightMirror (
        /*[in]*/ VARIANT_BOOL HeightMirror ) = 0;
      virtual HRESULT __stdcall get_FixedAspectRatio (
        /*[out,retval]*/ VARIANT_BOOL * FixedAspect ) = 0;
      virtual HRESULT __stdcall put_FixedAspectRatio (
        /*[in]*/ VARIANT_BOOL FixedAspect ) = 0;
      virtual HRESULT __stdcall get_FitWidth (
        /*[out,retval]*/ VARIANT_BOOL * FitWidth ) = 0;
      virtual HRESULT __stdcall put_FitWidth (
        /*[in]*/ VARIANT_BOOL FitWidth ) = 0;
      virtual HRESULT __stdcall get_FitHeight (
        /*[out,retval]*/ VARIANT_BOOL * FitHeight ) = 0;
      virtual HRESULT __stdcall put_FitHeight (
        /*[in]*/ VARIANT_BOOL FitHeight ) = 0;
      virtual HRESULT __stdcall get_FileName (
        /*[out,retval]*/ BSTR * DecalFilename ) = 0;
      virtual HRESULT __stdcall put_FileName (
        /*[in]*/ BSTR DecalFilename ) = 0;
      virtual HRESULT __stdcall get_TextureFilename (
        /*[out,retval]*/ BSTR * TextureFilename ) = 0;
      virtual HRESULT __stdcall put_TextureFilename (
        /*[in]*/ BSTR TextureFilename ) = 0;
      virtual HRESULT __stdcall get_Diffuse (
        /*[out,retval]*/ double * Diffuse ) = 0;
      virtual HRESULT __stdcall put_Diffuse (
        /*[in]*/ double Diffuse ) = 0;
      virtual HRESULT __stdcall get_Specular (
        /*[out,retval]*/ double * Specular ) = 0;
      virtual HRESULT __stdcall put_Specular (
        /*[in]*/ double Specular ) = 0;
      virtual HRESULT __stdcall get_Transparency (
        /*[out,retval]*/ double * Transparency ) = 0;
      virtual HRESULT __stdcall put_Transparency (
        /*[in]*/ double Transparency ) = 0;
      virtual HRESULT __stdcall get_Emission (
        /*[out,retval]*/ double * Emission ) = 0;
      virtual HRESULT __stdcall put_Emission (
        /*[in]*/ double Emission ) = 0;
      virtual HRESULT __stdcall get_MappingType (
        /*[out,retval]*/ long * MappingType ) = 0;
      virtual HRESULT __stdcall put_MappingType (
        /*[in]*/ long MappingType ) = 0;
      virtual HRESULT __stdcall get_ProjectionReference (
        /*[out,retval]*/ long * ProjectionReference ) = 0;
      virtual HRESULT __stdcall put_ProjectionReference (
        /*[in]*/ long ProjectionReference ) = 0;
      virtual HRESULT __stdcall GetUDirection (
        /*[out]*/ double * UDir ) = 0;
      virtual HRESULT __stdcall SetUDirection (
        /*[in]*/ double * UDir ) = 0;
      virtual HRESULT __stdcall GetVDirection (
        /*[out]*/ double * VDir ) = 0;
      virtual HRESULT __stdcall SetVDirection (
        /*[in]*/ double * VDir ) = 0;
      virtual HRESULT __stdcall GetCenterPoint (
        /*[out]*/ double * CenterPt ) = 0;
      virtual HRESULT __stdcall SetCenterPoint (
        /*[in]*/ double * CenterPt ) = 0;
      virtual HRESULT __stdcall get_MaterialID (
        /*[out,retval]*/ long * MaterialID ) = 0;
      virtual HRESULT __stdcall GetEntitiesCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetEntities (
        /*[out,retval]*/ VARIANT * PEntities ) = 0;
      virtual HRESULT __stdcall IGetEntities (
        /*[in]*/ long Count,
        /*[out,retval]*/ IDispatch * * PEntitiesArr ) = 0;
      virtual HRESULT __stdcall get_IlluminationShaderType (
        /*[out,retval]*/ long * IllumType ) = 0;
      virtual HRESULT __stdcall put_IlluminationShaderType (
        /*[in]*/ long IllumType ) = 0;
      virtual HRESULT __stdcall get_SpecularColor (
        /*[out,retval]*/ long * SpecularColor ) = 0;
      virtual HRESULT __stdcall put_SpecularColor (
        /*[in]*/ long SpecularColor ) = 0;
      virtual HRESULT __stdcall get_Glossy (
        /*[out,retval]*/ double * Glossy ) = 0;
      virtual HRESULT __stdcall put_Glossy (
        /*[in]*/ double Glossy ) = 0;
      virtual HRESULT __stdcall get_Roughness (
        /*[out,retval]*/ double * Roughness ) = 0;
      virtual HRESULT __stdcall put_Roughness (
        /*[in]*/ double Roughness ) = 0;
      virtual HRESULT __stdcall get_Reflectivity (
        /*[out,retval]*/ double * Reflectivity ) = 0;
      virtual HRESULT __stdcall put_Reflectivity (
        /*[in]*/ double Reflectivity ) = 0;
      virtual HRESULT __stdcall get_IndexOfRefraction (
        /*[out,retval]*/ double * IndexOfRefraction ) = 0;
      virtual HRESULT __stdcall put_IndexOfRefraction (
        /*[in]*/ double IndexOfRefraction ) = 0;
      virtual HRESULT __stdcall get_Translucency (
        /*[out,retval]*/ double * Translucency ) = 0;
      virtual HRESULT __stdcall put_Translucency (
        /*[in]*/ double Translucency ) = 0;
      virtual HRESULT __stdcall get_AnisotropicFloorHeight (
        /*[out,retval]*/ double * AnisotropicFloorHeight ) = 0;
      virtual HRESULT __stdcall put_AnisotropicFloorHeight (
        /*[in]*/ double AnisotropicFloorHeight ) = 0;
      virtual HRESULT __stdcall get_AnisotropicCylinderDistance (
        /*[out,retval]*/ double * AnisotropicCylinderDistance ) = 0;
      virtual HRESULT __stdcall put_AnisotropicCylinderDistance (
        /*[in]*/ double AnisotropicCylinderDistance ) = 0;
      virtual HRESULT __stdcall get_AnisotropicBias (
        /*[out,retval]*/ double * AnisotropicBias ) = 0;
      virtual HRESULT __stdcall put_AnisotropicBias (
        /*[in]*/ double AnisotropicBias ) = 0;
      virtual HRESULT __stdcall get_MetallicMix (
        /*[out,retval]*/ double * MetallicMix ) = 0;
      virtual HRESULT __stdcall put_MetallicMix (
        /*[in]*/ double MetallicMix ) = 0;
      virtual HRESULT __stdcall get_MetallicRoughness (
        /*[out,retval]*/ double * MetallicRoughness ) = 0;
      virtual HRESULT __stdcall put_MetallicRoughness (
        /*[in]*/ double MetallicRoughness ) = 0;
      virtual HRESULT __stdcall get_MetallicScale (
        /*[out,retval]*/ double * MetallicScale ) = 0;
      virtual HRESULT __stdcall put_MetallicScale (
        /*[in]*/ double MetallicScale ) = 0;
      virtual HRESULT __stdcall get_MetallicAmplitude (
        /*[out,retval]*/ double * MetallicAmplitude ) = 0;
      virtual HRESULT __stdcall put_MetallicAmplitude (
        /*[in]*/ double MetallicAmplitude ) = 0;
      virtual HRESULT __stdcall get_MetallicFlakeMaterial (
        /*[out,retval]*/ long * MetallicFlakeMaterial ) = 0;
      virtual HRESULT __stdcall put_MetallicFlakeMaterial (
        /*[in]*/ long MetallicFlakeMaterial ) = 0;
      virtual HRESULT __stdcall get_AccurateReflections (
        /*[out,retval]*/ VARIANT_BOOL * AccurateReflections ) = 0;
      virtual HRESULT __stdcall put_AccurateReflections (
        /*[in]*/ VARIANT_BOOL AccurateReflections ) = 0;
      virtual HRESULT __stdcall get_BumpBlend (
        /*[out,retval]*/ double * BumpBlend ) = 0;
      virtual HRESULT __stdcall put_BumpBlend (
        /*[in]*/ double BumpBlend ) = 0;
      virtual HRESULT __stdcall get_BumpMap (
        /*[out,retval]*/ long * BumpMap ) = 0;
      virtual HRESULT __stdcall put_BumpMap (
        /*[in]*/ long BumpMap ) = 0;
      virtual HRESULT __stdcall get_BumpScale (
        /*[out,retval]*/ double * BumpScale ) = 0;
      virtual HRESULT __stdcall put_BumpScale (
        /*[in]*/ double BumpScale ) = 0;
      virtual HRESULT __stdcall get_BumpRadius (
        /*[out,retval]*/ double * BumpRadius ) = 0;
      virtual HRESULT __stdcall put_BumpRadius (
        /*[in]*/ double BumpRadius ) = 0;
      virtual HRESULT __stdcall get_BumpAmplitude (
        /*[out,retval]*/ double * BumpAmplitude ) = 0;
      virtual HRESULT __stdcall put_BumpAmplitude (
        /*[in]*/ double BumpAmplitude ) = 0;
      virtual HRESULT __stdcall get_BumpDetail (
        /*[out,retval]*/ long * BumpDetail ) = 0;
      virtual HRESULT __stdcall put_BumpDetail (
        /*[in]*/ long BumpDetail ) = 0;
      virtual HRESULT __stdcall get_BumpSharpness (
        /*[out,retval]*/ double * BumpSharpness ) = 0;
      virtual HRESULT __stdcall put_BumpSharpness (
        /*[in]*/ double BumpSharpness ) = 0;
      virtual HRESULT __stdcall get_BumpRoughLow (
        /*[out,retval]*/ double * BumpRoughLow ) = 0;
      virtual HRESULT __stdcall put_BumpRoughLow (
        /*[in]*/ double BumpRoughLow ) = 0;
      virtual HRESULT __stdcall get_BumpRoughHigh (
        /*[out,retval]*/ double * BumpRoughHigh ) = 0;
      virtual HRESULT __stdcall put_BumpRoughHigh (
        /*[in]*/ double BumpRoughHigh ) = 0;
      virtual HRESULT __stdcall get_BumpTextureFilename (
        /*[out,retval]*/ BSTR * BumpTextureFilename ) = 0;
      virtual HRESULT __stdcall put_BumpTextureFilename (
        /*[in]*/ BSTR BumpTextureFilename ) = 0;
      virtual HRESULT __stdcall get_PatternScale (
        /*[out,retval]*/ double * PatternScale ) = 0;
      virtual HRESULT __stdcall put_PatternScale (
        /*[in]*/ double PatternScale ) = 0;
      virtual HRESULT __stdcall get_PrimaryColor (
        /*[out,retval]*/ long * PrimaryColor ) = 0;
      virtual HRESULT __stdcall put_PrimaryColor (
        /*[in]*/ long PrimaryColor ) = 0;
      virtual HRESULT __stdcall get_SecondaryColor (
        /*[out,retval]*/ long * SecondaryColor ) = 0;
      virtual HRESULT __stdcall put_SecondaryColor (
        /*[in]*/ long SecondaryColor ) = 0;
      virtual HRESULT __stdcall get_TertiaryColor (
        /*[out,retval]*/ long * TertiaryColor ) = 0;
      virtual HRESULT __stdcall put_TertiaryColor (
        /*[in]*/ long TertiaryColor ) = 0;
      virtual HRESULT __stdcall get_ColorForm (
        /*[out,retval]*/ long * ColorForm ) = 0;
      virtual HRESULT __stdcall put_ColorForm (
        /*[in]*/ long ColorForm ) = 0;
      virtual HRESULT __stdcall AddEntity (
        /*[in]*/ IDispatch * Entity,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_LinkToFile (
        /*[out,retval]*/ VARIANT_BOOL * AccurateReflections ) = 0;
      virtual HRESULT __stdcall put_LinkToFile (
        /*[in]*/ VARIANT_BOOL AccurateReflections ) = 0;
      virtual HRESULT __stdcall get_CausticsCast (
        /*[out,retval]*/ VARIANT_BOOL * CausticsCast ) = 0;
      virtual HRESULT __stdcall put_CausticsCast (
        /*[in]*/ VARIANT_BOOL CausticsCast ) = 0;
      virtual HRESULT __stdcall get_CausticsReceive (
        /*[out,retval]*/ VARIANT_BOOL * CausticsReceive ) = 0;
      virtual HRESULT __stdcall put_CausticsReceive (
        /*[in]*/ VARIANT_BOOL CausticsReceive ) = 0;
      virtual HRESULT __stdcall get_GlobalIlluminationCast (
        /*[out,retval]*/ VARIANT_BOOL * GlobalIlluminationCast ) = 0;
      virtual HRESULT __stdcall put_GlobalIlluminationCast (
        /*[in]*/ VARIANT_BOOL GlobalIlluminationCast ) = 0;
      virtual HRESULT __stdcall get_GlobalIlluminationReceive (
        /*[out,retval]*/ VARIANT_BOOL * GlobalIlluminationReceive ) = 0;
      virtual HRESULT __stdcall put_GlobalIlluminationReceive (
        /*[in]*/ VARIANT_BOOL GlobalIlluminationReceive ) = 0;
      virtual HRESULT __stdcall get_BumpUseMappingScale (
        /*[out,retval]*/ VARIANT_BOOL * BumpUseMappingScale ) = 0;
      virtual HRESULT __stdcall put_BumpUseMappingScale (
        /*[in]*/ VARIANT_BOOL BumpUseMappingScale ) = 0;
      virtual HRESULT __stdcall get_IgnoreMissingFile (
        /*[out,retval]*/ VARIANT_BOOL * IgnoreMissingFile ) = 0;
      virtual HRESULT __stdcall put_IgnoreMissingFile (
        /*[in]*/ VARIANT_BOOL IgnoreMissingFile ) = 0;
      virtual HRESULT __stdcall get_DensityOfHoles (
        /*[out,retval]*/ double * DensityOfHoles ) = 0;
      virtual HRESULT __stdcall put_DensityOfHoles (
        /*[in]*/ double DensityOfHoles ) = 0;
      virtual HRESULT __stdcall get_TransparencyMappingShaderType (
        /*[out,retval]*/ long * ShaderType ) = 0;
      virtual HRESULT __stdcall put_TransparencyMappingShaderType (
        /*[in]*/ long ShaderType ) = 0;
      virtual HRESULT __stdcall RemoveAllEntities ( ) = 0;
      virtual HRESULT __stdcall get_Brightness (
        /*[out,retval]*/ double * Brightness ) = 0;
      virtual HRESULT __stdcall put_Brightness (
        /*[in]*/ double Brightness ) = 0;
      virtual HRESULT __stdcall get_ObjectAreaLight (
        /*[out,retval]*/ long * ObjectAreaLight ) = 0;
      virtual HRESULT __stdcall put_ObjectAreaLight (
        /*[in]*/ long ObjectAreaLight ) = 0;
      virtual HRESULT __stdcall get_NSamples (
        /*[out,retval]*/ double * NSamples ) = 0;
      virtual HRESULT __stdcall put_NSamples (
        /*[in]*/ double NSamples ) = 0;
      virtual HRESULT __stdcall get_ToonShaderTextureFilename (
        /*[out,retval]*/ BSTR * TextureFilename ) = 0;
      virtual HRESULT __stdcall put_ToonShaderTextureFilename (
        /*[in]*/ BSTR TextureFilename ) = 0;
};

struct __declspec(uuid("f1938d94-0d1f-4e88-9874-164b1e6568f1"))
ICustomPropertyManager : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Owner (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetNames (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetNames (
        /*[in]*/ long Count,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetType (
        /*[in]*/ BSTR FieldName,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall Get (
        /*[in]*/ BSTR FieldName,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall Set (
        /*[in]*/ BSTR FieldName,
        /*[in]*/ BSTR FieldValue,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR FieldName,
        /*[in]*/ BSTR FieldType,
        /*[in]*/ BSTR FieldValue,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[in]*/ BSTR FieldName,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall Get2 (
        /*[in]*/ BSTR FieldName,
        /*[out]*/ BSTR * ValOut,
        /*[out]*/ BSTR * ReesolvedValOut ) = 0;
      virtual HRESULT __stdcall GetType2 (
        /*[in]*/ BSTR FieldName,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall Add2 (
        /*[in]*/ BSTR FieldName,
        /*[in]*/ long FieldType,
        /*[in]*/ BSTR FieldValue,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetAll (
        /*[in,out]*/ VARIANT * PropNames,
        /*[in,out]*/ VARIANT * PropTypes,
        /*[in,out]*/ VARIANT * PropValues,
        /*[out,retval]*/ long * NumProps ) = 0;
      virtual HRESULT __stdcall IGetAll (
        /*[in]*/ long Count,
        /*[in,out]*/ BSTR * PropNames,
        /*[in,out]*/ long * PropTypes,
        /*[in,out]*/ BSTR * PropValues ) = 0;
      virtual HRESULT __stdcall Get3 (
        /*[in]*/ BSTR FieldName,
        /*[in]*/ VARIANT_BOOL UseCached,
        /*[out]*/ BSTR * ValOut,
        /*[out]*/ BSTR * ResolvedValOut,
        /*[out,retval]*/ VARIANT_BOOL * UpToDateValue ) = 0;
};

struct __declspec(uuid("f43444a8-1d72-4178-95c8-7108cf29e016"))
IDimensionTolerance : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * TolType ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ long TolType ) = 0;
      virtual HRESULT __stdcall GetMinValue (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetMaxValue (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall SetValues (
        /*[in]*/ double MinValue,
        /*[in]*/ double MaxValue,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetFontUseDimension (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetFontUseScale (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetFontScale (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetFontHeight (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall SetFont (
        /*[in]*/ VARIANT_BOOL UseDimension,
        /*[in]*/ VARIANT_BOOL UseScale,
        /*[in]*/ double Value,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_ShowParenthesis (
        /*[out,retval]*/ VARIANT_BOOL * Show ) = 0;
      virtual HRESULT __stdcall put_ShowParenthesis (
        /*[in]*/ VARIANT_BOOL Show ) = 0;
      virtual HRESULT __stdcall GetHoleFitValue (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetShaftFitValue (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetFitValues (
        /*[in]*/ BSTR HoleFit,
        /*[in]*/ BSTR ShaftFit,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetFitFontUseDimension (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetFitFontUseScale (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetFitFontScale (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetFitFontHeight (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall SetFitFont (
        /*[in]*/ VARIANT_BOOL UseDimension,
        /*[in]*/ VARIANT_BOOL UseScale,
        /*[in]*/ double Value,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_FitDisplayStyle (
        /*[out,retval]*/ long * Style ) = 0;
      virtual HRESULT __stdcall put_FitDisplayStyle (
        /*[in]*/ long Style ) = 0;
};

struct __declspec(uuid("83a33d82-27c5-11ce-bfd4-00400513bb57"))
IBomTable : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetExtent (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetExtent (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetRowCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetColumnCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetHeaderText (
        /*[in]*/ long Col,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetEntryText (
        /*[in]*/ long Row,
        /*[in]*/ long Col,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall Attach ( ) = 0;
      virtual HRESULT __stdcall Detach ( ) = 0;
      virtual HRESULT __stdcall GetColumnWidth (
        /*[in]*/ long Col,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetRowHeight (
        /*[in]*/ long Row,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetEntryValue (
        /*[in]*/ long Row,
        /*[in]*/ long Col,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall Attach2 (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetDisplayData (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetDisplayData (
        /*[out,retval]*/ struct IDisplayData * * Retval ) = 0;
      virtual HRESULT __stdcall IsVisible (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Attach3 (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetTotalRowCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTotalColumnCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT_BOOL Append,
        /*[in]*/ long Mark,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DeSelect (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("931374cc-ce0e-11d5-af59-00c04f603faf"))
IPageSetup : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ScaleToFit (
        /*[out,retval]*/ VARIANT_BOOL * Fit ) = 0;
      virtual HRESULT __stdcall put_ScaleToFit (
        /*[in]*/ VARIANT_BOOL Fit ) = 0;
      virtual HRESULT __stdcall get_Scale2 (
        /*[out,retval]*/ double * Scale ) = 0;
      virtual HRESULT __stdcall put_Scale2 (
        /*[in]*/ double Scale ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ long * Orientation ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ long Orientation ) = 0;
      virtual HRESULT __stdcall get_LeftHeader (
        /*[out,retval]*/ BSTR * Header ) = 0;
      virtual HRESULT __stdcall put_LeftHeader (
        /*[in]*/ BSTR Header ) = 0;
      virtual HRESULT __stdcall get_CenterHeader (
        /*[out,retval]*/ BSTR * Header ) = 0;
      virtual HRESULT __stdcall put_CenterHeader (
        /*[in]*/ BSTR Header ) = 0;
      virtual HRESULT __stdcall get_RightHeader (
        /*[out,retval]*/ BSTR * Header ) = 0;
      virtual HRESULT __stdcall put_RightHeader (
        /*[in]*/ BSTR Header ) = 0;
      virtual HRESULT __stdcall SetHeader (
        /*[in]*/ BSTR Left,
        /*[in]*/ BSTR Center,
        /*[in]*/ BSTR Right,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_LeftFooter (
        /*[out,retval]*/ BSTR * Footer ) = 0;
      virtual HRESULT __stdcall put_LeftFooter (
        /*[in]*/ BSTR Footer ) = 0;
      virtual HRESULT __stdcall get_CenterFooter (
        /*[out,retval]*/ BSTR * Footer ) = 0;
      virtual HRESULT __stdcall put_CenterFooter (
        /*[in]*/ BSTR Footer ) = 0;
      virtual HRESULT __stdcall get_RightFooter (
        /*[out,retval]*/ BSTR * Footer ) = 0;
      virtual HRESULT __stdcall put_RightFooter (
        /*[in]*/ BSTR Footer ) = 0;
      virtual HRESULT __stdcall SetFooter (
        /*[in]*/ BSTR Left,
        /*[in]*/ BSTR Center,
        /*[in]*/ BSTR Right,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_HeaderTextFormat (
        /*[out,retval]*/ struct ITextFormat * * TextFormat ) = 0;
      virtual HRESULT __stdcall get_FooterTextFormat (
        /*[out,retval]*/ struct ITextFormat * * TextFormat ) = 0;
      virtual HRESULT __stdcall GetHeaderFooterString (
        /*[in]*/ long WhichOne,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall get_UsePageSetupOnSheets (
        /*[out,retval]*/ VARIANT_BOOL * UseSheet ) = 0;
      virtual HRESULT __stdcall put_UsePageSetupOnSheets (
        /*[in]*/ VARIANT_BOOL UseSheet ) = 0;
      virtual HRESULT __stdcall get_PrinterPaperSize (
        /*[out,retval]*/ long * Size ) = 0;
      virtual HRESULT __stdcall put_PrinterPaperSize (
        /*[in]*/ long Size ) = 0;
      virtual HRESULT __stdcall get_PrinterPaperLength (
        /*[out,retval]*/ long * Length ) = 0;
      virtual HRESULT __stdcall put_PrinterPaperLength (
        /*[in]*/ long Length ) = 0;
      virtual HRESULT __stdcall get_PrinterPaperWidth (
        /*[out,retval]*/ long * Width ) = 0;
      virtual HRESULT __stdcall put_PrinterPaperWidth (
        /*[in]*/ long Width ) = 0;
      virtual HRESULT __stdcall get_PrinterPaperSource (
        /*[out,retval]*/ long * Source ) = 0;
      virtual HRESULT __stdcall put_PrinterPaperSource (
        /*[in]*/ long Source ) = 0;
      virtual HRESULT __stdcall GetUseDefaultResolution (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetResolution (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetResolution (
        /*[in]*/ VARIANT_BOOL UseDefault,
        /*[in]*/ long DPI,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_HighQuality (
        /*[out,retval]*/ VARIANT_BOOL * Setting ) = 0;
      virtual HRESULT __stdcall put_HighQuality (
        /*[in]*/ VARIANT_BOOL Setting ) = 0;
      virtual HRESULT __stdcall get_DrawingColor (
        /*[out,retval]*/ long * Setting ) = 0;
      virtual HRESULT __stdcall put_DrawingColor (
        /*[in]*/ long Setting ) = 0;
};

struct __declspec(uuid("d5f6d2c9-79d6-4cc8-ad19-dff1aed88fe5"))
ISketchRelationManager : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetRelations (
        /*[in]*/ long Filter,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetRelationsCount (
        /*[in]*/ long Filter,
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetRelations (
        /*[in]*/ long Filter,
        /*[in]*/ long Count,
        /*[out,retval]*/ struct ISketchRelation * * PSketchRelationArr ) = 0;
      virtual HRESULT __stdcall AddRelation (
        /*[in]*/ VARIANT Entities,
        /*[in]*/ long RelationType,
        /*[out,retval]*/ struct ISketchRelation * * SketchRelation ) = 0;
      virtual HRESULT __stdcall IAddRelation (
        /*[in]*/ long NumEntities,
        /*[in]*/ IDispatch * * EntityArray,
        /*[in]*/ long RelationType,
        /*[out,retval]*/ struct ISketchRelation * * LpSketchRelation ) = 0;
      virtual HRESULT __stdcall DeleteAllRelations (
        /*[out,retval]*/ VARIANT_BOOL * ReturnValue ) = 0;
      virtual HRESULT __stdcall DeleteRelation (
        /*[in]*/ struct ISketchRelation * ThisRelation,
        /*[out,retval]*/ VARIANT_BOOL * ReturnValue ) = 0;
      virtual HRESULT __stdcall GetAllowedRelations (
        /*[in]*/ VARIANT Entities,
        /*[out,retval]*/ VARIANT * RelationTypes ) = 0;
      virtual HRESULT __stdcall IGetAllowedRelationsCount (
        /*[in]*/ long NumEntities,
        /*[in]*/ IDispatch * * EntityArray,
        /*[out,retval]*/ long * NumAllowedRelations ) = 0;
      virtual HRESULT __stdcall IGetAllowedRelations (
        /*[in]*/ long NumEntities,
        /*[in]*/ IDispatch * * EntityArray,
        /*[in]*/ long NumAllowedRelations,
        /*[out,retval]*/ long * RelationTypes ) = 0;
};

struct __declspec(uuid("83a33d75-27c5-11ce-bfd4-00400513bb57"))
IFeatMgrView : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetFeatMgrViewWnd (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetControl (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetControl (
        /*[out,retval]*/ IUnknown * * Retval ) = 0;
      virtual HRESULT __stdcall ActivateView (
        /*[out,retval]*/ long * PaneType ) = 0;
      virtual HRESULT __stdcall DeActivateView (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DeleteView (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetFeatMgrViewWndx64 (
        /*[out,retval]*/ __int64 * Retval ) = 0;
};

struct __declspec(uuid("83a33da5-27c5-11ce-bfd4-00400513bb57"))
IColorTable : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetNameAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetColorRefAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetStandardCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetColorRefAtIndex (
        /*[in]*/ long Index,
        /*[in]*/ long ColorRef,
        /*[in]*/ int ApplyTo ) = 0;
      virtual HRESULT __stdcall GetBasicColorCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetBasicColors (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetBasicColors (
        /*[in]*/ long ColorCount,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetCustomColorCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetCustomColors (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetCustomColors (
        /*[in]*/ long ColorCount,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetCustomColor (
        /*[in]*/ long Index,
        /*[in]*/ long ColorRef,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("83a33db7-27c5-11ce-bfd4-00400513bb57"))
IDetailingDefaults : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetAllValues (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetAllValues (
        /*[in]*/ long Count,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTextFormat (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetTextFormat (
        /*[out,retval]*/ struct ITextFormat * * Retval ) = 0;
      virtual HRESULT __stdcall SetTextFormat (
        /*[in]*/ IDispatch * TextFormat ) = 0;
      virtual HRESULT __stdcall ISetTextFormat (
        /*[in]*/ struct ITextFormat * TextFormat ) = 0;
      virtual HRESULT __stdcall GetDimensionTextFormat (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetDimensionTextFormat (
        /*[out,retval]*/ struct ITextFormat * * Retval ) = 0;
      virtual HRESULT __stdcall SetDimensionTextFormat (
        /*[in]*/ IDispatch * TextFormat ) = 0;
      virtual HRESULT __stdcall ISetDimensionTextFormat (
        /*[in]*/ struct ITextFormat * TextFormat ) = 0;
      virtual HRESULT __stdcall GetSectionTextFormat (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetSectionTextFormat (
        /*[out,retval]*/ struct ITextFormat * * Retval ) = 0;
      virtual HRESULT __stdcall SetSectionTextFormat (
        /*[in]*/ IDispatch * TextFormat ) = 0;
      virtual HRESULT __stdcall ISetSectionTextFormat (
        /*[in]*/ struct ITextFormat * TextFormat ) = 0;
      virtual HRESULT __stdcall GetDetailTextFormat (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetDetailTextFormat (
        /*[out,retval]*/ struct ITextFormat * * Retval ) = 0;
      virtual HRESULT __stdcall SetDetailTextFormat (
        /*[in]*/ IDispatch * TextFormat ) = 0;
      virtual HRESULT __stdcall ISetDetailTextFormat (
        /*[in]*/ struct ITextFormat * TextFormat ) = 0;
};

struct __declspec(uuid("04b7287c-f19d-11d2-b8e9-00c04f8ef738"))
ILayer : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall get_Color (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ int * Retval ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ int * Retval ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_Description (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall GetID (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall put_Color (
        /*[in]*/ long Retval ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ long Retval ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ long Retval ) = 0;
};

struct __declspec(uuid("75173e30-f19e-11d2-b8e9-00c04f8ef738"))
ILayerMgr : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AddLayer (
        /*[in]*/ BSTR NameIn,
        /*[in]*/ BSTR DescIn,
        /*[in]*/ long ColorIn,
        /*[in]*/ long StyleIn,
        /*[in]*/ long WidthIn,
        /*[out,retval]*/ int * Retval ) = 0;
      virtual HRESULT __stdcall SetCurrentLayer (
        /*[in]*/ BSTR NameIn,
        /*[out,retval]*/ int * Retval ) = 0;
      virtual HRESULT __stdcall GetCurrentLayer (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetLayer (
        /*[in]*/ BSTR NameIn,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetLayer (
        /*[in]*/ BSTR NameIn,
        /*[out,retval]*/ struct ILayer * * Retval ) = 0;
      virtual HRESULT __stdcall GetCount (
        /*[out,retval]*/ int * Retval ) = 0;
      virtual HRESULT __stdcall GetLayerList (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetLayerList (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetLayerById (
        /*[in]*/ short LayerId,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetLayerById (
        /*[in]*/ short LayerId,
        /*[out,retval]*/ struct ILayer * * Retval ) = 0;
      virtual HRESULT __stdcall DeleteLayer (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("ce1eaa88-25ad-11d3-ae91-00c04f683cba"))
IDesignTable : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetRowCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetColumnCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetHeaderText (
        /*[in]*/ long Col,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetEntryText (
        /*[in]*/ long Row,
        /*[in]*/ long Col,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall Attach (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Detach ( ) = 0;
      virtual HRESULT __stdcall GetEntryValue (
        /*[in]*/ long Row,
        /*[in]*/ long Col,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetTitle (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetTotalRowCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTotalColumnCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetVisibleRowCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetVisibleColumnCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetEntryText (
        /*[in]*/ long Row,
        /*[in]*/ long Col,
        /*[in]*/ BSTR TextIn ) = 0;
      virtual HRESULT __stdcall AddRow (
        /*[in]*/ VARIANT CellValues,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall UpdateModel (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetStartRowNumber (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetStartColumnNumber (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetVisibleTopRowNumber (
        /*[out,retval]*/ long * TopRow ) = 0;
      virtual HRESULT __stdcall GetVisibleLeftColumnNumber (
        /*[out,retval]*/ long * LeftColumn ) = 0;
      virtual HRESULT __stdcall SetRowChanged (
        /*[in]*/ long RowIndex ) = 0;
      virtual HRESULT __stdcall get_RowHidden (
        /*[in]*/ long Row,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_ColumnHidden (
        /*[in]*/ long Col,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall EditFeature ( ) = 0;
      virtual HRESULT __stdcall EditTable ( ) = 0;
      virtual HRESULT __stdcall UpdateFeature (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall UpdateTable (
        /*[in]*/ long Type,
        /*[in]*/ VARIANT_BOOL Close,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_SourceType (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall put_SourceType (
        /*[in]*/ long Retval ) = 0;
      virtual HRESULT __stdcall get_Updatable (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_Updatable (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_LinkToFile (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_LinkToFile (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_AutoAddNewParams (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_AutoAddNewParams (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_AutoAddNewConfigs (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_AutoAddNewConfigs (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_Warn (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_Warn (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_FileName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_FileName (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall SaveAsExcelFile (
        /*[in]*/ BSTR Value,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsActive (
        /*[out,retval]*/ VARIANT_BOOL * Active ) = 0;
      virtual HRESULT __stdcall SetEntryValue (
        /*[in]*/ long Row,
        /*[in]*/ long Col,
        /*[in]*/ VARIANT_BOOL IsText,
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall EditTable2 (
        /*[in]*/ VARIANT_BOOL NewWindow,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall get_Worksheet (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall get_LastError (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall put_LastError (
        /*[in]*/ long Retval ) = 0;
};

struct __declspec(uuid("e981b4fa-7e86-11d4-aef2-00c04f603faf"))
IPropertyManagerPage : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall SetButtons (
        /*[in]*/ long ButtonTypes,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall SetGroupRange (
        /*[in]*/ long FirstGroupId,
        /*[in]*/ long FirstCheckId,
        /*[in]*/ long GroupCount,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall Show (
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall GetDialogWindow (
        /*[in,out]*/ long * Status,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetGroupVisible (
        /*[in]*/ long GroupID,
        /*[in,out]*/ long * Status,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetGroupVisible (
        /*[in]*/ long GroupID,
        /*[in]*/ VARIANT_BOOL Visible,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall GetGroupExpanded (
        /*[in]*/ long GroupID,
        /*[in,out]*/ long * Status,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetGroupExpanded (
        /*[in]*/ long GroupID,
        /*[in]*/ VARIANT_BOOL Expanded,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall get_Pinned (
        /*[out,retval]*/ VARIANT_BOOL * Pinned ) = 0;
      virtual HRESULT __stdcall put_Pinned (
        /*[in]*/ VARIANT_BOOL Pinned ) = 0;
      virtual HRESULT __stdcall GetAllowMultiSelect (
        /*[in,out]*/ long * Status,
        /*[out,retval]*/ VARIANT_BOOL * Allow ) = 0;
      virtual HRESULT __stdcall SetAllowMultiSelect (
        /*[in]*/ VARIANT_BOOL Allow,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall GetDialogWindowx64 (
        /*[in,out]*/ long * Status,
        /*[out,retval]*/ __int64 * Retval ) = 0;
};

struct __declspec(uuid("82071121-8b32-4f51-8983-9304756503e7"))
IUserUnit : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_FractionBase (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_FractionBase (
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall get_FractionValue (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_FractionValue (
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall get_RoundToFraction (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_RoundToFraction (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall get_SignificantDigits (
        /*[out,retval]*/ long * NumDigits ) = 0;
      virtual HRESULT __stdcall put_SignificantDigits (
        /*[in]*/ long NumDigits ) = 0;
      virtual HRESULT __stdcall get_DisplayLeadingZero (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_DisplayLeadingZero (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall get_PadZero (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_PadZero (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall get_SeparatorCharacter (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_SeparatorCharacter (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall GetConversionFactor (
        /*[out,retval]*/ double * ConversionFactor ) = 0;
      virtual HRESULT __stdcall IsMetric (
        /*[out,retval]*/ VARIANT_BOOL * Metric ) = 0;
      virtual HRESULT __stdcall GetFullUnitName (
        /*[in]*/ VARIANT_BOOL Plural,
        /*[out,retval]*/ BSTR * UnitName ) = 0;
      virtual HRESULT __stdcall ConvertToUserUnit (
        /*[in]*/ double ValueIn,
        /*[in]*/ VARIANT_BOOL ShowUsernames,
        /*[in]*/ VARIANT_BOOL NameInEnglish,
        /*[out,retval]*/ BSTR * OutputString ) = 0;
      virtual HRESULT __stdcall ConvertToSystemValue (
        /*[in]*/ BSTR UnitText,
        /*[in,out]*/ double * ComputedValue,
        /*[out,retval]*/ VARIANT_BOOL * Status ) = 0;
      virtual HRESULT __stdcall ConvertDoubleToSystemValue (
        /*[in]*/ double UserValue,
        /*[out,retval]*/ double * SystemValue ) = 0;
      virtual HRESULT __stdcall GetUnitsString (
        /*[in]*/ VARIANT_BOOL InEnglish,
        /*[out,retval]*/ BSTR * UnitString ) = 0;
      virtual HRESULT __stdcall get_UnitType (
        /*[out,retval]*/ long * UnitType ) = 0;
      virtual HRESULT __stdcall get_SpecificUnitType (
        /*[out,retval]*/ long * SpecificUnitType ) = 0;
      virtual HRESULT __stdcall put_SpecificUnitType (
        /*[in]*/ long SpecificUnitType ) = 0;
      virtual HRESULT __stdcall GetUserAngleTolerance (
        /*[out,retval]*/ double * AngleTolerance ) = 0;
};

struct __declspec(uuid("02272ce8-fe52-4b94-b120-6d1826fdbe32"))
IEquationMgr : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Suppression (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_Suppression (
        /*[in]*/ long Index,
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ long Index,
        /*[in]*/ BSTR Equation,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[in]*/ long Index,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall ChangeSuppressionForAllConfigurations (
        /*[in]*/ long Index,
        /*[in]*/ VARIANT_BOOL State,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall ChangeSuppressionForConfiguration (
        /*[in]*/ long Index,
        /*[in]*/ BSTR ConfigName,
        /*[in]*/ VARIANT_BOOL State,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_Equation (
        /*[in]*/ long Index,
        /*[out,retval]*/ BSTR * Equation ) = 0;
      virtual HRESULT __stdcall put_Equation (
        /*[in]*/ long Index,
        /*[in]*/ BSTR Equation ) = 0;
      virtual HRESULT __stdcall GetCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall get_AngularEquationUnits (
        /*[out,retval]*/ long * Units ) = 0;
      virtual HRESULT __stdcall put_AngularEquationUnits (
        /*[in]*/ long Units ) = 0;
};

struct __declspec(uuid("442b6462-0350-4f5c-a168-3f753f6ca792"))
ICustomBendAllowance : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall get_BendTableFile (
        /*[out,retval]*/ BSTR * BendTableFile ) = 0;
      virtual HRESULT __stdcall put_BendTableFile (
        /*[in]*/ BSTR BendTableFile ) = 0;
      virtual HRESULT __stdcall get_KFactor (
        /*[out,retval]*/ double * KFactor ) = 0;
      virtual HRESULT __stdcall put_KFactor (
        /*[in]*/ double KFactor ) = 0;
      virtual HRESULT __stdcall get_BendAllowance (
        /*[out,retval]*/ double * BendAllowance ) = 0;
      virtual HRESULT __stdcall put_BendAllowance (
        /*[in]*/ double BendAllowance ) = 0;
      virtual HRESULT __stdcall get_BendDeduction (
        /*[out,retval]*/ double * BendDeduction ) = 0;
      virtual HRESULT __stdcall put_BendDeduction (
        /*[in]*/ double BendDeduction ) = 0;
};

struct __declspec(uuid("3aea5179-14d5-407c-b669-48e9209043d2"))
ITreeControlItem : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetRoot (
        /*[out,retval]*/ struct ITreeControlItem * * Retval ) = 0;
      virtual HRESULT __stdcall GetParent (
        /*[out,retval]*/ struct ITreeControlItem * * Retval ) = 0;
      virtual HRESULT __stdcall GetNext (
        /*[out,retval]*/ struct ITreeControlItem * * Retval ) = 0;
      virtual HRESULT __stdcall GetPrevious (
        /*[out,retval]*/ struct ITreeControlItem * * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstChild (
        /*[out,retval]*/ struct ITreeControlItem * * Retval ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall get_Object (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall get_IsRoot (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("b0bad545-4dd8-4d2a-8dde-438124126932"))
ISwOLEObject : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_FileName (
        /*[out,retval]*/ BSTR * LinkedFileName ) = 0;
      virtual HRESULT __stdcall get_Clsid (
        /*[out,retval]*/ BSTR * ClassID ) = 0;
      virtual HRESULT __stdcall get_IsLinked (
        /*[out,retval]*/ VARIANT_BOOL * VbIsLinked ) = 0;
      virtual HRESULT __stdcall get_BufferSize (
        /*[out,retval]*/ long * OleBufferSize ) = 0;
      virtual HRESULT __stdcall get_Buffer (
        /*[out,retval]*/ VARIANT * VbOleData ) = 0;
      virtual HRESULT __stdcall IGetBuffer (
        /*[in]*/ long OleBufferSize,
        /*[out]*/ unsigned char * BOleData ) = 0;
      virtual HRESULT __stdcall get_Aspect (
        /*[out,retval]*/ long * ViewingAspect ) = 0;
      virtual HRESULT __stdcall get_Boundaries (
        /*[out,retval]*/ VARIANT * VbBoundary ) = 0;
      virtual HRESULT __stdcall put_Boundaries (
        /*[in]*/ VARIANT VbBoundary ) = 0;
      virtual HRESULT __stdcall IGetBoundaries (
        /*[out]*/ double * Boundary ) = 0;
      virtual HRESULT __stdcall ISetBoundaries (
        /*[in]*/ double * Boundary ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT_BOOL Append,
        /*[out,retval]*/ VARIANT_BOOL * VbSelectResult ) = 0;
      virtual HRESULT __stdcall Refresh ( ) = 0;
      virtual HRESULT __stdcall SetActive (
        /*[in]*/ VARIANT_BOOL Active,
        /*[out,retval]*/ IDispatch * * LpDisp ) = 0;
};

struct __declspec(uuid("41bd2a2f-bf57-49d6-9a56-d46b82da04c8"))
IPrint3DDialog : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall UpdateDialog (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("151497a7-8b45-4a2c-9da1-cad54eef5855"))
IMeasure : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Calculate (
        /*[in]*/ VARIANT Entities,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_X (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_Y (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_Z (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_DeltaX (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_DeltaY (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_DeltaZ (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_Length (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_Area (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_Perimeter (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_Distance (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_NormalDistance (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_Angle (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_TotalArea (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_TotalLength (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_CenterDistance (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_Radius (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_Diameter (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_ArcLength (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_ChordLength (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_IsParallel (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_IsPerpendicular (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_IsIntersect (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_Normal (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_Projection (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_ArcOption (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall put_ArcOption (
        /*[in]*/ long Retval ) = 0;
      virtual HRESULT __stdcall get_ProjectionOption (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall put_ProjectionOption (
        /*[in]*/ long Retval ) = 0;
      virtual HRESULT __stdcall SetProjectionEntity (
        /*[in]*/ IDispatch * Entity,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_SpericalCenterDistance (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_IsConcentricSpheres (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_LengthDecimalPlaces (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall put_LengthDecimalPlaces (
        /*[in]*/ long Retval ) = 0;
      virtual HRESULT __stdcall get_AngleDecimalPlaces (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall put_AngleDecimalPlaces (
        /*[in]*/ long Retval ) = 0;
};

struct __declspec(uuid("41607756-57a8-4e03-9bac-2444b5fabc9d"))
ISplineHandle : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SplinePointNumber (
        /*[out,retval]*/ long * Number ) = 0;
      virtual HRESULT __stdcall get_X (
        /*[out,retval]*/ double * XPos ) = 0;
      virtual HRESULT __stdcall put_X (
        /*[in]*/ double XPos ) = 0;
      virtual HRESULT __stdcall get_Y (
        /*[out,retval]*/ double * YPos ) = 0;
      virtual HRESULT __stdcall put_Y (
        /*[in]*/ double YPos ) = 0;
      virtual HRESULT __stdcall get_Z (
        /*[out,retval]*/ double * ZPos ) = 0;
      virtual HRESULT __stdcall put_Z (
        /*[in]*/ double ZPos ) = 0;
      virtual HRESULT __stdcall get_TangentMagnitude (
        /*[in]*/ long WhichDirection,
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_TangentMagnitude (
        /*[in]*/ long WhichDirection,
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_TangentRadialDirection (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_TangentRadialDirection (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_TangentPolarDirection (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_TangentPolarDirection (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_Curvature (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_Curvature (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_RadiusOfCurvature (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_RadiusOfCurvature (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_TangentDriving (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_TangentDriving (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
      virtual HRESULT __stdcall get_CurvatureControlled (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_CurvatureControlled (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT_BOOL AppendFlag,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_Parameter (
        /*[out,retval]*/ double * Param ) = 0;
      virtual HRESULT __stdcall get_Editable (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_Editable (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("49077ce2-d642-464c-bc16-fc45c5e3ac86"))
IFaceDecalProperties : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TextureTranslationX (
        /*[out,retval]*/ double * TransX ) = 0;
      virtual HRESULT __stdcall get_TextureTranslationY (
        /*[out,retval]*/ double * TransY ) = 0;
      virtual HRESULT __stdcall get_TextureUScale (
        /*[out,retval]*/ double * UScale ) = 0;
      virtual HRESULT __stdcall get_TextureVScale (
        /*[out,retval]*/ double * VScale ) = 0;
      virtual HRESULT __stdcall get_TextureAngle (
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall get_TextureFilename (
        /*[out,retval]*/ BSTR * TextureFilename ) = 0;
      virtual HRESULT __stdcall get_TextureFilenameID (
        /*[out,retval]*/ long * TextureFilenameID ) = 0;
      virtual HRESULT __stdcall get_TextureRenderMode (
        /*[out,retval]*/ long * TextureRenderMode ) = 0;
      virtual HRESULT __stdcall get_TextureTranslationU (
        /*[out,retval]*/ double * TransU ) = 0;
      virtual HRESULT __stdcall get_TextureTranslationV (
        /*[out,retval]*/ double * TransV ) = 0;
      virtual HRESULT __stdcall get_TextureAngleUV (
        /*[out,retval]*/ double * AngleUV ) = 0;
      virtual HRESULT __stdcall get_TextureMirrored (
        /*[out,retval]*/ VARIANT_BOOL * Mirrored ) = 0;
      virtual HRESULT __stdcall get_TextureMapID (
        /*[out,retval]*/ long * MapId ) = 0;
      virtual HRESULT __stdcall get_TextureID (
        /*[out,retval]*/ long * TextureID ) = 0;
};

struct __declspec(uuid("66e0fcbd-16d4-4483-8731-db08f90218da"))
IMaterialVisualPropertiesData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AdvancedGraphics (
        /*[out,retval]*/ VARIANT_BOOL * Advanced ) = 0;
      virtual HRESULT __stdcall put_AdvancedGraphics (
        /*[in]*/ VARIANT_BOOL Advanced ) = 0;
      virtual HRESULT __stdcall get_RealView (
        /*[out,retval]*/ VARIANT_BOOL * RealView ) = 0;
      virtual HRESULT __stdcall put_RealView (
        /*[in]*/ VARIANT_BOOL RealView ) = 0;
      virtual HRESULT __stdcall get_Scale2 (
        /*[out,retval]*/ double * Scale ) = 0;
      virtual HRESULT __stdcall put_Scale2 (
        /*[in]*/ double Scale ) = 0;
      virtual HRESULT __stdcall get_Angle (
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall put_Angle (
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall get_BlendColor (
        /*[out,retval]*/ VARIANT_BOOL * Blend ) = 0;
      virtual HRESULT __stdcall put_BlendColor (
        /*[in]*/ VARIANT_BOOL Blend ) = 0;
      virtual HRESULT __stdcall get_ApplyMaterialColorToPart (
        /*[out,retval]*/ VARIANT_BOOL * Apply ) = 0;
      virtual HRESULT __stdcall put_ApplyMaterialColorToPart (
        /*[in]*/ VARIANT_BOOL Apply ) = 0;
      virtual HRESULT __stdcall get_ApplyMaterialHatchToSection (
        /*[out,retval]*/ VARIANT_BOOL * Apply ) = 0;
      virtual HRESULT __stdcall put_ApplyMaterialHatchToSection (
        /*[in]*/ VARIANT_BOOL Apply ) = 0;
};

struct __declspec(uuid("931f2702-3257-4372-bbcc-cbd4a7fbbc41"))
IStatusBarPane : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * Text ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR Text ) = 0;
};

struct __declspec(uuid("83a33d4e-27c5-11ce-bfd4-00400513bb57"))
IMember : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Dummy001 (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_Dummy001 (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall Dummy002 ( ) = 0;
      virtual HRESULT __stdcall Dummy007 ( ) = 0;
      virtual HRESULT __stdcall Dummy003 ( ) = 0;
      virtual HRESULT __stdcall Dummy004 ( ) = 0;
      virtual HRESULT __stdcall Dummy008 ( ) = 0;
      virtual HRESULT __stdcall Dummy005 ( ) = 0;
      virtual HRESULT __stdcall Dummy006 ( ) = 0;
      virtual HRESULT __stdcall Dummy009 ( ) = 0;
      virtual HRESULT __stdcall Dummy010 ( ) = 0;
      virtual HRESULT __stdcall Dummy011 ( ) = 0;
};

struct __declspec(uuid("4f50fa8d-bcf3-4395-b146-b5ae933affd5"))
IAnimation : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Duration (
        /*[out,retval]*/ double * Duration ) = 0;
      virtual HRESULT __stdcall get_Speed (
        /*[out,retval]*/ long * Speed ) = 0;
      virtual HRESULT __stdcall put_Speed (
        /*[in]*/ long Speed ) = 0;
      virtual HRESULT __stdcall get_PlayMode (
        /*[out,retval]*/ long * Mode ) = 0;
      virtual HRESULT __stdcall put_PlayMode (
        /*[in]*/ long Mode ) = 0;
      virtual HRESULT __stdcall Play (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Pause (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Stop (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Beginning (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall End (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Close (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("f40e5fa3-6c6a-4c23-a5af-628357ccee50"))
IAdvancedSelectionCriteria : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AddItem (
        /*[in]*/ BSTR Property,
        /*[in]*/ long Condition,
        /*[in]*/ BSTR Value,
        /*[in]*/ VARIANT_BOOL IsAnd,
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall DeleteItem (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT_BOOL * Status ) = 0;
      virtual HRESULT __stdcall SaveCriteria (
        /*[in]*/ BSTR CriteriaFileName,
        /*[out,retval]*/ VARIANT_BOOL * Status ) = 0;
      virtual HRESULT __stdcall LoadCriteria (
        /*[in]*/ BSTR CriteriaFileName,
        /*[out,retval]*/ VARIANT_BOOL * Status ) = 0;
      virtual HRESULT __stdcall GetItem (
        /*[in]*/ long Index,
        /*[out]*/ BSTR * Property,
        /*[out]*/ long * Condition,
        /*[out]*/ BSTR * Value,
        /*[out]*/ VARIANT_BOOL * IsAnd,
        /*[out,retval]*/ long * Rindex ) = 0;
      virtual HRESULT __stdcall GetItemCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall Select (
        /*[out,retval]*/ VARIANT_BOOL * Status ) = 0;
};

struct __declspec(uuid("83a33d78-27c5-11ce-bfd4-00400513bb57"))
IEnvironment : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetSymEdgeCounts (
        /*[in]*/ BSTR SymId,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetSymEdgeCounts (
        /*[in]*/ BSTR SymId,
        /*[out,retval]*/ short * Retval ) = 0;
      virtual HRESULT __stdcall GetSymLines (
        /*[in]*/ BSTR SymId,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetSymLines (
        /*[in]*/ BSTR SymId,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetSymArcs (
        /*[in]*/ BSTR SymId,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetSymArcs (
        /*[in]*/ BSTR SymId,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetSymCircles (
        /*[in]*/ BSTR SymId,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetSymCircles (
        /*[in]*/ BSTR SymId,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetSymTextPoints (
        /*[in]*/ BSTR SymId,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetSymTextPoints (
        /*[in]*/ BSTR SymId,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetSymText (
        /*[in]*/ BSTR SymId,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetSymTriangles (
        /*[in]*/ BSTR SymId,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetSymTriangles (
        /*[in]*/ BSTR SymId,
        /*[out,retval]*/ double * Retval ) = 0;
};

struct __declspec(uuid("edbba0e9-b701-419e-a4ae-3409dbf12d40"))
ITaskpaneView : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetTaskpaneViewWnd (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetControl (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetControl (
        /*[out,retval]*/ IUnknown * * Retval ) = 0;
      virtual HRESULT __stdcall AddControl (
        /*[in]*/ BSTR ClassName,
        /*[in]*/ BSTR LicKey,
        /*[out,retval]*/ IUnknown * * Retval ) = 0;
      virtual HRESULT __stdcall ShowView (
        /*[out,retval]*/ VARIANT_BOOL * Retva ) = 0;
      virtual HRESULT __stdcall HideView (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DeleteView (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("2a586331-a56d-44c9-aa32-2868a96f044d"))
IPtnrPMPage : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall SetButtons (
        /*[in]*/ long ButtonTypes,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall SetGroupRange (
        /*[in]*/ long FirstGroupId,
        /*[in]*/ long FirstCheckId,
        /*[in]*/ long GroupCount,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall Show (
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall GetDialogWindow (
        /*[in,out]*/ long * Status,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetGroupVisible (
        /*[in]*/ long GroupID,
        /*[in,out]*/ long * Status,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetGroupVisible (
        /*[in]*/ long GroupID,
        /*[in]*/ VARIANT_BOOL Visible,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall GetGroupExpanded (
        /*[in]*/ long GroupID,
        /*[in,out]*/ long * Status,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetGroupExpanded (
        /*[in]*/ long GroupID,
        /*[in]*/ VARIANT_BOOL Expanded,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall SetToolTips (
        /*[in]*/ long ControlAndToolTipCount,
        /*[in]*/ long * ControlAndToolTips,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall RecalculateVerticalSpacing (
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall ShowControl (
        /*[in]*/ long ControlID,
        /*[in]*/ long DividerID,
        /*[in]*/ VARIANT_BOOL Show,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall AddPage (
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall CreatePage (
        /*[in]*/ long HHandle,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall IsPageActive (
        /*[out]*/ VARIANT_BOOL * Active,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall SetControlTip (
        /*[in]*/ long ControlID,
        /*[in]*/ BSTR TipString,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall GetControlTip (
        /*[in]*/ long ControlID,
        /*[out]*/ BSTR * TipString,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall SwitchPage (
        /*[in]*/ long PageId,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall GetTotalNumberOfPages (
        /*[out]*/ long * NumberOfPages,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall GetPageIndex (
        /*[out]*/ long * PageIndex,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall GetPageNumber (
        /*[out]*/ long * PageNumber,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall SetPageNumber (
        /*[in]*/ long PageNumber,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall GetCurrentPageNumber (
        /*[out]*/ long * PageNumber,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall SetButtonEnabled (
        /*[in]*/ long ButtonType,
        /*[in]*/ VARIANT_BOOL BEnabled,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall Redraw (
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall GetDialogWindowx64 (
        /*[in,out]*/ long * Status,
        /*[out,retval]*/ __int64 * Retval ) = 0;
      virtual HRESULT __stdcall SetAllowProgressiveRender (
        /*[in]*/ VARIANT_BOOL Allow,
        /*[out,retval]*/ long * Status ) = 0;
};

struct __declspec(uuid("ff545450-b559-400d-964c-a3811f209148"))
ICommandGroup : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AddCommandItem (
        /*[in]*/ BSTR Name,
        /*[in]*/ long Position,
        /*[in]*/ BSTR HintString,
        /*[in]*/ BSTR ToolTip,
        /*[in]*/ long ImageListIndex,
        /*[in]*/ BSTR CallbackFunction,
        /*[in]*/ BSTR EnableMethod,
        /*[in]*/ long UserID,
        /*[out,retval]*/ long * CmdIndex ) = 0;
      virtual HRESULT __stdcall AddSpacer (
        /*[in]*/ long Position,
        /*[out,retval]*/ long * CmdIndex ) = 0;
      virtual HRESULT __stdcall get_NumberOfGroupItems (
        /*[out,retval]*/ long * NumGroups ) = 0;
      virtual HRESULT __stdcall Activate (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_LargeMainIcon (
        /*[out,retval]*/ BSTR * LargeMainIcon ) = 0;
      virtual HRESULT __stdcall put_LargeMainIcon (
        /*[in]*/ BSTR LargeMainIcon ) = 0;
      virtual HRESULT __stdcall get_SmallMainIcon (
        /*[out,retval]*/ BSTR * SmallMainIcon ) = 0;
      virtual HRESULT __stdcall put_SmallMainIcon (
        /*[in]*/ BSTR SmallMainIcon ) = 0;
      virtual HRESULT __stdcall get_LargeIconList (
        /*[out,retval]*/ BSTR * LargeIconList ) = 0;
      virtual HRESULT __stdcall put_LargeIconList (
        /*[in]*/ BSTR LargeIconList ) = 0;
      virtual HRESULT __stdcall get_SmallIconList (
        /*[out,retval]*/ BSTR * SmallIconList ) = 0;
      virtual HRESULT __stdcall put_SmallIconList (
        /*[in]*/ BSTR SmallIconList ) = 0;
      virtual HRESULT __stdcall get_ShowInDocumentType (
        /*[out,retval]*/ long * ShowInDocumentType ) = 0;
      virtual HRESULT __stdcall put_ShowInDocumentType (
        /*[in]*/ long ShowInDocumentType ) = 0;
      virtual HRESULT __stdcall get_SelectType (
        /*[out,retval]*/ long * SelectType ) = 0;
      virtual HRESULT __stdcall put_SelectType (
        /*[in]*/ long SelectType ) = 0;
      virtual HRESULT __stdcall get_DockingState (
        /*[out,retval]*/ long * DockingState ) = 0;
      virtual HRESULT __stdcall put_CustomNames (
        /*[in]*/ BSTR CustomNames ) = 0;
      virtual HRESULT __stdcall get_CustomNames (
        /*[out,retval]*/ BSTR * CustomNames ) = 0;
      virtual HRESULT __stdcall get_HasToolbar (
        /*[out,retval]*/ VARIANT_BOOL * HasToolbar ) = 0;
      virtual HRESULT __stdcall put_HasToolbar (
        /*[in]*/ VARIANT_BOOL HasToolbar ) = 0;
      virtual HRESULT __stdcall get_HasMenu (
        /*[out,retval]*/ VARIANT_BOOL * HasMenu ) = 0;
      virtual HRESULT __stdcall put_HasMenu (
        /*[in]*/ VARIANT_BOOL HasMenu ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_ToolbarId (
        /*[out,retval]*/ long * ID ) = 0;
      virtual HRESULT __stdcall SetToolbarVisibility (
        /*[in]*/ VARIANT_BOOL Visible,
        /*[in]*/ long Mask ) = 0;
      virtual HRESULT __stdcall put_DockingState (
        /*[in]*/ long DockingState ) = 0;
      virtual HRESULT __stdcall AddCommandItem2 (
        /*[in]*/ BSTR Name,
        /*[in]*/ long Position,
        /*[in]*/ BSTR HintString,
        /*[in]*/ BSTR ToolTip,
        /*[in]*/ long ImageListIndex,
        /*[in]*/ BSTR CallbackFunction,
        /*[in]*/ BSTR EnableMethod,
        /*[in]*/ long UserID,
        /*[in]*/ long MenuTBOption,
        /*[out,retval]*/ long * CmdIndex ) = 0;
      virtual HRESULT __stdcall AddSpacer2 (
        /*[in]*/ long Position,
        /*[in]*/ long MenuTBOption,
        /*[out,retval]*/ long * CmdIndex ) = 0;
      virtual HRESULT __stdcall get_CommandID (
        /*[in]*/ long CommandIndex,
        /*[out,retval]*/ long * CommandID ) = 0;
      virtual HRESULT __stdcall get_MenuPosition (
        /*[in]*/ long Context,
        /*[out,retval]*/ long * Position ) = 0;
      virtual HRESULT __stdcall put_MenuPosition (
        /*[in]*/ long Context,
        /*[in]*/ long Position ) = 0;
      virtual HRESULT __stdcall GetToolbarVisibility (
        /*[in]*/ long SwContext,
        /*[out,retval]*/ VARIANT_BOOL * State ) = 0;
};

struct __declspec(uuid("1dbaab20-9626-4cb8-a275-c346ac425362"))
ICommandTabBox : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AddCommands (
        /*[in]*/ VARIANT CommandIDs,
        /*[in]*/ VARIANT TextDisplayStyles,
        /*[out,retval]*/ VARIANT_BOOL * Success ) = 0;
      virtual HRESULT __stdcall IAddCommands (
        /*[in]*/ long CommandIDCount,
        /*[in]*/ long * CommandIDs,
        /*[in]*/ long * TextDisplayStyles,
        /*[out,retval]*/ VARIANT_BOOL * Success ) = 0;
      virtual HRESULT __stdcall RemoveCommands (
        /*[in]*/ VARIANT CommandIDs,
        /*[out,retval]*/ VARIANT_BOOL * Success ) = 0;
      virtual HRESULT __stdcall IRemoveCommands (
        /*[in]*/ long CommandIDCount,
        /*[in]*/ long * CommandIDs,
        /*[out,retval]*/ VARIANT_BOOL * Success ) = 0;
};

struct __declspec(uuid("fc248e07-607d-4429-960b-e4ce20ab55ab"))
ICommandTab : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetCommandTabBoxCount (
        /*[out,retval]*/ long * CommandTabBoxCount ) = 0;
      virtual HRESULT __stdcall CommandTabBoxes (
        /*[out,retval]*/ VARIANT * CommandTabBoxes ) = 0;
      virtual HRESULT __stdcall IGetCommandTabBoxes (
        /*[in]*/ long TabBoxCount,
        /*[out,retval]*/ struct ICommandTabBox * * CommandTabBoxes ) = 0;
      virtual HRESULT __stdcall AddCommandTabBox (
        /*[out,retval]*/ struct ICommandTabBox * * CommandTabBox ) = 0;
      virtual HRESULT __stdcall RemoveCommandTabBox (
        /*[in]*/ struct ICommandTabBox * CommandTabBox ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * TabVisible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL TabVisible ) = 0;
      virtual HRESULT __stdcall get_Active (
        /*[out,retval]*/ VARIANT_BOOL * TabActive ) = 0;
      virtual HRESULT __stdcall put_Active (
        /*[in]*/ VARIANT_BOOL TabActive ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * TabName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR TabName ) = 0;
      virtual HRESULT __stdcall AddSeparator (
        /*[in]*/ struct ICommandTabBox * CommandTabBoxIn,
        /*[in]*/ long CommandID,
        /*[out,retval]*/ struct ICommandTabBox * * CommandTabBoxOut ) = 0;
};

struct __declspec(uuid("f61069cf-2e42-4ac4-a517-6a95b79e45ee"))
ICommandManager : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall CreateCommandGroup (
        /*[in]*/ long UserID,
        /*[in]*/ BSTR Title,
        /*[in]*/ BSTR ToolTip,
        /*[in]*/ BSTR Hint,
        /*[in]*/ long Position,
        /*[out,retval]*/ struct ICommandGroup * * LpGroup ) = 0;
      virtual HRESULT __stdcall RemoveCommandGroup (
        /*[in]*/ long UserID,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetCommandGroup (
        /*[in]*/ long UserID,
        /*[out,retval]*/ struct ICommandGroup * * LpGroup ) = 0;
      virtual HRESULT __stdcall get_NumberOfGroups (
        /*[out,retval]*/ long * NumGroups ) = 0;
      virtual HRESULT __stdcall IGetGroups (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct ICommandGroup * * * LpUnknown ) = 0;
      virtual HRESULT __stdcall GetGroups (
        /*[out,retval]*/ VARIANT * Groups ) = 0;
      virtual HRESULT __stdcall AddContextMenu (
        /*[in]*/ long UserID,
        /*[in]*/ BSTR Title,
        /*[out,retval]*/ struct ICommandGroup * * LpGroup ) = 0;
      virtual HRESULT __stdcall GetCommandTabCount (
        /*[in]*/ long DocumentType,
        /*[out,retval]*/ long * CommandTabCount ) = 0;
      virtual HRESULT __stdcall CommandTabs (
        /*[in]*/ long DocumentType,
        /*[out,retval]*/ VARIANT * CommandTabs ) = 0;
      virtual HRESULT __stdcall IGetCommandTabs (
        /*[in]*/ long DocumentType,
        /*[in]*/ long CommandTabCount,
        /*[out,retval]*/ struct ICommandTab * * CommandTabs ) = 0;
      virtual HRESULT __stdcall GetCommandTab (
        /*[in]*/ long DocumentType,
        /*[in]*/ BSTR TabName,
        /*[out,retval]*/ struct ICommandTab * * ExistingTab ) = 0;
      virtual HRESULT __stdcall AddCommandTab (
        /*[in]*/ long DocumentType,
        /*[in]*/ BSTR TabName,
        /*[out,retval]*/ struct ICommandTab * * TabCreated ) = 0;
      virtual HRESULT __stdcall RemoveCommandTab (
        /*[in]*/ struct ICommandTab * TabToRemove,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("01e97594-34eb-46bd-9036-518c1b352245"))
IUserProgressBar : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Start (
        /*[in]*/ long LowerBound,
        /*[in]*/ long UpperBound,
        /*[in]*/ BSTR ProgressBarTitle,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall UpdateProgress (
        /*[in]*/ long Position,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall UpdateTitle (
        /*[in]*/ BSTR ProgressBarTitle,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall End (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("338d2790-a47f-45bc-aa03-e70b711ca811"))
IJournalManager : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall RunCommand (
        /*[in]*/ long CommandID,
        /*[in]*/ BSTR NewTitle,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall RecordDialogControl (
        /*[in]*/ BSTR DialogId,
        /*[in]*/ BSTR ResourceID ) = 0;
      virtual HRESULT __stdcall RecordDialogControlText (
        /*[in]*/ BSTR DialogId,
        /*[in]*/ BSTR ResourceID,
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall RecordDialogButtonState (
        /*[in]*/ BSTR DialogId,
        /*[in]*/ BSTR ResourceID,
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall SetKeyBoardState (
        /*[in]*/ BSTR KeyState ) = 0;
      virtual HRESULT __stdcall ImportSwSettings (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ExportSwSettings (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ClickDialogControl (
        /*[in]*/ BSTR DialogId,
        /*[in]*/ BSTR ResourceID ) = 0;
      virtual HRESULT __stdcall GetDialogControlText (
        /*[in]*/ BSTR DialogId,
        /*[in]*/ BSTR ResourceID,
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall SetDialogControlText (
        /*[in]*/ BSTR DialogId,
        /*[in]*/ BSTR ResourceID,
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall GetDialogButtonState (
        /*[in]*/ BSTR DialogId,
        /*[in]*/ BSTR ResourceID,
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall SetDialogButtonState (
        /*[in]*/ BSTR DialogId,
        /*[in]*/ BSTR ResourceID,
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall FileDrop (
        /*[in]*/ BSTR FilePath ) = 0;
      virtual HRESULT __stdcall WriteToJournalFile (
        /*[in]*/ BSTR JournalText ) = 0;
      virtual HRESULT __stdcall ShowJournalDialog (
        /*[in]*/ long ShowDlg ) = 0;
      virtual HRESULT __stdcall WriteJournalToMacro (
        /*[in]*/ BSTR MacroPath ) = 0;
      virtual HRESULT __stdcall RunXMLCommand (
        /*[in]*/ BSTR XML,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall MakeCOMCall (
        /*[in]*/ BSTR ClassID,
        /*[in]*/ BSTR MethodName ) = 0;
      virtual HRESULT __stdcall RecordCOMCall (
        /*[in]*/ BSTR ClassID,
        /*[in]*/ BSTR MethodName ) = 0;
};

struct __declspec(uuid("83a33d86-27c5-11ce-bfd4-00400513bb57"))
IRefAxis : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetRefAxisParams (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetRefAxisParams (
        /*[out,retval]*/ double * Retval ) = 0;
};

struct __declspec(uuid("83a33da7-27c5-11ce-bfd4-00400513bb57"))
ISWPropertySheet : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AddPage (
        /*[in]*/ long Page,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall RemovePage (
        /*[in]*/ long Page,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall AddActivePage (
        /*[in]*/ BSTR Title,
        /*[in]*/ BSTR ProgId,
        /*[in]*/ BSTR LicenseKey,
        /*[out,retval]*/ long * PageIndex ) = 0;
      virtual HRESULT __stdcall GetControl (
        /*[in]*/ long PageIndex,
        /*[out,retval]*/ IUnknown * * LpControl ) = 0;
};

struct __declspec(uuid("83a33dad-27c5-11ce-bfd4-00400513bb57"))
IRibFeatureData : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_IsTwoSided (
        /*[out,retval]*/ VARIANT_BOOL * TwoSided ) = 0;
      virtual HRESULT __stdcall put_IsTwoSided (
        /*[in]*/ VARIANT_BOOL TwoSided ) = 0;
      virtual HRESULT __stdcall get_ReverseThicknessDir (
        /*[out,retval]*/ VARIANT_BOOL * Reverse ) = 0;
      virtual HRESULT __stdcall put_ReverseThicknessDir (
        /*[in]*/ VARIANT_BOOL Reverse ) = 0;
      virtual HRESULT __stdcall get_Thickness (
        /*[out,retval]*/ double * Thickness ) = 0;
      virtual HRESULT __stdcall put_Thickness (
        /*[in]*/ double Thickness ) = 0;
      virtual HRESULT __stdcall get_RefSketchIndex (
        /*[out,retval]*/ int * Index ) = 0;
      virtual HRESULT __stdcall put_RefSketchIndex (
        /*[in]*/ int Index ) = 0;
      virtual HRESULT __stdcall NextReference (
        /*[out,retval]*/ int * Index ) = 0;
      virtual HRESULT __stdcall get_FlipSide (
        /*[out,retval]*/ VARIANT_BOOL * FlipSide ) = 0;
      virtual HRESULT __stdcall put_FlipSide (
        /*[in]*/ VARIANT_BOOL FlipSide ) = 0;
      virtual HRESULT __stdcall get_EnableDraft (
        /*[out,retval]*/ VARIANT_BOOL * EnableDraft ) = 0;
      virtual HRESULT __stdcall put_EnableDraft (
        /*[in]*/ VARIANT_BOOL EnableDraft ) = 0;
      virtual HRESULT __stdcall get_DraftOutward (
        /*[out,retval]*/ VARIANT_BOOL * DraftOutward ) = 0;
      virtual HRESULT __stdcall put_DraftOutward (
        /*[in]*/ VARIANT_BOOL DraftOutward ) = 0;
      virtual HRESULT __stdcall get_DraftAngle (
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall put_DraftAngle (
        /*[in]*/ double Angle ) = 0;
};

struct __declspec(uuid("83a33df1-27c5-11ce-bfd4-00400513bb57"))
ILightDialog : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AddSubDialog (
        /*[in]*/ long Page,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetLightId (
        /*[out,retval]*/ long * ID ) = 0;
};

struct __declspec(uuid("7271d7c7-acc9-11d3-b97f-001083029a97"))
IChamferFeatureData : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetEdgeChamferDistance (
        /*[in]*/ int Side,
        /*[out,retval]*/ double * Distance ) = 0;
      virtual HRESULT __stdcall SetEdgeChamferDistance (
        /*[in]*/ int Side,
        /*[in]*/ double Distance ) = 0;
      virtual HRESULT __stdcall GetVertexChamferDistance (
        /*[in]*/ int Side,
        /*[out,retval]*/ double * Distance ) = 0;
      virtual HRESULT __stdcall SetVertexChamferDistance (
        /*[in]*/ int Side,
        /*[in]*/ double Distance ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ int * Chamfer_type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ int Chamfer_type ) = 0;
      virtual HRESULT __stdcall get_EdgeChamferAngle (
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall put_EdgeChamferAngle (
        /*[in]*/ double Angle ) = 0;
};

struct __declspec(uuid("bc633ce1-b367-11d3-b981-001083029a97"))
IDraftFeatureData : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ int * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ int Type ) = 0;
      virtual HRESULT __stdcall get_Angle (
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall put_Angle (
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall get_ReverseDirection (
        /*[out,retval]*/ VARIANT_BOOL * ReverseDirection ) = 0;
      virtual HRESULT __stdcall put_ReverseDirection (
        /*[in]*/ VARIANT_BOOL ReverseDirection ) = 0;
};

struct __declspec(uuid("b7fff613-b735-11d3-b981-001083029a97"))
IRevolveFeatureData : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetRevolutionAngle (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall SetRevolutionAngle (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall GetWallThickness (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[out,retval]*/ double * WallThickness ) = 0;
      virtual HRESULT __stdcall SetWallThickness (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[in]*/ double WallThickness ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ int * RevolveCut_type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ int RevolveCut_type ) = 0;
      virtual HRESULT __stdcall get_ReverseDirection (
        /*[out,retval]*/ VARIANT_BOOL * ReverseDirection ) = 0;
      virtual HRESULT __stdcall put_ReverseDirection (
        /*[in]*/ VARIANT_BOOL ReverseDirection ) = 0;
      virtual HRESULT __stdcall IsBossFeature (
        /*[out,retval]*/ VARIANT_BOOL * IsBossFeature ) = 0;
      virtual HRESULT __stdcall IsThinFeature (
        /*[out,retval]*/ VARIANT_BOOL * IsThinFeature ) = 0;
};

struct __declspec(uuid("ebbd7b58-170d-11d5-af24-00c04f603faf"))
IPropertyManagerPageLabel : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * Text ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR Text ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ long * Style ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ long Style ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ short * Height ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ short Height ) = 0;
      virtual HRESULT __stdcall get_Bold (
        /*[in]*/ short StartChar,
        /*[in]*/ short EndChar,
        /*[out,retval]*/ VARIANT_BOOL * Bold ) = 0;
      virtual HRESULT __stdcall put_Bold (
        /*[in]*/ short StartChar,
        /*[in]*/ short EndChar,
        /*[in]*/ VARIANT_BOOL Bold ) = 0;
      virtual HRESULT __stdcall get_Italic (
        /*[in]*/ short StartChar,
        /*[in]*/ short EndChar,
        /*[out,retval]*/ VARIANT_BOOL * Italic ) = 0;
      virtual HRESULT __stdcall put_Italic (
        /*[in]*/ short StartChar,
        /*[in]*/ short EndChar,
        /*[in]*/ VARIANT_BOOL Italic ) = 0;
      virtual HRESULT __stdcall get_Underline (
        /*[in]*/ short StartChar,
        /*[in]*/ short EndChar,
        /*[out,retval]*/ long * Underline ) = 0;
      virtual HRESULT __stdcall put_Underline (
        /*[in]*/ short StartChar,
        /*[in]*/ short EndChar,
        /*[in]*/ long Underline ) = 0;
      virtual HRESULT __stdcall get_Font (
        /*[in]*/ short StartChar,
        /*[in]*/ short EndChar,
        /*[out,retval]*/ BSTR * FontName ) = 0;
      virtual HRESULT __stdcall put_Font (
        /*[in]*/ short StartChar,
        /*[in]*/ short EndChar,
        /*[in]*/ BSTR FontName ) = 0;
      virtual HRESULT __stdcall get_SizeRatio (
        /*[in]*/ short StartChar,
        /*[in]*/ short EndChar,
        /*[out,retval]*/ double * Size ) = 0;
      virtual HRESULT __stdcall put_SizeRatio (
        /*[in]*/ short StartChar,
        /*[in]*/ short EndChar,
        /*[in]*/ double Size ) = 0;
      virtual HRESULT __stdcall get_LineOffset (
        /*[in]*/ short StartChar,
        /*[in]*/ short EndChar,
        /*[out,retval]*/ double * Offset ) = 0;
      virtual HRESULT __stdcall put_LineOffset (
        /*[in]*/ short StartChar,
        /*[in]*/ short EndChar,
        /*[in]*/ double Offset ) = 0;
      virtual HRESULT __stdcall get_CharacterColor (
        /*[in]*/ short StartChar,
        /*[in]*/ short EndChar,
        /*[out,retval]*/ long * Color ) = 0;
      virtual HRESULT __stdcall put_CharacterColor (
        /*[in]*/ short StartChar,
        /*[in]*/ short EndChar,
        /*[in]*/ long Color ) = 0;
      virtual HRESULT __stdcall get_CharacterBackgroundColor (
        /*[in]*/ short StartChar,
        /*[in]*/ short EndChar,
        /*[out,retval]*/ long * Color ) = 0;
      virtual HRESULT __stdcall put_CharacterBackgroundColor (
        /*[in]*/ short StartChar,
        /*[in]*/ short EndChar,
        /*[in]*/ long Color ) = 0;
};

struct __declspec(uuid("ebbd7b5a-170d-11d5-af24-00c04f603faf"))
IPropertyManagerPageCheckbox : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Checked (
        /*[out,retval]*/ VARIANT_BOOL * Checked ) = 0;
      virtual HRESULT __stdcall put_Checked (
        /*[in]*/ VARIANT_BOOL Checked ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * Text ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR Text ) = 0;
};

struct __declspec(uuid("3a66c294-17ce-11d5-af24-00c04f603faf"))
IPropertyManagerPageButton : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * Text ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR Text ) = 0;
};

struct __declspec(uuid("3a66c296-17ce-11d5-af24-00c04f603faf"))
IPropertyManagerPageOption : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Checked (
        /*[out,retval]*/ VARIANT_BOOL * Checked ) = 0;
      virtual HRESULT __stdcall put_Checked (
        /*[in]*/ VARIANT_BOOL Checked ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * Text ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR Text ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ long * Style ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ long Style ) = 0;
};

struct __declspec(uuid("eb18a468-1800-11d5-af24-00c04f603faf"))
IPropertyManagerPageTextbox : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * Text ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR Text ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ long * Style ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ long Style ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ short * Height ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ short Height ) = 0;
};

struct __declspec(uuid("0bd2ba62-18c5-11d5-af24-00c04f603faf"))
IPropertyManagerPageCombobox : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AddItems (
        /*[in]*/ VARIANT Texts ) = 0;
      virtual HRESULT __stdcall IAddItems (
        /*[in]*/ short TextCount,
        /*[in]*/ BSTR * Texts ) = 0;
      virtual HRESULT __stdcall Clear ( ) = 0;
      virtual HRESULT __stdcall get_CurrentSelection (
        /*[out,retval]*/ short * Item ) = 0;
      virtual HRESULT __stdcall put_CurrentSelection (
        /*[in]*/ short Item ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ short * Height ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ short Height ) = 0;
      virtual HRESULT __stdcall get_ItemText (
        /*[in]*/ short Item,
        /*[out,retval]*/ BSTR * Text ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ long * Style ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ long Style ) = 0;
      virtual HRESULT __stdcall get_EditText (
        /*[out,retval]*/ BSTR * Text ) = 0;
      virtual HRESULT __stdcall put_EditText (
        /*[in]*/ BSTR Text ) = 0;
      virtual HRESULT __stdcall InsertItem (
        /*[in]*/ short Item,
        /*[in]*/ BSTR Text,
        /*[out,retval]*/ short * Retval ) = 0;
      virtual HRESULT __stdcall DeleteItem (
        /*[in]*/ short Item,
        /*[out,retval]*/ short * Retval ) = 0;
};

struct __declspec(uuid("ff956369-ae71-4643-afa8-83d7548f758a"))
IPropertyManagerPageActiveX : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ short * Height ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ short Height ) = 0;
      virtual HRESULT __stdcall SetClass (
        /*[in]*/ BSTR ClassID,
        /*[in]*/ BSTR LicenseKey,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetControl (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetControl (
        /*[out,retval]*/ IUnknown * * Retval ) = 0;
};

struct __declspec(uuid("e508ce7d-0439-4c3d-a61f-a7c9ecdc78bd"))
IPropertyManagerPageBitmapButton : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Checked (
        /*[out,retval]*/ VARIANT_BOOL * Checked ) = 0;
      virtual HRESULT __stdcall put_Checked (
        /*[in]*/ VARIANT_BOOL Checked ) = 0;
      virtual HRESULT __stdcall get_IsCheckable (
        /*[out,retval]*/ VARIANT_BOOL * Checkable ) = 0;
      virtual HRESULT __stdcall put_IsCheckable (
        /*[in]*/ VARIANT_BOOL Checkable ) = 0;
      virtual HRESULT __stdcall SetBitmaps (
        /*[in]*/ long ModuleHandle,
        /*[in]*/ long BitmapUp,
        /*[in]*/ long BitmapDown,
        /*[in]*/ long BitmapDisabled,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetStandardBitmaps (
        /*[in]*/ long Bitmap,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetBitmapsByName (
        /*[in]*/ BSTR BitmapUp,
        /*[in]*/ BSTR BitmapDown,
        /*[in]*/ BSTR BitmapDisabled,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetBitmapsByName2 (
        /*[in]*/ BSTR BitmapOrig,
        /*[in]*/ BSTR BitmapMaskOrig,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("c11527fa-e833-4453-80dd-229f6bacc5d9"))
IFreePointCurveFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_PointArray (
        /*[out,retval]*/ VARIANT * ArrayOut ) = 0;
      virtual HRESULT __stdcall put_PointArray (
        /*[in]*/ VARIANT ArrayOut ) = 0;
      virtual HRESULT __stdcall GetPointCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetPointArray (
        /*[out,retval]*/ double * ArrayOut ) = 0;
      virtual HRESULT __stdcall ISetPointArray (
        /*[in]*/ long FeatCount,
        /*[in]*/ double * ArrayDataIn ) = 0;
      virtual HRESULT __stdcall SavePointsToFile (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall LoadPointsFromFile (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("70e634ee-890a-421f-abce-5208a563423c"))
IHelixFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DefinedBy (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_DefinedBy (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * Ht ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double Ht ) = 0;
      virtual HRESULT __stdcall get_Pitch (
        /*[out,retval]*/ double * Pitch ) = 0;
      virtual HRESULT __stdcall put_Pitch (
        /*[in]*/ double Pitch ) = 0;
      virtual HRESULT __stdcall get_Revolution (
        /*[out,retval]*/ double * Rev ) = 0;
      virtual HRESULT __stdcall put_Revolution (
        /*[in]*/ double Rev ) = 0;
      virtual HRESULT __stdcall get_StartingAngle (
        /*[out,retval]*/ double * Ang ) = 0;
      virtual HRESULT __stdcall put_StartingAngle (
        /*[in]*/ double Ang ) = 0;
      virtual HRESULT __stdcall get_ReverseDirection (
        /*[out,retval]*/ VARIANT_BOOL * Dir ) = 0;
      virtual HRESULT __stdcall put_ReverseDirection (
        /*[in]*/ VARIANT_BOOL Dir ) = 0;
      virtual HRESULT __stdcall get_Clockwise (
        /*[out,retval]*/ VARIANT_BOOL * Dir ) = 0;
      virtual HRESULT __stdcall put_Clockwise (
        /*[in]*/ VARIANT_BOOL Dir ) = 0;
      virtual HRESULT __stdcall get_Taper (
        /*[out,retval]*/ VARIANT_BOOL * Taper ) = 0;
      virtual HRESULT __stdcall put_Taper (
        /*[in]*/ VARIANT_BOOL Taper ) = 0;
      virtual HRESULT __stdcall get_TaperAngle (
        /*[out,retval]*/ double * Ang ) = 0;
      virtual HRESULT __stdcall put_TaperAngle (
        /*[in]*/ double Ang ) = 0;
      virtual HRESULT __stdcall get_TaperOutward (
        /*[out,retval]*/ VARIANT_BOOL * Outward ) = 0;
      virtual HRESULT __stdcall put_TaperOutward (
        /*[in]*/ VARIANT_BOOL Outward ) = 0;
};

struct __declspec(uuid("ccb5966e-03d5-4169-a303-ad49265a7b36"))
IEdgePoint : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ double * EndVal ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ double EndVal ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT_BOOL BAppend,
        /*[in]*/ long SelMark,
        /*[out,retval]*/ VARIANT_BOOL * BRet ) = 0;
      virtual HRESULT __stdcall GetPointCoordinates (
        /*[out]*/ double * X,
        /*[out]*/ double * Y,
        /*[out]*/ double * Z ) = 0;
      virtual HRESULT __stdcall get_Entity (
        /*[out,retval]*/ IDispatch * * Ent ) = 0;
      virtual HRESULT __stdcall put_Entity (
        /*[in]*/ IDispatch * Ent ) = 0;
};

struct __declspec(uuid("51cb1551-09a0-408f-b911-dafe792debfa"))
ISimulationGravityFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DirectionReference (
        /*[out,retval]*/ IDispatch * * PDirDisp ) = 0;
      virtual HRESULT __stdcall put_DirectionReference (
        /*[in]*/ IDispatch * PDirDisp ) = 0;
      virtual HRESULT __stdcall get_ReverseDirection (
        /*[out,retval]*/ VARIANT_BOOL * BRev ) = 0;
      virtual HRESULT __stdcall put_ReverseDirection (
        /*[in]*/ VARIANT_BOOL BRev ) = 0;
      virtual HRESULT __stdcall get_Strength (
        /*[out,retval]*/ double * Strength ) = 0;
      virtual HRESULT __stdcall put_Strength (
        /*[in]*/ double Strength ) = 0;
      virtual HRESULT __stdcall get_Axis (
        /*[out,retval]*/ long * Name ) = 0;
      virtual HRESULT __stdcall put_Axis (
        /*[in]*/ long Name ) = 0;
};

struct __declspec(uuid("3c9c2ba4-b021-4bb8-a992-500575b08e72"))
ISimulationLinearSpringFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetEndPoints (
        /*[out]*/ IDispatch * * PDirDisp1,
        /*[out]*/ IDispatch * * PDirDisp2,
        /*[out]*/ long * Type1,
        /*[out]*/ long * Type2 ) = 0;
      virtual HRESULT __stdcall SetEndPoints (
        /*[in]*/ IDispatch * PDirDisp1,
        /*[in]*/ IDispatch * PDirDisp2 ) = 0;
      virtual HRESULT __stdcall get_FreeLength (
        /*[out,retval]*/ double * Len ) = 0;
      virtual HRESULT __stdcall put_FreeLength (
        /*[in]*/ double Len ) = 0;
      virtual HRESULT __stdcall get_SpringConstant (
        /*[out,retval]*/ double * Constant ) = 0;
      virtual HRESULT __stdcall put_SpringConstant (
        /*[in]*/ double Constant ) = 0;
};

struct __declspec(uuid("57988505-3843-4124-9cbe-af121d9e0be8"))
IImportIgesData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_IncludeSurfaces (
        /*[out,retval]*/ VARIANT_BOOL * Surfaces ) = 0;
      virtual HRESULT __stdcall put_IncludeSurfaces (
        /*[in]*/ VARIANT_BOOL Surfaces ) = 0;
      virtual HRESULT __stdcall get_IncludeCurves (
        /*[out,retval]*/ VARIANT_BOOL * Curves ) = 0;
      virtual HRESULT __stdcall put_IncludeCurves (
        /*[in]*/ VARIANT_BOOL Curves ) = 0;
      virtual HRESULT __stdcall get_CurvesAsSketches (
        /*[out,retval]*/ VARIANT_BOOL * AsSketches ) = 0;
      virtual HRESULT __stdcall put_CurvesAsSketches (
        /*[in]*/ VARIANT_BOOL AsSketches ) = 0;
      virtual HRESULT __stdcall get_ProcessByLevel (
        /*[out,retval]*/ VARIANT_BOOL * ByLevel ) = 0;
      virtual HRESULT __stdcall put_ProcessByLevel (
        /*[in]*/ VARIANT_BOOL ByLevel ) = 0;
      virtual HRESULT __stdcall get_IncludeAllLevels (
        /*[out,retval]*/ VARIANT_BOOL * All ) = 0;
      virtual HRESULT __stdcall get_IncludeOnlyLevels (
        /*[out,retval]*/ VARIANT * Levels ) = 0;
      virtual HRESULT __stdcall SetLevels (
        /*[in]*/ VARIANT_BOOL All,
        /*[in]*/ VARIANT Only,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("11f1f395-9064-44cb-ae29-e1a3a543aedc"))
IImportDxfDwgData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ImportMethod (
        /*[in]*/ BSTR Sheet,
        /*[out,retval]*/ long * Method ) = 0;
      virtual HRESULT __stdcall put_ImportMethod (
        /*[in]*/ BSTR Sheet,
        /*[in]*/ long Method ) = 0;
      virtual HRESULT __stdcall get_LengthUnit (
        /*[in]*/ BSTR Sheet,
        /*[out,retval]*/ long * Unit ) = 0;
      virtual HRESULT __stdcall put_LengthUnit (
        /*[in]*/ BSTR Sheet,
        /*[in]*/ long Unit ) = 0;
      virtual HRESULT __stdcall GetPaperSize (
        /*[in]*/ BSTR Sheet,
        /*[in,out]*/ long * Size,
        /*[in,out]*/ double * Height,
        /*[in,out]*/ double * Width ) = 0;
      virtual HRESULT __stdcall SetPaperSize (
        /*[in]*/ BSTR Sheet,
        /*[in]*/ long Size,
        /*[in]*/ double Height,
        /*[in]*/ double Width,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetSheetScale (
        /*[in]*/ BSTR Sheet,
        /*[in,out]*/ double * Numerator,
        /*[in,out]*/ double * Denominator ) = 0;
      virtual HRESULT __stdcall SetSheetScale (
        /*[in]*/ BSTR Sheet,
        /*[in]*/ double Numerator,
        /*[in]*/ double Denominator,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetImportLayerVisibility (
        /*[in]*/ BSTR Layer,
        /*[out,retval]*/ long * Visibility ) = 0;
      virtual HRESULT __stdcall SetImportLayerVisibility (
        /*[in]*/ VARIANT Layers,
        /*[in]*/ long Visibility,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetImportLayerToSheetFormat (
        /*[in]*/ BSTR Layer,
        /*[out,retval]*/ VARIANT_BOOL * SheetFormat ) = 0;
      virtual HRESULT __stdcall SetImportLayerToSheetFormat (
        /*[in]*/ VARIANT Layers,
        /*[in]*/ VARIANT_BOOL SheetFormat,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_SheetName (
        /*[in]*/ BSTR Sheet,
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_SheetName (
        /*[in]*/ BSTR Sheet,
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall GetPosition (
        /*[in]*/ BSTR Sheet,
        /*[in,out]*/ long * Positioning,
        /*[in,out]*/ double * X,
        /*[in,out]*/ double * Y ) = 0;
      virtual HRESULT __stdcall SetPosition (
        /*[in]*/ BSTR Sheet,
        /*[in]*/ long Positioning,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_DocumentTemplate (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_DocumentTemplate (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_AddSketchConstraints (
        /*[in]*/ BSTR Sheet,
        /*[out,retval]*/ VARIANT_BOOL * Constraints ) = 0;
      virtual HRESULT __stdcall put_AddSketchConstraints (
        /*[in]*/ BSTR Sheet,
        /*[in]*/ VARIANT_BOOL Constraints ) = 0;
      virtual HRESULT __stdcall get_ImportDimensions (
        /*[in]*/ BSTR Sheet,
        /*[out,retval]*/ VARIANT_BOOL * Dimensions ) = 0;
      virtual HRESULT __stdcall put_ImportDimensions (
        /*[in]*/ BSTR Sheet,
        /*[in]*/ VARIANT_BOOL Dimensions ) = 0;
      virtual HRESULT __stdcall GetMergePoints (
        /*[in]*/ BSTR Sheet,
        /*[out,retval]*/ VARIANT_BOOL * Merge ) = 0;
      virtual HRESULT __stdcall GetMergeDistance (
        /*[in]*/ BSTR Sheet,
        /*[out,retval]*/ double * Distance ) = 0;
      virtual HRESULT __stdcall SetMergePoints (
        /*[in]*/ BSTR Sheet,
        /*[in]*/ VARIANT_BOOL Merge,
        /*[in]*/ double Distance,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_ImportHatch (
        /*[in]*/ BSTR Sheet,
        /*[out,retval]*/ VARIANT_BOOL * Hatch ) = 0;
      virtual HRESULT __stdcall put_ImportHatch (
        /*[in]*/ BSTR Sheet,
        /*[in]*/ VARIANT_BOOL Hatch ) = 0;
};

struct __declspec(uuid("ad749a73-9aa2-4a3e-bca5-8fc012114bb0"))
IImportStepData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_MapConfigurationData (
        /*[out,retval]*/ VARIANT_BOOL * ConfigData ) = 0;
      virtual HRESULT __stdcall put_MapConfigurationData (
        /*[in]*/ VARIANT_BOOL ConfigData ) = 0;
};

struct __declspec(uuid("33d23c34-d27a-4635-91df-8beffe51900a"))
IExportPdfData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetWhichSheets (
        /*[out,retval]*/ long * Which ) = 0;
      virtual HRESULT __stdcall GetSheets (
        /*[out,retval]*/ VARIANT * Sheets ) = 0;
      virtual HRESULT __stdcall SetSheets (
        /*[in]*/ long Which,
        /*[in]*/ VARIANT Sheets,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_ExportAs3D (
        /*[out,retval]*/ VARIANT_BOOL * As3D ) = 0;
      virtual HRESULT __stdcall put_ExportAs3D (
        /*[in]*/ VARIANT_BOOL As3D ) = 0;
};

struct __declspec(uuid("cf38209e-52dc-414c-81bd-ebac6c10692d"))
IPropertyManagerPageSlider : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ long * Style ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ long Style ) = 0;
      virtual HRESULT __stdcall GetRange (
        /*[in,out]*/ long * Min,
        /*[in,out]*/ long * Max ) = 0;
      virtual HRESULT __stdcall SetRange (
        /*[in]*/ long Min,
        /*[in]*/ long Max,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ long * Position ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ long Position ) = 0;
      virtual HRESULT __stdcall get_TickFrequency (
        /*[out,retval]*/ long * Frequency ) = 0;
      virtual HRESULT __stdcall put_TickFrequency (
        /*[in]*/ long Frequency ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ short * Height ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ short Height ) = 0;
      virtual HRESULT __stdcall get_LineSize (
        /*[out,retval]*/ long * Size ) = 0;
      virtual HRESULT __stdcall put_LineSize (
        /*[in]*/ long Size ) = 0;
      virtual HRESULT __stdcall get_PageSize (
        /*[out,retval]*/ long * Size ) = 0;
      virtual HRESULT __stdcall put_PageSize (
        /*[in]*/ long Size ) = 0;
};

struct __declspec(uuid("2fc5ea82-b937-4719-814f-2103aa157f35"))
IDocumentSpecification : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_FileName (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall get_FileName (
        /*[out,retval]*/ BSTR * FileName ) = 0;
      virtual HRESULT __stdcall put_DocumentType (
        /*[in]*/ long DocumentType ) = 0;
      virtual HRESULT __stdcall get_DocumentType (
        /*[out,retval]*/ long * DocumentType ) = 0;
      virtual HRESULT __stdcall put_ConfigurationName (
        /*[in]*/ BSTR ConfigurationName ) = 0;
      virtual HRESULT __stdcall get_ConfigurationName (
        /*[out,retval]*/ BSTR * ConfigurationName ) = 0;
      virtual HRESULT __stdcall put_Silent (
        /*[in]*/ VARIANT_BOOL OpenSilent ) = 0;
      virtual HRESULT __stdcall get_Silent (
        /*[out,retval]*/ VARIANT_BOOL * OpenSilent ) = 0;
      virtual HRESULT __stdcall put_ReadOnly (
        /*[in]*/ VARIANT_BOOL OpenReadOnly ) = 0;
      virtual HRESULT __stdcall get_ReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * OpenReadOnly ) = 0;
      virtual HRESULT __stdcall put_ViewOnly (
        /*[in]*/ VARIANT_BOOL OpenViewOnly ) = 0;
      virtual HRESULT __stdcall get_ViewOnly (
        /*[out,retval]*/ VARIANT_BOOL * OpenViewOnly ) = 0;
      virtual HRESULT __stdcall put_Selective (
        /*[in]*/ VARIANT_BOOL OpenSelective ) = 0;
      virtual HRESULT __stdcall get_Selective (
        /*[out,retval]*/ VARIANT_BOOL * OpenSelective ) = 0;
      virtual HRESULT __stdcall put_LoadModel (
        /*[in]*/ VARIANT_BOOL LoadModel ) = 0;
      virtual HRESULT __stdcall get_LoadModel (
        /*[out,retval]*/ VARIANT_BOOL * LoadModel ) = 0;
      virtual HRESULT __stdcall put_AutoMissingConfig (
        /*[in]*/ VARIANT_BOOL OpenAutoMissingConfig ) = 0;
      virtual HRESULT __stdcall get_AutoMissingConfig (
        /*[out,retval]*/ VARIANT_BOOL * OpenAutoMissingConfig ) = 0;
      virtual HRESULT __stdcall put_ComponentList (
        /*[in]*/ VARIANT ComponentList ) = 0;
      virtual HRESULT __stdcall get_ComponentList (
        /*[out,retval]*/ VARIANT * ComponentList ) = 0;
      virtual HRESULT __stdcall put_DisplayState (
        /*[in]*/ BSTR DisplayStateName ) = 0;
      virtual HRESULT __stdcall get_DisplayState (
        /*[out,retval]*/ BSTR * DisplayStateName ) = 0;
      virtual HRESULT __stdcall put_LightWeight (
        /*[in]*/ VARIANT_BOOL LightWeight ) = 0;
      virtual HRESULT __stdcall get_LightWeight (
        /*[out,retval]*/ VARIANT_BOOL * LightWeight ) = 0;
      virtual HRESULT __stdcall put_IgnoreHiddenComponents (
        /*[in]*/ VARIANT_BOOL IgnoreHiddenComponents ) = 0;
      virtual HRESULT __stdcall get_IgnoreHiddenComponents (
        /*[out,retval]*/ VARIANT_BOOL * IgnoreHiddenComponents ) = 0;
      virtual HRESULT __stdcall put_UseLightWeightDefault (
        /*[in]*/ VARIANT_BOOL UseLightWeightDefault ) = 0;
      virtual HRESULT __stdcall get_UseLightWeightDefault (
        /*[out,retval]*/ VARIANT_BOOL * UseLightWeightDefault ) = 0;
      virtual HRESULT __stdcall put_Warning (
        /*[in]*/ long WarningValue ) = 0;
      virtual HRESULT __stdcall get_Warning (
        /*[out,retval]*/ long * WarningValue ) = 0;
      virtual HRESULT __stdcall put_Error (
        /*[in]*/ long ErrorValue ) = 0;
      virtual HRESULT __stdcall get_Error (
        /*[out,retval]*/ long * ErrorValue ) = 0;
      virtual HRESULT __stdcall put_InteractiveComponentSelection (
        /*[in]*/ VARIANT_BOOL InteractiveComponentSelection ) = 0;
      virtual HRESULT __stdcall get_InteractiveComponentSelection (
        /*[out,retval]*/ VARIANT_BOOL * InteractiveComponentSelection ) = 0;
};

struct __declspec(uuid("1a546f45-179e-44b3-93cf-e1c98f42a1ae"))
ISimulation3DContactFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SpecifyMaterial (
        /*[out,retval]*/ VARIANT_BOOL * BValue ) = 0;
      virtual HRESULT __stdcall put_SpecifyMaterial (
        /*[in]*/ VARIANT_BOOL BValue ) = 0;
      virtual HRESULT __stdcall get_MaterialID (
        /*[in]*/ long WhichOne,
        /*[out,retval]*/ long * ID ) = 0;
      virtual HRESULT __stdcall put_MaterialID (
        /*[in]*/ long WhichOne,
        /*[in]*/ long ID ) = 0;
      virtual HRESULT __stdcall get_UseRestitutionCoefficient (
        /*[out,retval]*/ VARIANT_BOOL * BValue ) = 0;
      virtual HRESULT __stdcall put_UseRestitutionCoefficient (
        /*[in]*/ VARIANT_BOOL BValue ) = 0;
      virtual HRESULT __stdcall get_RestitutionCoefficient (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_RestitutionCoefficient (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_Stiffness (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_Stiffness (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_Exponent (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_Exponent (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_MaxDamping (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_MaxDamping (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_Penetration (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_Penetration (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_FrictionOption (
        /*[out,retval]*/ long * Option ) = 0;
      virtual HRESULT __stdcall put_FrictionOption (
        /*[in]*/ long Option ) = 0;
      virtual HRESULT __stdcall get_StaticFrictionVelocity (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_StaticFrictionVelocity (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_DynamicFrictionVelocity (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_DynamicFrictionVelocity (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_StaticFrictionCoefficient (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_StaticFrictionCoefficient (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_DynamicFrictionCoefficient (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_DynamicFrictionCoefficient (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_ContactComponents (
        /*[out,retval]*/ VARIANT * Components ) = 0;
      virtual HRESULT __stdcall put_ContactComponents (
        /*[in]*/ VARIANT Components ) = 0;
};

struct __declspec(uuid("83a33d22-37c5-11ce-bfd4-00400513bb57"))
DSldWorksEvents : IDispatch
{};

struct __declspec(uuid("da12c069-d938-4e44-bd4e-7a47a395e2f5"))
SldWorks;
    // [ default ] interface ISldWorks
    // [ default, source ] dispinterface DSldWorksEvents

struct __declspec(uuid("83a33d32-37c5-11ce-bfd4-00400513bb57"))
DPartDocEvents : IDispatch
{};

struct __declspec(uuid("83a33d30-27c5-11ce-bfd4-00400513bb57"))
PartDoc;
    // [ default ] interface IPartDoc
    // [ default, source ] dispinterface DPartDocEvents

struct __declspec(uuid("83a33d34-37c5-11ce-bfd4-00400513bb57"))
DDrawingDocEvents : IDispatch
{};

struct __declspec(uuid("83a33d34-27c5-11ce-bfd4-00400513bb57"))
DrawingDoc;
    // [ default ] interface IDrawingDoc
    // [ default, source ] dispinterface DDrawingDocEvents

struct __declspec(uuid("83a33d35-37c5-11ce-bfd4-00400513bb57"))
DAssemblyDocEvents : IDispatch
{};

struct __declspec(uuid("83a33d36-27c5-11ce-bfd4-00400513bb57"))
AssemblyDoc;
    // [ default ] interface IAssemblyDoc
    // [ default, source ] dispinterface DAssemblyDocEvents

struct __declspec(uuid("83a33d37-27c5-11ce-bfd4-00400513bb57"))
Feature;
    // [ default ] interface IFeature

struct __declspec(uuid("83a33d39-27c5-11ce-bfd4-00400513bb57"))
Dimension;
    // [ default ] interface IDimension

struct __declspec(uuid("83a33d3b-27c5-11ce-bfd4-00400513bb57"))
Body;
    // [ default ] interface IBody

struct __declspec(uuid("83a33d3d-27c5-11ce-bfd4-00400513bb57"))
Face;
    // [ default ] interface IFace

struct __declspec(uuid("83a33d3f-27c5-11ce-bfd4-00400513bb57"))
Surface;
    // [ default ] interface ISurface

struct __declspec(uuid("83a33d41-27c5-11ce-bfd4-00400513bb57"))
Edge;
    // [ default ] interface IEdge

struct __declspec(uuid("83a33d43-27c5-11ce-bfd4-00400513bb57"))
Curve;
    // [ default ] interface ICurve

struct __declspec(uuid("83a33d45-27c5-11ce-bfd4-00400513bb57"))
ModelDoc;
    // [ default ] interface IModelDoc

struct __declspec(uuid("83a33d47-27c5-11ce-bfd4-00400513bb57"))
Frame;
    // [ default ] interface IFrame

struct __declspec(uuid("83a33d49-27c5-11ce-bfd4-00400513bb57"))
Gtol;
    // [ default ] interface IGtol

struct __declspec(uuid("83a33d4c-37c5-11ce-bfd4-00400513bb57"))
DModelViewEvents : IDispatch
{};

struct __declspec(uuid("83a33d4b-27c5-11ce-bfd4-00400513bb57"))
ModelView;
    // [ default ] interface IModelView
    // [ default, source ] dispinterface DModelViewEvents

struct __declspec(uuid("83a33d4d-27c5-11ce-bfd4-00400513bb57"))
Member;
    // [ default ] interface IMember

struct __declspec(uuid("83a33d4f-27c5-11ce-bfd4-00400513bb57"))
View;
    // [ default ] interface IView

struct __declspec(uuid("83a33d52-27c5-11ce-bfd4-00400513bb57"))
Sketch;
    // [ default ] interface ISketch

struct __declspec(uuid("83a33d54-27c5-11ce-bfd4-00400513bb57"))
Loop;
    // [ default ] interface ILoop

struct __declspec(uuid("83a33d56-27c5-11ce-bfd4-00400513bb57"))
Note;
    // [ default ] interface INote

struct __declspec(uuid("83a33d58-27c5-11ce-bfd4-00400513bb57"))
CoEdge;
    // [ default ] interface ICoEdge

struct __declspec(uuid("83a33d64-27c5-11ce-bfd4-00400513bb57"))
Vertex;
    // [ default ] interface IVertex

struct __declspec(uuid("83a33d5a-27c5-11ce-bfd4-00400513bb57"))
SelectionMgr;
    // [ default ] interface ISelectionMgr

struct __declspec(uuid("83a33d5c-27c5-11ce-bfd4-00400513bb57"))
EnumFaces;
    // [ default ] interface IEnumFaces

struct __declspec(uuid("5f269d24-e7a6-45b4-8850-15983215b0fe"))
EnumFaces2;
    // [ default ] interface IEnumFaces2

struct __declspec(uuid("83a33d5e-27c5-11ce-bfd4-00400513bb57"))
EnumLoops;
    // [ default ] interface IEnumLoops

struct __declspec(uuid("baa5c9a5-cce2-44d7-979a-88c1720f82aa"))
EnumLoops2;
    // [ default ] interface IEnumLoops2

struct __declspec(uuid("83a33d60-27c5-11ce-bfd4-00400513bb57"))
EnumEdges;
    // [ default ] interface IEnumEdges

struct __declspec(uuid("83a33d62-27c5-11ce-bfd4-00400513bb57"))
EnumCoEdges;
    // [ default ] interface IEnumCoEdges

struct __declspec(uuid("83a33d97-27c5-11ce-bfd4-00400513bb57"))
EnumBodies;
    // [ default ] interface IEnumBodies

struct __declspec(uuid("f5519211-91ac-4234-8c2f-42725bc6b3fe"))
EnumBodies2;
    // [ default ] interface IEnumBodies2

struct __declspec(uuid("83a33d66-27c5-11ce-bfd4-00400513bb57"))
Entity;
    // [ default ] interface IEntity

struct __declspec(uuid("83a33d68-27c5-11ce-bfd4-00400513bb57"))
AttributeDef;
    // [ default ] interface IAttributeDef

struct __declspec(uuid("83a33d70-27c5-11ce-bfd4-00400513bb57"))
Parameter;
    // [ default ] interface IParameter

struct __declspec(uuid("83a33d72-27c5-11ce-bfd4-00400513bb57"))
Attribute;
    // [ default ] interface IAttribute

struct __declspec(uuid("83a33d74-27c5-11ce-bfd4-00400513bb57"))
Modeler;
    // [ default ] interface IModeler

struct __declspec(uuid("83a33d76-27c5-11ce-bfd4-00400513bb57"))
DFeatMgrViewEvents : IDispatch
{};

struct __declspec(uuid("83a33d77-27c5-11ce-bfd4-00400513bb57"))
FeatMgrView;
    // [ default ] interface IFeatMgrView
    // [ default, source ] dispinterface DFeatMgrViewEvents

struct __declspec(uuid("83a33d79-27c5-11ce-bfd4-00400513bb57"))
Environment;
    // [ default ] interface IEnvironment

struct __declspec(uuid("83a33d81-27c5-11ce-bfd4-00400513bb57"))
Sheet;
    // [ default ] interface ISheet

struct __declspec(uuid("83a33d83-27c5-11ce-bfd4-00400513bb57"))
BomTable;
    // [ default ] interface IBomTable

struct __declspec(uuid("83a33d85-27c5-11ce-bfd4-00400513bb57"))
RefPlane;
    // [ default ] interface IRefPlane

struct __declspec(uuid("83a33d87-27c5-11ce-bfd4-00400513bb57"))
RefAxis;
    // [ default ] interface IRefAxis

struct __declspec(uuid("83a33d89-27c5-11ce-bfd4-00400513bb57"))
MidSurface;
    // [ default ] interface IMidSurface

struct __declspec(uuid("83a33d8b-27c5-11ce-bfd4-00400513bb57"))
Mate;
    // [ default ] interface IMate

struct __declspec(uuid("83a33d8d-27c5-11ce-bfd4-00400513bb57"))
MateEntity;
    // [ default ] interface IMateEntity

struct __declspec(uuid("83a33d8f-27c5-11ce-bfd4-00400513bb57"))
SFSymbol;
    // [ default ] interface ISFSymbol

struct __declspec(uuid("83a33d91-27c5-11ce-bfd4-00400513bb57"))
DatumTag;
    // [ default ] interface IDatumTag

struct __declspec(uuid("83a33d93-27c5-11ce-bfd4-00400513bb57"))
DatumTargetSym;
    // [ default ] interface IDatumTargetSym

struct __declspec(uuid("83a33d95-27c5-11ce-bfd4-00400513bb57"))
WeldSymbol;
    // [ default ] interface IWeldSymbol

struct __declspec(uuid("83a33d99-27c5-11ce-bfd4-00400513bb57"))
Configuration;
    // [ default ] interface IConfiguration

struct __declspec(uuid("83a33d9b-27c5-11ce-bfd4-00400513bb57"))
Component;
    // [ default ] interface IComponent

struct __declspec(uuid("83a33d9d-27c5-11ce-bfd4-00400513bb57"))
DisplayData;
    // [ default ] interface IDisplayData

struct __declspec(uuid("83a33d9f-27c5-11ce-bfd4-00400513bb57"))
CThread;
    // [ default ] interface ICThread

struct __declspec(uuid("83a33da2-27c5-11ce-bfd4-00400513bb57"))
DisplayDimension;
    // [ default ] interface IDisplayDimension

struct __declspec(uuid("83a33da4-27c5-11ce-bfd4-00400513bb57"))
ReferenceCurve;
    // [ default ] interface IReferenceCurve

struct __declspec(uuid("83a33da6-27c5-11ce-bfd4-00400513bb57"))
ColorTable;
    // [ default ] interface IColorTable

struct __declspec(uuid("e05ff9e0-fc82-11d2-9395-00c04f79bffe"))
DSWPropertySheetEvents : IDispatch
{};

struct __declspec(uuid("83a33da8-27c5-11ce-bfd4-00400513bb57"))
SWPropertySheet;
    // [ default ] interface ISWPropertySheet
    // [ default, source ] dispinterface DSWPropertySheetEvents

struct __declspec(uuid("83a33daa-27c5-11ce-bfd4-00400513bb57"))
Annotation;
    // [ default ] interface IAnnotation

struct __declspec(uuid("83a33dac-27c5-11ce-bfd4-00400513bb57"))
EnumDisplayDimensions;
    // [ default ] interface IEnumDisplayDimensions

struct __declspec(uuid("83a33dae-27c5-11ce-bfd4-00400513bb57"))
RibFeatureData;
    // [ default ] interface IRibFeatureData

struct __declspec(uuid("83a33db0-27c5-11ce-bfd4-00400513bb57"))
DomeFeatureData;
    // [ default ] interface IDomeFeatureData

struct __declspec(uuid("83a33db2-27c5-11ce-bfd4-00400513bb57"))
EnumModelViews;
    // [ default ] interface IEnumModelViews

struct __declspec(uuid("83a33db4-27c5-11ce-bfd4-00400513bb57"))
EnumDocuments;
    // [ default ] interface IEnumDocuments

struct __declspec(uuid("fce9fe1b-a6b2-4ab9-817d-d49f14e7f783"))
EnumDocuments2;
    // [ default ] interface IEnumDocuments2

struct __declspec(uuid("83a33db6-27c5-11ce-bfd4-00400513bb57"))
CustomSymbol;
    // [ default ] interface ICustomSymbol

struct __declspec(uuid("83a33db8-27c5-11ce-bfd4-00400513bb57"))
DetailingDefaults;
    // [ default ] interface IDetailingDefaults

struct __declspec(uuid("83a33dba-27c5-11ce-bfd4-00400513bb57"))
TextFormat;
    // [ default ] interface ITextFormat

struct __declspec(uuid("83a33dbe-27c5-11ce-bfd4-00400513bb57"))
SketchPoint;
    // [ default ] interface ISketchPoint

struct __declspec(uuid("83a33dc0-27c5-11ce-bfd4-00400513bb57"))
SketchSegment;
    // [ default ] interface ISketchSegment

struct __declspec(uuid("83a33dc2-27c5-11ce-bfd4-00400513bb57"))
SketchLine;
    // [ default ] interface ISketchLine

struct __declspec(uuid("83a33dc4-27c5-11ce-bfd4-00400513bb57"))
SketchArc;
    // [ default ] interface ISketchArc

struct __declspec(uuid("83a33dc6-27c5-11ce-bfd4-00400513bb57"))
SketchText;
    // [ default ] interface ISketchText

struct __declspec(uuid("83a33dc8-27c5-11ce-bfd4-00400513bb57"))
SketchEllipse;
    // [ default ] interface ISketchEllipse

struct __declspec(uuid("83a33dca-27c5-11ce-bfd4-00400513bb57"))
SketchParabola;
    // [ default ] interface ISketchParabola

struct __declspec(uuid("83a33dcc-27c5-11ce-bfd4-00400513bb57"))
SketchSpline;
    // [ default ] interface ISketchSpline

struct __declspec(uuid("6b70777f-8cc5-4933-9d64-cc5523a4e19f"))
SketchSlot;
    // [ default ] interface ISketchSlot

struct __declspec(uuid("83a33dce-27c5-11ce-bfd4-00400513bb57"))
EnumSketchPoints;
    // [ default ] interface IEnumSketchPoints

struct __declspec(uuid("83a33df0-27c5-11ce-bfd4-00400513bb57"))
EnumSketchSegments;
    // [ default ] interface IEnumSketchSegments

struct __declspec(uuid("83a33df2-27c5-11ce-bfd4-00400513bb57"))
LightDialog;
    // [ default ] interface ILightDialog

struct __declspec(uuid("04b7287d-f19d-11d2-b8e9-00c04f8ef738"))
Layer;
    // [ default ] interface ILayer

struct __declspec(uuid("75173e31-f19e-11d2-b8e9-00c04f8ef738"))
LayerMgr;
    // [ default ] interface ILayerMgr

struct __declspec(uuid("ce1eaa89-25ad-11d3-ae91-00c04f683cba"))
DesignTable;
    // [ default ] interface IDesignTable

struct __declspec(uuid("c3d00927-4068-11d3-ae9b-00c04f683cba"))
SketchHatch;
    // [ default ] interface ISketchHatch

struct __declspec(uuid("54729b8f-4086-11d3-ae9b-00c04f683cba"))
EnumSketchHatches;
    // [ default ] interface IEnumSketchHatches

struct __declspec(uuid("5b57e3bd-7139-11d3-aea2-00c04f683cba"))
EnumCurves;
    // [ default ] interface IEnumCurves

struct __declspec(uuid("1d06fd55-96dd-11d3-aeaa-00c04f683cba"))
SimpleHoleFeatureData;
    // [ default ] interface ISimpleHoleFeatureData

struct __declspec(uuid("887ab458-a739-11d3-b97f-001083029a97"))
WizardHoleFeatureData;
    // [ default ] interface IWizardHoleFeatureData

struct __declspec(uuid("7271d7c8-acc9-11d3-b97f-001083029a97"))
ChamferFeatureData;
    // [ default ] interface IChamferFeatureData

struct __declspec(uuid("bc633ce2-b367-11d3-b981-001083029a97"))
DraftFeatureData;
    // [ default ] interface IDraftFeatureData

struct __declspec(uuid("cc929f0c-b404-11d3-b981-001083029a97"))
SimpleFilletFeatureData;
    // [ default ] interface ISimpleFilletFeatureData

struct __declspec(uuid("cc929f0e-b404-11d3-b981-001083029a97"))
VariableFilletFeatureData;
    // [ default ] interface IVariableFilletFeatureData

struct __declspec(uuid("908a7176-b72c-11d3-b981-001083029a97"))
ExtrudeFeatureData;
    // [ default ] interface IExtrudeFeatureData

struct __declspec(uuid("b7fff614-b735-11d3-b981-001083029a97"))
RevolveFeatureData;
    // [ default ] interface IRevolveFeatureData

struct __declspec(uuid("ac048cea-ae93-11d3-aea7-00c04f60f02a"))
ISdmDoc : IDispatch
{};

struct __declspec(uuid("ac048ce8-ae93-11d3-aea7-00c04f60f02a"))
SdmDoc;
    // [ default ] dispinterface ISdmDoc

struct __declspec(uuid("f183a340-d4db-11d3-aeb2-00c04f603faf"))
DrSection;
    // [ default ] interface IDrSection

struct __declspec(uuid("51efb945-d449-11d3-aebe-00c04f683cba"))
EnumComponents;
    // [ default ] interface IEnumComponents

struct __declspec(uuid("fd27da22-03e0-4db9-82da-fcf94b11a2fe"))
EnumComponents2;
    // [ default ] interface IEnumComponents2

struct __declspec(uuid("585a6a16-e95b-11d3-aebc-00c04f603faf"))
EnumDrSections;
    // [ default ] interface IEnumDrSections

struct __declspec(uuid("7241680c-0bc6-11d4-aeee-00c04f61025c"))
ExplodeStep;
    // [ default ] interface IExplodeStep

struct __declspec(uuid("f7d97f81-162e-11d4-aeab-00c04fa0ac51"))
MathUtility;
    // [ default ] interface IMathUtility

struct __declspec(uuid("f7d97f83-162e-11d4-aeab-00c04fa0ac51"))
MathTransform;
    // [ default ] interface IMathTransform

struct __declspec(uuid("f7d97f85-162e-11d4-aeab-00c04fa0ac51"))
MathPoint;
    // [ default ] interface IMathPoint

struct __declspec(uuid("f7d97f87-162e-11d4-aeab-00c04fa0ac51"))
MathVector;
    // [ default ] interface IMathVector

struct __declspec(uuid("414f4f1f-30ec-11d4-aeeb-00c04f683cba"))
MirrorPatternFeatureData;
    // [ default ] interface IMirrorPatternFeatureData

struct __declspec(uuid("4b65a34b-4c44-11d4-aef6-00c04f683cba"))
DetailCircle;
    // [ default ] interface IDetailCircle

struct __declspec(uuid("dbbf39df-7ab5-11d4-aeb6-00c04fa0ac51"))
CircularPatternFeatureData;
    // [ default ] interface ICircularPatternFeatureData

struct __declspec(uuid("f86d1e95-7de8-11d4-aeb7-00c04fa0ac51"))
LinearPatternFeatureData;
    // [ default ] interface ILinearPatternFeatureData

struct __declspec(uuid("e5d1af7d-7f5d-11d4-aeb7-00c04fa0ac51"))
TablePatternFeatureData;
    // [ default ] interface ITablePatternFeatureData

struct __declspec(uuid("ae998465-8050-11d4-aeb7-00c04fa0ac51"))
SketchPatternFeatureData;
    // [ default ] interface ISketchPatternFeatureData

struct __declspec(uuid("e9172719-836b-11d4-aeb7-00c04fa0ac51"))
MirrorSolidFeatureData;
    // [ default ] interface IMirrorSolidFeatureData

struct __declspec(uuid("e981b4fb-7e86-11d4-aef2-00c04f603faf"))
PropertyManagerPage;
    // [ default ] interface IPropertyManagerPage

struct __declspec(uuid("a2227e66-a3a7-11d4-aeff-00c04f603faf"))
ProjectionArrow;
    // [ default ] interface IProjectionArrow

struct __declspec(uuid("699c7493-db56-4cc2-b7a2-9ffd56698434"))
Tessellation;
    // [ default ] interface ITessellation

struct __declspec(uuid("2f6c1e89-f2d6-11d4-aed5-00c04fa0ac51"))
SheetMetalFeatureData;
    // [ default ] interface ISheetMetalFeatureData

struct __declspec(uuid("0c02ad41-f6e6-11d4-aed6-00c04fa0ac51"))
OneBendFeatureData;
    // [ default ] interface IOneBendFeatureData

struct __declspec(uuid("f3bdb64f-f7c6-11d4-aed6-00c04fa0ac51"))
BendsFeatureData;
    // [ default ] interface IBendsFeatureData

struct __declspec(uuid("3cc0bc03-541f-40c3-866b-8bac502db4eb"))
UserUnit;
    // [ default ] interface IUserUnit

struct __declspec(uuid("c61e9dd7-0813-11d5-aedd-00c04fa0ac51"))
BaseFlangeFeatureData;
    // [ default ] interface IBaseFlangeFeatureData

struct __declspec(uuid("b58e432b-09c8-11d5-aedd-00c04fa0ac51"))
EdgeFlangeFeatureData;
    // [ default ] interface IEdgeFlangeFeatureData

struct __declspec(uuid("e6194f73-0cec-11d5-aedd-00c04fa0ac52"))
MiterFlangeFeatureData;
    // [ default ] interface IMiterFlangeFeatureData

struct __declspec(uuid("a4d90a71-0da5-11d5-aedd-00c04fa0ac51"))
SketchedBendFeatureData;
    // [ default ] interface ISketchedBendFeatureData

struct __declspec(uuid("2134cbfd-0dda-11d5-aedd-00c04fa0ac51"))
ClosedCornerFeatureData;
    // [ default ] interface IClosedCornerFeatureData

struct __declspec(uuid("32700a63-0e5c-11d5-aedd-00c04fa0ac51"))
FoldsFeatureData;
    // [ default ] interface IFoldsFeatureData

struct __declspec(uuid("00644209-0e6c-11d5-aedd-00c04fa0ac51"))
FlatPatternFeatureData;
    // [ default ] interface IFlatPatternFeatureData

struct __declspec(uuid("9890c04d-1196-11d5-aede-00c04fa0ac51"))
LocalLinearPatternFeatureData;
    // [ default ] interface ILocalLinearPatternFeatureData

struct __declspec(uuid("f2e81435-13fb-11d5-aede-00c04fa0ac51"))
LocalCircularPatternFeatureData;
    // [ default ] interface ILocalCircularPatternFeatureData

struct __declspec(uuid("98eadb33-141a-11d5-aede-00c04fa0ac51"))
DerivedPatternFeatureData;
    // [ default ] interface IDerivedPatternFeatureData

struct __declspec(uuid("cb928817-2a89-446e-a1bb-a6eee181359e"))
Body2;
    // [ default ] interface IBody2

struct __declspec(uuid("545470a9-ef3c-4fc0-aa89-9676ee0bf318"))
Face2;
    // [ default ] interface IFace2

struct __declspec(uuid("27526253-6119-4b38-a1f9-2dc877e72334"))
ModelDoc2;
    // [ default ] interface IModelDoc2

struct __declspec(uuid("071b4d3e-0cd5-4c4b-b6e7-674363a18f4b"))
Loop2;
    // [ default ] interface ILoop2

struct __declspec(uuid("285fd964-4ba2-40d3-89e5-0d7b4236597f"))
MidSurface2;
    // [ default ] interface IMidSurface2

struct __declspec(uuid("ae61a94d-e228-4ac0-8e2a-f000244e3c8b"))
Component2;
    // [ default ] interface IComponent2

struct __declspec(uuid("b92e624b-0dc3-11d5-af1e-00c04f603faf"))
PropertyManagerPage2;
    // [ default ] interface IPropertyManagerPage2

struct __declspec(uuid("2e23d2ef-0f57-11d5-af1f-00c04f603faf"))
PropertyManagerPageGroup;
    // [ default ] interface IPropertyManagerPageGroup

struct __declspec(uuid("ced9caf5-16fa-11d5-af24-00c04f603faf"))
PropertyManagerPageControl;
    // [ default ] interface IPropertyManagerPageControl

struct __declspec(uuid("ebbd7b59-170d-11d5-af24-00c04f603faf"))
PropertyManagerPageLabel;
    // [ default ] interface IPropertyManagerPageLabel

struct __declspec(uuid("ebbd7b5b-170d-11d5-af24-00c04f603faf"))
PropertyManagerPageCheckbox;
    // [ default ] interface IPropertyManagerPageCheckbox

struct __declspec(uuid("3a66c295-17ce-11d5-af24-00c04f603faf"))
PropertyManagerPageButton;
    // [ default ] interface IPropertyManagerPageButton

struct __declspec(uuid("3a66c297-17ce-11d5-af24-00c04f603faf"))
PropertyManagerPageOption;
    // [ default ] interface IPropertyManagerPageOption

struct __declspec(uuid("eb18a469-1800-11d5-af24-00c04f603faf"))
PropertyManagerPageTextbox;
    // [ default ] interface IPropertyManagerPageTextbox

struct __declspec(uuid("cdb49982-1a18-11d5-af24-00c04f603faf"))
IPropertyManagerPageListbox : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AddItems (
        /*[in]*/ VARIANT Texts ) = 0;
      virtual HRESULT __stdcall IAddItems (
        /*[in]*/ short TextCount,
        /*[in]*/ BSTR * Texts ) = 0;
      virtual HRESULT __stdcall Clear ( ) = 0;
      virtual HRESULT __stdcall get_CurrentSelection (
        /*[out,retval]*/ short * Item ) = 0;
      virtual HRESULT __stdcall put_CurrentSelection (
        /*[in]*/ short Item ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ short * Height ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ short Height ) = 0;
      virtual HRESULT __stdcall get_ItemText (
        /*[in]*/ short Item,
        /*[out,retval]*/ BSTR * Text ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ long * Style ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ long Style ) = 0;
      virtual HRESULT __stdcall get_ItemCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall InsertItem (
        /*[in]*/ short Item,
        /*[in]*/ BSTR Text,
        /*[out,retval]*/ short * Retval ) = 0;
      virtual HRESULT __stdcall DeleteItem (
        /*[in]*/ short Item,
        /*[out,retval]*/ short * Retval ) = 0;
      virtual HRESULT __stdcall GetSelectedItemsCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetSelectedItems (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetSelectedItems (
        /*[in]*/ long Count,
        /*[out,retval]*/ short * Retval ) = 0;
      virtual HRESULT __stdcall SetSelectedItem (
        /*[in]*/ short Item,
        /*[in]*/ VARIANT_BOOL Selected,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("cdb49983-1a18-11d5-af24-00c04f603faf"))
PropertyManagerPageListbox;
    // [ default ] interface IPropertyManagerPageListbox

struct __declspec(uuid("0bd2ba63-18c5-11d5-af24-00c04f603faf"))
PropertyManagerPageCombobox;
    // [ default ] interface IPropertyManagerPageCombobox

struct __declspec(uuid("96567554-1eda-11d5-af25-00c04f603faf"))
IPropertyManagerPageNumberbox : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall SetRange (
        /*[in]*/ long Units,
        /*[in]*/ double Minimum,
        /*[in]*/ double Maximum,
        /*[in]*/ double Increment,
        /*[in]*/ VARIANT_BOOL Inclusive ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ long * Style ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ long Style ) = 0;
      virtual HRESULT __stdcall AddItems (
        /*[in]*/ VARIANT Texts ) = 0;
      virtual HRESULT __stdcall IAddItems (
        /*[in]*/ short TextCount,
        /*[in]*/ BSTR * Texts ) = 0;
      virtual HRESULT __stdcall Clear ( ) = 0;
      virtual HRESULT __stdcall get_CurrentSelection (
        /*[out,retval]*/ short * Item ) = 0;
      virtual HRESULT __stdcall put_CurrentSelection (
        /*[in]*/ short Item ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ short * Height ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ short Height ) = 0;
      virtual HRESULT __stdcall get_ItemText (
        /*[in]*/ short Item,
        /*[out,retval]*/ BSTR * Text ) = 0;
      virtual HRESULT __stdcall InsertItem (
        /*[in]*/ short Item,
        /*[in]*/ BSTR Text,
        /*[out,retval]*/ short * Retval ) = 0;
      virtual HRESULT __stdcall DeleteItem (
        /*[in]*/ short Item,
        /*[out,retval]*/ short * Retval ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * Text ) = 0;
      virtual HRESULT __stdcall SetRange2 (
        /*[in]*/ long Units,
        /*[in]*/ double Minimum,
        /*[in]*/ double Maximum,
        /*[in]*/ VARIANT_BOOL Inclusive,
        /*[in]*/ double Increment,
        /*[in]*/ double FastIncr,
        /*[in]*/ double SlowIncr ) = 0;
      virtual HRESULT __stdcall SetSliderParameters (
        /*[in]*/ long PositionCount,
        /*[in]*/ long DivisionCount ) = 0;
      virtual HRESULT __stdcall get_DisplayedUnit (
        /*[out,retval]*/ long * Unit ) = 0;
      virtual HRESULT __stdcall put_DisplayedUnit (
        /*[in]*/ long Unit ) = 0;
};

struct __declspec(uuid("96567555-1eda-11d5-af25-00c04f603faf"))
PropertyManagerPageNumberbox;
    // [ default ] interface IPropertyManagerPageNumberbox

struct __declspec(uuid("96567557-1eda-11d5-af25-00c04f603faf"))
PropertyManagerPageSelectionbox;
    // [ default ] interface IPropertyManagerPageSelectionbox

struct __declspec(uuid("06df8fe1-1344-4e69-9519-535d0160d295"))
MultiJogLeader;
    // [ default ] interface IMultiJogLeader

struct __declspec(uuid("459f4b5d-7f8c-4a7e-8aa0-fcfb6ed2d286"))
ProjectionCurveFeatureData;
    // [ default ] interface IProjectionCurveFeatureData

struct __declspec(uuid("d335d62b-acba-4b09-9631-8b53d57f86c9"))
ScaleFeatureData;
    // [ default ] interface IScaleFeatureData

struct __declspec(uuid("d4c512b3-a169-40ac-83c6-a8f0222a8381"))
ShellFeatureData;
    // [ default ] interface IShellFeatureData

struct __declspec(uuid("d45b744b-dfdc-405c-ae88-6991fbbc44d2"))
SweepFeatureData;
    // [ default ] interface ISweepFeatureData

struct __declspec(uuid("6fda5236-ac50-480e-aa3f-a5681d373abd"))
LoftFeatureData;
    // [ default ] interface ILoftFeatureData

struct __declspec(uuid("97c75b25-7466-44ca-9e0a-31caa7f928f0"))
ThickenFeatureData;
    // [ default ] interface IThickenFeatureData

struct __declspec(uuid("0e16c025-301f-414b-92d3-53833f9998d6"))
SurfCutFeatureData;
    // [ default ] interface ISurfaceCutFeatureData

struct __declspec(uuid("489f09c4-02db-4e6b-a787-094baf521ee3"))
ReplaceFaceFeatureData;
    // [ default ] interface IReplaceFaceFeatureData

struct __declspec(uuid("dddbaed3-db70-4037-ac91-45265cb3e084"))
RibFeatureData2;
    // [ default ] interface IRibFeatureData2

struct __declspec(uuid("b27af2df-2fd2-4f54-9130-1a79c1305c18"))
DomeFeatureData2;
    // [ default ] interface IDomeFeatureData2

struct __declspec(uuid("dc8795e8-8fe0-4837-8328-70165844de95"))
SimpleHoleFeatureData2;
    // [ default ] interface ISimpleHoleFeatureData2

struct __declspec(uuid("a9da797d-2303-486b-beb1-6f80b765bfb5"))
WizardHoleFeatureData2;
    // [ default ] interface IWizardHoleFeatureData2

struct __declspec(uuid("5c97a73f-b200-4d1b-a83c-76227ece5877"))
ChamferFeatureData2;
    // [ default ] interface IChamferFeatureData2

struct __declspec(uuid("06c757d2-4e1a-4455-9518-8a5a90218abb"))
DraftFeatureData2;
    // [ default ] interface IDraftFeatureData2

struct __declspec(uuid("e461d38b-5063-4992-a8ff-fc04a69aabb8"))
SimpleFilletFeatureData2;
    // [ default ] interface ISimpleFilletFeatureData2

struct __declspec(uuid("e3b83840-88c8-4388-bf13-620ad7cddcac"))
VariableFilletFeatureData2;
    // [ default ] interface IVariableFilletFeatureData2

struct __declspec(uuid("0aa8ade4-a503-4d79-a209-69d3dbd6e725"))
ExtrudeFeatureData2;
    // [ default ] interface IExtrudeFeatureData2

struct __declspec(uuid("ac3a7d68-1ea5-4fc8-a726-effd2319593b"))
RevolveFeatureData2;
    // [ default ] interface IRevolveFeatureData2

struct __declspec(uuid("739ac7cf-9017-11d5-af07-0002b34143e5"))
MacroFeatureData;
    // [ default ] interface IMacroFeatureData

struct __declspec(uuid("55aacd8c-97c5-11d5-af4b-00c04f603faf"))
DowelSymbol;
    // [ default ] interface IDowelSymbol

struct __declspec(uuid("2f8be28e-f829-40f7-b568-7f461572ce41"))
DragOperator;
    // [ default ] interface IDragOperator

struct __declspec(uuid("f67412a3-febf-4319-9e8d-323b6ee62c5a"))
CurveDrivenPatternFeatureData;
    // [ default ] interface ICurveDrivenPatternFeatureData

struct __declspec(uuid("4944f9e7-bf50-11d5-af56-00c04f603faf"))
BalloonStack;
    // [ default ] interface IBalloonStack

struct __declspec(uuid("95b8a1aa-1977-46ad-b944-7d525dd76d65"))
StatusBarPane;
    // [ default ] interface IStatusBarPane

struct __declspec(uuid("9015e438-c504-4e9f-a4fa-a03d578fe21f"))
EquationMgr;
    // [ default ] interface IEquationMgr

struct __declspec(uuid("931374cd-ce0e-11d5-af59-00c04f603faf"))
PageSetup;
    // [ default ] interface IPageSetup

struct __declspec(uuid("ab3b9122-1208-4ed3-b53f-fa5c06fcbe1d"))
RipFeatureData;
    // [ default ] interface IRipFeatureData

struct __declspec(uuid("59675115-a0f0-4aa1-9fed-89b10eb36d12"))
HemFeatureData;
    // [ default ] interface IHemFeatureData

struct __declspec(uuid("bf2347c1-cf5f-4168-b203-7b1e544d4697"))
BreakCornerFeatureData;
    // [ default ] interface IBreakCornerFeatureData

struct __declspec(uuid("cd1ce2ae-a4bb-4280-a193-d8a9d0d73117"))
JogFeatureData;
    // [ default ] interface IJogFeatureData

struct __declspec(uuid("acddd04c-a393-462a-be52-dcc9f78851f0"))
SurfExtrudeFeatureData;
    // [ default ] interface ISurfExtrudeFeatureData

struct __declspec(uuid("69c9d6e8-3b00-48dd-bb69-5ad59c6d33e2"))
SurfRevolveFeatureData;
    // [ default ] interface ISurfRevolveFeatureData

struct __declspec(uuid("ae587c54-9cec-43e8-9a9b-318274b7d35f"))
SurfaceOffsetFeatureData;
    // [ default ] interface ISurfaceOffsetFeatureData

struct __declspec(uuid("b32901e5-1a5d-4c16-98c6-2a3d7602f723"))
SurfaceKnitFeatureData;
    // [ default ] interface ISurfaceKnitFeatureData

struct __declspec(uuid("79ee057d-be92-4557-b679-e04824a26c3f"))
SurfaceExtendFeatureData;
    // [ default ] interface ISurfaceExtendFeatureData

struct __declspec(uuid("467c984e-df2d-4644-b4cf-0ac4a722323b"))
SurfacePlanarFeatureData;
    // [ default ] interface ISurfacePlanarFeatureData

struct __declspec(uuid("6beb0424-eda4-11d5-af64-00c04f603faf"))
CenterMark;
    // [ default ] interface ICenterMark

struct __declspec(uuid("2fb4b7b6-87b4-4b10-8961-9ebf65eac73f"))
SurfaceTrimFeatureData;
    // [ default ] interface ISurfaceTrimFeatureData

struct __declspec(uuid("678dcddd-c6ec-4e81-8948-f9fb5c79f3e4"))
SurfaceRadiateFeatureData;
    // [ default ] interface ISurfaceRadiateFeatureData

struct __declspec(uuid("5ee2bf86-c159-4dcb-944a-99acc772679e"))
RefPlaneFeatureData;
    // [ default ] interface IRefPlaneFeatureData

struct __declspec(uuid("9caaa1ab-f2fc-11d5-af66-00c04f603faf"))
Callout;
    // [ default ] interface ICallout

struct __declspec(uuid("fd7c6301-1942-41fb-8036-d9f8ceaac8f9"))
CustomBendAllowance;
    // [ default ] interface ICustomBendAllowance

struct __declspec(uuid("992a14b7-15cf-11d6-af6e-00c04f603faf"))
BlockInstance;
    // [ default ] interface IBlockInstance

struct __declspec(uuid("8cd8314b-1677-11d6-af6e-00c04f603faf"))
BlockDefinition;
    // [ default ] interface IBlockDefinition

struct __declspec(uuid("0d789448-973b-4411-b2d6-a90a1675276d"))
BreakLine;
    // [ default ] interface IBreakLine

struct __declspec(uuid("51440e4b-7ff5-4806-b852-dc238634a160"))
FaceHatch;
    // [ default ] interface IFaceHatch

struct __declspec(uuid("b02f9e06-fc39-422b-9801-27b897ecafa9"))
PropertyManagerPageActiveX;
    // [ default ] interface IPropertyManagerPageActiveX

struct __declspec(uuid("cbd8bea9-e41e-4ef3-884c-dca3c7bef1d8"))
LoftedBendsFeatureData;
    // [ default ] interface ILoftedBendsFeatureData

struct __declspec(uuid("b322a200-3015-467c-b429-dce99445d75b"))
FeatureManager;
    // [ default ] interface IFeatureManager

struct __declspec(uuid("acf23730-ed2c-410f-8f9d-94277db7db4e"))
ModelViewManager;
    // [ default ] interface IModelViewManager

struct __declspec(uuid("d192049a-49a7-4819-9c2e-f7e0f98a0431"))
ModelDocExtension;
    // [ default ] interface IModelDocExtension

struct __declspec(uuid("64ebf95d-ba6f-47cb-8558-ac9487625ed6"))
ConfigurationManager;
    // [ default ] interface IConfigurationManager

struct __declspec(uuid("154778cb-11fc-40cc-94be-b857632c499e"))
CosmeticThreadFeatureData;
    // [ default ] interface ICosmeticThreadFeatureData

struct __declspec(uuid("9680e56c-4d4e-4509-9742-c829befcd39a"))
CenterLine;
    // [ default ] interface ICenterLine

struct __declspec(uuid("1f440727-3a73-4128-8da9-d20baf341bbc"))
ReferencePointCurveFeatureData;
    // [ default ] interface IReferencePointCurveFeatureData

struct __declspec(uuid("830fc5d2-05ef-48ef-adab-bf0ff2b4c677"))
FreePointCurveFeatureData;
    // [ default ] interface IFreePointCurveFeatureData

struct __declspec(uuid("96eb4aa2-167f-4a41-9fae-2f88ecec6f92"))
CompositeCurveFeatureData;
    // [ default ] interface ICompositeCurveFeatureData

struct __declspec(uuid("5118f2bc-a0e6-4205-a96d-09e998190030"))
HelixFeatureData;
    // [ default ] interface IHelixFeatureData

struct __declspec(uuid("d50c4a6e-4cbc-4ea9-b6b8-1062baa697d2"))
ImportedCurveFeatureData;
    // [ default ] interface IImportedCurveFeatureData

struct __declspec(uuid("eb53b512-e23d-4b6a-b48d-21828af5f151"))
SketchRegion;
    // [ default ] interface ISketchRegion

struct __declspec(uuid("eb53b514-e23d-4b6a-b48d-21828af5f151"))
SketchContour;
    // [ default ] interface ISketchContour

struct __declspec(uuid("bcaf190b-5407-4ae0-9c9a-e7194361fc1b"))
MassProperty;
    // [ default ] interface IMassProperty

struct __declspec(uuid("d2e960f8-7d71-46ea-961e-1211daa353af"))
DrawingComponent;
    // [ default ] interface IDrawingComponent

struct __declspec(uuid("468abd02-d693-4f03-8eca-2a0293f5e2b2"))
SketchRelationManager;
    // [ default ] interface ISketchRelationManager

struct __declspec(uuid("c453de5e-b50c-4745-8935-6076703cf3ae"))
SketchRelation;
    // [ default ] interface ISketchRelation

struct __declspec(uuid("9ec0b96e-3592-40bb-ba61-e9a24dcaa42c"))
Mate2;
    // [ default ] interface IMate2

struct __declspec(uuid("92344712-e494-46cc-ab7b-0369db5185c3"))
MateEntity2;
    // [ default ] interface IMateEntity2

struct __declspec(uuid("5c891970-6a93-47ab-a0cd-bc85a44872c0"))
SelectData;
    // [ default ] interface ISelectData

struct __declspec(uuid("a51126c8-ee44-48b9-a91f-723c64cfb793"))
TableAnnotation;
    // [ default ] interface ITableAnnotation

struct __declspec(uuid("48cfe729-7ba8-4274-986c-cd5e068dbcab"))
HoleTableAnnotation;
    // [ default ] interface IHoleTableAnnotation

struct __declspec(uuid("ea2909eb-9e57-464b-aa3f-66e55470ad6c"))
HoleTable;
    // [ default ] interface IHoleTable

struct __declspec(uuid("cac76aa7-c659-4214-a4fe-bcf90bc5c3d3"))
DatumOrigin;
    // [ default ] interface IDatumOrigin

struct __declspec(uuid("5eb57e29-b782-480f-8a28-3f1440ceebf0"))
BomTableAnnotation;
    // [ default ] interface IBomTableAnnotation

struct __declspec(uuid("da78af57-c8ca-4516-84a9-d8c8316f580a"))
BomFeature;
    // [ default ] interface IBomFeature

struct __declspec(uuid("1a19c5dc-3113-447c-9caa-2cee14a1d7ba"))
RevisionTableAnnotation;
    // [ default ] interface IRevisionTableAnnotation

struct __declspec(uuid("da0d8d86-5c82-455f-92dd-223a79c29518"))
RevisionTableFeature;
    // [ default ] interface IRevisionTableFeature

struct __declspec(uuid("06c500af-de51-458b-84b2-09542600a8ba"))
MateInPlace;
    // [ default ] interface IMateInPlace

struct __declspec(uuid("f88a1d38-8725-45f2-998f-9ee1655b87a2"))
PropertyManagerPageBitmapButton;
    // [ default ] interface IPropertyManagerPageBitmapButton

struct __declspec(uuid("75467d64-77f6-4479-8ff6-0df82aa2e86a"))
CustomPropertyManager;
    // [ default ] interface ICustomPropertyManager

struct __declspec(uuid("9eeb4de9-ac14-4a80-b484-7e41af41b56c"))
ILight : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetID (
        /*[out,retval]*/ long * ID ) = 0;
};

struct __declspec(uuid("ce4c6464-b577-4a9e-8215-d00bd0149e95"))
Light;
    // [ default ] interface ILight

struct __declspec(uuid("22245747-0420-4d86-9171-750e6f32c1a8"))
RefPointFeatureData;
    // [ default ] interface IRefPointFeatureData

struct __declspec(uuid("f5e056b0-9fe6-4d5b-8bb6-0e2d53d99fa5"))
RefPoint;
    // [ default ] interface IRefPoint

struct __declspec(uuid("0d7dd9cb-1536-4ade-a97c-d2c70b0809bf"))
RefAxisFeatureData;
    // [ default ] interface IRefAxisFeatureData

struct __declspec(uuid("55bb6dbe-6f19-4e28-918d-509c53d9e60b"))
EdgePoint;
    // [ default ] interface IEdgePoint

struct __declspec(uuid("d78003d7-378a-46d5-93b3-bcd8abc9d34b"))
DTaskpaneViewEvents : IDispatch
{};

struct __declspec(uuid("edbba0eb-b701-419e-a4ae-3409dbf12d40"))
TaskpaneView;
    // [ default ] interface ITaskpaneView
    // [ default, source ] dispinterface DTaskpaneViewEvents

struct __declspec(uuid("5a6d2ebf-9b91-4a1d-89d6-c563de8b4351"))
Texture;
    // [ default ] interface ITexture

struct __declspec(uuid("b303dc27-19b1-4358-a6ff-4d914b70b473"))
MateReference;
    // [ default ] interface IMateReference

struct __declspec(uuid("35c4ca38-9625-4303-9660-266f91f6c9b4"))
PartingLineFeatureData;
    // [ default ] interface IPartingLineFeatureData

struct __declspec(uuid("82c2f45a-cfb7-48b9-826e-084d001dc31a"))
DeleteBodyFeatureData;
    // [ default ] interface IDeleteBodyFeatureData

struct __declspec(uuid("29ab8541-2c74-461d-bcfc-93bd90f34217"))
PartingSurfaceFeatureData;
    // [ default ] interface IPartingSurfaceFeatureData

struct __declspec(uuid("88aaa130-14a4-4f18-ab24-0150efe756ef"))
ShutOffSurfaceFeatureData;
    // [ default ] interface IShutOffSurfaceFeatureData

struct __declspec(uuid("a972458f-ec07-4d11-872a-c5c207d6f580"))
ToolingSplitFeatureData;
    // [ default ] interface IToolingSplitFeatureData

struct __declspec(uuid("09731c48-e3c7-4154-962c-cfd50714ed45"))
PtnrPMPage;
    // [ default ] interface IPtnrPMPage

struct __declspec(uuid("3a47cab7-6c3d-4de5-a5bb-41e3c1d7fbd0"))
JoinFeatureData;
    // [ default ] interface IJoinFeatureData

struct __declspec(uuid("dde50233-e98d-4076-815c-3ec7d4a293bf"))
Manipulator;
    // [ default ] interface IManipulator

struct __declspec(uuid("fd8a3cf7-7fc8-442b-97cd-ab247f81335f"))
TriadManipulator;
    // [ default ] interface ITriadManipulator

struct __declspec(uuid("5d0c251d-d518-43b1-88f5-3c1e35d16d4d"))
FillSurfaceFeatureData;
    // [ default ] interface IFillSurfaceFeatureData

struct __declspec(uuid("3f7bb99e-6f60-4f99-9f80-9f271368523a"))
MoveCopyBodyFeatureData;
    // [ default ] interface IMoveCopyBodyFeatureData

struct __declspec(uuid("dfebd0f6-cb0b-4e4a-b7a1-2be10c839add"))
RuledSurfaceFeatureData;
    // [ default ] interface IRuledSurfaceFeatureData

struct __declspec(uuid("f7dd20c6-9b15-4413-9dc7-f8533c0dd494"))
CavityFeatureData;
    // [ default ] interface ICavityFeatureData

struct __declspec(uuid("d5833e0a-5ed7-499a-9825-1ffea5e4c726"))
WeldBead;
    // [ default ] interface IWeldBead

struct __declspec(uuid("78072827-b489-4f93-8906-e25800850899"))
SplitLineFeatureData;
    // [ default ] interface ISplitLineFeatureData

struct __declspec(uuid("4755397d-6f07-4f8f-bb62-6f5f509a3c25"))
WrapSketchFeatureData;
    // [ default ] interface IWrapSketchFeatureData

struct __declspec(uuid("d1f5d09c-7509-4c45-97ff-ed1dbec2e932"))
StructuralMemberFeatureData;
    // [ default ] interface IStructuralMemberFeatureData

struct __declspec(uuid("9b3407b8-880a-40a1-8f73-ae79bceb6339"))
EndCapFeatureData;
    // [ default ] interface IEndCapFeatureData

struct __declspec(uuid("55e2e1e1-0a43-4ba3-bd44-fb08a46268e9"))
GussetFeatureData;
    // [ default ] interface IGussetFeatureData

struct __declspec(uuid("d05eed21-dc9d-495f-8032-c997392a7772"))
SplitBodyFeatureData;
    // [ default ] interface ISplitBodyFeatureData

struct __declspec(uuid("056b7325-f108-450a-ab35-4ed2491a5a73"))
CombineBodiesFeatureData;
    // [ default ] interface ICombineBodiesFeatureData

struct __declspec(uuid("588a6ac1-b775-424b-87a4-421760643031"))
SketchManager;
    // [ default ] interface ISketchManager

struct __declspec(uuid("f35738f4-35c9-4e87-ad1b-bec2cabad01b"))
DiagnoseResult;
    // [ default ] interface IDiagnoseResult

struct __declspec(uuid("74c82c9f-5198-4e20-a3a4-43fefaf682ee"))
Spring;
    // [ default ] interface ISpring

struct __declspec(uuid("b0fd2a48-134f-4c92-8156-2c30d56e30c8"))
FaultEntity;
    // [ default ] interface IFaultEntity

struct __declspec(uuid("71702538-317c-4af9-b5de-01e8fd3d2676"))
SwOLEObject;
    // [ default ] interface ISwOLEObject

struct __declspec(uuid("330ccc95-878a-42b3-a498-cef4ee7a0a29"))
LibraryFeatureData;
    // [ default ] interface ILibraryFeatureData

struct __declspec(uuid("698a7c5d-389d-4ce1-a984-7bf32c6b40f0"))
Simulation;
    // [ default ] interface ISimulation

struct __declspec(uuid("24ff20c9-8675-41f0-8642-6865e8e1b43c"))
SimulationGravityFeatureData;
    // [ default ] interface ISimulationGravityFeatureData

struct __declspec(uuid("8f7f4424-b9d6-4f67-a719-d206c56321e3"))
SimulationMotorFeatureData;
    // [ default ] interface ISimulationMotorFeatureData

struct __declspec(uuid("2ffab400-3adb-4435-9295-72b318e0be19"))
SimulationLinearSpringFeatureData;
    // [ default ] interface ISimulationLinearSpringFeatureData

struct __declspec(uuid("df427094-16b0-4783-8360-1db93ee8fcf6"))
Camera;
    // [ default ] interface ICamera

struct __declspec(uuid("35310c0d-3b12-470d-aa21-2c3c78b27abc"))
WeldmentBeadFeatureData;
    // [ default ] interface IWeldmentBeadFeatureData

struct __declspec(uuid("e3b6aed5-a261-4101-9249-c60aab9f572e"))
WeldmentTrimExtendFeatureData;
    // [ default ] interface IWeldmentTrimExtendFeatureData

struct __declspec(uuid("8d1e6d74-8786-463a-86cf-7b804807da17"))
PropertyManagerPageTab;
    // [ default ] interface IPropertyManagerPageTab

struct __declspec(uuid("23fc4cbc-18b0-4142-9941-5c4a18eb5c78"))
BodyFolder;
    // [ default ] interface IBodyFolder

struct __declspec(uuid("5a0b252c-1c2a-46ad-b706-d03ca9e92b15"))
CommandManager;
    // [ default ] interface ICommandManager

struct __declspec(uuid("e80b6827-05ff-44c1-8abc-2ec2dc92652b"))
CommandGroup;
    // [ default ] interface ICommandGroup

struct __declspec(uuid("2d47768f-0143-498b-99ff-6826d775ec00"))
CoreFeatureData;
    // [ default ] interface ICoreFeatureData

struct __declspec(uuid("53bd3695-438e-4095-b89f-519bfe17438e"))
AdvancedSelectionCriteria;
    // [ default ] interface IAdvancedSelectionCriteria

struct __declspec(uuid("d7883d09-b331-4710-93ef-a1d7ab9f68fb"))
GeneralTableFeature;
    // [ default ] interface IGeneralTableFeature

struct __declspec(uuid("3c9a6d24-aa35-480f-b20e-86e868a55a60"))
DimensionTolerance;
    // [ default ] interface IDimensionTolerance

struct __declspec(uuid("f9cb3678-7605-481b-bde9-7962184b3c18"))
CommentFolder;
    // [ default ] interface ICommentFolder

struct __declspec(uuid("47d95fd6-85ad-4dd4-9cb8-598dabc68c88"))
Comment;
    // [ default ] interface IComment

struct __declspec(uuid("37e2a1fc-953e-4383-b190-ddb09e06096e"))
Animation;
    // [ default ] interface IAnimation

struct __declspec(uuid("ea5cd784-08d9-492e-8455-1d39c6720631"))
ImportIgesData;
    // [ default ] interface IImportIgesData

struct __declspec(uuid("3b6e83f4-e4e5-4378-88a4-385a43e0df71"))
TableAnchor;
    // [ default ] interface ITableAnchor

struct __declspec(uuid("bdef2eb0-0cce-4074-bdd5-017fe6f54dc8"))
PropertyManagerPageSlider;
    // [ default ] interface IPropertyManagerPageSlider

struct __declspec(uuid("c0e2527f-34b4-4497-8469-3267ccd64a65"))
MateLoadReference;
    // [ default ] interface IMateLoadReference

struct __declspec(uuid("001ea3c7-4fa3-488e-9288-b77493949302"))
SketchBlockDefinition;
    // [ default ] interface ISketchBlockDefinition

struct __declspec(uuid("460c8a97-f80f-40ef-9413-aea12aad49e8"))
SketchBlockInstance;
    // [ default ] interface ISketchBlockInstance

struct __declspec(uuid("6f70fac3-ce70-4041-b626-6b219f6cfd1d"))
UserProgressBar;
    // [ default ] interface IUserProgressBar

struct __declspec(uuid("d1f4e2f1-d7db-46b5-8630-410396a86497"))
DragArrowManipulator;
    // [ default ] interface IDragArrowManipulator

struct __declspec(uuid("43a71fba-d8a8-4d33-a5d7-12cf1f6a483f"))
MoveFaceFeatureData;
    // [ default ] interface IMoveFaceFeatureData

struct __declspec(uuid("e37bdc96-2b2f-45c3-b905-167387b4bd66"))
HealEdgesFeatureData;
    // [ default ] interface IHealEdgesFeatureData

struct __declspec(uuid("72689891-49c6-4f9f-be07-2a16074a9b34"))
WeldmentCutListAnnotation;
    // [ default ] interface IWeldmentCutListAnnotation

struct __declspec(uuid("1b6433f7-8434-494c-90af-a3e9c5321c6d"))
WeldmentCutListFeature;
    // [ default ] interface IWeldmentCutListFeature

struct __declspec(uuid("e0d6233d-670f-4922-988f-814eabc8d22b"))
ModelWindow;
    // [ default ] interface IModelWindow

struct __declspec(uuid("5266b813-fb5f-4831-aed1-a60ab431994a"))
DMouseEvents : IDispatch
{};

struct __declspec(uuid("c2fb44a9-9e38-449c-a84a-a3237b139ff5"))
Mouse;
    // [ default ] interface IMouse
    // [ default, source ] dispinterface DMouseEvents

struct __declspec(uuid("d1921253-7fef-42d9-b4d0-0bc46734ae23"))
ImportDxfDwgData;
    // [ default ] interface IImportDxfDwgData

struct __declspec(uuid("0d82d71b-8c8c-4833-aef8-3b4b05e01053"))
InterferenceDetectionMgr;
    // [ default ] interface IInterferenceDetectionMgr

struct __declspec(uuid("da88e85d-ebc5-4ed3-8d2b-dee14adf2f05"))
Interference;
    // [ default ] interface IInterference

struct __declspec(uuid("155b2d9e-5d63-4571-87ce-086de4a5341d"))
SplineHandle;
    // [ default ] interface ISplineHandle

struct __declspec(uuid("2953a9b1-b272-48fa-932d-75a0abc98698"))
SectionViewData;
    // [ default ] interface ISectionViewData

struct __declspec(uuid("a53e3bd4-6f50-4407-8d41-40cefa466434"))
MaterialVisualPropertiesData;
    // [ default ] interface IMaterialVisualPropertiesData

struct __declspec(uuid("363f31c7-54c0-4d22-afc3-e82fd482caf6"))
IPropertyManagerPageBitmap : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall SetStandardBitmap (
        /*[in]*/ long Bitmap,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetBitmapByName (
        /*[in]*/ BSTR ColorBitmap,
        /*[in]*/ BSTR MaskBitmap,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("f387861d-261d-4be4-8cef-e56bf12ffd03"))
PropertyManagerPageBitmap;
    // [ default ] interface IPropertyManagerPageBitmap

struct __declspec(uuid("3881c638-0401-4d74-b705-5e69cddd4bf7"))
ExportPdfData;
    // [ default ] interface IExportPdfData

struct __declspec(uuid("b58f1af0-aaef-4c4b-a058-4be092d2d4a6"))
Print3DDialog;
    // [ default ] interface IPrint3DDialog

struct __declspec(uuid("9b004641-2e0a-46a7-9c6f-18e2bee8960c"))
SilhouetteEdge;
    // [ default ] interface ISilhouetteEdge

struct __declspec(uuid("c7956dc8-0ec1-44d3-92dd-c0aea9f9f5ba"))
AnnotationView;
    // [ default ] interface IAnnotationView

struct __declspec(uuid("8bf722b2-6470-4ee4-99ca-92979b52f7d9"))
DerivedPartFeatureData;
    // [ default ] interface IDerivedPartFeatureData

struct __declspec(uuid("5ed32255-5af4-4a9c-9cca-1ad7c330dce1"))
Measure;
    // [ default ] interface IMeasure

struct __declspec(uuid("87254726-68d1-4930-a25b-d0b8eefbb202"))
ImportStepData;
    // [ default ] interface IImportStepData

struct __declspec(uuid("297b60c7-c169-4812-bcd2-2c13a2ae20e3"))
SketchPicture;
    // [ default ] interface ISketchPicture

struct __declspec(uuid("a123688d-775a-496b-924d-535eeb508289"))
SketchPath;
    // [ default ] interface ISketchPath

struct __declspec(uuid("d7882be7-2248-4d94-a360-2fb5f844918d"))
Decal;
    // [ default ] interface IDecal

struct __declspec(uuid("881d57b6-5bf1-4a01-8e08-6dd0d805e06d"))
FaceDecalProperties;
    // [ default ] interface IFaceDecalProperties

struct __declspec(uuid("4434d3c8-11bd-4c32-93b4-1794741c59eb"))
RenderMaterial;
    // [ default ] interface IRenderMaterial

struct __declspec(uuid("44c96fe4-754b-4593-ab83-1358cc9db67b"))
CommandTab;
    // [ default ] interface ICommandTab

struct __declspec(uuid("dc032189-bd5d-49be-b599-6563922f05ea"))
CommandTabBox;
    // [ default ] interface ICommandTabBox

struct __declspec(uuid("7db64c86-0a66-4fb5-8e93-4a1b7d4823dc"))
HoleSeriesFeatureData;
    // [ default ] interface IHoleSeriesFeatureData

struct __declspec(uuid("12e5ed6c-0a74-4a9b-b780-4c6bd6e9530c"))
JournalManager;
    // [ default ] interface IJournalManager

struct __declspec(uuid("592eeb91-01e3-4558-ada5-9cd3c18c8ffb"))
DocumentSpecification;
    // [ default ] interface IDocumentSpecification

struct __declspec(uuid("4f1ae35d-2ad0-4cd3-ad48-b750b526817b"))
MidSurface3;
    // [ default ] interface IMidSurface3

struct __declspec(uuid("c46c8663-53ac-48df-9388-06cdc61244f6"))
SimulationDamperFeatureData;
    // [ default ] interface ISimulationDamperFeatureData

struct __declspec(uuid("3c66bf7e-b719-4942-aeb3-61adf9adfa8f"))
Simulation3DContactFeatureData;
    // [ default ] interface ISimulation3DContactFeatureData

struct __declspec(uuid("5675ada4-ece7-427b-aac0-06aba767a46a"))
SimulationForceFeatureData;
    // [ default ] interface ISimulationForceFeatureData

struct __declspec(uuid("8fde04a5-92b0-4d33-806c-5a772bf48200"))
SaveBodyFeatureData;
    // [ default ] interface ISaveBodyFeatureData

struct __declspec(uuid("c87a625c-6dee-4339-b7e1-0d87d1352018"))
TreeControlItem;
    // [ default ] interface ITreeControlItem

struct __declspec(uuid("55e35087-3f0b-48fd-924f-ba956c3f5ed0"))
CoordinateSystemFeatureData;
    // [ default ] interface ICoordinateSystemFeatureData

struct __declspec(uuid("c720c4ac-d477-42e1-b9fa-349415f7cb1a"))
TitleBlock;
    // [ default ] interface ITitleBlock

struct __declspec(uuid("96b37191-8c54-49eb-9b4e-95766e5822ab"))
SimulationSpringFeatureData;
    // [ default ] interface ISimulationSpringFeatureData

struct __declspec(uuid("83a33d22-27c5-11ce-bfd4-00400513bb57"))
ISldWorks : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ActiveDoc (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall get_IActiveDoc (
        /*[out,retval]*/ struct IModelDoc * * Retval ) = 0;
      virtual HRESULT __stdcall OpenDoc (
        /*[in]*/ BSTR Name,
        /*[in]*/ long Type,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IOpenDoc (
        /*[in]*/ BSTR Name,
        /*[in]*/ long Type,
        /*[out,retval]*/ struct IModelDoc * * Retval ) = 0;
      virtual HRESULT __stdcall ActivateDoc (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IActivateDoc (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct IModelDoc * * Retval ) = 0;
      virtual HRESULT __stdcall SendMsgToUser (
        /*[in]*/ BSTR Message ) = 0;
      virtual HRESULT __stdcall Frame (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IFrameObject (
        /*[out,retval]*/ struct IFrame * * Retval ) = 0;
      virtual HRESULT __stdcall ExitApp ( ) = 0;
      virtual HRESULT __stdcall CloseDoc (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall NewPart (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall INewPart (
        /*[out,retval]*/ struct IPartDoc * * Retval ) = 0;
      virtual HRESULT __stdcall NewAssembly (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall INewAssembly (
        /*[out,retval]*/ struct IAssemblyDoc * * Retval ) = 0;
      virtual HRESULT __stdcall NewDrawing (
        /*[in]*/ long TemplateToUse,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall INewDrawing (
        /*[in]*/ long TemplateToUse,
        /*[out,retval]*/ struct IDrawingDoc * * Retval ) = 0;
      virtual HRESULT __stdcall DateCode (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall RevisionNumber (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall LoadFile (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddFileOpenItem (
        /*[in]*/ BSTR CallbackFcnAndModule,
        /*[in]*/ BSTR Description,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddFileSaveAsItem (
        /*[in]*/ BSTR CallbackFcnAndModule,
        /*[in]*/ BSTR Description,
        /*[in]*/ long Type,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall PreSelectDwgTemplateSize (
        /*[in]*/ long TemplateToUse,
        /*[in]*/ BSTR TemplateName ) = 0;
      virtual HRESULT __stdcall DocumentVisible (
        /*[in]*/ VARIANT_BOOL Visible,
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall DefineAttribute (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IDefineAttribute (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct IAttributeDef * * Retval ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_UserControl (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_UserControl (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall DisplayStatusBar (
        /*[in]*/ VARIANT_BOOL OnOff ) = 0;
      virtual HRESULT __stdcall CreateNewWindow ( ) = 0;
      virtual HRESULT __stdcall ArrangeIcons ( ) = 0;
      virtual HRESULT __stdcall ArrangeWindows (
        /*[in]*/ long Style ) = 0;
      virtual HRESULT __stdcall QuitDoc (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall GetModeler (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetModeler (
        /*[out,retval]*/ struct IModeler * * Retval ) = 0;
      virtual HRESULT __stdcall GetEnvironment (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetEnvironment (
        /*[out,retval]*/ struct IEnvironment * * Retval ) = 0;
      virtual HRESULT __stdcall NewDrawing2 (
        /*[in]*/ long TemplateToUse,
        /*[in]*/ BSTR TemplateName,
        /*[in]*/ long PaperSize,
        /*[in]*/ double Width,
        /*[in]*/ double Height,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall INewDrawing2 (
        /*[in]*/ long TemplateToUse,
        /*[in]*/ BSTR TemplateName,
        /*[in]*/ long PaperSize,
        /*[in]*/ double Width,
        /*[in]*/ double Height,
        /*[out,retval]*/ struct IDrawingDoc * * Retval ) = 0;
      virtual HRESULT __stdcall SetOptions (
        /*[in]*/ BSTR Message,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall PreviewDoc (
        /*[in]*/ long * HWnd,
        /*[in]*/ BSTR FullName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetSearchFolders (
        /*[in]*/ long FolderType,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetSearchFolders (
        /*[in]*/ long FolderType,
        /*[in]*/ BSTR Folders,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetUserPreferenceToggle (
        /*[in]*/ long UserPreferenceToggle,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetUserPreferenceToggle (
        /*[in]*/ long UserPreferenceValue,
        /*[in]*/ VARIANT_BOOL OnFlag ) = 0;
      virtual HRESULT __stdcall GetUserPreferenceDoubleValue (
        /*[in]*/ long UserPreferenceValue,
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall SetUserPreferenceDoubleValue (
        /*[in]*/ long UserPreferenceValue,
        /*[in]*/ double Value,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_ActivePrinter (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_ActivePrinter (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall LoadFile2 (
        /*[in]*/ BSTR FileName,
        /*[in]*/ BSTR ArgString,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetUserPreferenceIntegerValue (
        /*[in]*/ long UserPreferenceValue,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetUserPreferenceIntegerValue (
        /*[in]*/ long UserPreferenceValue,
        /*[in]*/ long Value,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall RemoveMenuPopupItem (
        /*[in]*/ long DocType,
        /*[in]*/ long SelectType,
        /*[in]*/ BSTR Item,
        /*[in]*/ BSTR CallbackFcnAndModule,
        /*[in]*/ BSTR CustomNames,
        /*[in]*/ long Unused,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall RemoveMenu (
        /*[in]*/ long DocType,
        /*[in]*/ BSTR MenuItemString,
        /*[in]*/ BSTR CallbackFcnAndModule,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall RemoveFileOpenItem (
        /*[in]*/ BSTR CallbackFcnAndModule,
        /*[in]*/ BSTR Description,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall RemoveFileSaveAsItem (
        /*[in]*/ BSTR CallbackFcnAndModule,
        /*[in]*/ BSTR Description,
        /*[in]*/ long Type,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ReplaceReferencedDocument (
        /*[in]*/ BSTR ReferencingDocument,
        /*[in]*/ BSTR ReferencedDocument,
        /*[in]*/ BSTR NewReference,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddMenuItem (
        /*[in]*/ long DocType,
        /*[in]*/ BSTR Menu,
        /*[in]*/ long Postion,
        /*[in]*/ BSTR CallbackModuleAndFcn,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall AddMenuPopupItem (
        /*[in]*/ long DocType,
        /*[in]*/ long SelType,
        /*[in]*/ BSTR Item,
        /*[in]*/ BSTR CallbackFcnAndModule,
        /*[in]*/ BSTR CustomNames,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall RemoveUserMenu (
        /*[in]*/ long DocType,
        /*[in]*/ long MenuIdIn,
        /*[in]*/ BSTR ModuleName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddToolbar (
        /*[in]*/ BSTR ModuleName,
        /*[in]*/ BSTR Title,
        /*[in]*/ long SmallBitmapHandle,
        /*[in]*/ long LargeBitmapHandle,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall AddToolbarCommand (
        /*[in]*/ BSTR ModuleName,
        /*[in]*/ long ToolbarId,
        /*[in]*/ int ToolbarIndex,
        /*[in]*/ BSTR CommandString,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ShowToolbar (
        /*[in]*/ BSTR ModuleName,
        /*[in]*/ long ToolbarId,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall HideToolbar (
        /*[in]*/ BSTR ModuleName,
        /*[in]*/ long ToolbarId,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall RemoveToolbar (
        /*[in]*/ BSTR Module,
        /*[in]*/ long ToolbarId,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetToolbarState (
        /*[in]*/ BSTR Module,
        /*[in]*/ long ToolbarId,
        /*[in]*/ long ToolbarState,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetUserPreferenceStringListValue (
        /*[in]*/ long UserPreference,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetUserPreferenceStringListValue (
        /*[in]*/ long UserPreference,
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall EnableStereoDisplay (
        /*[in]*/ VARIANT_BOOL BEnable,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IEnableStereoDisplay (
        /*[in]*/ VARIANT_BOOL BEnable,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetDocumentDependencies (
        /*[in]*/ BSTR Document,
        /*[in]*/ long Traverseflag,
        /*[in]*/ long Searchflag,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetDocumentDependencies (
        /*[in]*/ BSTR Document,
        /*[in]*/ long Traverseflag,
        /*[in]*/ long Searchflag,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetDocumentDependenciesCount (
        /*[in]*/ BSTR Document,
        /*[in]*/ long Traverseflag,
        /*[in]*/ long Searchflag,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall OpenDocSilent (
        /*[in]*/ BSTR FileName,
        /*[in]*/ long Type,
        /*[in,out]*/ long * Errors,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IOpenDocSilent (
        /*[in]*/ BSTR FileName,
        /*[in]*/ long Type,
        /*[in,out]*/ long * Errors,
        /*[out,retval]*/ struct IModelDoc * * Retval ) = 0;
      virtual HRESULT __stdcall CallBack (
        /*[in]*/ BSTR CallBackFunc,
        /*[in]*/ long DefaultRetVal,
        /*[in]*/ BSTR CallBackArgs,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SendMsgToUser2 (
        /*[in]*/ BSTR Message,
        /*[in]*/ long Icon,
        /*[in]*/ long Buttons,
        /*[out,retval]*/ long * Result ) = 0;
      virtual HRESULT __stdcall EnumDocuments (
        /*[out,retval]*/ struct IEnumDocuments * * Retval ) = 0;
      virtual HRESULT __stdcall LoadAddIn (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall UnloadAddIn (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall RecordLine (
        /*[in]*/ BSTR Text,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall VersionHistory (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IVersionHistory (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall IGetVersionHistoryCount (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ int * Retval ) = 0;
      virtual HRESULT __stdcall AllowFailedFeatureCreation (
        /*[in]*/ VARIANT_BOOL YesNo,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstDocument (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall GetCurrentWorkingDirectory (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetCurrentWorkingDirectory (
        /*[in]*/ BSTR CurrentWorkingDirectory,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetDataFolder (
        /*[in]*/ VARIANT_BOOL BShowErrorMsg,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetSelectionFilter (
        /*[in]*/ long SelType,
        /*[out,retval]*/ VARIANT_BOOL * State ) = 0;
      virtual HRESULT __stdcall SetSelectionFilter (
        /*[in]*/ long SelType,
        /*[in]*/ VARIANT_BOOL State ) = 0;
      virtual HRESULT __stdcall ActivateDoc2 (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT_BOOL Silent,
        /*[in,out]*/ long * Errors,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IActivateDoc2 (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT_BOOL Silent,
        /*[in,out]*/ long * Errors,
        /*[out,retval]*/ struct IModelDoc * * Retval ) = 0;
      virtual HRESULT __stdcall GetMouseDragMode (
        /*[in]*/ long Command,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetCurrentLanguage (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstDocument (
        /*[out,retval]*/ struct IModelDoc * * Retval ) = 0;
      virtual HRESULT __stdcall SanityCheck (
        /*[in]*/ long SwItemToCheck,
        /*[in]*/ long * P1,
        /*[in]*/ long * P2,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddMenu (
        /*[in]*/ long DocType,
        /*[in]*/ BSTR Menu,
        /*[in]*/ long Position,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall CheckpointConvertedDocument (
        /*[in]*/ BSTR DocName,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall OpenDoc2 (
        /*[in]*/ BSTR FileName,
        /*[in]*/ long Type,
        /*[in]*/ VARIANT_BOOL ReadOnly,
        /*[in]*/ VARIANT_BOOL ViewOnly,
        /*[in]*/ VARIANT_BOOL Silent,
        /*[in,out]*/ long * Errors,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IOpenDoc2 (
        /*[in]*/ BSTR FileName,
        /*[in]*/ long Type,
        /*[in]*/ VARIANT_BOOL ReadOnly,
        /*[in]*/ VARIANT_BOOL ViewOnly,
        /*[in]*/ VARIANT_BOOL Silent,
        /*[in,out]*/ long * Errors,
        /*[out,retval]*/ struct IModelDoc * * Retval ) = 0;
      virtual HRESULT __stdcall GetMassProperties (
        /*[in]*/ BSTR FilePathName,
        /*[in]*/ BSTR ConfigurationName,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetMassProperties (
        /*[in]*/ BSTR FilePathName,
        /*[in]*/ BSTR ConfigurationName,
        /*[in]*/ double * MPropsData,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetLocalizedMenuName (
        /*[in]*/ long MenuId,
        /*[out,retval]*/ BSTR * MenuName ) = 0;
      virtual HRESULT __stdcall GetDocumentDependencies2 (
        /*[in]*/ BSTR Document,
        /*[in]*/ VARIANT_BOOL Traverseflag,
        /*[in]*/ VARIANT_BOOL Searchflag,
        /*[in]*/ VARIANT_BOOL AddReadOnlyInfo,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetDocumentDependencies2 (
        /*[in]*/ BSTR Document,
        /*[in]*/ VARIANT_BOOL Traverseflag,
        /*[in]*/ VARIANT_BOOL Searchflag,
        /*[in]*/ VARIANT_BOOL AddReadOnlyInfo,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall IGetDocumentDependenciesCount2 (
        /*[in]*/ BSTR Document,
        /*[in]*/ VARIANT_BOOL Traverseflag,
        /*[in]*/ VARIANT_BOOL Searchflag,
        /*[in]*/ VARIANT_BOOL AddReadOnlyInfo,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetSelectionFilters (
        /*[out,retval]*/ VARIANT * SelType ) = 0;
      virtual HRESULT __stdcall SetSelectionFilters (
        /*[in]*/ VARIANT SelType,
        /*[in]*/ VARIANT_BOOL State ) = 0;
      virtual HRESULT __stdcall GetApplySelectionFilter (
        /*[out,retval]*/ VARIANT_BOOL * State ) = 0;
      virtual HRESULT __stdcall SetApplySelectionFilter (
        /*[in]*/ VARIANT_BOOL State ) = 0;
      virtual HRESULT __stdcall NewDocument (
        /*[in]*/ BSTR TemplateName,
        /*[in]*/ long PaperSize,
        /*[in]*/ double Width,
        /*[in]*/ double Height,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall INewDocument (
        /*[in]*/ BSTR TemplateName,
        /*[in]*/ long PaperSize,
        /*[in]*/ double Width,
        /*[in]*/ double Height,
        /*[out,retval]*/ struct IModelDoc * * Retval ) = 0;
      virtual HRESULT __stdcall GetDocumentTemplate (
        /*[in]*/ long Mode,
        /*[in]*/ BSTR TemplateName,
        /*[in]*/ long PaperSize,
        /*[in]*/ double Width,
        /*[in]*/ double Height,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall IGetSelectionFiltersCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IGetSelectionFilters (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall ISetSelectionFilters (
        /*[in]*/ long Count,
        /*[in]*/ long * SelType,
        /*[in]*/ VARIANT_BOOL State ) = 0;
      virtual HRESULT __stdcall GetCurrSolidWorksRegSubKey (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SolidWorksExplorer ( ) = 0;
      virtual HRESULT __stdcall GetUserPreferenceStringValue (
        /*[in]*/ long UserPreference,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetUserPreferenceStringValue (
        /*[in]*/ long UserPreference,
        /*[in]*/ BSTR Value,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetCurrentMacroPathName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetOpenDocumentByName (
        /*[in]*/ BSTR DocumentName,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetOpenDocumentByName (
        /*[in]*/ BSTR DocumentName,
        /*[out,retval]*/ struct IModelDoc * * Retval ) = 0;
      virtual HRESULT __stdcall GetCurrentKernelVersions (
        /*[out]*/ BSTR * Version1,
        /*[out]*/ BSTR * Version2,
        /*[out]*/ BSTR * Version3 ) = 0;
      virtual HRESULT __stdcall CreatePrunedModelArchive (
        /*[in]*/ BSTR PathName,
        /*[in]*/ BSTR ZipPathName,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall OpenDoc3 (
        /*[in]*/ BSTR FileName,
        /*[in]*/ long Type,
        /*[in]*/ VARIANT_BOOL ReadOnly,
        /*[in]*/ VARIANT_BOOL ViewOnly,
        /*[in]*/ VARIANT_BOOL RapidDraft,
        /*[in]*/ VARIANT_BOOL Silent,
        /*[in,out]*/ long * Errors,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IOpenDoc3 (
        /*[in]*/ BSTR FileName,
        /*[in]*/ long Type,
        /*[in]*/ VARIANT_BOOL ReadOnly,
        /*[in]*/ VARIANT_BOOL ViewOnly,
        /*[in]*/ VARIANT_BOOL RapidDraft,
        /*[in]*/ VARIANT_BOOL Silent,
        /*[in,out]*/ long * Errors,
        /*[out,retval]*/ struct IModelDoc * * Retval ) = 0;
      virtual HRESULT __stdcall AddToolbar2 (
        /*[in]*/ BSTR ModuleNameIn,
        /*[in]*/ BSTR TitleIn,
        /*[in]*/ long SmallBitmapHandleIn,
        /*[in]*/ long LargeBitmapHandleIn,
        /*[in]*/ long MenuPosIn,
        /*[in]*/ long DecTemplateTypeIn,
        /*[out,retval]*/ long * RetvalOut ) = 0;
      virtual HRESULT __stdcall OpenModelConfiguration (
        /*[in]*/ BSTR PathName,
        /*[in]*/ BSTR ConfigName,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall GetToolbarDock (
        /*[in]*/ BSTR ModuleIn,
        /*[in]*/ long ToolbarIDIn,
        /*[out,retval]*/ long * PDockStateOut ) = 0;
      virtual HRESULT __stdcall SetToolbarDock (
        /*[in]*/ BSTR ModuleIn,
        /*[in]*/ long ToolbarIDIn,
        /*[in]*/ long DocStatePosIn ) = 0;
      virtual HRESULT __stdcall GetMathUtility (
        /*[out,retval]*/ IDispatch * * UtilityOut ) = 0;
      virtual HRESULT __stdcall IGetMathUtility (
        /*[out,retval]*/ struct IMathUtility * * UtilityOut ) = 0;
      virtual HRESULT __stdcall OpenDoc4 (
        /*[in]*/ BSTR FileName,
        /*[in]*/ long Type,
        /*[in]*/ long Options,
        /*[in]*/ BSTR Configuration,
        /*[in,out]*/ long * Errors,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IOpenDoc4 (
        /*[in]*/ BSTR FileName,
        /*[in]*/ long Type,
        /*[in]*/ long Options,
        /*[in]*/ BSTR Configuration,
        /*[in,out]*/ long * Errors,
        /*[out,retval]*/ struct IModelDoc * * Retval ) = 0;
      virtual HRESULT __stdcall IsRapidDraft (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetTemplateSizes (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTemplateSizes (
        /*[in]*/ BSTR FileName,
        /*[out]*/ long * PaperSize,
        /*[out]*/ double * Width,
        /*[out]*/ double * Height,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetColorTable (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetColorTable (
        /*[out,retval]*/ struct IColorTable * * Retval ) = 0;
      virtual HRESULT __stdcall SetMissingReferencePathName (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall GetUserUnit (
        /*[in]*/ long UnitType,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetUserUnit (
        /*[in]*/ long UnitType,
        /*[out,retval]*/ struct IUserUnit * * Retval ) = 0;
      virtual HRESULT __stdcall SetMouseDragMode (
        /*[in]*/ long Command,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetPromptFilename (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall SetAddinCallbackInfo (
        /*[in]*/ long ModuleHandle,
        /*[in]*/ IDispatch * AddinCallbacks,
        /*[in]*/ long Cookie,
        /*[out,retval]*/ VARIANT_BOOL * Status ) = 0;
      virtual HRESULT __stdcall AddMenuItem2 (
        /*[in]*/ long DocumentType,
        /*[in]*/ long Cookie,
        /*[in]*/ BSTR MenuItem,
        /*[in]*/ long Position,
        /*[in]*/ BSTR MenuCallback,
        /*[in]*/ BSTR MenuEnableMethod,
        /*[in]*/ BSTR HintString,
        /*[out,retval]*/ VARIANT_BOOL * IsMenuItemAdded ) = 0;
      virtual HRESULT __stdcall AddToolbar3 (
        /*[in]*/ long Cookie,
        /*[in]*/ BSTR Title,
        /*[in]*/ long SmallBitmapResourceID,
        /*[in]*/ long LargeBitmapResourceID,
        /*[in]*/ long MenuPositionForToolbar,
        /*[in]*/ long DocumentType,
        /*[out,retval]*/ long * NewToolBarID ) = 0;
      virtual HRESULT __stdcall RemoveToolbar2 (
        /*[in]*/ long Cookie,
        /*[in]*/ long ToolbarId,
        /*[out,retval]*/ VARIANT_BOOL * Status ) = 0;
      virtual HRESULT __stdcall AddToolbarCommand2 (
        /*[in]*/ long Cookie,
        /*[in]*/ long ToolbarId,
        /*[in]*/ long ToolbarIndex,
        /*[in]*/ BSTR ButtonCallback,
        /*[in]*/ BSTR ButtonEnableMethod,
        /*[in]*/ BSTR ToolTip,
        /*[in]*/ BSTR HintString,
        /*[out,retval]*/ VARIANT_BOOL * IsToolbarCommandAdded ) = 0;
      virtual HRESULT __stdcall ShowToolbar2 (
        /*[in]*/ long Cookie,
        /*[in]*/ long ToolbarId,
        /*[out,retval]*/ VARIANT_BOOL * Status ) = 0;
      virtual HRESULT __stdcall HideToolbar2 (
        /*[in]*/ long Cookie,
        /*[in]*/ long ToolbarId,
        /*[out,retval]*/ VARIANT_BOOL * Status ) = 0;
      virtual HRESULT __stdcall GetToolbarState2 (
        /*[in]*/ long Cookie,
        /*[in]*/ long ToolbarId,
        /*[in]*/ long ToolbarState,
        /*[out,retval]*/ VARIANT_BOOL * IsInGivenState ) = 0;
      virtual HRESULT __stdcall GetToolbarDock2 (
        /*[in]*/ long Cookie,
        /*[in]*/ long ToolbarId,
        /*[out,retval]*/ long * DockingState ) = 0;
      virtual HRESULT __stdcall SetToolbarDock2 (
        /*[in]*/ long Cookie,
        /*[in]*/ long ToolbarId,
        /*[in]*/ long DockingState,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_IActiveDoc2 (
        /*[out,retval]*/ struct IModelDoc2 * * Retval ) = 0;
      virtual HRESULT __stdcall IActivateDoc3 (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT_BOOL Silent,
        /*[in,out]*/ long * Errors,
        /*[out,retval]*/ struct IModelDoc2 * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstDocument2 (
        /*[out,retval]*/ struct IModelDoc2 * * Retval ) = 0;
      virtual HRESULT __stdcall INewDocument2 (
        /*[in]*/ BSTR TemplateName,
        /*[in]*/ long PaperSize,
        /*[in]*/ double Width,
        /*[in]*/ double Height,
        /*[out,retval]*/ struct IModelDoc2 * * Retval ) = 0;
      virtual HRESULT __stdcall IGetOpenDocumentByName2 (
        /*[in]*/ BSTR DocumentName,
        /*[out,retval]*/ struct IModelDoc2 * * Retval ) = 0;
      virtual HRESULT __stdcall IOpenDoc5 (
        /*[in]*/ BSTR FileName,
        /*[in]*/ long Type,
        /*[in]*/ long Options,
        /*[in]*/ BSTR Configuration,
        /*[in,out]*/ long * Errors,
        /*[out,retval]*/ struct IModelDoc2 * * Retval ) = 0;
      virtual HRESULT __stdcall EnumDocuments2 (
        /*[out,retval]*/ struct IEnumDocuments2 * * Retval ) = 0;
      virtual HRESULT __stdcall CreatePropertyManagerPage (
        /*[in]*/ BSTR Title,
        /*[in]*/ long Options,
        /*[in]*/ IDispatch * Handler,
        /*[in,out]*/ long * Errors,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreatePropertyManagerPage (
        /*[in]*/ BSTR Title,
        /*[in]*/ long Options,
        /*[in]*/ IDispatch * Handler,
        /*[in,out]*/ long * Errors,
        /*[out,retval]*/ struct IPropertyManagerPage2 * * Retval ) = 0;
      virtual HRESULT __stdcall GetAddInObject (
        /*[in]*/ BSTR Clsid,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall GetProcessID (
        /*[out,retval]*/ long * Pid ) = 0;
      virtual HRESULT __stdcall OpenDoc6 (
        /*[in]*/ BSTR FileName,
        /*[in]*/ long Type,
        /*[in]*/ long Options,
        /*[in]*/ BSTR Configuration,
        /*[in,out]*/ long * Errors,
        /*[in,out]*/ long * Warnings,
        /*[out,retval]*/ struct IModelDoc2 * * Retval ) = 0;
      virtual HRESULT __stdcall AddFileOpenItem2 (
        /*[in]*/ long Cookie,
        /*[in]*/ BSTR MethodName,
        /*[in]*/ BSTR Description,
        /*[in]*/ BSTR Extension,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall RemoveFileOpenItem2 (
        /*[in]*/ long Cookie,
        /*[in]*/ BSTR MethodName,
        /*[in]*/ BSTR Description,
        /*[in]*/ BSTR Extension,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddFileSaveAsItem2 (
        /*[in]*/ long Cookie,
        /*[in]*/ BSTR MethodName,
        /*[in]*/ BSTR Description,
        /*[in]*/ BSTR Extension,
        /*[in]*/ long DocumentType,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall RemoveFileSaveAsItem2 (
        /*[in]*/ long Cookie,
        /*[in]*/ BSTR MethodName,
        /*[in]*/ BSTR Description,
        /*[in]*/ BSTR Extension,
        /*[in]*/ long DocumentType,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddMenuPopupItem2 (
        /*[in]*/ long DocumentType,
        /*[in]*/ long Cookie,
        /*[in]*/ long SelectType,
        /*[in]*/ BSTR PopupItemName,
        /*[in]*/ BSTR MenuCallback,
        /*[in]*/ BSTR MenuEnableMethod,
        /*[in]*/ BSTR HintString,
        /*[in]*/ BSTR CustomNames,
        /*[out,retval]*/ VARIANT_BOOL * WasItemAdded ) = 0;
      virtual HRESULT __stdcall RemoveMenuPopupItem2 (
        /*[in]*/ long DocumentType,
        /*[in]*/ long Cookie,
        /*[in]*/ long SelectType,
        /*[in]*/ BSTR PopupItemName,
        /*[in]*/ BSTR MenuCallback,
        /*[in]*/ BSTR MenuEnableMethod,
        /*[in]*/ BSTR HintString,
        /*[in]*/ BSTR CustomNames,
        /*[out,retval]*/ VARIANT_BOOL * WasItemRemoved ) = 0;
      virtual HRESULT __stdcall GetMassProperties2 (
        /*[in]*/ BSTR FilePathName,
        /*[in]*/ BSTR ConfigurationName,
        /*[in]*/ long Accuracy,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetMassProperties2 (
        /*[in]*/ BSTR FilePathName,
        /*[in]*/ BSTR ConfigurationName,
        /*[in]*/ double * MPropsData,
        /*[in]*/ long Accuracy,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall HighlightTBButton (
        /*[in]*/ long CmdID ) = 0;
      virtual HRESULT __stdcall RunMacro (
        /*[in]*/ BSTR FilePathName,
        /*[in]*/ BSTR ModuleName,
        /*[in]*/ BSTR ProcedureName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetConfigurationCount (
        /*[in]*/ BSTR FilePathName,
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetConfigurationNames (
        /*[in]*/ BSTR FilePathName,
        /*[out,retval]*/ VARIANT * ConfigNames ) = 0;
      virtual HRESULT __stdcall IGetConfigurationNames (
        /*[in]*/ BSTR FilePathName,
        /*[in]*/ long Count,
        /*[out,retval]*/ BSTR * ConfigNames ) = 0;
      virtual HRESULT __stdcall GetPreviewBitmap (
        /*[in]*/ BSTR FilePathName,
        /*[in]*/ BSTR ConfigName,
        /*[out,retval]*/ IDispatch * * PreviewBitmap ) = 0;
      virtual HRESULT __stdcall GetExecutablePath (
        /*[out,retval]*/ BSTR * ExePath ) = 0;
      virtual HRESULT __stdcall GetEdition (
        /*[out,retval]*/ long * Edition ) = 0;
      virtual HRESULT __stdcall MoveDocument (
        /*[in]*/ BSTR SourceDoc,
        /*[in]*/ BSTR DestDoc,
        /*[in]*/ VARIANT FromChildren,
        /*[in]*/ VARIANT ToChildren,
        /*[in]*/ long Option,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall CopyDocument (
        /*[in]*/ BSTR SourceDoc,
        /*[in]*/ BSTR DestDoc,
        /*[in]*/ VARIANT FromChildren,
        /*[in]*/ VARIANT ToChildren,
        /*[in]*/ long Option,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IMoveDocument (
        /*[in]*/ BSTR SourceDoc,
        /*[in]*/ BSTR DestDoc,
        /*[in]*/ long ChildCount,
        /*[in]*/ BSTR * FromChildren,
        /*[in]*/ BSTR * ToChildren,
        /*[in]*/ long Option,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall ICopyDocument (
        /*[in]*/ BSTR SourceDoc,
        /*[in]*/ BSTR DestDoc,
        /*[in]*/ long ChildCount,
        /*[in]*/ BSTR * FromChildren,
        /*[in]*/ BSTR * ToChildren,
        /*[in]*/ long Option,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall AddToolbar4 (
        /*[in]*/ long Cookie,
        /*[in]*/ BSTR Title,
        /*[in]*/ BSTR SmallBitmapImage,
        /*[in]*/ BSTR LargeBitmapImage,
        /*[in]*/ long MenuPositionForToolbar,
        /*[in]*/ long DocumentType,
        /*[out,retval]*/ long * NewToolBarID ) = 0;
      virtual HRESULT __stdcall GetActiveConfigurationName (
        /*[in]*/ BSTR FilePathName,
        /*[out,retval]*/ BSTR * ActiveConfigName ) = 0;
      virtual HRESULT __stdcall Command (
        /*[in]*/ long Command,
        /*[in]*/ VARIANT Args,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetRecentFiles (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall ShowBubbleTooltip (
        /*[in]*/ long PointAt,
        /*[in]*/ BSTR FlashButtonIDs,
        /*[in]*/ long TitleResID,
        /*[in]*/ BSTR TitleString,
        /*[in]*/ BSTR MessageString ) = 0;
      virtual HRESULT __stdcall GetMaterialSchemaPathName (
        /*[out,retval]*/ BSTR * Schema ) = 0;
      virtual HRESULT __stdcall GetMaterialDatabases (
        /*[out,retval]*/ VARIANT * DbList ) = 0;
      virtual HRESULT __stdcall GetMaterialDatabaseCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetMaterialDatabases (
        /*[in]*/ long Count,
        /*[out,retval]*/ BSTR * DbList ) = 0;
      virtual HRESULT __stdcall CreateTaskpaneView (
        /*[in]*/ long * Bitmap,
        /*[in]*/ BSTR ToolTip,
        /*[in]*/ IDispatch * PHandler,
        /*[out,retval]*/ struct ITaskpaneView * * Retval ) = 0;
      virtual HRESULT __stdcall ShowBubbleTooltipAt (
        /*[in]*/ long PointX,
        /*[in]*/ long PointY,
        /*[in]*/ long ArrowPos,
        /*[in]*/ BSTR TitleString,
        /*[in]*/ BSTR MessageString,
        /*[in]*/ BSTR UrlLoc ) = 0;
      virtual HRESULT __stdcall InstallQuickTipGuide (
        /*[in]*/ IDispatch * PInterface ) = 0;
      virtual HRESULT __stdcall UnInstallQuickTipGuide (
        /*[in]*/ IDispatch * PInterface ) = 0;
      virtual HRESULT __stdcall RefreshQuickTipWindow ( ) = 0;
      virtual HRESULT __stdcall GetLastToolbarID (
        /*[out,retval]*/ long * CommandID ) = 0;
      virtual HRESULT __stdcall CreatePMPage (
        /*[in]*/ long DialogId,
        /*[in]*/ BSTR Title,
        /*[in]*/ IDispatch * Handler,
        /*[out,retval]*/ struct IPtnrPMPage * * Retval ) = 0;
      virtual HRESULT __stdcall GetUserTypeLibReferenceCount (
        /*[out,retval]*/ long * NCount ) = 0;
      virtual HRESULT __stdcall get_UserTypeLibReferences (
        /*[out,retval]*/ VARIANT * VTlbRef ) = 0;
      virtual HRESULT __stdcall put_UserTypeLibReferences (
        /*[in]*/ VARIANT VTlbRef ) = 0;
      virtual HRESULT __stdcall IGetUserTypeLibReferences (
        /*[in]*/ long NCount,
        /*[out,retval]*/ BSTR * BstrTlbRef ) = 0;
      virtual HRESULT __stdcall ISetUserTypeLibReferences (
        /*[in]*/ long NCount,
        /*[in]*/ BSTR * BstrTlbRef ) = 0;
      virtual HRESULT __stdcall RemoveUserTypeLibReferences (
        /*[in]*/ VARIANT VTlbRef,
        /*[out,retval]*/ VARIANT_BOOL * VbRetval ) = 0;
      virtual HRESULT __stdcall IRemoveUserTypeLibReferences (
        /*[in]*/ long NCount,
        /*[in]*/ BSTR * BstrTlbRef,
        /*[out,retval]*/ VARIANT_BOOL * VbRetval ) = 0;
      virtual HRESULT __stdcall get_UserControlBackground (
        /*[out,retval]*/ VARIANT_BOOL * VbControl ) = 0;
      virtual HRESULT __stdcall put_UserControlBackground (
        /*[in]*/ VARIANT_BOOL VbControl ) = 0;
      virtual HRESULT __stdcall SWGetOpenFileName (
        /*[in]*/ BSTR DialogTitle,
        /*[in]*/ BSTR InitialFileName,
        /*[in]*/ BSTR FileFilter,
        /*[out]*/ long * OpenOptions,
        /*[out]*/ BSTR * ConfigName,
        /*[out]*/ BSTR * DisplayName,
        /*[out,retval]*/ BSTR * FileName ) = 0;
      virtual HRESULT __stdcall ShowTooltip (
        /*[in]*/ BSTR ToolbarName,
        /*[in]*/ long ButtonID,
        /*[in]*/ long SelectIDMask1,
        /*[in]*/ long SelectIDMask2,
        /*[in]*/ BSTR TitleString,
        /*[in]*/ BSTR MessageString ) = 0;
      virtual HRESULT __stdcall AddMenuItem3 (
        /*[in]*/ long DocumentType,
        /*[in]*/ long Cookie,
        /*[in]*/ BSTR MenuItem,
        /*[in]*/ long Position,
        /*[in]*/ BSTR MenuCallback,
        /*[in]*/ BSTR MenuEnableMethod,
        /*[in]*/ BSTR HintString,
        /*[in]*/ BSTR BitmapFilePath,
        /*[out,retval]*/ VARIANT_BOOL * IsMenuItemAdded ) = 0;
      virtual HRESULT __stdcall GetLatestSupportedFileVersion (
        /*[out,retval]*/ long * LatestFileVersion ) = 0;
      virtual HRESULT __stdcall GetOpenedFileInfo (
        /*[out]*/ BSTR * FileName,
        /*[out]*/ long * Options ) = 0;
      virtual HRESULT __stdcall GetOpenDocument (
        /*[in]*/ BSTR DocName,
        /*[out,retval]*/ struct IModelDoc2 * * Retval ) = 0;
      virtual HRESULT __stdcall GetImportFileData (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall LoadFile3 (
        /*[in]*/ BSTR FileName,
        /*[in]*/ BSTR ArgString,
        /*[in]*/ IDispatch * ImportData,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateTaskpaneView2 (
        /*[in]*/ BSTR Bitmap,
        /*[in]*/ BSTR ToolTip,
        /*[out,retval]*/ struct ITaskpaneView * * Retval ) = 0;
      virtual HRESULT __stdcall GetCommandManager (
        /*[in]*/ long Cookie,
        /*[out,retval]*/ struct ICommandManager * * Retval ) = 0;
      virtual HRESULT __stdcall DragToolbarButton (
        /*[in]*/ long SourceToolbar,
        /*[in]*/ long TargetToolbar,
        /*[in]*/ long SourceIndex,
        /*[in]*/ long TargetIndex ) = 0;
      virtual HRESULT __stdcall AddCallback (
        /*[in]*/ long Cookie,
        /*[in]*/ BSTR CallbackFunction ) = 0;
      virtual HRESULT __stdcall RemoveCallback (
        /*[in]*/ long Cookie ) = 0;
      virtual HRESULT __stdcall ShowHelp (
        /*[in]*/ BSTR HelpFile,
        /*[in]*/ long HelpTopic ) = 0;
      virtual HRESULT __stdcall GetErrorMessages (
        /*[out]*/ VARIANT * Msgs,
        /*[out]*/ VARIANT * MsgIDs,
        /*[out]*/ VARIANT * MsgTypes,
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetCurrentMacroPathFolder (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall LoadFile4 (
        /*[in]*/ BSTR FileName,
        /*[in]*/ BSTR ArgString,
        /*[in]*/ IDispatch * ImportData,
        /*[in,out]*/ long * Errors,
        /*[out,retval]*/ struct IModelDoc2 * * Retval ) = 0;
      virtual HRESULT __stdcall get_CommandInProgress (
        /*[out,retval]*/ VARIANT_BOOL * VbControl ) = 0;
      virtual HRESULT __stdcall put_CommandInProgress (
        /*[in]*/ VARIANT_BOOL VbControl ) = 0;
      virtual HRESULT __stdcall CloseAllDocuments (
        /*[in]*/ VARIANT_BOOL IncludeUnsaved,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetCommandID (
        /*[in]*/ BSTR Clsid,
        /*[in]*/ long UserCmdID,
        /*[out,retval]*/ long * CmdID ) = 0;
      virtual HRESULT __stdcall PreviewDocx64 (
        /*[in]*/ __int64 * HWnd,
        /*[in]*/ BSTR FullName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_TaskPaneIsPinned (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_TaskPaneIsPinned (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall GetUserProgressBar (
        /*[out]*/ struct IUserProgressBar * * PProgressBar,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddFileOpenItem3 (
        /*[in]*/ long Cookie,
        /*[in]*/ BSTR MethodName,
        /*[in]*/ BSTR Description,
        /*[in]*/ BSTR Extension,
        /*[in]*/ BSTR OptionLabel,
        /*[in]*/ BSTR OptionMethodName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetCookie (
        /*[in]*/ BSTR AddinClsid,
        /*[in]*/ long ResourceModuleHandle,
        /*[in]*/ IDispatch * AddinCallbacks,
        /*[out,retval]*/ long * Cookie ) = 0;
      virtual HRESULT __stdcall ActivateTaskPane (
        /*[in]*/ long TaskPaneID,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetExportFileData (
        /*[in]*/ long FileType,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall RemoveFromMenu (
        /*[in]*/ long CommandID,
        /*[in]*/ long DocumentType,
        /*[in]*/ long Option,
        /*[in]*/ VARIANT_BOOL RemoveParentMenu,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall RemoveFromPopupMenu (
        /*[in]*/ long CommandID,
        /*[in]*/ long DocumentType,
        /*[in]*/ long SelectionType,
        /*[in]*/ VARIANT_BOOL RemoveParentMenu,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetMenuStrings (
        /*[in]*/ long CommandID,
        /*[in]*/ long DocumentType,
        /*[out]*/ BSTR * ParentMenuName,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall RefreshTaskpaneContent ( ) = 0;
      virtual HRESULT __stdcall PresetNewDrawingParameters (
        /*[in]*/ BSTR DrawingTemplate,
        /*[in]*/ VARIANT_BOOL ShowTemplate,
        /*[in]*/ double Width,
        /*[in]*/ double Height,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ResetPresetDrawingParameters ( ) = 0;
      virtual HRESULT __stdcall GetDocumentVisible (
        /*[in]*/ long Type,
        /*[out,retval]*/ VARIANT_BOOL * DocumentVisibleFlag ) = 0;
      virtual HRESULT __stdcall RunCommand (
        /*[in]*/ long CommandID,
        /*[in]*/ BSTR NewTitle,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_JournalManager (
        /*[out,retval]*/ struct IJournalManager * * JournalMgr ) = 0;
      virtual HRESULT __stdcall HideBubbleTooltip ( ) = 0;
      virtual HRESULT __stdcall GetOpenDocSpec (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall OpenDoc7 (
        /*[in]*/ IDispatch * Specification,
        /*[out,retval]*/ struct IModelDoc2 * * Retval ) = 0;
      virtual HRESULT __stdcall BlockSkinning (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ResumeSkinning (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetMultipleFilenamesPrompt (
        /*[in]*/ VARIANT FileName ) = 0;
      virtual HRESULT __stdcall GetPreviewBitmapFile (
        /*[in]*/ BSTR DocumentPath,
        /*[in]*/ BSTR ConfigName,
        /*[in]*/ BSTR BitMapFile,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DragToolbarButtonFromCommandID (
        /*[in]*/ long CommandID,
        /*[in]*/ long TargetToolbar,
        /*[in]*/ long TargetIndex,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall AddMenuItem4 (
        /*[in]*/ long DocumentType,
        /*[in]*/ long Cookie,
        /*[in]*/ BSTR MenuItem,
        /*[in]*/ long Position,
        /*[in]*/ BSTR MenuCallback,
        /*[in]*/ BSTR MenuEnableMethod,
        /*[in]*/ BSTR HintString,
        /*[in]*/ BSTR BitmapFilePath,
        /*[out,retval]*/ long * CommandID ) = 0;
      virtual HRESULT __stdcall AddMenuPopupItem3 (
        /*[in]*/ long DocumentType,
        /*[in]*/ long Cookie,
        /*[in]*/ long SelectType,
        /*[in]*/ BSTR PopupItemName,
        /*[in]*/ BSTR MenuCallback,
        /*[in]*/ BSTR MenuEnableMethod,
        /*[in]*/ BSTR HintString,
        /*[in]*/ BSTR CustomNames,
        /*[out,retval]*/ long * CommandID ) = 0;
      virtual HRESULT __stdcall GetBuildNumbers (
        /*[out]*/ BSTR * BaseVersion,
        /*[out]*/ BSTR * CurrentVersion ) = 0;
      virtual HRESULT __stdcall put_FrameLeft (
        /*[in]*/ long Left ) = 0;
      virtual HRESULT __stdcall get_FrameLeft (
        /*[out,retval]*/ long * Left ) = 0;
      virtual HRESULT __stdcall put_FrameTop (
        /*[in]*/ long Top ) = 0;
      virtual HRESULT __stdcall get_FrameTop (
        /*[out,retval]*/ long * Top ) = 0;
      virtual HRESULT __stdcall put_FrameWidth (
        /*[in]*/ long Width ) = 0;
      virtual HRESULT __stdcall get_FrameWidth (
        /*[out,retval]*/ long * Width ) = 0;
      virtual HRESULT __stdcall put_FrameHeight (
        /*[in]*/ long Height ) = 0;
      virtual HRESULT __stdcall get_FrameHeight (
        /*[out,retval]*/ long * Height ) = 0;
      virtual HRESULT __stdcall put_FrameState (
        /*[in]*/ long State ) = 0;
      virtual HRESULT __stdcall get_FrameState (
        /*[out,retval]*/ long * State ) = 0;
      virtual HRESULT __stdcall RegisterTrackingDefinition (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ long * TrackingCookie ) = 0;
      virtual HRESULT __stdcall SetNewFilename (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_EnableFileMenu (
        /*[in]*/ VARIANT_BOOL EnableValue ) = 0;
      virtual HRESULT __stdcall get_EnableFileMenu (
        /*[out,retval]*/ VARIANT_BOOL * EnableValue ) = 0;
      virtual HRESULT __stdcall GetCurrentFileUser (
        /*[in]*/ BSTR FilePathName,
        /*[out,retval]*/ BSTR * CurrentUser ) = 0;
      virtual HRESULT __stdcall GetMacroMethods (
        /*[in]*/ BSTR FilePathName,
        /*[in]*/ long Filter,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall EnablePhotoWorksProgressiveRender (
        /*[in]*/ VARIANT_BOOL BEnable ) = 0;
      virtual HRESULT __stdcall RunAttachedMacro (
        /*[in]*/ BSTR FileName,
        /*[in]*/ BSTR ModuleName,
        /*[in]*/ BSTR ProcedureName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall RunMacro2 (
        /*[in]*/ BSTR FilePathName,
        /*[in]*/ BSTR ModuleName,
        /*[in]*/ BSTR ProcedureName,
        /*[in]*/ long Options,
        /*[out]*/ long * Error,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsCommandEnabled (
        /*[in]*/ long CommandID,
        /*[out,retval]*/ VARIANT_BOOL * EnableValue ) = 0;
      virtual HRESULT __stdcall GetDocumentCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetDocuments (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetDocuments (
        /*[in]*/ long NumDocuments,
        /*[out,retval]*/ struct IModelDoc2 * * Retval ) = 0;
};

struct __declspec(uuid("83a33d46-27c5-11ce-bfd4-00400513bb57"))
IModelDoc : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SelectionManager (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall get_ISelectionManager (
        /*[out,retval]*/ struct ISelectionMgr * * Retval ) = 0;
      virtual HRESULT __stdcall put_SelectionManager (
        /*[in]*/ IDispatch * Retval ) = 0;
      virtual HRESULT __stdcall get_ActiveView (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall get_IActiveView (
        /*[out,retval]*/ struct IModelView * * Retval ) = 0;
      virtual HRESULT __stdcall put_ActiveView (
        /*[in]*/ IDispatch * Retval ) = 0;
      virtual HRESULT __stdcall get_LengthUnit (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall put_LengthUnit (
        /*[in]*/ long Retval ) = 0;
      virtual HRESULT __stdcall get_LightSourceUserName (
        /*[in]*/ long ID,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_LightSourceUserName (
        /*[in]*/ long ID,
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall get_LightSourcePropertyValues (
        /*[in]*/ long ID,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall put_LightSourcePropertyValues (
        /*[in]*/ long ID,
        /*[in]*/ VARIANT Retval ) = 0;
      virtual HRESULT __stdcall get_SceneName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_SceneName (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall get_SceneUserName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_SceneUserName (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall FeatureFillet (
        /*[in]*/ double R1,
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ VARIANT_BOOL Ftyp,
        /*[in]*/ VARIANT_BOOL VarRadTyp,
        /*[in]*/ long OverflowType ) = 0;
      virtual HRESULT __stdcall GridOptions (
        /*[in]*/ VARIANT_BOOL DispGrid,
        /*[in]*/ double GridSpacing,
        /*[in]*/ VARIANT_BOOL Snap,
        /*[in]*/ VARIANT_BOOL DotStyle,
        /*[in]*/ short NMajor,
        /*[in]*/ short NMinor,
        /*[in]*/ VARIANT_BOOL Align2edge,
        /*[in]*/ VARIANT_BOOL AngleSnap,
        /*[in]*/ double AngleUnit,
        /*[in]*/ VARIANT_BOOL MinorAuto ) = 0;
      virtual HRESULT __stdcall SetUnits (
        /*[in]*/ short UType,
        /*[in]*/ short FractBase,
        /*[in]*/ short FractDenom,
        /*[in]*/ short SigDigits,
        /*[in]*/ VARIANT_BOOL RoundToFraction ) = 0;
      virtual HRESULT __stdcall LBDownAt (
        /*[in]*/ long Flags,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z ) = 0;
      virtual HRESULT __stdcall LBUpAt (
        /*[in]*/ long Flags,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z ) = 0;
      virtual HRESULT __stdcall DragTo (
        /*[in]*/ long Flags,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z ) = 0;
      virtual HRESULT __stdcall SelectAt (
        /*[in]*/ long Flags,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z ) = 0;
      virtual HRESULT __stdcall CreateLineVB (
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ double Z1,
        /*[in]*/ double X2,
        /*[in]*/ double Y2,
        /*[in]*/ double Z2 ) = 0;
      virtual HRESULT __stdcall CreateLine (
        /*[in]*/ VARIANT P1,
        /*[in]*/ VARIANT P2,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateCenterLineVB (
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ double Z1,
        /*[in]*/ double X2,
        /*[in]*/ double Y2,
        /*[in]*/ double Z2 ) = 0;
      virtual HRESULT __stdcall CreateCenterLine (
        /*[in]*/ VARIANT P1,
        /*[in]*/ VARIANT P2,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateArcVB (
        /*[in]*/ double P1x,
        /*[in]*/ double P1y,
        /*[in]*/ double P1z,
        /*[in]*/ double P2x,
        /*[in]*/ double P2y,
        /*[in]*/ double P2z,
        /*[in]*/ double P3x,
        /*[in]*/ double P3y,
        /*[in]*/ double P3z,
        /*[in]*/ short Dir ) = 0;
      virtual HRESULT __stdcall CreateArc (
        /*[in]*/ VARIANT P1,
        /*[in]*/ VARIANT P2,
        /*[in]*/ VARIANT P3,
        /*[in]*/ short Dir,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateCircleVB (
        /*[in]*/ double P1x,
        /*[in]*/ double P1y,
        /*[in]*/ double P1z,
        /*[in]*/ double Radius ) = 0;
      virtual HRESULT __stdcall CreateCircleByRadius (
        /*[in]*/ VARIANT P1,
        /*[in]*/ double Radius,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetLines (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall SketchTrim (
        /*[in]*/ long Op,
        /*[in]*/ long SelEnd,
        /*[in]*/ double X,
        /*[in]*/ double Y ) = 0;
      virtual HRESULT __stdcall SketchOffsetEdges (
        /*[in]*/ double Val ) = 0;
      virtual HRESULT __stdcall SketchRectangle (
        /*[in]*/ double Val1,
        /*[in]*/ double Val2,
        /*[in]*/ double Z1,
        /*[in]*/ double Val3,
        /*[in]*/ double Val4,
        /*[in]*/ double Z2,
        /*[in]*/ VARIANT_BOOL Val5 ) = 0;
      virtual HRESULT __stdcall SketchPoint (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z ) = 0;
      virtual HRESULT __stdcall FeatureCut (
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2 ) = 0;
      virtual HRESULT __stdcall FeatureBoss (
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2 ) = 0;
      virtual HRESULT __stdcall SimpleHole (
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2 ) = 0;
      virtual HRESULT __stdcall FeatureLinearPattern (
        /*[in]*/ long Num1,
        /*[in]*/ double Spacing1,
        /*[in]*/ long Num2,
        /*[in]*/ double Spacing2,
        /*[in]*/ VARIANT_BOOL FlipDir1,
        /*[in]*/ VARIANT_BOOL FlipDir2,
        /*[in]*/ BSTR DName1,
        /*[in]*/ BSTR DName2 ) = 0;
      virtual HRESULT __stdcall NameView (
        /*[in]*/ BSTR VName ) = 0;
      virtual HRESULT __stdcall ShowNamedView (
        /*[in]*/ BSTR VName ) = 0;
      virtual HRESULT __stdcall CreatePlaneAtOffset (
        /*[in]*/ double Val,
        /*[in]*/ VARIANT_BOOL FlipDir ) = 0;
      virtual HRESULT __stdcall Toolbars (
        /*[in]*/ VARIANT_BOOL M,
        /*[in]*/ VARIANT_BOOL Vw,
        /*[in]*/ VARIANT_BOOL SkMain,
        /*[in]*/ VARIANT_BOOL Sk,
        /*[in]*/ VARIANT_BOOL Feat,
        /*[in]*/ VARIANT_BOOL Constr,
        /*[in]*/ VARIANT_BOOL Macro ) = 0;
      virtual HRESULT __stdcall CreatePlaneAtAngle (
        /*[in]*/ double Val,
        /*[in]*/ VARIANT_BOOL FlipDir ) = 0;
      virtual HRESULT __stdcall SetParamValue (
        /*[in]*/ double Val ) = 0;
      virtual HRESULT __stdcall AddRelation (
        /*[in]*/ BSTR RelStr ) = 0;
      virtual HRESULT __stdcall DeleteAllRelations ( ) = 0;
      virtual HRESULT __stdcall HoleWizard (
        /*[in]*/ double Depth,
        /*[in]*/ short EndType,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long HType,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ double D3,
        /*[in]*/ double D4,
        /*[in]*/ double D5,
        /*[in]*/ double D6,
        /*[in]*/ double D7,
        /*[in]*/ double D8,
        /*[in]*/ double D9,
        /*[in]*/ double D10,
        /*[in]*/ double D11,
        /*[in]*/ double D12 ) = 0;
      virtual HRESULT __stdcall SaveAs (
        /*[in]*/ BSTR NewName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ActivateSelectedFeature ( ) = 0;
      virtual HRESULT __stdcall SelectByName (
        /*[in]*/ long Flags,
        /*[in]*/ BSTR IdStr ) = 0;
      virtual HRESULT __stdcall SketchAddConstraints (
        /*[in]*/ BSTR IdStr ) = 0;
      virtual HRESULT __stdcall SketchConstraintsDel (
        /*[in]*/ long ConstrInd,
        /*[in]*/ BSTR IdStr ) = 0;
      virtual HRESULT __stdcall SketchConstraintsDelAll ( ) = 0;
      virtual HRESULT __stdcall Lock ( ) = 0;
      virtual HRESULT __stdcall UnLock ( ) = 0;
      virtual HRESULT __stdcall InsertFeatureShell (
        /*[in]*/ double Thickness,
        /*[in]*/ VARIANT_BOOL Outward ) = 0;
      virtual HRESULT __stdcall SketchFillet (
        /*[in]*/ double Rad ) = 0;
      virtual HRESULT __stdcall FeatureChamfer (
        /*[in]*/ double Width,
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL Flip ) = 0;
      virtual HRESULT __stdcall InsertMfDraft (
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL FlipDir,
        /*[in]*/ VARIANT_BOOL IsEdgeDraft,
        /*[in]*/ long PropType ) = 0;
      virtual HRESULT __stdcall ParentChildRelationship ( ) = 0;
      virtual HRESULT __stdcall SketchSpline (
        /*[in]*/ long MorePts,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z ) = 0;
      virtual HRESULT __stdcall SelectSketchPoint (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ long Incidence ) = 0;
      virtual HRESULT __stdcall SelectSketchLine (
        /*[in]*/ double X0,
        /*[in]*/ double Y0,
        /*[in]*/ long Inc0,
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ long Inc1 ) = 0;
      virtual HRESULT __stdcall SelectSketchArc (
        /*[in]*/ double X0,
        /*[in]*/ double Y0,
        /*[in]*/ long Inc0,
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ long Inc1,
        /*[in]*/ double XC,
        /*[in]*/ double YC,
        /*[in]*/ long IncC,
        /*[in]*/ long RotDir ) = 0;
      virtual HRESULT __stdcall SelectSketchSpline (
        /*[in]*/ long Size,
        /*[in]*/ double X0,
        /*[in]*/ double Y0,
        /*[in]*/ long Inc0,
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ long Inc1,
        /*[in]*/ double XC,
        /*[in]*/ double YC,
        /*[in]*/ long IncC ) = 0;
      virtual HRESULT __stdcall CreateTangentArc (
        /*[in]*/ double P1x,
        /*[in]*/ double P1y,
        /*[in]*/ double P1z,
        /*[in]*/ double P2x,
        /*[in]*/ double P2y,
        /*[in]*/ double P2z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Create3PointArc (
        /*[in]*/ double P1x,
        /*[in]*/ double P1y,
        /*[in]*/ double P1z,
        /*[in]*/ double P2x,
        /*[in]*/ double P2y,
        /*[in]*/ double P2z,
        /*[in]*/ double P3x,
        /*[in]*/ double P3y,
        /*[in]*/ double P3z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateArcByCenter (
        /*[in]*/ double P1x,
        /*[in]*/ double P1y,
        /*[in]*/ double P1z,
        /*[in]*/ double P2x,
        /*[in]*/ double P2y,
        /*[in]*/ double P2z,
        /*[in]*/ double P3x,
        /*[in]*/ double P3y,
        /*[in]*/ double P3z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateCircle (
        /*[in]*/ double P1x,
        /*[in]*/ double P1y,
        /*[in]*/ double P1z,
        /*[in]*/ double P2x,
        /*[in]*/ double P2y,
        /*[in]*/ double P2z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddDimension (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddHorizontalDimension (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddVerticalDimension (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SelectSketchItem (
        /*[in]*/ long SelOpt,
        /*[in]*/ BSTR Name,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ClearSelection ( ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ BSTR SelID,
        /*[in]*/ BSTR SelParams,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z ) = 0;
      virtual HRESULT __stdcall AndSelect (
        /*[in]*/ BSTR SelID,
        /*[in]*/ BSTR SelParams,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z ) = 0;
      virtual HRESULT __stdcall CreatePoint (
        /*[in]*/ double PointX,
        /*[in]*/ double PointY,
        /*[in]*/ double PointZ,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateLineDB (
        /*[in]*/ double Sx,
        /*[in]*/ double Sy,
        /*[in]*/ double Sz,
        /*[in]*/ double Ex,
        /*[in]*/ double Ey,
        /*[in]*/ double Ez,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateArcDB (
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ double Z1,
        /*[in]*/ double X2,
        /*[in]*/ double Y2,
        /*[in]*/ double Z2,
        /*[in]*/ double X3,
        /*[in]*/ double Y3,
        /*[in]*/ double Z3,
        /*[in]*/ short Dir,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateCircleDB (
        /*[in]*/ double Cx,
        /*[in]*/ double Cy,
        /*[in]*/ double Cz,
        /*[in]*/ double Radius,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreatePointDB (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetTitle (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetPathName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetType (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall InsertObject ( ) = 0;
      virtual HRESULT __stdcall EditClearAll ( ) = 0;
      virtual HRESULT __stdcall EditCopy ( ) = 0;
      virtual HRESULT __stdcall EditCut ( ) = 0;
      virtual HRESULT __stdcall ObjectDisplayContent ( ) = 0;
      virtual HRESULT __stdcall ObjectDisplayAsIcon ( ) = 0;
      virtual HRESULT __stdcall ObjectResetsize ( ) = 0;
      virtual HRESULT __stdcall WindowRedraw ( ) = 0;
      virtual HRESULT __stdcall Dummy3 ( ) = 0;
      virtual HRESULT __stdcall SetPickMode ( ) = 0;
      virtual HRESULT __stdcall ViewRotateminusx ( ) = 0;
      virtual HRESULT __stdcall ViewRotateminusy ( ) = 0;
      virtual HRESULT __stdcall ViewRotateminusz ( ) = 0;
      virtual HRESULT __stdcall ViewRotateplusx ( ) = 0;
      virtual HRESULT __stdcall ViewRotateplusy ( ) = 0;
      virtual HRESULT __stdcall ViewRotateplusz ( ) = 0;
      virtual HRESULT __stdcall ViewTranslateminusx ( ) = 0;
      virtual HRESULT __stdcall ViewTranslateminusy ( ) = 0;
      virtual HRESULT __stdcall ViewTranslateplusx ( ) = 0;
      virtual HRESULT __stdcall ViewTranslateplusy ( ) = 0;
      virtual HRESULT __stdcall ViewRotXMinusNinety ( ) = 0;
      virtual HRESULT __stdcall ViewRotYMinusNinety ( ) = 0;
      virtual HRESULT __stdcall ViewRotYPlusNinety ( ) = 0;
      virtual HRESULT __stdcall ViewZoomin ( ) = 0;
      virtual HRESULT __stdcall ViewZoomout ( ) = 0;
      virtual HRESULT __stdcall ViewDisplayHiddenremoved ( ) = 0;
      virtual HRESULT __stdcall ViewDisplayWireframe ( ) = 0;
      virtual HRESULT __stdcall ViewDisplayShaded ( ) = 0;
      virtual HRESULT __stdcall ViewRwShading ( ) = 0;
      virtual HRESULT __stdcall ViewOglShading ( ) = 0;
      virtual HRESULT __stdcall ViewZoomtofit ( ) = 0;
      virtual HRESULT __stdcall ViewRotate ( ) = 0;
      virtual HRESULT __stdcall ViewTranslate ( ) = 0;
      virtual HRESULT __stdcall ViewZoomto ( ) = 0;
      virtual HRESULT __stdcall ViewDisplayHiddengreyed ( ) = 0;
      virtual HRESULT __stdcall ViewDisplayFaceted ( ) = 0;
      virtual HRESULT __stdcall ViewConstraint ( ) = 0;
      virtual HRESULT __stdcall UserFavors ( ) = 0;
      virtual HRESULT __stdcall FeatureCirPattern (
        /*[in]*/ long Num,
        /*[in]*/ double Spacing,
        /*[in]*/ VARIANT_BOOL FlipDir,
        /*[in]*/ BSTR DName ) = 0;
      virtual HRESULT __stdcall EditSketch ( ) = 0;
      virtual HRESULT __stdcall FeatEdit ( ) = 0;
      virtual HRESULT __stdcall FeatEditDef ( ) = 0;
      virtual HRESULT __stdcall InsertPoint ( ) = 0;
      virtual HRESULT __stdcall InsertFamilyTableNew ( ) = 0;
      virtual HRESULT __stdcall Dummy1 ( ) = 0;
      virtual HRESULT __stdcall InsertFamilyTableEdit ( ) = 0;
      virtual HRESULT __stdcall Dummy2 ( ) = 0;
      virtual HRESULT __stdcall ToolsMacro ( ) = 0;
      virtual HRESULT __stdcall ToolsGrid ( ) = 0;
      virtual HRESULT __stdcall SketchCenterline ( ) = 0;
      virtual HRESULT __stdcall SketchAlign ( ) = 0;
      virtual HRESULT __stdcall SketchArc ( ) = 0;
      virtual HRESULT __stdcall SketchTangentArc ( ) = 0;
      virtual HRESULT __stdcall SketchCircle ( ) = 0;
      virtual HRESULT __stdcall SketchUndo ( ) = 0;
      virtual HRESULT __stdcall UserPreferences ( ) = 0;
      virtual HRESULT __stdcall Lights ( ) = 0;
      virtual HRESULT __stdcall SketchConstrainCoincident ( ) = 0;
      virtual HRESULT __stdcall SketchConstrainConcentric ( ) = 0;
      virtual HRESULT __stdcall SketchConstrainPerp ( ) = 0;
      virtual HRESULT __stdcall SketchConstrainTangent ( ) = 0;
      virtual HRESULT __stdcall SketchConstrainParallel ( ) = 0;
      virtual HRESULT __stdcall SketchUseEdge ( ) = 0;
      virtual HRESULT __stdcall SketchUseEdgeCtrline ( ) = 0;
      virtual HRESULT __stdcall SketchMirror ( ) = 0;
      virtual HRESULT __stdcall Save ( ) = 0;
      virtual HRESULT __stdcall Close ( ) = 0;
      virtual HRESULT __stdcall ViewDispRefaxes ( ) = 0;
      virtual HRESULT __stdcall ViewDispRefplanes ( ) = 0;
      virtual HRESULT __stdcall InsertSketch ( ) = 0;
      virtual HRESULT __stdcall InsertProtrusionSwept (
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ VARIANT_BOOL Alignment,
        /*[in]*/ VARIANT_BOOL KeepNormalConstant ) = 0;
      virtual HRESULT __stdcall InsertProtrusionBlend (
        /*[in]*/ VARIANT_BOOL Closed ) = 0;
      virtual HRESULT __stdcall ToolsMassProps ( ) = 0;
      virtual HRESULT __stdcall ShowPropertySheet ( ) = 0;
      virtual HRESULT __stdcall BlankRefGeom ( ) = 0;
      virtual HRESULT __stdcall UnBlankRefGeom ( ) = 0;
      virtual HRESULT __stdcall EditDelete ( ) = 0;
      virtual HRESULT __stdcall InsertProjectedSketch ( ) = 0;
      virtual HRESULT __stdcall CreatePlaneFixed (
        /*[in]*/ VARIANT P1,
        /*[in]*/ VARIANT P2,
        /*[in]*/ VARIANT P3,
        /*[in]*/ VARIANT_BOOL UseGlobal,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Dummy5 ( ) = 0;
      virtual HRESULT __stdcall Dummy6 ( ) = 0;
      virtual HRESULT __stdcall DebugCheckBody ( ) = 0;
      virtual HRESULT __stdcall Dummy8 ( ) = 0;
      virtual HRESULT __stdcall DimPreferences ( ) = 0;
      virtual HRESULT __stdcall UnblankSketch ( ) = 0;
      virtual HRESULT __stdcall EditSketchOrSingleSketchFeature ( ) = 0;
      virtual HRESULT __stdcall DebugCheckIgesGeom ( ) = 0;
      virtual HRESULT __stdcall BlankSketch ( ) = 0;
      virtual HRESULT __stdcall GetDefaultTextHeight (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IsActive (
        /*[in]*/ BSTR CompStr,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateEllipse (
        /*[in]*/ VARIANT Center,
        /*[in]*/ VARIANT Major,
        /*[in]*/ VARIANT Minor,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateEllipseVB (
        /*[in]*/ double CenterX,
        /*[in]*/ double CenterY,
        /*[in]*/ double CenterZ,
        /*[in]*/ double MajorX,
        /*[in]*/ double MajorY,
        /*[in]*/ double MajorZ,
        /*[in]*/ double MinorX,
        /*[in]*/ double MinorY,
        /*[in]*/ double MinorZ,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateEllipticalArcByCenter (
        /*[in]*/ VARIANT Center,
        /*[in]*/ VARIANT Major,
        /*[in]*/ VARIANT Minor,
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT End,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateEllipticalArcByCenterVB (
        /*[in]*/ double CenterX,
        /*[in]*/ double CenterY,
        /*[in]*/ double CenterZ,
        /*[in]*/ double MajorX,
        /*[in]*/ double MajorY,
        /*[in]*/ double MajorZ,
        /*[in]*/ double MinorX,
        /*[in]*/ double MinorY,
        /*[in]*/ double MinorZ,
        /*[in]*/ double StartX,
        /*[in]*/ double StartY,
        /*[in]*/ double StartZ,
        /*[in]*/ double EndX,
        /*[in]*/ double EndY,
        /*[in]*/ double EndZ,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetActiveSketch (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetActiveSketch (
        /*[out,retval]*/ struct ISketch * * Retval ) = 0;
      virtual HRESULT __stdcall GetTessellationQuality (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetTessellationQuality (
        /*[in]*/ long QualityNum ) = 0;
      virtual HRESULT __stdcall Parameter (
        /*[in]*/ BSTR StringIn,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IParameter (
        /*[in]*/ BSTR StringIn,
        /*[out,retval]*/ struct IDimension * * Retval ) = 0;
      virtual HRESULT __stdcall SelectByID (
        /*[in]*/ BSTR SelID,
        /*[in]*/ BSTR SelParams,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AndSelectByID (
        /*[in]*/ BSTR SelID,
        /*[in]*/ BSTR SelParams,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Insert3DSketch ( ) = 0;
      virtual HRESULT __stdcall GetLightSourceName (
        /*[in]*/ long ID,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall AddLightSource (
        /*[in]*/ BSTR IdName,
        /*[in]*/ int LTyp,
        /*[in]*/ BSTR UserName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddLightSourceExtProperty (
        /*[in]*/ long ID,
        /*[in]*/ VARIANT PropertyExtension,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall ResetLightSourceExtProperty (
        /*[in]*/ long ID ) = 0;
      virtual HRESULT __stdcall DeleteLightSource (
        /*[in]*/ long ID ) = 0;
      virtual HRESULT __stdcall GetLightSourceExtProperty (
        /*[in]*/ long ID,
        /*[in]*/ long PropertyId,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall AddLightToScene (
        /*[in]*/ BSTR LpszNewValue,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall AddSceneExtProperty (
        /*[in]*/ VARIANT PropertyExtension,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall ResetSceneExtProperty ( ) = 0;
      virtual HRESULT __stdcall GetSceneExtProperty (
        /*[in]*/ long PropertyId,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall FileSummaryInfo ( ) = 0;
      virtual HRESULT __stdcall GetGridSettings (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall ToolsSketchTranslate ( ) = 0;
      virtual HRESULT __stdcall ToolsDistance ( ) = 0;
      virtual HRESULT __stdcall SkToolsAutoConstr ( ) = 0;
      virtual HRESULT __stdcall ToolsSketchScale ( ) = 0;
      virtual HRESULT __stdcall Paste ( ) = 0;
      virtual HRESULT __stdcall ToolsConfiguration ( ) = 0;
      virtual HRESULT __stdcall EntityProperties ( ) = 0;
      virtual HRESULT __stdcall GetArcCentersDisplayed (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetArcCentersDisplayed (
        /*[in]*/ VARIANT_BOOL Setting ) = 0;
      virtual HRESULT __stdcall AutoSolveToggle ( ) = 0;
      virtual HRESULT __stdcall Dummy7 ( ) = 0;
      virtual HRESULT __stdcall IGetLines (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetLineCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall ICreateEllipse (
        /*[in]*/ double * Center,
        /*[in]*/ double * Major,
        /*[in]*/ double * Minor ) = 0;
      virtual HRESULT __stdcall ICreateEllipticalArcByCenter (
        /*[in]*/ double * Center,
        /*[in]*/ double * Major,
        /*[in]*/ double * Minor,
        /*[in]*/ double * Start,
        /*[in]*/ double * End ) = 0;
      virtual HRESULT __stdcall get_ILightSourcePropertyValues (
        /*[in]*/ long ID,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_ILightSourcePropertyValues (
        /*[in]*/ long ID,
        /*[in]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall InsertCutSwept (
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ VARIANT_BOOL Alignment,
        /*[in]*/ VARIANT_BOOL KeepNormalConstant ) = 0;
      virtual HRESULT __stdcall InsertCutBlend (
        /*[in]*/ VARIANT_BOOL Closed ) = 0;
      virtual HRESULT __stdcall InsertHelix (
        /*[in]*/ VARIANT_BOOL Reversed,
        /*[in]*/ VARIANT_BOOL Clockwised,
        /*[in]*/ VARIANT_BOOL Tapered,
        /*[in]*/ VARIANT_BOOL Outward,
        /*[in]*/ long Helixdef,
        /*[in]*/ double Height,
        /*[in]*/ double Pitch,
        /*[in]*/ double Revolution,
        /*[in]*/ double TaperAngle,
        /*[in]*/ double Startangle ) = 0;
      virtual HRESULT __stdcall ICreateLine (
        /*[in]*/ double * P1,
        /*[in]*/ double * P2 ) = 0;
      virtual HRESULT __stdcall ICreateCenterLine (
        /*[in]*/ double * P1,
        /*[in]*/ double * P2 ) = 0;
      virtual HRESULT __stdcall ICreateArc (
        /*[in]*/ double * P1,
        /*[in]*/ double * P2,
        /*[in]*/ double * P3,
        /*[in]*/ short Dir ) = 0;
      virtual HRESULT __stdcall ICreateCircleByRadius (
        /*[in]*/ double * P1,
        /*[in]*/ double Radius ) = 0;
      virtual HRESULT __stdcall GraphicsRedraw ( ) = 0;
      virtual HRESULT __stdcall GetVisibilityOfConstructPlanes (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetDisplayWhenAdded (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetDisplayWhenAdded (
        /*[in]*/ VARIANT_BOOL Setting ) = 0;
      virtual HRESULT __stdcall GetAddToDB (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetAddToDB (
        /*[in]*/ VARIANT_BOOL Setting ) = 0;
      virtual HRESULT __stdcall DeSelectByID (
        /*[in]*/ BSTR SelID,
        /*[in]*/ BSTR SelParams,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall PrintDirect ( ) = 0;
      virtual HRESULT __stdcall PrintPreview ( ) = 0;
      virtual HRESULT __stdcall Quit ( ) = 0;
      virtual HRESULT __stdcall CreatePlaneThru3Points ( ) = 0;
      virtual HRESULT __stdcall ViewRotXPlusNinety ( ) = 0;
      virtual HRESULT __stdcall GetUnits (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall SetAngularUnits (
        /*[in]*/ short UType,
        /*[in]*/ short FractBase,
        /*[in]*/ short FractDenom,
        /*[in]*/ short SigDigits ) = 0;
      virtual HRESULT __stdcall GetAngularUnits (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetUnits (
        /*[out,retval]*/ short * Retval ) = 0;
      virtual HRESULT __stdcall ISetAngularUnits (
        /*[in]*/ short UType,
        /*[in]*/ short FractBase,
        /*[in]*/ short FractDenom,
        /*[in]*/ short SigDigits ) = 0;
      virtual HRESULT __stdcall IGetAngularUnits (
        /*[out,retval]*/ short * Retval ) = 0;
      virtual HRESULT __stdcall ShowConfiguration (
        /*[in]*/ BSTR ConfigurationName ) = 0;
      virtual HRESULT __stdcall ResetConfiguration ( ) = 0;
      virtual HRESULT __stdcall AddConfiguration (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR Comment,
        /*[in]*/ BSTR AlternateName,
        /*[in]*/ VARIANT_BOOL SuppressByDefault,
        /*[in]*/ VARIANT_BOOL HideByDefault,
        /*[in]*/ VARIANT_BOOL MinFeatureManager,
        /*[in]*/ VARIANT_BOOL InheritProperties,
        /*[in]*/ unsigned long Flags ) = 0;
      virtual HRESULT __stdcall DeleteConfiguration (
        /*[in]*/ BSTR ConfigurationName ) = 0;
      virtual HRESULT __stdcall EditConfiguration (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR NewName,
        /*[in]*/ BSTR Comment,
        /*[in]*/ BSTR AlternateName,
        /*[in]*/ VARIANT_BOOL SuppressByDefault,
        /*[in]*/ VARIANT_BOOL HideByDefault,
        /*[in]*/ VARIANT_BOOL MinFeatureManager,
        /*[in]*/ VARIANT_BOOL InheritProperties,
        /*[in]*/ unsigned long Flags ) = 0;
      virtual HRESULT __stdcall CreatePlanePerCurveAndPassPoint (
        /*[in]*/ VARIANT_BOOL OrigAtCurve ) = 0;
      virtual HRESULT __stdcall CreateFeatureMgrView (
        /*[in]*/ long * Bitmap,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall AddFeatureMgrView (
        /*[in]*/ long * Bitmap,
        /*[in]*/ long * AppView,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetStandardViewRotation (
        /*[in]*/ long ViewId,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetStandardViewRotation (
        /*[in]*/ long ViewId,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall FeatureExtruRefSurface (
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2 ) = 0;
      virtual HRESULT __stdcall IGet3rdPartyStorage (
        /*[in]*/ BSTR StringIn,
        /*[in]*/ VARIANT_BOOL IsStoring,
        /*[out,retval]*/ IUnknown * * Retval ) = 0;
      virtual HRESULT __stdcall DeleteFeatureMgrView (
        /*[in]*/ long * AppView ) = 0;
      virtual HRESULT __stdcall GetMassProperties (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetMassProperties (
        /*[in]*/ double * MPropsData,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetLightSourceCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetLightSourceIdFromName (
        /*[in]*/ BSTR LightName,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetNextSelectionGroupId (
        /*[in]*/ long ID ) = 0;
      virtual HRESULT __stdcall ISetNextSelectionGroupId (
        /*[in]*/ long ID ) = 0;
      virtual HRESULT __stdcall InsertMidSurfaceExt (
        /*[in]*/ double Placement,
        /*[in]*/ VARIANT_BOOL KnitFlag,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IInsertMidSurfaceExt (
        /*[in]*/ double Placement,
        /*[in]*/ VARIANT_BOOL KnitFlag,
        /*[out,retval]*/ struct IMidSurface * * Retval ) = 0;
      virtual HRESULT __stdcall ICreatePlaneFixed (
        /*[in]*/ double * P1,
        /*[in]*/ double * P2,
        /*[in]*/ double * P3,
        /*[in]*/ VARIANT_BOOL UseGlobal ) = 0;
      virtual HRESULT __stdcall SelectByMark (
        /*[in]*/ BSTR SelID,
        /*[in]*/ BSTR SelParams,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in]*/ long Mark,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AndSelectByMark (
        /*[in]*/ BSTR SelID,
        /*[in]*/ BSTR SelParams,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in]*/ long Mark,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetDependencies (
        /*[in]*/ long Traverseflag,
        /*[in]*/ long Searchflag,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetDependencies (
        /*[in]*/ long Traverseflag,
        /*[in]*/ long Searchflag,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetNumDependencies (
        /*[in]*/ long Traverseflag,
        /*[in]*/ long Searchflag,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IGetNumDependencies (
        /*[in]*/ long Traverseflag,
        /*[in]*/ long Searchflag,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall FirstFeature (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IFirstFeature (
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall UnderiveSketch ( ) = 0;
      virtual HRESULT __stdcall DeriveSketch ( ) = 0;
      virtual HRESULT __stdcall IsExploded (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DeleteSelection (
        /*[in]*/ VARIANT_BOOL ConfirmFlag,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DeleteNamedView (
        /*[in]*/ BSTR ViewName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetLightSourceName (
        /*[in]*/ long ID,
        /*[in]*/ BSTR NewName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Insert3DSplineCurve (
        /*[in]*/ VARIANT_BOOL CurveClosed ) = 0;
      virtual HRESULT __stdcall SetLightSourcePropertyValuesVB (
        /*[in]*/ BSTR IdName,
        /*[in]*/ int LType,
        /*[in]*/ double Diff,
        /*[in]*/ long RgbColor,
        /*[in]*/ double Dist,
        /*[in]*/ double DirX,
        /*[in]*/ double DirY,
        /*[in]*/ double DirZ,
        /*[in]*/ double SpotDirX,
        /*[in]*/ double SpotDirY,
        /*[in]*/ double SpotDirZ,
        /*[in]*/ double SpotAngle,
        /*[in]*/ double FallOff0,
        /*[in]*/ double FallOff1,
        /*[in]*/ double FallOff2,
        /*[in]*/ double Ambient,
        /*[in]*/ double Specular,
        /*[in]*/ double SpotExponent,
        /*[in]*/ VARIANT_BOOL BDisable,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ICreateFeatureMgrView (
        /*[in]*/ long * Bitmap,
        /*[out,retval]*/ struct IFeatMgrView * * Retval ) = 0;
      virtual HRESULT __stdcall SelectedEdgeProperties (
        /*[in]*/ BSTR EdgeName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SelectedFaceProperties (
        /*[in]*/ long RgbColor,
        /*[in]*/ double Ambient,
        /*[in]*/ double Diffuse,
        /*[in]*/ double Specular,
        /*[in]*/ double Shininess,
        /*[in]*/ double Transparency,
        /*[in]*/ double Emission,
        /*[in]*/ VARIANT_BOOL UsePartProps,
        /*[in]*/ BSTR FaceName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SelectedFeatureProperties (
        /*[in]*/ long RgbColor,
        /*[in]*/ double Ambient,
        /*[in]*/ double Diffuse,
        /*[in]*/ double Specular,
        /*[in]*/ double Shininess,
        /*[in]*/ double Transparency,
        /*[in]*/ double Emission,
        /*[in]*/ VARIANT_BOOL UsePartProps,
        /*[in]*/ VARIANT_BOOL Suppressed,
        /*[in]*/ BSTR FeatureName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertSplitLineSil ( ) = 0;
      virtual HRESULT __stdcall InsertSplitLineProject (
        /*[in]*/ VARIANT_BOOL IsDirectional,
        /*[in]*/ VARIANT_BOOL FlipDir ) = 0;
      virtual HRESULT __stdcall InsertRib (
        /*[in]*/ VARIANT_BOOL Is2Sided,
        /*[in]*/ VARIANT_BOOL ReverseThicknessDir,
        /*[in]*/ double Thickness,
        /*[in]*/ long ReferenceEdgeIndex,
        /*[in]*/ VARIANT_BOOL ReverseMaterialDir,
        /*[in]*/ VARIANT_BOOL IsDrafted,
        /*[in]*/ VARIANT_BOOL DraftOutward,
        /*[in]*/ double DraftAngle ) = 0;
      virtual HRESULT __stdcall AddRadialDimension (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddDiameterDimension (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetModelViewNames (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetModelViewNames (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetModelViewCount (
        /*[out,retval]*/ int * Retval ) = 0;
      virtual HRESULT __stdcall GetUserPreferenceDoubleValue (
        /*[in]*/ long UserPreferenceValue,
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall SetUserPreferenceDoubleValue (
        /*[in]*/ long UserPreferenceValue,
        /*[in]*/ double Value,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ViewDisplayCurvature ( ) = 0;
      virtual HRESULT __stdcall Scale ( ) = 0;
      virtual HRESULT __stdcall AddIns ( ) = 0;
      virtual HRESULT __stdcall InsertCurveFile (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertCurveFileBegin ( ) = 0;
      virtual HRESULT __stdcall InsertCurveFilePoint (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertCurveFileEnd (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ChangeSketchPlane (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ViewOrientationUndo ( ) = 0;
      virtual HRESULT __stdcall PrintOut (
        /*[in]*/ long FromPage,
        /*[in]*/ long ToPage,
        /*[in]*/ long NumCopies,
        /*[in]*/ VARIANT_BOOL Collate,
        /*[in]*/ BSTR Printer,
        /*[in]*/ double Scale,
        /*[in]*/ VARIANT_BOOL PrintToFile ) = 0;
      virtual HRESULT __stdcall SketchOffsetEntities (
        /*[in]*/ double Offset,
        /*[in]*/ VARIANT_BOOL Flip ) = 0;
      virtual HRESULT __stdcall InsertLibraryFeature (
        /*[in]*/ BSTR LibFeatPartNameIn ) = 0;
      virtual HRESULT __stdcall SketchModifyTranslate (
        /*[in]*/ double StartX,
        /*[in]*/ double StartY,
        /*[in]*/ double EndX,
        /*[in]*/ double EndY ) = 0;
      virtual HRESULT __stdcall SketchModifyRotate (
        /*[in]*/ double CenterX,
        /*[in]*/ double CenterY,
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall SketchModifyFlip (
        /*[in]*/ int AxisFlag ) = 0;
      virtual HRESULT __stdcall SketchModifyScale (
        /*[in]*/ double ScaleFactor,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetActiveConfiguration (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetActiveConfiguration (
        /*[out,retval]*/ struct IConfiguration * * Retval ) = 0;
      virtual HRESULT __stdcall GetUserPreferenceToggle (
        /*[in]*/ long UserPreferenceToggle,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetUserPreferenceToggle (
        /*[in]*/ long UserPreferenceValue,
        /*[in]*/ VARIANT_BOOL OnFlag,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertSweepRefSurface (
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ short TwistCtrlOption,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational ) = 0;
      virtual HRESULT __stdcall InsertLoftRefSurface (
        /*[in]*/ VARIANT_BOOL Closed,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational ) = 0;
      virtual HRESULT __stdcall InsertProtrusionSwept2 (
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ VARIANT_BOOL Alignment,
        /*[in]*/ short TwistCtrlOption,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational ) = 0;
      virtual HRESULT __stdcall InsertProtrusionBlend2 (
        /*[in]*/ VARIANT_BOOL Closed,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational ) = 0;
      virtual HRESULT __stdcall InsertCutSwept2 (
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ VARIANT_BOOL Alignment,
        /*[in]*/ short TwistCtrlOption,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational ) = 0;
      virtual HRESULT __stdcall InsertCutBlend2 (
        /*[in]*/ VARIANT_BOOL Closed,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational ) = 0;
      virtual HRESULT __stdcall IsEditingSelf (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ShowNamedView2 (
        /*[in]*/ BSTR VName,
        /*[in]*/ long ViewId ) = 0;
      virtual HRESULT __stdcall InsertDome (
        /*[in]*/ double Height,
        /*[in]*/ VARIANT_BOOL ReverseDir,
        /*[in]*/ VARIANT_BOOL DoEllipticSurface ) = 0;
      virtual HRESULT __stdcall get_MaterialUserName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_MaterialUserName (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall get_MaterialIdName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_MaterialIdName (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall get_MaterialPropertyValues (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall put_MaterialPropertyValues (
        /*[in]*/ VARIANT Retval ) = 0;
      virtual HRESULT __stdcall get_IMaterialPropertyValues (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_IMaterialPropertyValues (
        /*[in]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall AddPropertyExtension (
        /*[in]*/ VARIANT PropertyExtension,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetPropertyExtension (
        /*[in]*/ long ID,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall ResetPropertyExtension ( ) = 0;
      virtual HRESULT __stdcall GetUpdateStamp (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall ViewZoomTo2 (
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ double Z1,
        /*[in]*/ double X2,
        /*[in]*/ double Y2,
        /*[in]*/ double Z2 ) = 0;
      virtual HRESULT __stdcall ScreenRotate ( ) = 0;
      virtual HRESULT __stdcall get_PrintSetup (
        /*[in]*/ long SetupType,
        /*[out,retval]*/ short * SetupValue ) = 0;
      virtual HRESULT __stdcall put_PrintSetup (
        /*[in]*/ long SetupType,
        /*[in]*/ short SetupValue ) = 0;
      virtual HRESULT __stdcall GraphicsRedraw2 ( ) = 0;
      virtual HRESULT __stdcall InsertCosmeticThread (
        /*[in]*/ short Type,
        /*[in]*/ double Depth,
        /*[in]*/ double Length,
        /*[in]*/ BSTR Note ) = 0;
      virtual HRESULT __stdcall HideCosmeticThread ( ) = 0;
      virtual HRESULT __stdcall ShowCosmeticThread ( ) = 0;
      virtual HRESULT __stdcall SimpleHole2 (
        /*[in]*/ double Dia,
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2 ) = 0;
      virtual HRESULT __stdcall IRelease3rdPartyStorage (
        /*[in]*/ BSTR StringIn ) = 0;
      virtual HRESULT __stdcall FeatureRevolve2 (
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL ReverseDir,
        /*[in]*/ double Angle2,
        /*[in]*/ long RevType,
        /*[in]*/ long Options,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall FeatureRevolveCut2 (
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL ReverseDir,
        /*[in]*/ double Angle2,
        /*[in]*/ long RevType,
        /*[in]*/ long Options,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetSaveFlag ( ) = 0;
      virtual HRESULT __stdcall GetExternalReferenceName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SelectByRay (
        /*[in]*/ VARIANT DoubleInfoIn,
        /*[in]*/ long TypeWanted,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ISelectByRay (
        /*[in]*/ double * PointIn,
        /*[in]*/ double * VectorIn,
        /*[in]*/ double RadiusIn,
        /*[in]*/ long TypeWanted,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetSceneBkgDIB (
        /*[in]*/ long L_dib ) = 0;
      virtual HRESULT __stdcall get_SceneBkgImageFileName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_SceneBkgImageFileName (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall InsertBkgImage (
        /*[in]*/ BSTR NewName ) = 0;
      virtual HRESULT __stdcall DeleteBkgImage ( ) = 0;
      virtual HRESULT __stdcall InsertSplinePoint (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z ) = 0;
      virtual HRESULT __stdcall InsertLoftRefSurface2 (
        /*[in]*/ VARIANT_BOOL Closed,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational,
        /*[in]*/ double TessToleranceFactor,
        /*[in]*/ short StartMatchingType,
        /*[in]*/ short EndMatchingType ) = 0;
      virtual HRESULT __stdcall InsertProtrusionBlend3 (
        /*[in]*/ VARIANT_BOOL Closed,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational,
        /*[in]*/ double TessToleranceFactor,
        /*[in]*/ short StartMatchingType,
        /*[in]*/ short EndMatchingType ) = 0;
      virtual HRESULT __stdcall InsertCutBlend3 (
        /*[in]*/ VARIANT_BOOL Closed,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational,
        /*[in]*/ double TessToleranceFactor,
        /*[in]*/ short StartMatchingType,
        /*[in]*/ short EndMatchingType ) = 0;
      virtual HRESULT __stdcall AlignDimensions ( ) = 0;
      virtual HRESULT __stdcall BreakDimensionAlignment ( ) = 0;
      virtual HRESULT __stdcall SketchFillet1 (
        /*[in]*/ double Rad ) = 0;
      virtual HRESULT __stdcall FeatureChamferType (
        /*[in]*/ short ChamferType,
        /*[in]*/ double Width,
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ double OtherDist,
        /*[in]*/ double VertexChamDist1,
        /*[in]*/ double VertexChamDist2,
        /*[in]*/ double VertexChamDist3 ) = 0;
      virtual HRESULT __stdcall FeatureCutThin (
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2,
        /*[in]*/ double Thk1,
        /*[in]*/ double Thk2,
        /*[in]*/ double EndThk,
        /*[in]*/ long RevThinDir,
        /*[in]*/ long CapEnds,
        /*[in]*/ VARIANT_BOOL AddBends,
        /*[in]*/ double BendRad ) = 0;
      virtual HRESULT __stdcall FeatureBossThin (
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2,
        /*[in]*/ double Thk1,
        /*[in]*/ double Thk2,
        /*[in]*/ double EndThk,
        /*[in]*/ long RevThinDir,
        /*[in]*/ long CapEnds,
        /*[in]*/ VARIANT_BOOL AddBends,
        /*[in]*/ double BendRad ) = 0;
      virtual HRESULT __stdcall InsertDatumTargetSymbol (
        /*[in]*/ BSTR Datum1,
        /*[in]*/ BSTR Datum2,
        /*[in]*/ BSTR Datum3,
        /*[in]*/ short AreaStyle,
        /*[in]*/ VARIANT_BOOL AreaOutside,
        /*[in]*/ double Value1,
        /*[in]*/ double Value2,
        /*[in]*/ BSTR ValueStr1,
        /*[in]*/ BSTR ValueStr2,
        /*[in]*/ VARIANT_BOOL ArrowsSmart,
        /*[in]*/ short ArrowStyle,
        /*[in]*/ short LeaderLineStyle,
        /*[in]*/ VARIANT_BOOL LeaderBent,
        /*[in]*/ VARIANT_BOOL ShowArea,
        /*[in]*/ VARIANT_BOOL ShowSymbol,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall EditDatumTargetSymbol (
        /*[in]*/ BSTR Datum1,
        /*[in]*/ BSTR Datum2,
        /*[in]*/ BSTR Datum3,
        /*[in]*/ short AreaStyle,
        /*[in]*/ VARIANT_BOOL AreaOutside,
        /*[in]*/ double Value1,
        /*[in]*/ double Value2,
        /*[in]*/ BSTR ValueStr1,
        /*[in]*/ BSTR ValueStr2,
        /*[in]*/ VARIANT_BOOL ArrowsSmart,
        /*[in]*/ short ArrowStyle,
        /*[in]*/ short LeaderLineStyle,
        /*[in]*/ VARIANT_BOOL LeaderBent,
        /*[in]*/ VARIANT_BOOL ShowArea,
        /*[in]*/ VARIANT_BOOL ShowSymbol,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertBOMBalloon ( ) = 0;
      virtual HRESULT __stdcall FeatureReferenceCurve (
        /*[in]*/ long NumOfCurves,
        /*[in]*/ VARIANT BaseCurves,
        /*[in]*/ VARIANT_BOOL Merge,
        /*[in]*/ BSTR FromFileName,
        /*[out]*/ long * ErrorCode,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IFeatureReferenceCurve (
        /*[in]*/ long NumOfCurves,
        /*[in]*/ struct ICurve * * * BaseCurves,
        /*[in]*/ VARIANT_BOOL Merge,
        /*[in]*/ BSTR FromFileName,
        /*[out]*/ long * ErrorCode,
        /*[out,retval]*/ struct IReferenceCurve * * Retval ) = 0;
      virtual HRESULT __stdcall FontBold (
        /*[in]*/ VARIANT_BOOL Bold ) = 0;
      virtual HRESULT __stdcall FontItalic (
        /*[in]*/ VARIANT_BOOL Italic ) = 0;
      virtual HRESULT __stdcall FontUnderline (
        /*[in]*/ VARIANT_BOOL Underline ) = 0;
      virtual HRESULT __stdcall FontFace (
        /*[in]*/ BSTR Face ) = 0;
      virtual HRESULT __stdcall FontPoints (
        /*[in]*/ short Points ) = 0;
      virtual HRESULT __stdcall FontUnits (
        /*[in]*/ double Units ) = 0;
      virtual HRESULT __stdcall SketchSplineByEqnParams (
        /*[in]*/ VARIANT ParamsIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AlignParallelDimensions ( ) = 0;
      virtual HRESULT __stdcall SetBlockingState (
        /*[in]*/ long StateIn ) = 0;
      virtual HRESULT __stdcall ResetBlockingState ( ) = 0;
      virtual HRESULT __stdcall GetSceneBkgDIB (
        /*[out,retval]*/ long * L_dib ) = 0;
      virtual HRESULT __stdcall InsertHatchedFace ( ) = 0;
      virtual HRESULT __stdcall GetColorTable (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetColorTable (
        /*[out,retval]*/ struct IColorTable * * Retval ) = 0;
      virtual HRESULT __stdcall InsertSweepRefSurface2 (
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ short TwistCtrlOption,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational,
        /*[in]*/ short StartMatchingType,
        /*[in]*/ short EndMatchingType ) = 0;
      virtual HRESULT __stdcall InsertProtrusionSwept3 (
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ VARIANT_BOOL Alignment,
        /*[in]*/ short TwistCtrlOption,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational,
        /*[in]*/ short StartMatchingType,
        /*[in]*/ short EndMatchingType ) = 0;
      virtual HRESULT __stdcall InsertCutSwept3 (
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ VARIANT_BOOL Alignment,
        /*[in]*/ short TwistCtrlOption,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational,
        /*[in]*/ short StartMatchingType,
        /*[in]*/ short EndMatchingType ) = 0;
      virtual HRESULT __stdcall IsOpenedViewOnly (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsOpenedReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ViewZoomToSelection ( ) = 0;
      virtual HRESULT __stdcall FeatureBossThicken (
        /*[in]*/ double Thickness,
        /*[in]*/ long Direction,
        /*[in]*/ long FaceIndex ) = 0;
      virtual HRESULT __stdcall FeatureCutThicken (
        /*[in]*/ double Thickness,
        /*[in]*/ long Direction,
        /*[in]*/ long FaceIndex ) = 0;
      virtual HRESULT __stdcall InsertAxis (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall EditUndo (
        /*[in]*/ unsigned long NSteps ) = 0;
      virtual HRESULT __stdcall SelectMidpoint ( ) = 0;
      virtual HRESULT __stdcall ISketchSplineByEqnParams (
        /*[in]*/ int * PropArray,
        /*[in]*/ double * KnotsArray,
        /*[in]*/ double * CntrlPntCoordArray,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall VersionHistory (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IVersionHistory (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall IGetVersionHistoryCount (
        /*[out,retval]*/ int * Retval ) = 0;
      virtual HRESULT __stdcall Rebuild (
        /*[in]*/ long Options ) = 0;
      virtual HRESULT __stdcall InsertFeatureShellAddThickness (
        /*[in]*/ double Thickness ) = 0;
      virtual HRESULT __stdcall InsertOffsetSurface (
        /*[in]*/ double Thickness,
        /*[in]*/ VARIANT_BOOL Reverse ) = 0;
      virtual HRESULT __stdcall SimplifySpline (
        /*[in]*/ double ToleranceIn ) = 0;
      virtual HRESULT __stdcall get_SummaryInfo (
        /*[in]*/ long FieldId,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_SummaryInfo (
        /*[in]*/ long FieldId,
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall get_CustomInfo (
        /*[in]*/ BSTR FieldName,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_CustomInfo (
        /*[in]*/ BSTR FieldName,
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall GetCustomInfoCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetCustomInfoType (
        /*[in]*/ BSTR FieldName,
        /*[out,retval]*/ BSTR * Type ) = 0;
      virtual HRESULT __stdcall GetCustomInfoNames (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetCustomInfoNames (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall AddCustomInfo (
        /*[in]*/ BSTR FieldName,
        /*[in]*/ BSTR FieldType,
        /*[in]*/ BSTR FieldValue,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DeleteCustomInfo (
        /*[in]*/ BSTR FieldName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall PrintOut2 (
        /*[in]*/ long FromPage,
        /*[in]*/ long ToPage,
        /*[in]*/ long NumCopies,
        /*[in]*/ VARIANT_BOOL Collate,
        /*[in]*/ BSTR Printer,
        /*[in]*/ double Scale,
        /*[in]*/ VARIANT_BOOL PrintToFile,
        /*[in]*/ BSTR PtfName ) = 0;
      virtual HRESULT __stdcall SetReadOnlyState (
        /*[in]*/ VARIANT_BOOL SetReadOnly,
        /*[out,retval]*/ VARIANT_BOOL * Success ) = 0;
      virtual HRESULT __stdcall InsertFamilyTableOpen (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ VARIANT_BOOL * Ok ) = 0;
      virtual HRESULT __stdcall MultiSelectByRay (
        /*[in]*/ VARIANT DoubleInfoIn,
        /*[in]*/ long TypeWanted,
        /*[in]*/ VARIANT_BOOL Append,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IMultiSelectByRay (
        /*[in]*/ double * PointIn,
        /*[in]*/ double * VectorIn,
        /*[in]*/ double RadiusIn,
        /*[in]*/ long TypeWanted,
        /*[in]*/ VARIANT_BOOL Append,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertNewNote3 (
        /*[in]*/ BSTR UpperText,
        /*[in]*/ VARIANT_BOOL NoLeader,
        /*[in]*/ VARIANT_BOOL BentLeader,
        /*[in]*/ short ArrowStyle,
        /*[in]*/ short LeaderSide,
        /*[in]*/ double Angle,
        /*[in]*/ short BalloonStyle,
        /*[in]*/ short BalloonFit,
        /*[in]*/ VARIANT_BOOL SmartArrow ) = 0;
      virtual HRESULT __stdcall InsertWeldSymbol2 (
        /*[in]*/ BSTR Dim1,
        /*[in]*/ BSTR Symbol,
        /*[in]*/ BSTR Dim2,
        /*[in]*/ VARIANT_BOOL Symmetric,
        /*[in]*/ VARIANT_BOOL FieldWeld,
        /*[in]*/ VARIANT_BOOL ShowOtherSide,
        /*[in]*/ VARIANT_BOOL DashOnTop,
        /*[in]*/ VARIANT_BOOL Peripheral,
        /*[in]*/ VARIANT_BOOL HasProcess,
        /*[in]*/ BSTR ProcessValue ) = 0;
      virtual HRESULT __stdcall InsertSurfaceFinishSymbol2 (
        /*[in]*/ long SymType,
        /*[in]*/ long LeaderType,
        /*[in]*/ double LocX,
        /*[in]*/ double LocY,
        /*[in]*/ double LocZ,
        /*[in]*/ long LaySymbol,
        /*[in]*/ long ArrowType,
        /*[in]*/ BSTR MachAllowance,
        /*[in]*/ BSTR OtherVals,
        /*[in]*/ BSTR ProdMethod,
        /*[in]*/ BSTR SampleLen,
        /*[in]*/ BSTR MaxRoughness,
        /*[in]*/ BSTR MinRoughness,
        /*[in]*/ BSTR RoughnessSpacing,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SaveSilent (
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall SaveAsSilent (
        /*[in]*/ BSTR NewName,
        /*[in]*/ VARIANT_BOOL SaveAsCopy,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall AddCustomInfo2 (
        /*[in]*/ BSTR FieldName,
        /*[in]*/ long FieldType,
        /*[in]*/ BSTR FieldValue,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetCustomInfoType2 (
        /*[in]*/ BSTR FieldName,
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall InsertRefPoint (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall FeatureFillet2 (
        /*[in]*/ double R1,
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ VARIANT_BOOL Ftyp,
        /*[in]*/ VARIANT_BOOL VarRadTyp,
        /*[in]*/ long OverflowType,
        /*[in]*/ int NRadii,
        /*[in]*/ VARIANT Radii,
        /*[out,retval]*/ long * Res ) = 0;
      virtual HRESULT __stdcall IFeatureFillet2 (
        /*[in]*/ double R1,
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ VARIANT_BOOL Ftyp,
        /*[in]*/ VARIANT_BOOL VarRadTyp,
        /*[in]*/ long OverflowType,
        /*[in]*/ int NRadii,
        /*[in]*/ double * Radii,
        /*[out,retval]*/ long * Res ) = 0;
      virtual HRESULT __stdcall GetFirstAnnotation (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstAnnotation (
        /*[out,retval]*/ struct IAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall InsertCoordinateSystem (
        /*[in]*/ VARIANT_BOOL XFlippedIn,
        /*[in]*/ VARIANT_BOOL YFlippedIn,
        /*[in]*/ VARIANT_BOOL ZFlippedIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetToolbarVisibility (
        /*[in]*/ long Toolbar,
        /*[out,retval]*/ VARIANT_BOOL * Visibility ) = 0;
      virtual HRESULT __stdcall SetToolbarVisibility (
        /*[in]*/ long Toolbar,
        /*[in]*/ VARIANT_BOOL Visibility ) = 0;
      virtual HRESULT __stdcall ViewDispCoordinateSystems ( ) = 0;
      virtual HRESULT __stdcall ViewDispTempRefaxes ( ) = 0;
      virtual HRESULT __stdcall ViewDispRefPoints ( ) = 0;
      virtual HRESULT __stdcall ViewDispOrigins ( ) = 0;
      virtual HRESULT __stdcall GetCoordinateSystemXformByName (
        /*[in]*/ BSTR NameIn,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetCoordinateSystemXformByName (
        /*[in]*/ BSTR NameIn,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetCurrentCoordinateSystemName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall EnumModelViews (
        /*[out,retval]*/ struct IEnumModelViews * * Retval ) = 0;
      virtual HRESULT __stdcall InsertCompositeCurve (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SketchParabola (
        /*[in]*/ double Val1,
        /*[in]*/ double Val2,
        /*[in]*/ double Z1,
        /*[in]*/ double Val3,
        /*[in]*/ double Val4,
        /*[in]*/ double Z2,
        /*[in]*/ double Val5,
        /*[in]*/ double Val6,
        /*[in]*/ double Z3,
        /*[in]*/ double Val7,
        /*[in]*/ double Val8,
        /*[in]*/ double Z4 ) = 0;
      virtual HRESULT __stdcall InsertRadiateSurface (
        /*[in]*/ double Distance,
        /*[in]*/ VARIANT_BOOL FlipDir,
        /*[in]*/ VARIANT_BOOL TangentPropagate ) = 0;
      virtual HRESULT __stdcall InsertSewRefSurface ( ) = 0;
      virtual HRESULT __stdcall InsertShape (
        /*[in]*/ long PressureOn,
        /*[in]*/ long TangentsOn,
        /*[in]*/ double PressureGain,
        /*[in]*/ double TangentGain,
        /*[in]*/ double CurveSpringGain,
        /*[in]*/ double Alpha,
        /*[in]*/ double Beta,
        /*[in]*/ double Gamma,
        /*[in]*/ double Delta,
        /*[in]*/ long Degree,
        /*[in]*/ long Split,
        /*[in]*/ long Tuning,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall InsertMfDraft2 (
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL FlipDir,
        /*[in]*/ VARIANT_BOOL IsEdgeDraft,
        /*[in]*/ long PropType,
        /*[in]*/ VARIANT_BOOL StepDraft ) = 0;
      virtual HRESULT __stdcall GetConfigurationCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetConfigurationNames (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetConfigurationNames (
        /*[in,out]*/ long * Count,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall FeatureCut2 (
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2,
        /*[in]*/ long KeepPieceIndex ) = 0;
      virtual HRESULT __stdcall InsertCutSurface (
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ long KeepPieceIndex ) = 0;
      virtual HRESULT __stdcall GetDetailingDefaults (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetDetailingDefaults (
        /*[out,retval]*/ struct IDetailingDefaults * * Retval ) = 0;
      virtual HRESULT __stdcall ListExternalFileReferencesCount (
        /*[in]*/ VARIANT_BOOL UseSearchRules,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall ListExternalFileReferences (
        /*[in]*/ VARIANT_BOOL UseSearchRules,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IListExternalFileReferences (
        /*[in]*/ VARIANT_BOOL UseSearchRules,
        /*[in]*/ long NumRefs,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SketchSplineByEqnParams2 (
        /*[in]*/ VARIANT ParamsIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstModelView (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstModelView (
        /*[out,retval]*/ struct IModelView * * Retval ) = 0;
      virtual HRESULT __stdcall InsertPlanarRefSurface (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetNext (
        /*[out,retval]*/ IDispatch * * NextDoc ) = 0;
      virtual HRESULT __stdcall GetSaveFlag (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddCustomInfo3 (
        /*[in]*/ BSTR Configuration,
        /*[in]*/ BSTR FieldName,
        /*[in]*/ long FieldType,
        /*[in]*/ BSTR FieldValue,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_CustomInfo2 (
        /*[in]*/ BSTR Configuration,
        /*[in]*/ BSTR FieldName,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_CustomInfo2 (
        /*[in]*/ BSTR Configuration,
        /*[in]*/ BSTR FieldName,
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall DeleteCustomInfo2 (
        /*[in]*/ BSTR Configuration,
        /*[in]*/ BSTR FieldName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetCustomInfoCount2 (
        /*[in]*/ BSTR Configuration,
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetCustomInfoNames2 (
        /*[in]*/ BSTR Configuration,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetCustomInfoNames2 (
        /*[in]*/ BSTR Configuration,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetCustomInfoType3 (
        /*[in]*/ BSTR Configuration,
        /*[in]*/ BSTR FieldName,
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall GetConsiderLeadersAsLines (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetConsiderLeadersAsLines (
        /*[in]*/ VARIANT_BOOL LeadersAsLines,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertRevolvedRefSurface (
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL ReverseDir,
        /*[in]*/ double Angle2,
        /*[in]*/ int RevType ) = 0;
      virtual HRESULT __stdcall GetBendState (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetBendState (
        /*[in]*/ long BendState,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall get_ShowFeatureErrorDialog (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_ShowFeatureErrorDialog (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall ClearUndoList ( ) = 0;
      virtual HRESULT __stdcall GetFeatureManagerWidth (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetFeatureManagerWidth (
        /*[in]*/ long Width,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall InsertProjectedSketch2 (
        /*[in]*/ long Reverse,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IInsertProjectedSketch2 (
        /*[in]*/ long Reverse,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall GetFeatureCount (
        /*[out,retval]*/ long * Num ) = 0;
      virtual HRESULT __stdcall FeatureByPositionReverse (
        /*[in]*/ long Num,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IFeatureByPositionReverse (
        /*[in]*/ long Num,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall RayIntersections (
        /*[in]*/ VARIANT BodiesIn,
        /*[in]*/ VARIANT BasePointsIn,
        /*[in]*/ VARIANT VectorsIn,
        /*[in]*/ long Options,
        /*[in]*/ double HitRadius,
        /*[in]*/ double Offset,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IRayIntersections (
        /*[in]*/ struct IBody * * BodiesIn,
        /*[in]*/ long NumBodies,
        /*[in]*/ double * BasePointsIn,
        /*[in]*/ double * VectorsIn,
        /*[in]*/ long NumRays,
        /*[in]*/ long Options,
        /*[in]*/ double HitRadius,
        /*[in]*/ double Offset,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetRayIntersectionsPoints (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetRayIntersectionsPoints (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetRayIntersectionsTopology (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetRayIntersectionsTopology (
        /*[out,retval]*/ IUnknown * * Retval ) = 0;
      virtual HRESULT __stdcall EditSeedFeat ( ) = 0;
      virtual HRESULT __stdcall EditSuppress (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall EditUnsuppress (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall EditUnsuppressDependent (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall EditRollback (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Save2 (
        /*[in]*/ VARIANT_BOOL Silent,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SaveAs2 (
        /*[in]*/ BSTR NewName,
        /*[in]*/ long SaveAsVersion,
        /*[in]*/ VARIANT_BOOL SaveAsCopy,
        /*[in]*/ VARIANT_BOOL Silent,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetPopupMenuMode (
        /*[in]*/ int ModeIn ) = 0;
      virtual HRESULT __stdcall GetPopupMenuMode (
        /*[out,retval]*/ int * Retval ) = 0;
      virtual HRESULT __stdcall CloseFamilyTable ( ) = 0;
      virtual HRESULT __stdcall CreatePlaneAtSurface (
        /*[in]*/ int InterIndex,
        /*[in]*/ VARIANT_BOOL ProjOpt,
        /*[in]*/ VARIANT_BOOL ReverseDir,
        /*[in]*/ VARIANT_BOOL NormalPlane,
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall SketchOffset (
        /*[in]*/ double Offset,
        /*[in]*/ VARIANT_BOOL ContourMode ) = 0;
      virtual HRESULT __stdcall CreateLinearSketchStepAndRepeat (
        /*[in]*/ long NumX,
        /*[in]*/ long NumY,
        /*[in]*/ double SpacingX,
        /*[in]*/ double SpacingY,
        /*[in]*/ double AngleX,
        /*[in]*/ double AngleY,
        /*[in]*/ BSTR DeleteInstances,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetAmbientLightProperties (
        /*[in]*/ BSTR Name,
        /*[in]*/ double Ambient,
        /*[in]*/ double Diffuse,
        /*[in]*/ double Specular,
        /*[in]*/ long Colour,
        /*[in]*/ VARIANT_BOOL Enabled,
        /*[in]*/ VARIANT_BOOL Fixed,
        /*[out,retval]*/ VARIANT_BOOL * Ok ) = 0;
      virtual HRESULT __stdcall GetAmbientLightProperties (
        /*[in]*/ BSTR Name,
        /*[in]*/ double * Ambient,
        /*[in]*/ double * Diffuse,
        /*[in]*/ double * Specular,
        /*[in]*/ long * Colour,
        /*[in]*/ VARIANT_BOOL * Enabled,
        /*[in]*/ VARIANT_BOOL * Fixed,
        /*[out,retval]*/ VARIANT_BOOL * Ok ) = 0;
      virtual HRESULT __stdcall SetPointLightProperties (
        /*[in]*/ BSTR Name,
        /*[in]*/ double Ambient,
        /*[in]*/ double Diffuse,
        /*[in]*/ double Specular,
        /*[in]*/ long Colour,
        /*[in]*/ VARIANT_BOOL Enabled,
        /*[in]*/ VARIANT_BOOL Fixed,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Ok ) = 0;
      virtual HRESULT __stdcall GetPointLightProperties (
        /*[in]*/ BSTR Name,
        /*[in]*/ double * Ambient,
        /*[in]*/ double * Diffuse,
        /*[in]*/ double * Specular,
        /*[in]*/ long * Colour,
        /*[in]*/ VARIANT_BOOL * Enabled,
        /*[in]*/ VARIANT_BOOL * Fixed,
        /*[in]*/ double * X,
        /*[in]*/ double * Y,
        /*[in]*/ double * Z,
        /*[out,retval]*/ VARIANT_BOOL * Ok ) = 0;
      virtual HRESULT __stdcall SetDirectionLightProperties (
        /*[in]*/ BSTR Name,
        /*[in]*/ double Ambient,
        /*[in]*/ double Diffuse,
        /*[in]*/ double Specular,
        /*[in]*/ long Colour,
        /*[in]*/ VARIANT_BOOL Enabled,
        /*[in]*/ VARIANT_BOOL Fixed,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Ok ) = 0;
      virtual HRESULT __stdcall GetDirectionLightProperties (
        /*[in]*/ BSTR Name,
        /*[in]*/ double * Ambient,
        /*[in]*/ double * Diffuse,
        /*[in]*/ double * Specular,
        /*[in]*/ long * Colour,
        /*[in]*/ VARIANT_BOOL * Enabled,
        /*[in]*/ VARIANT_BOOL * Fixed,
        /*[in]*/ double * X,
        /*[in]*/ double * Y,
        /*[in]*/ double * Z,
        /*[out,retval]*/ VARIANT_BOOL * Ok ) = 0;
      virtual HRESULT __stdcall SetSpotlightProperties (
        /*[in]*/ BSTR Name,
        /*[in]*/ double Ambient,
        /*[in]*/ double Diffuse,
        /*[in]*/ double Specular,
        /*[in]*/ long Colour,
        /*[in]*/ VARIANT_BOOL Enabled,
        /*[in]*/ VARIANT_BOOL Fixed,
        /*[in]*/ double Posx,
        /*[in]*/ double Posy,
        /*[in]*/ double Posz,
        /*[in]*/ double Targetx,
        /*[in]*/ double Targety,
        /*[in]*/ double Targetz,
        /*[in]*/ double ConeAngle,
        /*[out,retval]*/ VARIANT_BOOL * Ok ) = 0;
      virtual HRESULT __stdcall GetSpotlightProperties (
        /*[in]*/ BSTR Name,
        /*[in]*/ double * Ambient,
        /*[in]*/ double * Diffuse,
        /*[in]*/ double * Specular,
        /*[in]*/ long * Colour,
        /*[in]*/ VARIANT_BOOL * Enabled,
        /*[in]*/ VARIANT_BOOL * Fixed,
        /*[in]*/ double * X,
        /*[in]*/ double * Y,
        /*[in]*/ double * Z,
        /*[in]*/ double * Targetx,
        /*[in]*/ double * Targety,
        /*[in]*/ double * Targetz,
        /*[in]*/ double * ConeAngle,
        /*[out,retval]*/ VARIANT_BOOL * Ok ) = 0;
      virtual HRESULT __stdcall SplitOpenSegment (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z ) = 0;
      virtual HRESULT __stdcall AutoInferToggle ( ) = 0;
      virtual HRESULT __stdcall SketchRectangleAtAnyAngle (
        /*[in]*/ double Val1,
        /*[in]*/ double Val2,
        /*[in]*/ double Z1,
        /*[in]*/ double Val3,
        /*[in]*/ double Val4,
        /*[in]*/ double Z2,
        /*[in]*/ double Val3x,
        /*[in]*/ double Val3y,
        /*[in]*/ double Z3,
        /*[in]*/ VARIANT_BOOL Val5 ) = 0;
      virtual HRESULT __stdcall CreateCircularSketchStepAndRepeat (
        /*[in]*/ double ArcRadius,
        /*[in]*/ double ArcAngle,
        /*[in]*/ long PatternNum,
        /*[in]*/ double PatternSpacing,
        /*[in]*/ VARIANT_BOOL PatternRotate,
        /*[in]*/ BSTR DeleteInstances,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SplitClosedSegment (
        /*[in]*/ double X0,
        /*[in]*/ double Y0,
        /*[in]*/ double Z0,
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ double Z1 ) = 0;
      virtual HRESULT __stdcall IsLightLockedToModel (
        /*[in]*/ long LightId,
        /*[out,retval]*/ VARIANT_BOOL * IsFixed ) = 0;
      virtual HRESULT __stdcall LockLightToModel (
        /*[in]*/ long LightId,
        /*[in]*/ VARIANT_BOOL Fix,
        /*[out,retval]*/ VARIANT_BOOL * Success ) = 0;
      virtual HRESULT __stdcall FeatureFillet3 (
        /*[in]*/ double R1,
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ int Ftyp,
        /*[in]*/ VARIANT_BOOL VarRadTyp,
        /*[in]*/ long OverflowType,
        /*[in]*/ int NRadii,
        /*[in]*/ VARIANT Radii,
        /*[in]*/ VARIANT_BOOL UseHelpPoint,
        /*[in]*/ VARIANT_BOOL UseTangentHoldLine,
        /*[out,retval]*/ long * Res ) = 0;
      virtual HRESULT __stdcall IFeatureFillet3 (
        /*[in]*/ double R1,
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ int Ftyp,
        /*[in]*/ VARIANT_BOOL VarRadTyp,
        /*[in]*/ long OverflowType,
        /*[in]*/ int NRadii,
        /*[in]*/ double * Radii,
        /*[in]*/ VARIANT_BOOL UseHelpPoint,
        /*[in]*/ VARIANT_BOOL UseTangentHoldLine,
        /*[out,retval]*/ long * Res ) = 0;
      virtual HRESULT __stdcall InsertConnectionPoint ( ) = 0;
      virtual HRESULT __stdcall InsertRoutePoint ( ) = 0;
      virtual HRESULT __stdcall FeatureBossThicken2 (
        /*[in]*/ double Thickness,
        /*[in]*/ long Direction,
        /*[in]*/ long FaceIndex,
        /*[in]*/ VARIANT_BOOL FillVolume ) = 0;
      virtual HRESULT __stdcall FeatureCutThicken2 (
        /*[in]*/ double Thickness,
        /*[in]*/ long Direction,
        /*[in]*/ long FaceIndex,
        /*[in]*/ VARIANT_BOOL FillVolume ) = 0;
      virtual HRESULT __stdcall GetConfigurationByName (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetConfigurationByName (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct IConfiguration * * Retval ) = 0;
      virtual HRESULT __stdcall CreatePoint2 (
        /*[in]*/ double PointX,
        /*[in]*/ double PointY,
        /*[in]*/ double PointZ,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreatePoint2 (
        /*[in]*/ double PointX,
        /*[in]*/ double PointY,
        /*[in]*/ double PointZ,
        /*[out,retval]*/ struct ISketchPoint * * Retval ) = 0;
      virtual HRESULT __stdcall CreateLine2 (
        /*[in]*/ double P1x,
        /*[in]*/ double P1y,
        /*[in]*/ double P1z,
        /*[in]*/ double P2x,
        /*[in]*/ double P2y,
        /*[in]*/ double P2z,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateLine2 (
        /*[in]*/ double P1x,
        /*[in]*/ double P1y,
        /*[in]*/ double P1z,
        /*[in]*/ double P2x,
        /*[in]*/ double P2y,
        /*[in]*/ double P2z,
        /*[out,retval]*/ struct ISketchSegment * * Retval ) = 0;
      virtual HRESULT __stdcall GetActiveSketch2 (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetActiveSketch2 (
        /*[out,retval]*/ struct ISketch * * Retval ) = 0;
      virtual HRESULT __stdcall DrawLightIcons ( ) = 0;
      virtual HRESULT __stdcall GetLayerManager (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetLayerManager (
        /*[out,retval]*/ struct ILayerMgr * * Retval ) = 0;
      virtual HRESULT __stdcall CreateCircle2 (
        /*[in]*/ double XC,
        /*[in]*/ double YC,
        /*[in]*/ double Zc,
        /*[in]*/ double Xp,
        /*[in]*/ double Yp,
        /*[in]*/ double Zp,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateCircle2 (
        /*[in]*/ double XC,
        /*[in]*/ double YC,
        /*[in]*/ double Zc,
        /*[in]*/ double Xp,
        /*[in]*/ double Yp,
        /*[in]*/ double Zp,
        /*[out,retval]*/ struct ISketchSegment * * Retval ) = 0;
      virtual HRESULT __stdcall CreateCircleByRadius2 (
        /*[in]*/ double XC,
        /*[in]*/ double YC,
        /*[in]*/ double Zc,
        /*[in]*/ double Radius,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateCircleByRadius2 (
        /*[in]*/ double XC,
        /*[in]*/ double YC,
        /*[in]*/ double Zc,
        /*[in]*/ double Radius,
        /*[out,retval]*/ struct ISketchSegment * * Retval ) = 0;
      virtual HRESULT __stdcall CreateArc2 (
        /*[in]*/ double XC,
        /*[in]*/ double YC,
        /*[in]*/ double Zc,
        /*[in]*/ double Xp1,
        /*[in]*/ double Yp1,
        /*[in]*/ double Zp1,
        /*[in]*/ double Xp2,
        /*[in]*/ double Yp2,
        /*[in]*/ double Zp2,
        /*[in]*/ short Direction,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateArc2 (
        /*[in]*/ double XC,
        /*[in]*/ double YC,
        /*[in]*/ double Zc,
        /*[in]*/ double Xp1,
        /*[in]*/ double Yp1,
        /*[in]*/ double Zp1,
        /*[in]*/ double Xp2,
        /*[in]*/ double Yp2,
        /*[in]*/ double Zp2,
        /*[in]*/ short Direction,
        /*[out,retval]*/ struct ISketchSegment * * Retval ) = 0;
      virtual HRESULT __stdcall CreateEllipse2 (
        /*[in]*/ double CenterX,
        /*[in]*/ double CenterY,
        /*[in]*/ double CenterZ,
        /*[in]*/ double MajorX,
        /*[in]*/ double MajorY,
        /*[in]*/ double MajorZ,
        /*[in]*/ double MinorX,
        /*[in]*/ double MinorY,
        /*[in]*/ double MinorZ,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateEllipse2 (
        /*[in]*/ double CenterX,
        /*[in]*/ double CenterY,
        /*[in]*/ double CenterZ,
        /*[in]*/ double MajorX,
        /*[in]*/ double MajorY,
        /*[in]*/ double MajorZ,
        /*[in]*/ double MinorX,
        /*[in]*/ double MinorY,
        /*[in]*/ double MinorZ,
        /*[out,retval]*/ struct ISketchSegment * * Retval ) = 0;
      virtual HRESULT __stdcall CreateEllipticalArc2 (
        /*[in]*/ double CenterX,
        /*[in]*/ double CenterY,
        /*[in]*/ double CenterZ,
        /*[in]*/ double MajorX,
        /*[in]*/ double MajorY,
        /*[in]*/ double MajorZ,
        /*[in]*/ double MinorX,
        /*[in]*/ double MinorY,
        /*[in]*/ double MinorZ,
        /*[in]*/ double StartX,
        /*[in]*/ double StartY,
        /*[in]*/ double StartZ,
        /*[in]*/ double EndX,
        /*[in]*/ double EndY,
        /*[in]*/ double EndZ,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateEllipticalArc2 (
        /*[in]*/ double CenterX,
        /*[in]*/ double CenterY,
        /*[in]*/ double CenterZ,
        /*[in]*/ double MajorX,
        /*[in]*/ double MajorY,
        /*[in]*/ double MajorZ,
        /*[in]*/ double MinorX,
        /*[in]*/ double MinorY,
        /*[in]*/ double MinorZ,
        /*[in]*/ double StartX,
        /*[in]*/ double StartY,
        /*[in]*/ double StartZ,
        /*[in]*/ double EndX,
        /*[in]*/ double EndY,
        /*[in]*/ double EndZ,
        /*[out,retval]*/ struct ISketchSegment * * Retval ) = 0;
      virtual HRESULT __stdcall CreateSpline (
        /*[in]*/ VARIANT PointData,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateSpline (
        /*[in]*/ long PointCount,
        /*[in]*/ double * PointData,
        /*[out,retval]*/ struct ISketchSegment * * Retval ) = 0;
      virtual HRESULT __stdcall ViewZoomtofit2 ( ) = 0;
      virtual HRESULT __stdcall SetInferenceMode (
        /*[in]*/ VARIANT_BOOL InferenceMode ) = 0;
      virtual HRESULT __stdcall GetInferenceMode (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetTitle2 (
        /*[in]*/ BSTR NewTitle,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SketchFillet2 (
        /*[in]*/ double Rad,
        /*[in]*/ short ConstrainedCorners,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsTessellationValid (
        /*[out,retval]*/ VARIANT_BOOL * IsValid ) = 0;
      virtual HRESULT __stdcall EditRoute ( ) = 0;
      virtual HRESULT __stdcall FileReload ( ) = 0;
      virtual HRESULT __stdcall GetDesignTable (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetDesignTable (
        /*[out,retval]*/ struct IDesignTable * * Retval ) = 0;
      virtual HRESULT __stdcall GetEntityName (
        /*[in]*/ IDispatch * Entity,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall IGetEntityName (
        /*[in]*/ struct IEntity * Entity,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall IGetNext (
        /*[out,retval]*/ struct IModelDoc * * NextDoc ) = 0;
      virtual HRESULT __stdcall ShowConfiguration2 (
        /*[in]*/ BSTR ConfigurationName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddConfiguration2 (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR Comment,
        /*[in]*/ BSTR AlternateName,
        /*[in]*/ VARIANT_BOOL SuppressByDefault,
        /*[in]*/ VARIANT_BOOL HideByDefault,
        /*[in]*/ VARIANT_BOOL MinFeatureManager,
        /*[in]*/ VARIANT_BOOL InheritProperties,
        /*[in]*/ unsigned long Flags,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DeleteConfiguration2 (
        /*[in]*/ BSTR ConfigurationName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall EditConfiguration2 (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR NewName,
        /*[in]*/ BSTR Comment,
        /*[in]*/ BSTR AlternateName,
        /*[in]*/ VARIANT_BOOL SuppressByDefault,
        /*[in]*/ VARIANT_BOOL HideByDefault,
        /*[in]*/ VARIANT_BOOL MinFeatureManager,
        /*[in]*/ VARIANT_BOOL InheritProperties,
        /*[in]*/ unsigned long Flags,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateSplineByEqnParams (
        /*[in]*/ VARIANT ParamsIn,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateSplineByEqnParams (
        /*[in]*/ int * PropArray,
        /*[in]*/ double * KnotsArray,
        /*[in]*/ double * CntrlPntCoordArray,
        /*[out,retval]*/ struct ISketchSegment * * Retval ) = 0;
      virtual HRESULT __stdcall CreateFeatureMgrView2 (
        /*[in]*/ long * Bitmap,
        /*[in]*/ BSTR ToolTip,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateFeatureMgrView2 (
        /*[in]*/ long * Bitmap,
        /*[in]*/ BSTR ToolTip,
        /*[out,retval]*/ struct IFeatMgrView * * Retval ) = 0;
      virtual HRESULT __stdcall AddFeatureMgrView2 (
        /*[in]*/ long * Bitmap,
        /*[in]*/ long * AppView,
        /*[in]*/ BSTR ToolTip,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall FeatureCut3 (
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2,
        /*[in]*/ long KeepPieceIndex ) = 0;
      virtual HRESULT __stdcall GetFirstAnnotation2 (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstAnnotation2 (
        /*[out,retval]*/ struct IAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall InsertExtendSurface (
        /*[in]*/ VARIANT_BOOL ExtendLinear,
        /*[in]*/ long EndCondition,
        /*[in]*/ double Distance ) = 0;
      virtual HRESULT __stdcall InsertTangencySurface (
        /*[in]*/ VARIANT_BOOL OneSide,
        /*[in]*/ VARIANT_BOOL IsFlip ) = 0;
      virtual HRESULT __stdcall CreateSplinesByEqnParams (
        /*[in]*/ VARIANT ParamsIn,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall ICreateSplinesByEqnParams (
        /*[in]*/ int * PropArray,
        /*[in]*/ double * KnotsArray,
        /*[in]*/ double * CntrlPntCoordArray,
        /*[out,retval]*/ struct IEnumSketchSegments * * Retval ) = 0;
      virtual HRESULT __stdcall CreateClippedSplines (
        /*[in]*/ VARIANT ParamsIn,
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ double X2,
        /*[in]*/ double Y2,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall ICreateClippedSplines (
        /*[in]*/ int * PropArray,
        /*[in]*/ double * KnotsArray,
        /*[in]*/ double * CntrlPntCoordArray,
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ double X2,
        /*[in]*/ double Y2,
        /*[out,retval]*/ struct IEnumSketchSegments * * Retval ) = 0;
      virtual HRESULT __stdcall EditSuppress2 (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall EditUnsuppress2 (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall EditUnsuppressDependent2 (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall EditRollback2 (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall HideDimension ( ) = 0;
      virtual HRESULT __stdcall ShowFeatureDimensions ( ) = 0;
      virtual HRESULT __stdcall HideFeatureDimensions ( ) = 0;
      virtual HRESULT __stdcall Sketch3DIntersections ( ) = 0;
      virtual HRESULT __stdcall FeatureFillet4 (
        /*[in]*/ double R1,
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ VARIANT_BOOL UniformRadius,
        /*[in]*/ int Ftyp,
        /*[in]*/ VARIANT_BOOL VarRadTyp,
        /*[in]*/ long OverflowType,
        /*[in]*/ int NRadii,
        /*[in]*/ VARIANT Radii,
        /*[in]*/ VARIANT_BOOL UseHelpPoint,
        /*[in]*/ VARIANT_BOOL UseTangentHoldLine,
        /*[in]*/ VARIANT_BOOL CornerType,
        /*[in]*/ int SetbackDistCount,
        /*[in]*/ VARIANT SetBackDistances,
        /*[out,retval]*/ long * Res ) = 0;
      virtual HRESULT __stdcall IFeatureFillet4 (
        /*[in]*/ double R1,
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ VARIANT_BOOL UniformRadius,
        /*[in]*/ int Ftyp,
        /*[in]*/ VARIANT_BOOL VarRadTyp,
        /*[in]*/ long OverflowType,
        /*[in]*/ int NRadii,
        /*[in]*/ double * Radii,
        /*[in]*/ VARIANT_BOOL UseHelpPoint,
        /*[in]*/ VARIANT_BOOL UseTangentHoldLine,
        /*[in]*/ VARIANT_BOOL CornerType,
        /*[in]*/ int SetbackDistCount,
        /*[in]*/ double * SetBackDistances,
        /*[out,retval]*/ long * Res ) = 0;
      virtual HRESULT __stdcall InsertDeleteFace ( ) = 0;
      virtual HRESULT __stdcall GetDependencies2 (
        /*[in]*/ VARIANT_BOOL Traverseflag,
        /*[in]*/ VARIANT_BOOL Searchflag,
        /*[in]*/ VARIANT_BOOL AddReadOnlyInfo,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetDependencies2 (
        /*[in]*/ VARIANT_BOOL Traverseflag,
        /*[in]*/ VARIANT_BOOL Searchflag,
        /*[in]*/ VARIANT_BOOL AddReadOnlyInfo,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall IGetNumDependencies2 (
        /*[in]*/ VARIANT_BOOL Traverseflag,
        /*[in]*/ VARIANT_BOOL Searchflag,
        /*[in]*/ VARIANT_BOOL AddReadOnlyInfo,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall InsertScale (
        /*[in]*/ double ScaleFactor_x,
        /*[in]*/ double ScaleFactor_y,
        /*[in]*/ double ScaleFactor_z,
        /*[in]*/ VARIANT_BOOL IsUniform,
        /*[in]*/ int ScaleType ) = 0;
      virtual HRESULT __stdcall LockAllExternalReferences ( ) = 0;
      virtual HRESULT __stdcall UnlockAllExternalReferences ( ) = 0;
      virtual HRESULT __stdcall BreakAllExternalReferences ( ) = 0;
      virtual HRESULT __stdcall EditDimensionProperties (
        /*[in]*/ long TolType,
        /*[in]*/ double TolMax,
        /*[in]*/ double TolMin,
        /*[in]*/ BSTR TolMaxFit,
        /*[in]*/ BSTR TolMinFit,
        /*[in]*/ VARIANT_BOOL UseDocPrec,
        /*[in]*/ long Precision,
        /*[in]*/ long ArrowsIn,
        /*[in]*/ VARIANT_BOOL UseDocArrows,
        /*[in]*/ long Arrow1,
        /*[in]*/ long Arrow2,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SketchPolygon (
        /*[in]*/ double XCenter,
        /*[in]*/ double YCenter,
        /*[in]*/ double XEdge,
        /*[in]*/ double YEdge,
        /*[in]*/ int NSides,
        /*[in]*/ VARIANT_BOOL BInscribed,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetBlockingState (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall CreateFeatureMgrView3 (
        /*[in]*/ long * Bitmap,
        /*[in]*/ BSTR ToolTip,
        /*[in]*/ long WhichPane,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateFeatureMgrView3 (
        /*[in]*/ long * Bitmap,
        /*[in]*/ BSTR ToolTip,
        /*[in]*/ long WhichPane,
        /*[out,retval]*/ struct IFeatMgrView * * Retval ) = 0;
      virtual HRESULT __stdcall AddFeatureMgrView3 (
        /*[in]*/ long * Bitmap,
        /*[in]*/ long * AppView,
        /*[in]*/ BSTR ToolTip,
        /*[in]*/ long WhichPane,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreatePlaneAtOffset2 (
        /*[in]*/ double Val,
        /*[in]*/ VARIANT_BOOL FlipDir,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreatePlaneAtOffset2 (
        /*[in]*/ double Val,
        /*[in]*/ VARIANT_BOOL FlipDir,
        /*[out,retval]*/ struct IRefPlane * * Retval ) = 0;
      virtual HRESULT __stdcall CreatePlaneAtAngle2 (
        /*[in]*/ double Val,
        /*[in]*/ VARIANT_BOOL FlipDir,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreatePlaneAtAngle2 (
        /*[in]*/ double Val,
        /*[in]*/ VARIANT_BOOL FlipDir,
        /*[out,retval]*/ struct IRefPlane * * Retval ) = 0;
      virtual HRESULT __stdcall CreatePlaneThru3Points2 (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreatePlaneThru3Points2 (
        /*[out,retval]*/ struct IRefPlane * * Retval ) = 0;
      virtual HRESULT __stdcall CreatePlanePerCurveAndPassPoint2 (
        /*[in]*/ VARIANT_BOOL OrigAtCurve,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreatePlanePerCurveAndPassPoint2 (
        /*[in]*/ VARIANT_BOOL OrigAtCurve,
        /*[out,retval]*/ struct IRefPlane * * Retval ) = 0;
      virtual HRESULT __stdcall CreatePlaneAtSurface2 (
        /*[in]*/ int InterIndex,
        /*[in]*/ VARIANT_BOOL ProjOpt,
        /*[in]*/ VARIANT_BOOL ReverseDir,
        /*[in]*/ VARIANT_BOOL NormalPlane,
        /*[in]*/ double Angle,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreatePlaneAtSurface2 (
        /*[in]*/ int InterIndex,
        /*[in]*/ VARIANT_BOOL ProjOpt,
        /*[in]*/ VARIANT_BOOL ReverseDir,
        /*[in]*/ VARIANT_BOOL NormalPlane,
        /*[in]*/ double Angle,
        /*[out,retval]*/ struct IRefPlane * * Retval ) = 0;
      virtual HRESULT __stdcall GetUserPreferenceIntegerValue (
        /*[in]*/ long UserPreferenceValue,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetUserPreferenceIntegerValue (
        /*[in]*/ long UserPreferenceValue,
        /*[in]*/ long Value,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetUserPreferenceTextFormat (
        /*[in]*/ long UserPreferenceValue,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetUserPreferenceTextFormat (
        /*[in]*/ long UserPreferenceValue,
        /*[out,retval]*/ struct ITextFormat * * Retval ) = 0;
      virtual HRESULT __stdcall SetUserPreferenceTextFormat (
        /*[in]*/ long UserPreferenceValue,
        /*[in]*/ IDispatch * Value,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ISetUserPreferenceTextFormat (
        /*[in]*/ long UserPreferenceValue,
        /*[in]*/ struct ITextFormat * Value,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertRib2 (
        /*[in]*/ VARIANT_BOOL Is2Sided,
        /*[in]*/ VARIANT_BOOL ReverseThicknessDir,
        /*[in]*/ double Thickness,
        /*[in]*/ long ReferenceEdgeIndex,
        /*[in]*/ VARIANT_BOOL ReverseMaterialDir,
        /*[in]*/ VARIANT_BOOL IsDrafted,
        /*[in]*/ VARIANT_BOOL DraftOutward,
        /*[in]*/ double DraftAngle,
        /*[in]*/ VARIANT_BOOL IsNormToSketch ) = 0;
      virtual HRESULT __stdcall InsertObjectFromFile (
        /*[in]*/ BSTR FilePath,
        /*[in]*/ VARIANT_BOOL CreateLink,
        /*[in]*/ double Xx,
        /*[in]*/ double Yy,
        /*[in]*/ double Zz,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InspectCurvature ( ) = 0;
      virtual HRESULT __stdcall RemoveInspectCurvature ( ) = 0;
      virtual HRESULT __stdcall InsertDatumTag2 (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IInsertDatumTag2 (
        /*[out,retval]*/ struct IDatumTag * * Retval ) = 0;
      virtual HRESULT __stdcall ActivateFeatureMgrView (
        /*[in]*/ long * AppView,
        /*[out,retval]*/ long * PaneType ) = 0;
      virtual HRESULT __stdcall FeatureSketchDrivenPattern (
        /*[in]*/ VARIANT_BOOL UseCentroid ) = 0;
      virtual HRESULT __stdcall HideShowBodies ( ) = 0;
      virtual HRESULT __stdcall HideSolidBody ( ) = 0;
      virtual HRESULT __stdcall ShowSolidBody ( ) = 0;
      virtual HRESULT __stdcall InsertFramePoint (
        /*[in]*/ double Xx,
        /*[in]*/ double Yy,
        /*[in]*/ double Zz ) = 0;
      virtual HRESULT __stdcall LockFramePoint ( ) = 0;
      virtual HRESULT __stdcall UnlockFramePoint ( ) = 0;
      virtual HRESULT __stdcall InsertGtol (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IInsertGtol (
        /*[out,retval]*/ struct IGtol * * Retval ) = 0;
      virtual HRESULT __stdcall DeActivateFeatureMgrView (
        /*[in]*/ long * AppView,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertNote (
        /*[in]*/ BSTR Text,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IInsertNote (
        /*[in]*/ BSTR Text,
        /*[out,retval]*/ struct INote * * Retval ) = 0;
      virtual HRESULT __stdcall SetSaveAsFileName (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall ClosePrintPreview ( ) = 0;
      virtual HRESULT __stdcall HideComponent2 ( ) = 0;
      virtual HRESULT __stdcall ShowComponent2 ( ) = 0;
      virtual HRESULT __stdcall SaveBMP (
        /*[in]*/ BSTR FileNameIn,
        /*[in]*/ long WidthIn,
        /*[in]*/ long HeightIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertSketch2 (
        /*[in]*/ VARIANT_BOOL UpdateEditRebuild ) = 0;
      virtual HRESULT __stdcall Insert3DSketch2 (
        /*[in]*/ VARIANT_BOOL UpdateEditRebuild ) = 0;
      virtual HRESULT __stdcall InsertDeleteHole ( ) = 0;
      virtual HRESULT __stdcall PreTrimSurface (
        /*[in]*/ VARIANT_BOOL BMutualTrimIn ) = 0;
      virtual HRESULT __stdcall PostTrimSurface (
        /*[in]*/ VARIANT_BOOL BSewSurfaceIn ) = 0;
      virtual HRESULT __stdcall SketchConvertIsoCurves (
        /*[in]*/ double PercentRatio,
        /*[in]*/ VARIANT_BOOL VORuDir,
        /*[in]*/ VARIANT_BOOL DoConstrain,
        /*[in]*/ VARIANT_BOOL SkipHoles ) = 0;
      virtual HRESULT __stdcall SelectLoop ( ) = 0;
      virtual HRESULT __stdcall InsertSheetMetalBaseFlange (
        /*[in]*/ double Thickness,
        /*[in]*/ VARIANT_BOOL ThickenDir,
        /*[in]*/ double Radius,
        /*[in]*/ double ExtrudeDist1,
        /*[in]*/ double ExtrudeDist2,
        /*[in]*/ VARIANT_BOOL FlipExtruDir,
        /*[in]*/ long EndCondition1,
        /*[in]*/ long EndCondition2,
        /*[in]*/ long DirToUse ) = 0;
      virtual HRESULT __stdcall InsertSheetMetalFold ( ) = 0;
      virtual HRESULT __stdcall InsertSheetMetalUnfold ( ) = 0;
      virtual HRESULT __stdcall InsertSheetMetalMiterFlange (
        /*[in]*/ VARIANT_BOOL UseReliefRatio,
        /*[in]*/ VARIANT_BOOL UseDefaultGap,
        /*[in]*/ VARIANT_BOOL UseAutoRelief,
        /*[in]*/ double GlobalRadius,
        /*[in]*/ double RipGap,
        /*[in]*/ double AutoReliefRatio,
        /*[in]*/ double AutoReliefWidth,
        /*[in]*/ double AutoReliefDepth,
        /*[in]*/ long ReliefType,
        /*[in]*/ long RipLocation,
        /*[in]*/ VARIANT_BOOL TrimSideBends ) = 0;
      virtual HRESULT __stdcall CreateGroup ( ) = 0;
      virtual HRESULT __stdcall RemoveItemsFromGroup ( ) = 0;
      virtual HRESULT __stdcall RemoveGroups ( ) = 0;
      virtual HRESULT __stdcall InsertBOMBalloon2 (
        /*[in]*/ long Style,
        /*[in]*/ long Size,
        /*[in]*/ long UpperTextStyle,
        /*[in]*/ BSTR UpperText,
        /*[in]*/ long LowerTextStyle,
        /*[in]*/ BSTR LowerText,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IInsertBOMBalloon2 (
        /*[in]*/ long Style,
        /*[in]*/ long Size,
        /*[in]*/ long UpperTextStyle,
        /*[in]*/ BSTR UpperText,
        /*[in]*/ long LowerTextStyle,
        /*[in]*/ BSTR LowerText,
        /*[out,retval]*/ struct INote * * Retval ) = 0;
      virtual HRESULT __stdcall EditRedo (
        /*[in]*/ unsigned long NSteps ) = 0;
      virtual HRESULT __stdcall InsertProtrusionBlend4 (
        /*[in]*/ VARIANT_BOOL Closed,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational,
        /*[in]*/ double TessToleranceFactor,
        /*[in]*/ short StartMatchingType,
        /*[in]*/ short EndMatchingType,
        /*[in]*/ VARIANT_BOOL IsThinBody,
        /*[in]*/ double Thickness1,
        /*[in]*/ double Thickness2,
        /*[in]*/ short ThinType ) = 0;
      virtual HRESULT __stdcall InsertCutBlend4 (
        /*[in]*/ VARIANT_BOOL Closed,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational,
        /*[in]*/ double TessToleranceFactor,
        /*[in]*/ short StartMatchingType,
        /*[in]*/ short EndMatchingType,
        /*[in]*/ VARIANT_BOOL IsThinBody,
        /*[in]*/ double Thickness1,
        /*[in]*/ double Thickness2,
        /*[in]*/ short ThinType ) = 0;
      virtual HRESULT __stdcall InsertProtrusionSwept4 (
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ VARIANT_BOOL Alignment,
        /*[in]*/ short TwistCtrlOption,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational,
        /*[in]*/ short StartMatchingType,
        /*[in]*/ short EndMatchingType,
        /*[in]*/ VARIANT_BOOL IsThinBody,
        /*[in]*/ double Thickness1,
        /*[in]*/ double Thickness2,
        /*[in]*/ short ThinType ) = 0;
      virtual HRESULT __stdcall InsertCutSwept4 (
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ VARIANT_BOOL Alignment,
        /*[in]*/ short TwistCtrlOption,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational,
        /*[in]*/ short StartMatchingType,
        /*[in]*/ short EndMatchingType,
        /*[in]*/ VARIANT_BOOL IsThinBody,
        /*[in]*/ double Thickness1,
        /*[in]*/ double Thickness2,
        /*[in]*/ short ThinType ) = 0;
      virtual HRESULT __stdcall SelectTangency ( ) = 0;
      virtual HRESULT __stdcall InsertBendTableOpen (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ VARIANT_BOOL * Ok ) = 0;
      virtual HRESULT __stdcall InsertBendTableNew (
        /*[in]*/ BSTR FileName,
        /*[in]*/ BSTR Units,
        /*[in]*/ BSTR Type,
        /*[out,retval]*/ VARIANT_BOOL * Ok ) = 0;
      virtual HRESULT __stdcall InsertBendTableEdit ( ) = 0;
      virtual HRESULT __stdcall DeleteBendTable ( ) = 0;
      virtual HRESULT __stdcall InsertSheetMetal3dBend (
        /*[in]*/ double Angle,
        /*[in]*/ double Radius,
        /*[in]*/ VARIANT_BOOL FlipDir,
        /*[in]*/ short BendPos ) = 0;
      virtual HRESULT __stdcall CreateTangentArc2 (
        /*[in]*/ double P1x,
        /*[in]*/ double P1y,
        /*[in]*/ double P1z,
        /*[in]*/ double P2x,
        /*[in]*/ double P2y,
        /*[in]*/ double P2z,
        /*[in]*/ long ArcTypeIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetMassProperties2 (
        /*[in,out]*/ long * Status,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetMassProperties2 (
        /*[in,out]*/ long * Status,
        /*[out,retval]*/ double * MPropsData ) = 0;
      virtual HRESULT __stdcall SketchChamfer (
        /*[in]*/ double AngleORdist,
        /*[in]*/ double Dist1,
        /*[in]*/ long Options ) = 0;
      virtual HRESULT __stdcall FeatureCut4 (
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2,
        /*[in]*/ long KeepPieceIndex,
        /*[in]*/ VARIANT_BOOL NormalCut ) = 0;
      virtual HRESULT __stdcall GetPropertyManagerPage (
        /*[in]*/ long DialogId,
        /*[in]*/ BSTR Title,
        /*[in]*/ IUnknown * Handler,
        /*[out,retval]*/ struct IPropertyManagerPage * * Retval ) = 0;
      virtual HRESULT __stdcall AlignOrdinate ( ) = 0;
      virtual HRESULT __stdcall EditOrdinate ( ) = 0;
      virtual HRESULT __stdcall ReattachOrdinate (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall EditBalloonProperties (
        /*[in]*/ long Style,
        /*[in]*/ long Size,
        /*[in]*/ long UpperTextStyle,
        /*[in]*/ BSTR UpperText,
        /*[in]*/ long LowerTextStyle,
        /*[in]*/ BSTR LowerText,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall EditDimensionProperties2 (
        /*[in]*/ long TolType,
        /*[in]*/ double TolMax,
        /*[in]*/ double TolMin,
        /*[in]*/ BSTR TolMaxFit,
        /*[in]*/ BSTR TolMinFit,
        /*[in]*/ VARIANT_BOOL UseDocPrec,
        /*[in]*/ long Precision,
        /*[in]*/ long ArrowsIn,
        /*[in]*/ VARIANT_BOOL UseDocArrows,
        /*[in]*/ long Arrow1,
        /*[in]*/ long Arrow2,
        /*[in]*/ BSTR PrefixText,
        /*[in]*/ BSTR SuffixText,
        /*[in]*/ VARIANT_BOOL ShowValue,
        /*[in]*/ BSTR CalloutText1,
        /*[in]*/ BSTR CalloutText2,
        /*[in]*/ VARIANT_BOOL CenterText,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertSheetMetalClosedCorner ( ) = 0;
      virtual HRESULT __stdcall SketchUseEdge2 (
        /*[in]*/ VARIANT_BOOL Chain,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SketchOffsetEntities2 (
        /*[in]*/ double Offset,
        /*[in]*/ VARIANT_BOOL BothDirections,
        /*[in]*/ VARIANT_BOOL Chain,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SketchOffset2 (
        /*[in]*/ double Offset,
        /*[in]*/ VARIANT_BOOL BothDirections,
        /*[in]*/ VARIANT_BOOL Chain,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddDimension2 (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IAddDimension2 (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ struct IDisplayDimension * * Retval ) = 0;
      virtual HRESULT __stdcall AddHorizontalDimension2 (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IAddHorizontalDimension2 (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ struct IDisplayDimension * * Retval ) = 0;
      virtual HRESULT __stdcall AddVerticalDimension2 (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IAddVerticalDimension2 (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ struct IDisplayDimension * * Retval ) = 0;
      virtual HRESULT __stdcall AddRadialDimension2 (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IAddRadialDimension2 (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ struct IDisplayDimension * * Retval ) = 0;
      virtual HRESULT __stdcall AddDiameterDimension2 (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IAddDiameterDimension2 (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ struct IDisplayDimension * * Retval ) = 0;
      virtual HRESULT __stdcall GetUserUnit (
        /*[in]*/ long UnitType,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetUserUnit (
        /*[in]*/ long UnitType,
        /*[out,retval]*/ struct IUserUnit * * Retval ) = 0;
      virtual HRESULT __stdcall InsertWeldSymbol3 (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IInsertWeldSymbol3 (
        /*[out,retval]*/ struct IWeldSymbol * * Retval ) = 0;
      virtual HRESULT __stdcall SaveAs3 (
        /*[in]*/ BSTR NewName,
        /*[in]*/ long SaveAsVersion,
        /*[in]*/ long Options,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetUserPreferenceStringValue (
        /*[in]*/ long UserPreference,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetUserPreferenceStringValue (
        /*[in]*/ long UserPreference,
        /*[in]*/ BSTR Value,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DeleteDesignTable ( ) = 0;
      virtual HRESULT __stdcall EditRebuild3 (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ForceRebuild3 (
        /*[in]*/ VARIANT_BOOL TopOnly,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("83a33db3-27c5-11ce-bfd4-00400513bb57"))
IEnumDocuments : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Next (
        /*[in]*/ long Celt,
        /*[out]*/ struct IModelDoc * * Rgelt,
        /*[in,out]*/ long * PceltFetched ) = 0;
      virtual HRESULT __stdcall Skip (
        /*[in]*/ long Celt ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
      virtual HRESULT __stdcall Clone (
        /*[out]*/ struct IEnumDocuments * * Ppenum ) = 0;
};

struct __declspec(uuid("83a33d59-27c5-11ce-bfd4-00400513bb57"))
ISelectionMgr : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetSelectedObjectCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetSelectedObjectType (
        /*[in]*/ long AtIndex,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetSelectedObject (
        /*[in]*/ long AtIndex,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetSelectedObject (
        /*[in]*/ long AtIndex,
        /*[out,retval]*/ IUnknown * * Retval ) = 0;
      virtual HRESULT __stdcall GetSelectionPoint (
        /*[in]*/ long AtIndex,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetSelectionPointInSketchSpace (
        /*[in]*/ long AtIndex,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetSelectedObject2 (
        /*[in]*/ long AtIndex,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetSelectedObject2 (
        /*[in]*/ long AtIndex,
        /*[out,retval]*/ IUnknown * * Retval ) = 0;
      virtual HRESULT __stdcall IsInEditTarget (
        /*[in]*/ long AtIndex,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetSelectedObjectsComponent (
        /*[in]*/ long AtIndex,
        /*[out,retval]*/ IDispatch * * Component ) = 0;
      virtual HRESULT __stdcall IGetSelectedObjectsComponent (
        /*[in]*/ long AtIndex,
        /*[out,retval]*/ struct IComponent * * Component ) = 0;
      virtual HRESULT __stdcall GetSelectedObject3 (
        /*[in]*/ long AtIndex,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetSelectedObject3 (
        /*[in]*/ long AtIndex,
        /*[out,retval]*/ IUnknown * * Retval ) = 0;
      virtual HRESULT __stdcall GetSelectedObjectType2 (
        /*[in]*/ long AtIndex,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IGetSelectionPoint (
        /*[in]*/ long AtIndex,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetSelectionPointInSketchSpace (
        /*[in]*/ long AtIndex,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetSelectedObjectMark (
        /*[in]*/ long AtIndex,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetSelectedObjectMark (
        /*[in]*/ long AtIndex,
        /*[in]*/ long Mark,
        /*[in]*/ long Action,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DeSelect (
        /*[in]*/ VARIANT AtIndex,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IDeSelect (
        /*[in]*/ long Count,
        /*[in]*/ long * AtIndex,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IGetSelectedObjectsComponent2 (
        /*[in]*/ long AtIndex,
        /*[out,retval]*/ struct IComponent2 * * Component ) = 0;
      virtual HRESULT __stdcall CreateCallout (
        /*[out,retval]*/ struct ICallout * * Retval ) = 0;
      virtual HRESULT __stdcall GetSelectedObjectsDrawingView (
        /*[in]*/ long AtIndex,
        /*[out,retval]*/ struct IView * * DrView ) = 0;
      virtual HRESULT __stdcall get_EnableContourSelection (
        /*[out,retval]*/ VARIANT_BOOL * ValueOut ) = 0;
      virtual HRESULT __stdcall put_EnableContourSelection (
        /*[in]*/ VARIANT_BOOL ValueOut ) = 0;
      virtual HRESULT __stdcall SetSelectionPoint (
        /*[in]*/ long AtIndex,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetSelectedObject4 (
        /*[in]*/ long AtIndex,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetSelectedObject4 (
        /*[in]*/ long AtIndex,
        /*[out,retval]*/ IUnknown * * Retval ) = 0;
      virtual HRESULT __stdcall GetSelectedObject5 (
        /*[in]*/ long AtIndex,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall GetSelectedObjectsComponent2 (
        /*[in]*/ long AtIndex,
        /*[out,retval]*/ IDispatch * * Component ) = 0;
      virtual HRESULT __stdcall CreateSelectData (
        /*[out,retval]*/ struct ISelectData * * Retval ) = 0;
      virtual HRESULT __stdcall GetSelectedObjectLoop (
        /*[in]*/ long AtIndex,
        /*[out,retval]*/ struct ILoop2 * * Retval ) = 0;
      virtual HRESULT __stdcall get_SelectionColor (
        /*[in]*/ long Mark,
        /*[out,retval]*/ long * Color ) = 0;
      virtual HRESULT __stdcall put_SelectionColor (
        /*[in]*/ long Mark,
        /*[in]*/ long Color ) = 0;
      virtual HRESULT __stdcall ClearSelectionColors ( ) = 0;
      virtual HRESULT __stdcall GetSelectedObjectCount2 (
        /*[in]*/ long Mark,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetSelectedObjectType3 (
        /*[in]*/ long Index,
        /*[in]*/ long Mark,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetSelectedObject6 (
        /*[in]*/ long Index,
        /*[in]*/ long Mark,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall GetSelectionPoint2 (
        /*[in]*/ long Index,
        /*[in]*/ long Mark,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetSelectionPoint2 (
        /*[in]*/ long Index,
        /*[in]*/ long Mark,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall SetSelectionPoint2 (
        /*[in]*/ long Index,
        /*[in]*/ long Mark,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetSelectionPointInSketchSpace2 (
        /*[in]*/ long Index,
        /*[in]*/ long Mark,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetSelectionPointInSketchSpace2 (
        /*[in]*/ long Index,
        /*[in]*/ long Mark,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IsInEditTarget2 (
        /*[in]*/ long Index,
        /*[in]*/ long Mark,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetSelectedObjectsComponent3 (
        /*[in]*/ long Index,
        /*[in]*/ long Mark,
        /*[out,retval]*/ struct IComponent2 * * Component ) = 0;
      virtual HRESULT __stdcall DeSelect2 (
        /*[in]*/ VARIANT AtIndex,
        /*[in]*/ long Mark,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IDeSelect2 (
        /*[in]*/ long Count,
        /*[in]*/ long * AtIndex,
        /*[in]*/ long Mark,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetSelectedObjectsDrawingView2 (
        /*[in]*/ long Index,
        /*[in]*/ long Mark,
        /*[out,retval]*/ struct IView * * DrView ) = 0;
      virtual HRESULT __stdcall GetSelectedObjectLoop2 (
        /*[in]*/ long Index,
        /*[in]*/ long Mark,
        /*[out,retval]*/ struct ILoop2 * * Retval ) = 0;
      virtual HRESULT __stdcall SetCallout (
        /*[in]*/ long Index,
        /*[in]*/ struct ICallout * PCallout,
        /*[out,retval]*/ VARIANT_BOOL * BRes ) = 0;
      virtual HRESULT __stdcall get_EnableSelection (
        /*[out,retval]*/ VARIANT_BOOL * ValueOut ) = 0;
      virtual HRESULT __stdcall put_EnableSelection (
        /*[in]*/ VARIANT_BOOL ValueOut ) = 0;
      virtual HRESULT __stdcall CreateCallout2 (
        /*[in]*/ long NumberOfRows,
        /*[in]*/ IDispatch * LpHandler,
        /*[out,retval]*/ struct ICallout * * Retval ) = 0;
      virtual HRESULT __stdcall GetSelectedObjectsFace (
        /*[in]*/ long AtIndex,
        /*[in]*/ long Mark,
        /*[out,retval]*/ struct IFace2 * * ObjectFace ) = 0;
};

struct __declspec(uuid("83a33d9a-27c5-11ce-bfd4-00400513bb57"))
IComponent : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetChildren (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetChildren (
        /*[out,retval]*/ struct IComponent * * * Retval ) = 0;
      virtual HRESULT __stdcall IGetChildrenCount (
        /*[out,retval]*/ int * Retval ) = 0;
      virtual HRESULT __stdcall GetXform (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetXform (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetBody (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetBody (
        /*[out,retval]*/ struct IBody * * Retval ) = 0;
      virtual HRESULT __stdcall get_MaterialPropertyValues (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall put_MaterialPropertyValues (
        /*[in]*/ VARIANT Retval ) = 0;
      virtual HRESULT __stdcall get_IMaterialPropertyValues (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_IMaterialPropertyValues (
        /*[in]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall AddPropertyExtension (
        /*[in]*/ VARIANT PropertyExtension,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetPropertyExtension (
        /*[in]*/ long ID,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall ResetPropertyExtension ( ) = 0;
      virtual HRESULT __stdcall GetMaterialIdName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetMaterialIdName (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetMaterialUserName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetMaterialUserName (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetSectionedBodies (
        /*[in]*/ IDispatch * ViewIn,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetBox (
        /*[in]*/ VARIANT_BOOL IncludeRefPlanes,
        /*[in]*/ VARIANT_BOOL IncludeSketches,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetBox (
        /*[in]*/ VARIANT_BOOL IncludeRefPlanes,
        /*[in]*/ VARIANT_BOOL IncludeSketches,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall SetXform (
        /*[in]*/ VARIANT XformIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ISetXform (
        /*[in]*/ double * XformIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetModelDoc (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetModelDoc (
        /*[out,retval]*/ struct IModelDoc * * Retval ) = 0;
      virtual HRESULT __stdcall IsFixed (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall EnumRelatedBodies (
        /*[out,retval]*/ struct IEnumBodies * * Retval ) = 0;
      virtual HRESULT __stdcall IsSuppressed (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall EnumSectionedBodies (
        /*[in]*/ struct IModelView * ViewIn,
        /*[out,retval]*/ struct IEnumBodies * * Retval ) = 0;
      virtual HRESULT __stdcall IsHidden (
        /*[in]*/ VARIANT_BOOL ConsiderSuppressed,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_ReferencedConfiguration (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall get_ReferencedConfiguration (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetSuppression (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetSuppression (
        /*[in]*/ long State,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ long Retval ) = 0;
      virtual HRESULT __stdcall GetPathName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetXformAndSolve (
        /*[in]*/ VARIANT XformIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ISetXformAndSolve (
        /*[in]*/ double * XformIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetTessTriangles (
        /*[in]*/ VARIANT_BOOL NoConversion,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTessTriangles (
        /*[in]*/ VARIANT_BOOL NoConversion,
        /*[out,retval]*/ float * Retval ) = 0;
      virtual HRESULT __stdcall IGetTessTriangleCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTessNorms (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTessNorms (
        /*[out,retval]*/ float * Retval ) = 0;
      virtual HRESULT __stdcall GetTessTriStrips (
        /*[in]*/ VARIANT_BOOL NoConversion,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTessTriStrips (
        /*[in]*/ VARIANT_BOOL NoConversion,
        /*[out,retval]*/ float * Retval ) = 0;
      virtual HRESULT __stdcall IGetTessTriStripSize (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTessTriStripNorms (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTessTriStripNorms (
        /*[out,retval]*/ float * Retval ) = 0;
      virtual HRESULT __stdcall GetTessTriStripEdges (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTessTriStripEdges (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IGetTessTriStripEdgeSize (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IsDisplayDataOutOfDate (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetConstrainedStatus (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall RemoveMaterialProperty (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IGetTemporaryBodyID (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall FindAttribute (
        /*[in]*/ IDispatch * AttributeDef,
        /*[in]*/ long WhichOne,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IFindAttribute (
        /*[in]*/ struct IAttributeDef * AttributeDef,
        /*[in]*/ long WhichOne,
        /*[out,retval]*/ struct IAttribute * * Retval ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT_BOOL AppendFlag,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SelectByMark (
        /*[in]*/ VARIANT_BOOL AppendFlag,
        /*[in]*/ long Mark,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DeSelect (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_Name2 (
        /*[out,retval]*/ BSTR * NewName ) = 0;
      virtual HRESULT __stdcall put_Name2 (
        /*[in]*/ BSTR NewName ) = 0;
      virtual HRESULT __stdcall get_Solving (
        /*[out,retval]*/ long * Retval ) = 0;
};

struct __declspec(uuid("51efb944-d449-11d3-aebe-00c04f683cba"))
IEnumComponents : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Next (
        /*[in]*/ long Celt,
        /*[out]*/ struct IComponent * * Rgelt,
        /*[in,out]*/ long * PceltFetched ) = 0;
      virtual HRESULT __stdcall Skip (
        /*[in]*/ long Celt ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
      virtual HRESULT __stdcall Clone (
        /*[out]*/ struct IEnumComponents * * Ppenum ) = 0;
};

struct __declspec(uuid("7241680b-0bc6-11d4-aeee-00c04f61025c"))
IExplodeStep : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetNumOfComponents (
        /*[out,retval]*/ int * Retval ) = 0;
      virtual HRESULT __stdcall GetComponentName (
        /*[in]*/ int Index,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetComponentXform (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetComponentXform (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetComponent (
        /*[in]*/ int Index,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetComponent (
        /*[in]*/ int Index,
        /*[out,retval]*/ struct IComponent * * Retval ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall IsSubAssemblyRigid (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("cc929f0b-b404-11d3-b981-001083029a97"))
ISimpleFilletFeatureData : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ int * Type ) = 0;
      virtual HRESULT __stdcall get_DefaultRadius (
        /*[out,retval]*/ double * Radius ) = 0;
      virtual HRESULT __stdcall put_DefaultRadius (
        /*[in]*/ double Radius ) = 0;
      virtual HRESULT __stdcall get_OverflowType (
        /*[out,retval]*/ int * Overflow_type ) = 0;
      virtual HRESULT __stdcall put_OverflowType (
        /*[in]*/ int Overflow_type ) = 0;
      virtual HRESULT __stdcall get_IsMultipleRadius (
        /*[out,retval]*/ VARIANT_BOOL * IsMultipleRadius ) = 0;
      virtual HRESULT __stdcall put_IsMultipleRadius (
        /*[in]*/ VARIANT_BOOL IsMultipleRadius ) = 0;
      virtual HRESULT __stdcall get_RoundCorners (
        /*[out,retval]*/ VARIANT_BOOL * RoundCorners ) = 0;
      virtual HRESULT __stdcall put_RoundCorners (
        /*[in]*/ VARIANT_BOOL RoundCorners ) = 0;
      virtual HRESULT __stdcall get_PropagateToTangentFaces (
        /*[out,retval]*/ VARIANT_BOOL * PropTgtFaces ) = 0;
      virtual HRESULT __stdcall put_PropagateToTangentFaces (
        /*[in]*/ VARIANT_BOOL PropTgtFaces ) = 0;
      virtual HRESULT __stdcall get_FilletItemsCount (
        /*[out,retval]*/ int * Count ) = 0;
      virtual HRESULT __stdcall GetFilletItemAtIndex (
        /*[in]*/ int Index,
        /*[out,retval]*/ IDispatch * * PFilletItem ) = 0;
      virtual HRESULT __stdcall IGetFilletItemAtIndex (
        /*[in]*/ int Index,
        /*[out,retval]*/ IUnknown * * PFilletItem ) = 0;
      virtual HRESULT __stdcall GetRadius (
        /*[in]*/ IDispatch * PFilletItem,
        /*[out,retval]*/ double * Radius ) = 0;
      virtual HRESULT __stdcall IGetRadius (
        /*[in]*/ IUnknown * PFilletItem,
        /*[out,retval]*/ double * Radius ) = 0;
      virtual HRESULT __stdcall SetRadius (
        /*[in]*/ IDispatch * PFilletItem,
        /*[in]*/ double Radius ) = 0;
      virtual HRESULT __stdcall ISetRadius (
        /*[in]*/ IUnknown * PFilletItem,
        /*[in]*/ double Radius ) = 0;
      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc * TopDoc,
        /*[in]*/ struct IComponent * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
};

struct __declspec(uuid("83a33d3c-27c5-11ce-bfd4-00400513bb57"))
IBody : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetFirstFace (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstFace (
        /*[out,retval]*/ struct IFace * * Retval ) = 0;
      virtual HRESULT __stdcall GetFaceCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall CreateNewSurface (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateNewSurface (
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall CreateBodyFromSurfaces (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreatePlanarSurface (
        /*[in]*/ VARIANT VRootPoint,
        /*[in]*/ VARIANT VNormal,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreatePlanarSurface (
        /*[in]*/ VARIANT VRootPoint,
        /*[in]*/ VARIANT VNormal,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall CreateRevolutionSurface (
        /*[in]*/ IDispatch * ProfileCurve,
        /*[in]*/ VARIANT AxisPoint,
        /*[in]*/ VARIANT AxisDirection,
        /*[in]*/ VARIANT ProfileEndPtParams,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateRevolutionSurface (
        /*[in]*/ struct ICurve * ProfileCurve,
        /*[in]*/ VARIANT AxisPoint,
        /*[in]*/ VARIANT AxisDirection,
        /*[in]*/ VARIANT ProfileEndPtParams,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall CreateBsplineSurface (
        /*[in]*/ VARIANT Props,
        /*[in]*/ VARIANT UKnots,
        /*[in]*/ VARIANT VKnots,
        /*[in]*/ VARIANT CtrlPtCoords,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateBsplineSurface (
        /*[in]*/ VARIANT Props,
        /*[in]*/ VARIANT UKnots,
        /*[in]*/ VARIANT VKnots,
        /*[in]*/ VARIANT CtrlPtCoords,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall CreateTrimmedSurface (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddProfileLine (
        /*[in]*/ VARIANT RootPoint,
        /*[in]*/ VARIANT Direction,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IAddProfileLine (
        /*[in]*/ VARIANT RootPoint,
        /*[in]*/ VARIANT Direction,
        /*[out,retval]*/ struct ICurve * * Retval ) = 0;
      virtual HRESULT __stdcall AddProfileArc (
        /*[in]*/ VARIANT Center,
        /*[in]*/ VARIANT Axis,
        /*[in]*/ double Radius,
        /*[in]*/ VARIANT StartPoint,
        /*[in]*/ VARIANT EndPoint,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IAddProfileArc (
        /*[in]*/ VARIANT Center,
        /*[in]*/ VARIANT Axis,
        /*[in]*/ double Radius,
        /*[in]*/ VARIANT StartPoint,
        /*[in]*/ VARIANT EndPoint,
        /*[out,retval]*/ struct ICurve * * Retval ) = 0;
      virtual HRESULT __stdcall AddProfileBspline (
        /*[in]*/ VARIANT Props,
        /*[in]*/ VARIANT Knots,
        /*[in]*/ VARIANT CtrlPtCoords,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IAddProfileBspline (
        /*[in]*/ VARIANT Props,
        /*[in]*/ VARIANT Knots,
        /*[in]*/ VARIANT CtrlPtCoords,
        /*[out,retval]*/ struct ICurve * * Retval ) = 0;
      virtual HRESULT __stdcall CreateExtrusionSurface (
        /*[in]*/ IDispatch * ProfileCurve,
        /*[in]*/ VARIANT AxisDirection,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateExtrusionSurface (
        /*[in]*/ struct ICurve * ProfileCurve,
        /*[in]*/ VARIANT AxisDirection,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstSelectedFace (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstSelectedFace (
        /*[out,retval]*/ struct IFace * * Retval ) = 0;
      virtual HRESULT __stdcall GetNextSelectedFace (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNextSelectedFace (
        /*[out,retval]*/ struct IFace * * Retval ) = 0;
      virtual HRESULT __stdcall GetSelectedFaceCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall CreateBoundedSurface (
        /*[in]*/ VARIANT_BOOL UOpt,
        /*[in]*/ VARIANT_BOOL VOpt,
        /*[in]*/ VARIANT UvParams,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetIgesErrorCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetIgesErrorCode (
        /*[in]*/ long Index,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICopy (
        /*[out,retval]*/ struct IBody * * Retval ) = 0;
      virtual HRESULT __stdcall EnumFaces (
        /*[out,retval]*/ struct IEnumFaces * * Retval ) = 0;
      virtual HRESULT __stdcall CreateBodyFromFaces (
        /*[in]*/ long NumOfFaces,
        /*[in]*/ VARIANT FaceList,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateBodyFromFaces (
        /*[in]*/ long NumOfFaces,
        /*[in]*/ VARIANT FaceList,
        /*[out,retval]*/ struct IBody * * Retval ) = 0;
      virtual HRESULT __stdcall DeleteFaces (
        /*[in]*/ long NumOfFaces,
        /*[in]*/ VARIANT FaceList,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Display (
        /*[in]*/ IDispatch * Part,
        /*[in]*/ long Color ) = 0;
      virtual HRESULT __stdcall IDisplay (
        /*[in]*/ struct IPartDoc * Part,
        /*[in]*/ long Color ) = 0;
      virtual HRESULT __stdcall Hide (
        /*[in]*/ IDispatch * Part ) = 0;
      virtual HRESULT __stdcall IHide (
        /*[in]*/ struct IPartDoc * Part ) = 0;
      virtual HRESULT __stdcall ICreatePlanarSurfaceDLL (
        /*[in]*/ double * RootPoint,
        /*[in]*/ double * Normal,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateRevolutionSurfaceDLL (
        /*[in]*/ struct ICurve * ProfileCurve,
        /*[in]*/ double * AxisPoint,
        /*[in]*/ double * AxisDirection,
        /*[in]*/ double * ProfileEndPtParams,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall IAddProfileLineDLL (
        /*[in]*/ double * RootPoint,
        /*[in]*/ double * Direction,
        /*[out,retval]*/ struct ICurve * * Retval ) = 0;
      virtual HRESULT __stdcall IAddProfileArcDLL (
        /*[in]*/ double * Center,
        /*[in]*/ double * Axis,
        /*[in]*/ double Radius,
        /*[in]*/ double * StartPoint,
        /*[in]*/ double * EndPoint,
        /*[out,retval]*/ struct ICurve * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateBsplineSurfaceDLL (
        /*[in]*/ long * Properties,
        /*[in]*/ double * UKnotArray,
        /*[in]*/ double * VKnotArray,
        /*[in]*/ double * ControlPointCoordArray,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall IAddProfileBsplineDLL (
        /*[in]*/ long * Properties,
        /*[in]*/ double * KnotArray,
        /*[in]*/ double * ControlPointCoordArray,
        /*[out,retval]*/ struct ICurve * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateExtrusionSurfaceDLL (
        /*[in]*/ struct ICurve * ProfileCurve,
        /*[in]*/ double * AxisDirection,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateBoundedSurface (
        /*[in]*/ VARIANT_BOOL UOpt,
        /*[in]*/ VARIANT_BOOL VOpt,
        /*[in]*/ double * UvParams ) = 0;
      virtual HRESULT __stdcall ICombineVolumes (
        /*[in]*/ struct IBody * ToolBody ) = 0;
      virtual HRESULT __stdcall ISectionBySheet (
        /*[in]*/ struct IBody * Sheet,
        /*[in]*/ long NumMaxSections,
        /*[in]*/ struct IBody * * SectionedBodies,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IGetBodyBox (
        /*[in]*/ double * BoxCorners ) = 0;
      virtual HRESULT __stdcall SetIgesInfo (
        /*[in]*/ BSTR SystemName,
        /*[in]*/ double Granularity,
        /*[in]*/ VARIANT_BOOL AttemptKnitting ) = 0;
      virtual HRESULT __stdcall DisplayWireFrameXOR (
        /*[in]*/ IDispatch * Part,
        /*[in]*/ long Color ) = 0;
      virtual HRESULT __stdcall IDisplayWireFrameXOR (
        /*[in]*/ struct IPartDoc * Part,
        /*[in]*/ long Color ) = 0;
      virtual HRESULT __stdcall Save (
        /*[in]*/ IUnknown * StreamIn ) = 0;
      virtual HRESULT __stdcall ISave (
        /*[in]*/ IUnknown * StreamIn ) = 0;
      virtual HRESULT __stdcall CreateBlendSurface (
        /*[in]*/ IDispatch * Surface1,
        /*[in]*/ double Range1,
        /*[in]*/ IDispatch * Surface2,
        /*[in]*/ double Range2,
        /*[in]*/ VARIANT StartVec,
        /*[in]*/ VARIANT EndVec,
        /*[in]*/ int HaveHelpVec,
        /*[in]*/ VARIANT HelpVec,
        /*[in]*/ int HaveHelpBox,
        /*[in]*/ VARIANT HelpBox,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateBlendSurface (
        /*[in]*/ struct ISurface * Surface1,
        /*[in]*/ double Range1,
        /*[in]*/ struct ISurface * Surface2,
        /*[in]*/ double Range2,
        /*[in]*/ double * StartVec,
        /*[in]*/ double * EndVec,
        /*[in]*/ int HaveHelpVec,
        /*[in]*/ double * HelpVec,
        /*[in]*/ int HaveHelpBox,
        /*[in]*/ double * HelpBox,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall CreateOffsetSurface (
        /*[in]*/ IDispatch * SurfaceIn,
        /*[in]*/ double Distance,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateOffsetSurface (
        /*[in]*/ struct ISurface * SurfaceIn,
        /*[in]*/ double Distance,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall RemoveRedundantTopology (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetIntersectionEdges (
        /*[in]*/ IDispatch * ToolBodyIn,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetIntersectionEdges (
        /*[in]*/ struct IBody * ToolBodyIn,
        /*[out,retval]*/ struct IEdge * * * EdgeListOut ) = 0;
      virtual HRESULT __stdcall IGetIntersectionEdgeCount (
        /*[in]*/ struct IBody * ToolBodyIn,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall RemoveFacesFromSheet (
        /*[in]*/ long NumOfFaces,
        /*[in]*/ VARIANT FacesToRemove ) = 0;
      virtual HRESULT __stdcall IRemoveFacesFromSheet (
        /*[in]*/ long NumOfFaces,
        /*[in]*/ struct IFace * * * FacesToRemove ) = 0;
      virtual HRESULT __stdcall ICreatePlanarTrimSurfaceDLL (
        /*[in]*/ long VertexCount,
        /*[in]*/ double * Points,
        /*[in]*/ double * Normal ) = 0;
      virtual HRESULT __stdcall get_MaterialPropertyValues (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall put_MaterialPropertyValues (
        /*[in]*/ VARIANT Retval ) = 0;
      virtual HRESULT __stdcall get_IMaterialPropertyValues (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_IMaterialPropertyValues (
        /*[in]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall AddPropertyExtension (
        /*[in]*/ VARIANT PropertyExtension,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetPropertyExtension (
        /*[in]*/ long ID,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall ResetPropertyExtension ( ) = 0;
      virtual HRESULT __stdcall GetMaterialIdName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetMaterialIdName (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetMaterialUserName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetMaterialUserName (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetMassProperties (
        /*[in]*/ double Density,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetMassProperties (
        /*[in]*/ double Density,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall ICreatePsplineSurfaceDLL (
        /*[in]*/ long Dim,
        /*[in]*/ long Uorder,
        /*[in]*/ long VOrder,
        /*[in]*/ long Ncol,
        /*[in]*/ long Nrow,
        /*[in]*/ double * Coeffs,
        /*[in]*/ long Basis,
        /*[in]*/ double * Xform,
        /*[in]*/ double ScaleFactor,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall SetXform (
        /*[in]*/ VARIANT XformIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ISetXform (
        /*[in]*/ double * XformIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateTempBodyFromSurfaces (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateTempBodyFromSurfaces (
        /*[out,retval]*/ struct IBody * * Retval ) = 0;
      virtual HRESULT __stdcall Operations (
        /*[in]*/ int OperationType,
        /*[in]*/ IDispatch * ToolBody,
        /*[in]*/ long NumMaxSections,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IOperations (
        /*[in]*/ int OperationType,
        /*[in]*/ struct IBody * ToolBody,
        /*[in]*/ long NumMaxSections,
        /*[in]*/ struct IBody * * ResultingBodies,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetSheetBody (
        /*[in]*/ int Index,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetSheetBody (
        /*[in]*/ int Index,
        /*[out,retval]*/ struct IBody * * Retval ) = 0;
      virtual HRESULT __stdcall GetProcessedBody (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetProcessedBody (
        /*[out,retval]*/ struct IBody * * Retval ) = 0;
      virtual HRESULT __stdcall GetProcessedBodyWithSelFace (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetProcessedBodyWithSelFace (
        /*[out,retval]*/ struct IBody * * Retval ) = 0;
      virtual HRESULT __stdcall Check (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetExcessBodyArray (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetExcessBodyArray (
        /*[out,retval]*/ struct IBody * * * Retval ) = 0;
      virtual HRESULT __stdcall IGetExcessBodyCount (
        /*[out,retval]*/ int * Retval ) = 0;
      virtual HRESULT __stdcall CreateBaseFeature (
        /*[in]*/ IDispatch * BodyIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ICreateBaseFeature (
        /*[in]*/ struct IBody * BodyIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DeleteFaces2 (
        /*[in]*/ long NumOfFaces,
        /*[in]*/ VARIANT FaceList,
        /*[in]*/ int Option,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IDeleteFaces2 (
        /*[in]*/ long NumOfFaces,
        /*[in]*/ struct IFace * * FaceList,
        /*[in]*/ int Option,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IAddVertexPoint (
        /*[in]*/ double * Point,
        /*[out,retval]*/ struct IVertex * * Retval ) = 0;
      virtual HRESULT __stdcall AddVertexPoint (
        /*[in]*/ VARIANT Point,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall GetExtremePoint (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out]*/ double * Outx,
        /*[out]*/ double * Outy,
        /*[out]*/ double * Outz,
        /*[out,retval]*/ VARIANT_BOOL * Found ) = 0;
      virtual HRESULT __stdcall GetType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall IDeleteFaces3 (
        /*[in]*/ long NumOfFaces,
        /*[in]*/ struct IFace * * FaceList,
        /*[in]*/ long Option,
        /*[in]*/ VARIANT_BOOL DoLocalCheck,
        /*[in]*/ VARIANT_BOOL * LocalCheckResult ) = 0;
      virtual HRESULT __stdcall SetCurrentSurface (
        /*[in]*/ IDispatch * SurfaceIn ) = 0;
      virtual HRESULT __stdcall ISetCurrentSurface (
        /*[in]*/ struct ISurface * SurfaceIn ) = 0;
      virtual HRESULT __stdcall DraftBody (
        /*[in]*/ long NumOfFaces,
        /*[in]*/ VARIANT FaceList,
        /*[in]*/ VARIANT EdgeList,
        /*[in]*/ double DraftAngle,
        /*[in]*/ VARIANT Dir,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IDraftBody (
        /*[in]*/ long NumOfFaces,
        /*[in]*/ struct IFace * * FaceList,
        /*[in]*/ struct IEdge * * EdgeList,
        /*[in]*/ double DraftAngle,
        /*[in]*/ double * Dir,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DeleteBlends (
        /*[in]*/ long NumOfFaces,
        /*[in]*/ VARIANT FaceList,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IDeleteBlends (
        /*[in]*/ long NumOfFaces,
        /*[in]*/ struct IFace * * FaceList,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Operations2 (
        /*[in]*/ int OperationType,
        /*[in]*/ IDispatch * ToolBody,
        /*[out]*/ long * ErrorCode,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IOperations2 (
        /*[in]*/ int OperationType,
        /*[in]*/ struct IBody * ToolBody,
        /*[out]*/ long * ErrorCode,
        /*[out,retval]*/ struct IEnumBodies * * Retval ) = 0;
      virtual HRESULT __stdcall GetBodyBox (
        /*[out,retval]*/ VARIANT * BoxCorners ) = 0;
      virtual HRESULT __stdcall DeleteBlends2 (
        /*[in]*/ long NumOfFaces,
        /*[in]*/ VARIANT FaceList,
        /*[in]*/ VARIANT_BOOL DoLocalCheck,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IDeleteBlends2 (
        /*[in]*/ long NumOfFaces,
        /*[in]*/ struct IFace * * FaceList,
        /*[in]*/ VARIANT_BOOL DoLocalCheck,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetTessellation (
        /*[in]*/ VARIANT FaceList,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetTessellation (
        /*[in]*/ long NumOfFaces,
        /*[in]*/ struct IFace * * FaceList,
        /*[out,retval]*/ struct ITessellation * * Retval ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall MatchedBoolean (
        /*[in]*/ int OperationType,
        /*[in]*/ IDispatch * ToolBody,
        /*[in]*/ long NumOfMatchingFaces,
        /*[in]*/ VARIANT FaceList1,
        /*[in]*/ VARIANT FaceList2,
        /*[out]*/ long * ErrorCode,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IMatchedBoolean (
        /*[in]*/ int OperationType,
        /*[in]*/ struct IBody * ToolBody,
        /*[in]*/ long NumOfMatchingFaces,
        /*[in]*/ struct IFace * * FaceList1,
        /*[in]*/ struct IFace * * FaceList2,
        /*[out]*/ long * ErrorCode,
        /*[out,retval]*/ struct IEnumBodies * * Retval ) = 0;
      virtual HRESULT __stdcall GetEdgeCount (
        /*[out,retval]*/ long * Retval ) = 0;
};

struct __declspec(uuid("83a33d96-27c5-11ce-bfd4-00400513bb57"))
IEnumBodies : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Next (
        /*[in]*/ long Celt,
        /*[out]*/ struct IBody * * Rgelt,
        /*[in,out]*/ long * PceltFetched ) = 0;
      virtual HRESULT __stdcall Skip (
        /*[in]*/ long Celt ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
      virtual HRESULT __stdcall Clone (
        /*[out]*/ struct IEnumBodies * * Ppenum ) = 0;
};

struct __declspec(uuid("83a33d3e-27c5-11ce-bfd4-00400513bb57"))
IFace : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Normal (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall put_Normal (
        /*[in]*/ VARIANT Retval ) = 0;
      virtual HRESULT __stdcall get_MaterialUserName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_MaterialUserName (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall get_MaterialIdName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_MaterialIdName (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall get_MaterialPropertyValues (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall put_MaterialPropertyValues (
        /*[in]*/ VARIANT Retval ) = 0;
      virtual HRESULT __stdcall get_INormal (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_INormal (
        /*[in]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetNextFace (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNextFace (
        /*[out,retval]*/ struct IFace * * Retval ) = 0;
      virtual HRESULT __stdcall GetSurface (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetSurface (
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall GetEdgeCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetEdges (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetEdges (
        /*[out,retval]*/ struct IEdge * * * EdgeList ) = 0;
      virtual HRESULT __stdcall GetFeature (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFeature (
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall GetFeatureId (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTrimCurves (
        /*[in]*/ VARIANT_BOOL WantCubic,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetUVBounds (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall FaceInSurfaceSense (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetLoopCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstLoop (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstLoop (
        /*[out,retval]*/ struct ILoop * * Retval ) = 0;
      virtual HRESULT __stdcall IsSame (
        /*[in]*/ IDispatch * FaceIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IIsSame (
        /*[in]*/ struct IFace * FaceIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddPropertyExtension (
        /*[in]*/ VARIANT PropertyExtension,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetPropertyExtension (
        /*[in]*/ long ID,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall ResetPropertyExtension ( ) = 0;
      virtual HRESULT __stdcall GetTessTriangles (
        /*[in]*/ VARIANT_BOOL NoConversion,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetTessNorms (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetTessTriStrips (
        /*[in]*/ VARIANT_BOOL NoConversion,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetTessTriStripNorms (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall EnumLoops (
        /*[out,retval]*/ struct IEnumLoops * * Retval ) = 0;
      virtual HRESULT __stdcall EnumEdges (
        /*[out,retval]*/ struct IEnumEdges * * Retval ) = 0;
      virtual HRESULT __stdcall GetBody (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetBody (
        /*[out,retval]*/ struct IBody * * Body ) = 0;
      virtual HRESULT __stdcall IGetTessTriangles (
        /*[in]*/ VARIANT_BOOL NoConversion,
        /*[out,retval]*/ float * Retval ) = 0;
      virtual HRESULT __stdcall IGetTessNorms (
        /*[out,retval]*/ float * Retval ) = 0;
      virtual HRESULT __stdcall GetTessTriangleCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IGetTessTriStrips (
        /*[in]*/ VARIANT_BOOL NoConversion,
        /*[out,retval]*/ float * Retval ) = 0;
      virtual HRESULT __stdcall IGetTessTriStripNorms (
        /*[out,retval]*/ float * Retval ) = 0;
      virtual HRESULT __stdcall GetTessTriStripSize (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IGetUVBounds (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetClosestPointOn (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetClosestPointOn (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall Highlight (
        /*[in]*/ VARIANT_BOOL State ) = 0;
      virtual HRESULT __stdcall IHighlight (
        /*[in]*/ VARIANT_BOOL State ) = 0;
      virtual HRESULT __stdcall GetTrimCurveTopology (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTrimCurveTopology (
        /*[out,retval]*/ IDispatch * * * TopolList ) = 0;
      virtual HRESULT __stdcall GetTrimCurveTopologyCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTrimCurveTopologyTypes (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTrimCurveTopologyTypes (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall RemoveRedundantTopology (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateSheetBodyByFaceExtension (
        /*[in]*/ VARIANT BoxLowIn,
        /*[in]*/ VARIANT BoxHighIn,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateSheetBodyByFaceExtension (
        /*[in]*/ double * BoxLowIn,
        /*[in]*/ double * BoxHighIn,
        /*[out,retval]*/ struct IBody * * Retval ) = 0;
      virtual HRESULT __stdcall GetArea (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetBox (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetBox (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall RemoveInnerLoops (
        /*[in]*/ long NumOfLoops,
        /*[in]*/ VARIANT InnerLoopsIn,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IRemoveInnerLoops (
        /*[in]*/ long NumOfLoops,
        /*[in]*/ struct ILoop * * InnerLoopsIn,
        /*[out,retval]*/ struct IFace * * Retval ) = 0;
      virtual HRESULT __stdcall CreateSheetBody (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateSheetBody (
        /*[out,retval]*/ struct IBody * * Retval ) = 0;
      virtual HRESULT __stdcall GetSilhoutteEdges (
        /*[in]*/ double * Root,
        /*[in]*/ double * Normal,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetSilhoutteEdges (
        /*[in]*/ double * Root,
        /*[in]*/ double * Normal,
        /*[out,retval]*/ struct IEdge * * * Siledgesout ) = 0;
      virtual HRESULT __stdcall IGetSilhoutteEdgeCount (
        /*[in]*/ double * Root,
        /*[in]*/ double * Normal,
        /*[out,retval]*/ long * Ret ) = 0;
      virtual HRESULT __stdcall IGetTrimCurveSize (
        /*[in]*/ VARIANT_BOOL WantCubic,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IGetTrimCurve (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_IMaterialPropertyValues (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_IMaterialPropertyValues (
        /*[in]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetFaceId (
        /*[out,retval]*/ int * Retval ) = 0;
      virtual HRESULT __stdcall SetFaceId (
        /*[in]*/ int IdIn ) = 0;
      virtual HRESULT __stdcall IGetTrimCurveSize2 (
        /*[in]*/ long WantCubic,
        /*[in]*/ long WantNRational,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetSilhoutteEdgesVB (
        /*[in]*/ double Xroot,
        /*[in]*/ double Yroot,
        /*[in]*/ double Zroot,
        /*[in]*/ double Xnormal,
        /*[in]*/ double Ynormal,
        /*[in]*/ double Znormal,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall RemoveFaceId (
        /*[in]*/ int IdIn ) = 0;
      virtual HRESULT __stdcall GetTrimCurves2 (
        /*[in]*/ VARIANT_BOOL WantCubic,
        /*[in]*/ VARIANT_BOOL WantNRational,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetShellType (
        /*[out,retval]*/ int * Retval ) = 0;
      virtual HRESULT __stdcall IGetFacetData (
        /*[in]*/ int FacetMesh,
        /*[in]*/ int * NFacets,
        /*[in]*/ int * NStrips,
        /*[in]*/ int * * StripVertexNums,
        /*[in]*/ float * * VertexCoords,
        /*[in]*/ float * * NormalCoords ) = 0;
      virtual HRESULT __stdcall GetTessTriStripEdges (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTessTriStripEdges (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IGetTessTriStripEdgeSize (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall RemoveMaterialProperty (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetPatternSeedFeature (
        /*[out,retval]*/ IDispatch * * SeedFeature ) = 0;
      virtual HRESULT __stdcall IGetPatternSeedFeature (
        /*[out,retval]*/ struct IFeature * * SeedFeature ) = 0;
};

struct __declspec(uuid("83a33d5b-27c5-11ce-bfd4-00400513bb57"))
IEnumFaces : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Next (
        /*[in]*/ long Celt,
        /*[out]*/ struct IFace * * Rgelt,
        /*[in,out]*/ long * PceltFetched ) = 0;
      virtual HRESULT __stdcall Skip (
        /*[in]*/ long Celt ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
      virtual HRESULT __stdcall Clone (
        /*[out]*/ struct IEnumFaces * * Ppenum ) = 0;
};

struct __declspec(uuid("83a33daf-27c5-11ce-bfd4-00400513bb57"))
IDomeFeatureData : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * Height ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double Height ) = 0;
      virtual HRESULT __stdcall get_ReverseDir (
        /*[out,retval]*/ VARIANT_BOOL * Reverse ) = 0;
      virtual HRESULT __stdcall put_ReverseDir (
        /*[in]*/ VARIANT_BOOL Reverse ) = 0;
      virtual HRESULT __stdcall get_Elliptical (
        /*[out,retval]*/ VARIANT_BOOL * Elliptical ) = 0;
      virtual HRESULT __stdcall put_Elliptical (
        /*[in]*/ VARIANT_BOOL Elliptical ) = 0;
      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc * TopDoc,
        /*[in]*/ struct IComponent * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_Face (
        /*[out,retval]*/ IDispatch * * Face ) = 0;
      virtual HRESULT __stdcall put_Face (
        /*[in]*/ IDispatch * Face ) = 0;
      virtual HRESULT __stdcall get_IFace (
        /*[out,retval]*/ struct IFace * * Face ) = 0;
      virtual HRESULT __stdcall put_IFace (
        /*[in]*/ struct IFace * Face ) = 0;
};

struct __declspec(uuid("83a33d40-27c5-11ce-bfd4-00400513bb57"))
ISurface : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_PlaneParams (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall get_CylinderParams (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall get_ConeParams (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall get_SphereParams (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall get_TorusParams (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IsPlane (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsCylinder (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsCone (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Identity (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IsSphere (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsTorus (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsParametric (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsBlending (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsOffset (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsSwept (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsRevolved (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsForeign (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Parameterization (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall Evaluate (
        /*[in]*/ double UParam,
        /*[in]*/ double VParam,
        /*[in]*/ long NumUDeriv,
        /*[in]*/ long NumVDeriv,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetBSurfParams (
        /*[in]*/ VARIANT_BOOL WantCubicRational,
        /*[in]*/ VARIANT VP0,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall AddTrimmingLoop (
        /*[in]*/ long NCrvs,
        /*[in]*/ VARIANT VOrder,
        /*[in]*/ VARIANT VDim,
        /*[in]*/ VARIANT VPeriodic,
        /*[in]*/ VARIANT VNumKnots,
        /*[in]*/ VARIANT VNumCtrlPoints,
        /*[in]*/ VARIANT VKnots,
        /*[in]*/ VARIANT VCtrlPointDbls,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateNewCurve (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateNewCurve (
        /*[out,retval]*/ struct ICurve * * Retval ) = 0;
      virtual HRESULT __stdcall GetRevsurfParams (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetExtrusionsurfParams (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetProfileCurve (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetProfileCurve (
        /*[out,retval]*/ struct ICurve * * Retval ) = 0;
      virtual HRESULT __stdcall ReverseEvaluate (
        /*[in]*/ double PositionX,
        /*[in]*/ double PositionY,
        /*[in]*/ double PositionZ,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall get_IPlaneParams (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_ICylinderParams (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_IConeParams (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_ISphereParams (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_ITorusParams (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IReverseEvaluate (
        /*[in]*/ double PositionX,
        /*[in]*/ double PositionY,
        /*[in]*/ double PositionZ,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetRevsurfParams (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetExtrusionsurfParams (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IParameterization (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IEvaluate (
        /*[in]*/ double UParam,
        /*[in]*/ double VParam,
        /*[in]*/ long NumUDeriv,
        /*[in]*/ long NumVDeriv,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetBSurfParams (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetBSurfParamsSize (
        /*[in]*/ VARIANT_BOOL WantCubicRational,
        /*[in]*/ double * Range,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IAddTrimmingLoop (
        /*[in]*/ long CurveCount,
        /*[in]*/ long * Order,
        /*[in]*/ long * Dim,
        /*[in]*/ long * Periodic,
        /*[in]*/ long * NumKnots,
        /*[in]*/ long * NumCtrlPoints,
        /*[in]*/ double * Knots,
        /*[in]*/ double * CtrlPointDbls ) = 0;
      virtual HRESULT __stdcall EvaluateAtPoint (
        /*[in]*/ double PositionX,
        /*[in]*/ double PositionY,
        /*[in]*/ double PositionZ,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IEvaluateAtPoint (
        /*[in]*/ double PositionX,
        /*[in]*/ double PositionY,
        /*[in]*/ double PositionZ,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetOffsetSurfParams (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetBSurfParamsSize2 (
        /*[in]*/ VARIANT_BOOL WantCubic,
        /*[in]*/ VARIANT_BOOL WantNonRational,
        /*[in]*/ double * Range,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICopy (
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall CreateTrimmedSheet (
        /*[in]*/ VARIANT Curves,
        /*[out,retval]*/ IDispatch * * Sheet ) = 0;
      virtual HRESULT __stdcall ICreateTrimmedSheet (
        /*[in]*/ long NCurves,
        /*[in]*/ struct ICurve * * Curves,
        /*[out,retval]*/ struct IBody * * Sheet ) = 0;
      virtual HRESULT __stdcall AddTrimmingLoop2 (
        /*[in]*/ long NCrvs,
        /*[in]*/ VARIANT VOrder,
        /*[in]*/ VARIANT VDim,
        /*[in]*/ VARIANT VPeriodic,
        /*[in]*/ VARIANT VNumKnots,
        /*[in]*/ VARIANT VNumCtrlPoints,
        /*[in]*/ VARIANT VKnots,
        /*[in]*/ VARIANT VCtrlPointDbls,
        /*[in]*/ VARIANT UvRange,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IAddTrimmingLoop2 (
        /*[in]*/ long CurveCount,
        /*[in]*/ long * Order,
        /*[in]*/ long * Dim,
        /*[in]*/ long * Periodic,
        /*[in]*/ long * NumKnots,
        /*[in]*/ long * NumCtrlPoints,
        /*[in]*/ double * Knots,
        /*[in]*/ double * CtrlPointDbls,
        /*[in]*/ double * UvRange ) = 0;
      virtual HRESULT __stdcall GetBSurfParams2 (
        /*[in]*/ VARIANT_BOOL WantCubic,
        /*[in]*/ VARIANT_BOOL WantNonRational,
        /*[in]*/ VARIANT VP0,
        /*[in]*/ double Tolerance,
        /*[out]*/ VARIANT_BOOL * Sense,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetBSurfParamsSize3 (
        /*[in]*/ VARIANT_BOOL WantCubic,
        /*[in]*/ VARIANT_BOOL WantNonRational,
        /*[in]*/ double * Range,
        /*[in]*/ double Tolerance,
        /*[out]*/ VARIANT_BOOL * Sense,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetClosestPointOn (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetClosestPointOn (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetOffsetSurfParams2 (
        /*[out]*/ IDispatch * * BaseSurf,
        /*[out]*/ VARIANT_BOOL * Sense,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetOffsetSurfParams2 (
        /*[out]*/ struct ISurface * * BaseSurf,
        /*[out]*/ VARIANT_BOOL * Sense,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetIntersectSurfaceCount (
        /*[in]*/ struct ISurface * OtherSurface,
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IIntersectSurface (
        /*[in]*/ struct ISurface * OtherSurf,
        /*[in]*/ long CurveCount,
        /*[in,out]*/ struct ICurve * * CurveArray,
        /*[in,out]*/ double * BoundsArray,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IntersectSurface (
        /*[in]*/ IDispatch * OtherSurf,
        /*[in,out]*/ VARIANT * CurveArray,
        /*[in,out]*/ VARIANT * BoundsArray,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetIntersectCurveCount (
        /*[in]*/ struct ICurve * OtherCurve,
        /*[in]*/ double * CurveBound,
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IIntersectCurve (
        /*[in]*/ struct ICurve * OtherCurve,
        /*[in]*/ double * CurveBound,
        /*[in]*/ long PointCount,
        /*[in,out]*/ double * PointArray,
        /*[in,out]*/ double * TArray,
        /*[in,out]*/ double * UvArray,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IntersectCurve (
        /*[in]*/ IDispatch * OtherCurve,
        /*[in]*/ VARIANT CurveBound,
        /*[in,out]*/ VARIANT * PointArray,
        /*[in,out]*/ VARIANT * TArray,
        /*[in,out]*/ VARIANT * UvArray,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall MakeIsoCurve (
        /*[in]*/ VARIANT_BOOL UorV,
        /*[in]*/ double UvValue,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IMakeIsoCurve (
        /*[in]*/ VARIANT_BOOL UorV,
        /*[in]*/ double UvValue,
        /*[out,retval]*/ struct ICurve * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateTrimmedSheet2 (
        /*[in]*/ long NCurves,
        /*[in]*/ struct ICurve * * Curves,
        /*[out,retval]*/ struct IBody2 * * Sheet ) = 0;
      virtual HRESULT __stdcall MakeIsoCurves (
        /*[in]*/ VARIANT UvRange,
        /*[in]*/ VARIANT Dir,
        /*[in]*/ double Angle,
        /*[in]*/ double Tol,
        /*[out]*/ VARIANT * Curves,
        /*[out]*/ VARIANT * CurveBounds,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IGetMakeIsoCurvesCount (
        /*[in]*/ double * UvRange,
        /*[in]*/ double * Dir,
        /*[in]*/ double Angle,
        /*[in]*/ double Tol,
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IMakeIsoCurves (
        /*[in]*/ double * UvRange,
        /*[in]*/ double * Dir,
        /*[in]*/ double Angle,
        /*[in]*/ double Tol,
        /*[in]*/ long CurveCount,
        /*[out]*/ struct ICurve * * Curves,
        /*[out]*/ double * CurveBounds,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetIntersectCurveCount2 (
        /*[in]*/ struct ICurve * OtherCurve,
        /*[in]*/ double * CurveBound,
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IIntersectCurve2 (
        /*[in]*/ struct ICurve * OtherCurve,
        /*[in]*/ double * CurveBound,
        /*[in]*/ long PointCount,
        /*[in,out]*/ double * PointArray,
        /*[in,out]*/ double * TArray,
        /*[in,out]*/ double * UvArray,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IntersectCurve2 (
        /*[in]*/ IDispatch * OtherCurve,
        /*[in]*/ VARIANT CurveBound,
        /*[in,out]*/ VARIANT * PointArray,
        /*[in,out]*/ VARIANT * TArray,
        /*[in,out]*/ VARIANT * UvArray,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ICreateTrimmedSheet3 (
        /*[in]*/ long NCurves,
        /*[in]*/ struct ICurve * * Curves,
        /*[out,retval]*/ struct IBody2 * * Sheet ) = 0;
      virtual HRESULT __stdcall GetProjectedPointOn (
        /*[in]*/ struct IMathPoint * Point,
        /*[in]*/ struct IMathVector * Direction,
        /*[out,retval]*/ struct IMathPoint * * Retval ) = 0;
      virtual HRESULT __stdcall CreateTrimmedSheet4 (
        /*[in]*/ VARIANT Curves,
        /*[in]*/ VARIANT_BOOL PreserveAnalyticCurves,
        /*[out,retval]*/ IDispatch * * Sheet ) = 0;
      virtual HRESULT __stdcall ICreateTrimmedSheet4 (
        /*[in]*/ long NCurves,
        /*[in]*/ struct ICurve * * Curves,
        /*[in]*/ VARIANT_BOOL PreserveAnalyticCurves,
        /*[out,retval]*/ struct IBody * * Sheet ) = 0;
      virtual HRESULT __stdcall FindMinimumRadius (
        /*[in]*/ VARIANT UBound,
        /*[in]*/ VARIANT VBound,
        /*[in,out]*/ long * NumOfRadius,
        /*[in,out]*/ VARIANT * Radius,
        /*[in,out]*/ VARIANT * Location,
        /*[in,out]*/ VARIANT * UVParameter,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IFindMinimumRadius (
        /*[in]*/ double * UBound,
        /*[in]*/ double * VBound,
        /*[in,out]*/ long * NumOfRadius,
        /*[in,out]*/ VARIANT * Radius,
        /*[in,out]*/ VARIANT * Location,
        /*[in,out]*/ VARIANT * UVParameter,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("83a33d44-27c5-11ce-bfd4-00400513bb57"))
ICurve : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_LineParams (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall get_CircleParams (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall Identity (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IsCircle (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsLine (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsBcurve (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetBCurveParams (
        /*[in]*/ VARIANT_BOOL WantCubicIn,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall ConvertLineToBcurve (
        /*[in]*/ VARIANT StartPoint,
        /*[in]*/ VARIANT EndPoint,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall ConvertArcToBcurve (
        /*[in]*/ VARIANT Center,
        /*[in]*/ VARIANT Axis,
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT End,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall ReverseCurve (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IReverseCurve (
        /*[out,retval]*/ struct ICurve * * Retval ) = 0;
      virtual HRESULT __stdcall GetPCurveParams (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall get_ILineParams (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_ICircleParams (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetBCurveParams (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetBCurveParamsSize (
        /*[in]*/ VARIANT_BOOL WantCubicIn,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IConvertLineToBcurveSize (
        /*[in]*/ double * StartPoint,
        /*[in]*/ double * EndPoint,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IConvertArcToBcurveSize (
        /*[in]*/ double * Center,
        /*[in]*/ double * Axis,
        /*[in]*/ double * Start,
        /*[in]*/ double * End,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IGetPCurveParams (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetPCurveParamsSize (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetLength (
        /*[in]*/ double StartParam,
        /*[in]*/ double EndParam,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IConvertPcurveToBcurveSize (
        /*[in]*/ long Dim,
        /*[in]*/ long Order,
        /*[in]*/ long Nsegs,
        /*[in]*/ double * Coeffs,
        /*[in]*/ long Basis,
        /*[in]*/ double * Xform,
        /*[in]*/ double ScaleFactor,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetSplinePts (
        /*[in]*/ VARIANT ParamsArrayIn,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetSplinePts (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetSplinePtsSize (
        /*[in]*/ int * PropArray,
        /*[in]*/ double * KnotsArray,
        /*[in]*/ double * CntrlPntCoordArray,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IGetBCurveParamsSize2 (
        /*[in]*/ VARIANT_BOOL WantCubic,
        /*[in]*/ VARIANT_BOOL WantNRational,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICopy (
        /*[out,retval]*/ struct ICurve * * Retval ) = 0;
      virtual HRESULT __stdcall GetTessPts (
        /*[in]*/ double ChordTolerance,
        /*[in]*/ double LengthTolerance,
        /*[in]*/ VARIANT StartPoint,
        /*[in]*/ VARIANT EndPoint,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTessPts (
        /*[in]*/ double ChordTolerance,
        /*[in]*/ double LengthTolerance,
        /*[in]*/ double * StartPoint,
        /*[in]*/ double * EndPoint,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetTessPtsSize (
        /*[in]*/ double ChordTolerance,
        /*[in]*/ double LengthTolerance,
        /*[in]*/ double * StartPoint,
        /*[in]*/ double * EndPoint,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IntersectCurve (
        /*[in]*/ IDispatch * OtherCurve,
        /*[in]*/ VARIANT ThisStartPoint,
        /*[in]*/ VARIANT ThisEndPoint,
        /*[in]*/ VARIANT OtherStartPoint,
        /*[in]*/ VARIANT OtherEndPoint,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IIntersectCurve (
        /*[in]*/ struct ICurve * OtherCurve,
        /*[in]*/ double * ThisStartPoint,
        /*[in]*/ double * ThisEndPoint,
        /*[in]*/ double * OtherStartPoint,
        /*[in]*/ double * OtherEndPoint,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IIntersectCurveSize (
        /*[in]*/ struct ICurve * OtherCurve,
        /*[in]*/ double * ThisStartPoint,
        /*[in]*/ double * ThisEndPoint,
        /*[in]*/ double * OtherStartPoint,
        /*[in]*/ double * OtherEndPoint,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall CreateTrimmedCurve (
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ double Z1,
        /*[in]*/ double X2,
        /*[in]*/ double Y2,
        /*[in]*/ double Z2,
        /*[out,retval]*/ IDispatch * * TrimmedCurve ) = 0;
      virtual HRESULT __stdcall ICreateTrimmedCurve (
        /*[in]*/ double * Start,
        /*[in]*/ double * End,
        /*[out,retval]*/ struct ICurve * * TrimmedCurve ) = 0;
      virtual HRESULT __stdcall IsEllipse (
        /*[out,retval]*/ VARIANT_BOOL * IsEllipse ) = 0;
      virtual HRESULT __stdcall GetEllipseParams (
        /*[out,retval]*/ VARIANT * Params ) = 0;
      virtual HRESULT __stdcall IGetEllipseParams (
        /*[in]*/ double * ParamArray ) = 0;
      virtual HRESULT __stdcall Evaluate (
        /*[in]*/ double Parameter,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IEvaluate (
        /*[in]*/ double Parameter,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetClosestPointOn (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetClosestPointOn (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetEndParams (
        /*[out]*/ double * Start,
        /*[out]*/ double * End,
        /*[out]*/ VARIANT_BOOL * IsClosed,
        /*[out]*/ VARIANT_BOOL * IsPeriodic,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetLength2 (
        /*[in]*/ double StartParam,
        /*[in]*/ double EndParam,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall MakeBsplineCurve (
        /*[out,retval]*/ struct ICurve * * Retval ) = 0;
      virtual HRESULT __stdcall CreateWireBody (
        /*[out,retval]*/ struct IBody2 * * PBody ) = 0;
      virtual HRESULT __stdcall GetBaseCurve (
        /*[out,retval]*/ struct ICurve * * Retval ) = 0;
      virtual HRESULT __stdcall IsTrimmedCurve (
        /*[out,retval]*/ VARIANT_BOOL * IsTrimmed ) = 0;
      virtual HRESULT __stdcall CreateTrimmedCurve2 (
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ double Z1,
        /*[in]*/ double X2,
        /*[in]*/ double Y2,
        /*[in]*/ double Z2,
        /*[out,retval]*/ struct ICurve * * TrimmedCurve ) = 0;
      virtual HRESULT __stdcall CreateSurfaceCurve (
        /*[in]*/ struct ISurface * Surf,
        /*[out]*/ long * Error,
        /*[out,retval]*/ struct ICurve * * SurfCurve ) = 0;
      virtual HRESULT __stdcall ApplyTransform (
        /*[in]*/ struct IMathTransform * Xform ) = 0;
      virtual HRESULT __stdcall SimplifyBCurve (
        /*[in]*/ double TolIn,
        /*[out,retval]*/ struct ICurve * * Retval ) = 0;
      virtual HRESULT __stdcall ExtentCurve (
        /*[in]*/ VARIANT_BOOL AtStart,
        /*[in]*/ double Length,
        /*[in]*/ VARIANT_BOOL LinearExt,
        /*[out,retval]*/ struct ICurve * * Retval ) = 0;
      virtual HRESULT __stdcall JoinCurves (
        /*[in]*/ VARIANT Curves,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IJoinCurves (
        /*[in]*/ long NCurves,
        /*[in]*/ struct ICurve * * Curves,
        /*[out,retval]*/ struct ICurve * * Retval ) = 0;
      virtual HRESULT __stdcall Evaluate2 (
        /*[in]*/ double Parameter,
        /*[in]*/ long NumberOfDerivatives,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IEvaluate2 (
        /*[in]*/ double Parameter,
        /*[in]*/ long NumberOfDerivatives,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetBCurveParams3 (
        /*[in]*/ VARIANT_BOOL WantCubicIn,
        /*[in]*/ VARIANT_BOOL WantNRational,
        /*[in]*/ VARIANT_BOOL ForceNonPeriodic,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetBCurveParams3 (
        /*[in]*/ long ArraySize,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetBCurveParamsSize3 (
        /*[in]*/ VARIANT_BOOL WantCubicIn,
        /*[in]*/ VARIANT_BOOL WantNRational,
        /*[in]*/ VARIANT_BOOL ForceNonPeriodic,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall MakeBsplineCurve2 (
        /*[out,retval]*/ struct ICurve * * Retval ) = 0;
      virtual HRESULT __stdcall GetLength3 (
        /*[in]*/ double StartParam,
        /*[in]*/ double EndParam,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall FindMinimumRadius (
        /*[in]*/ VARIANT Bound,
        /*[in,out]*/ long * NumOfRadius,
        /*[in,out]*/ VARIANT * Radius,
        /*[in,out]*/ VARIANT * Location,
        /*[in,out]*/ VARIANT * Parameter,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IFindMinimumRadius (
        /*[in]*/ double * Bound,
        /*[in,out]*/ long * NumOfRadius,
        /*[in,out]*/ VARIANT * Radius,
        /*[in,out]*/ VARIANT * Location,
        /*[in,out]*/ VARIANT * Parameter,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("5b57e3bc-7139-11d3-aea2-00c04f683cba"))
IEnumCurves : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Next (
        /*[in]*/ long Celt,
        /*[out]*/ struct ICurve * * Rgelt,
        /*[in,out]*/ long * PceltFetched ) = 0;
      virtual HRESULT __stdcall Skip (
        /*[in]*/ long Celt ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
      virtual HRESULT __stdcall Clone (
        /*[out]*/ struct IEnumCurves * * Ppenum ) = 0;
};

struct __declspec(uuid("3a075bfd-9962-4431-8321-7af4903c55ad"))
IBody2 : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetFirstFace (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstFace (
        /*[out,retval]*/ struct IFace2 * * Retval ) = 0;
      virtual HRESULT __stdcall GetFaceCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall CreateNewSurface (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateNewSurface (
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall CreateBodyFromSurfaces (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreatePlanarSurface (
        /*[in]*/ VARIANT VRootPoint,
        /*[in]*/ VARIANT VNormal,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreatePlanarSurface (
        /*[in]*/ VARIANT VRootPoint,
        /*[in]*/ VARIANT VNormal,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall CreateRevolutionSurface (
        /*[in]*/ IDispatch * ProfileCurve,
        /*[in]*/ VARIANT AxisPoint,
        /*[in]*/ VARIANT AxisDirection,
        /*[in]*/ VARIANT ProfileEndPtParams,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateRevolutionSurface (
        /*[in]*/ struct ICurve * ProfileCurve,
        /*[in]*/ VARIANT AxisPoint,
        /*[in]*/ VARIANT AxisDirection,
        /*[in]*/ VARIANT ProfileEndPtParams,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall CreateBsplineSurface (
        /*[in]*/ VARIANT Props,
        /*[in]*/ VARIANT UKnots,
        /*[in]*/ VARIANT VKnots,
        /*[in]*/ VARIANT CtrlPtCoords,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateBsplineSurface (
        /*[in]*/ VARIANT Props,
        /*[in]*/ VARIANT UKnots,
        /*[in]*/ VARIANT VKnots,
        /*[in]*/ VARIANT CtrlPtCoords,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall CreateTrimmedSurface (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddProfileLine (
        /*[in]*/ VARIANT RootPoint,
        /*[in]*/ VARIANT Direction,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IAddProfileLine (
        /*[in]*/ VARIANT RootPoint,
        /*[in]*/ VARIANT Direction,
        /*[out,retval]*/ struct ICurve * * Retval ) = 0;
      virtual HRESULT __stdcall AddProfileArc (
        /*[in]*/ VARIANT Center,
        /*[in]*/ VARIANT Axis,
        /*[in]*/ double Radius,
        /*[in]*/ VARIANT StartPoint,
        /*[in]*/ VARIANT EndPoint,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IAddProfileArc (
        /*[in]*/ VARIANT Center,
        /*[in]*/ VARIANT Axis,
        /*[in]*/ double Radius,
        /*[in]*/ VARIANT StartPoint,
        /*[in]*/ VARIANT EndPoint,
        /*[out,retval]*/ struct ICurve * * Retval ) = 0;
      virtual HRESULT __stdcall AddProfileBspline (
        /*[in]*/ VARIANT Props,
        /*[in]*/ VARIANT Knots,
        /*[in]*/ VARIANT CtrlPtCoords,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IAddProfileBspline (
        /*[in]*/ VARIANT Props,
        /*[in]*/ VARIANT Knots,
        /*[in]*/ VARIANT CtrlPtCoords,
        /*[out,retval]*/ struct ICurve * * Retval ) = 0;
      virtual HRESULT __stdcall CreateExtrusionSurface (
        /*[in]*/ IDispatch * ProfileCurve,
        /*[in]*/ VARIANT AxisDirection,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateExtrusionSurface (
        /*[in]*/ struct ICurve * ProfileCurve,
        /*[in]*/ VARIANT AxisDirection,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstSelectedFace (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstSelectedFace (
        /*[out,retval]*/ struct IFace2 * * Retval ) = 0;
      virtual HRESULT __stdcall GetNextSelectedFace (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNextSelectedFace (
        /*[out,retval]*/ struct IFace2 * * Retval ) = 0;
      virtual HRESULT __stdcall GetSelectedFaceCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall CreateBoundedSurface (
        /*[in]*/ VARIANT_BOOL UOpt,
        /*[in]*/ VARIANT_BOOL VOpt,
        /*[in]*/ VARIANT UvParams,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetIgesErrorCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetIgesErrorCode (
        /*[in]*/ long Index,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall Copy (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICopy (
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall EnumFaces (
        /*[out,retval]*/ struct IEnumFaces2 * * Retval ) = 0;
      virtual HRESULT __stdcall CreateBodyFromFaces (
        /*[in]*/ long NumOfFaces,
        /*[in]*/ VARIANT FaceList,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateBodyFromFaces (
        /*[in]*/ long NumOfFaces,
        /*[in]*/ VARIANT FaceList,
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall DeleteFaces (
        /*[in]*/ long NumOfFaces,
        /*[in]*/ VARIANT FaceList,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Display (
        /*[in]*/ IDispatch * Part,
        /*[in]*/ long Color ) = 0;
      virtual HRESULT __stdcall IDisplay (
        /*[in]*/ struct IPartDoc * Part,
        /*[in]*/ long Color ) = 0;
      virtual HRESULT __stdcall Hide (
        /*[in]*/ IDispatch * Part ) = 0;
      virtual HRESULT __stdcall IHide (
        /*[in]*/ struct IPartDoc * Part ) = 0;
      virtual HRESULT __stdcall ICreatePlanarSurfaceDLL (
        /*[in]*/ double * RootPoint,
        /*[in]*/ double * Normal,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateRevolutionSurfaceDLL (
        /*[in]*/ struct ICurve * ProfileCurve,
        /*[in]*/ double * AxisPoint,
        /*[in]*/ double * AxisDirection,
        /*[in]*/ double * ProfileEndPtParams,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall IAddProfileLineDLL (
        /*[in]*/ double * RootPoint,
        /*[in]*/ double * Direction,
        /*[out,retval]*/ struct ICurve * * Retval ) = 0;
      virtual HRESULT __stdcall IAddProfileArcDLL (
        /*[in]*/ double * Center,
        /*[in]*/ double * Axis,
        /*[in]*/ double Radius,
        /*[in]*/ double * StartPoint,
        /*[in]*/ double * EndPoint,
        /*[out,retval]*/ struct ICurve * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateBsplineSurfaceDLL (
        /*[in]*/ long * Properties,
        /*[in]*/ double * UKnotArray,
        /*[in]*/ double * VKnotArray,
        /*[in]*/ double * ControlPointCoordArray,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall IAddProfileBsplineDLL (
        /*[in]*/ long * Properties,
        /*[in]*/ double * KnotArray,
        /*[in]*/ double * ControlPointCoordArray,
        /*[out,retval]*/ struct ICurve * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateExtrusionSurfaceDLL (
        /*[in]*/ struct ICurve * ProfileCurve,
        /*[in]*/ double * AxisDirection,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateBoundedSurface (
        /*[in]*/ VARIANT_BOOL UOpt,
        /*[in]*/ VARIANT_BOOL VOpt,
        /*[in]*/ double * UvParams ) = 0;
      virtual HRESULT __stdcall ICombineVolumes (
        /*[in]*/ struct IBody2 * ToolBody ) = 0;
      virtual HRESULT __stdcall ISectionBySheet (
        /*[in]*/ struct IBody2 * Sheet,
        /*[in]*/ long NumMaxSections,
        /*[in]*/ struct IBody2 * * SectionedBodies,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IGetBodyBox (
        /*[in]*/ double * BoxCorners ) = 0;
      virtual HRESULT __stdcall SetIgesInfo (
        /*[in]*/ BSTR SystemName,
        /*[in]*/ double Granularity,
        /*[in]*/ VARIANT_BOOL AttemptKnitting ) = 0;
      virtual HRESULT __stdcall DisplayWireFrameXOR (
        /*[in]*/ IDispatch * Part,
        /*[in]*/ long Color ) = 0;
      virtual HRESULT __stdcall IDisplayWireFrameXOR (
        /*[in]*/ struct IPartDoc * Part,
        /*[in]*/ long Color ) = 0;
      virtual HRESULT __stdcall Save (
        /*[in]*/ IUnknown * StreamIn ) = 0;
      virtual HRESULT __stdcall ISave (
        /*[in]*/ IUnknown * StreamIn ) = 0;
      virtual HRESULT __stdcall CreateBlendSurface (
        /*[in]*/ IDispatch * Surface1,
        /*[in]*/ double Range1,
        /*[in]*/ IDispatch * Surface2,
        /*[in]*/ double Range2,
        /*[in]*/ VARIANT StartVec,
        /*[in]*/ VARIANT EndVec,
        /*[in]*/ int HaveHelpVec,
        /*[in]*/ VARIANT HelpVec,
        /*[in]*/ int HaveHelpBox,
        /*[in]*/ VARIANT HelpBox,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateBlendSurface (
        /*[in]*/ struct ISurface * Surface1,
        /*[in]*/ double Range1,
        /*[in]*/ struct ISurface * Surface2,
        /*[in]*/ double Range2,
        /*[in]*/ double * StartVec,
        /*[in]*/ double * EndVec,
        /*[in]*/ int HaveHelpVec,
        /*[in]*/ double * HelpVec,
        /*[in]*/ int HaveHelpBox,
        /*[in]*/ double * HelpBox,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall CreateOffsetSurface (
        /*[in]*/ IDispatch * SurfaceIn,
        /*[in]*/ double Distance,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateOffsetSurface (
        /*[in]*/ struct ISurface * SurfaceIn,
        /*[in]*/ double Distance,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall RemoveRedundantTopology (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetIntersectionEdges (
        /*[in]*/ IDispatch * ToolBodyIn,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetIntersectionEdges (
        /*[in]*/ struct IBody2 * ToolBodyIn,
        /*[out,retval]*/ struct IEdge * * EdgeListOut ) = 0;
      virtual HRESULT __stdcall IGetIntersectionEdgeCount (
        /*[in]*/ struct IBody2 * ToolBodyIn,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall RemoveFacesFromSheet (
        /*[in]*/ long NumOfFaces,
        /*[in]*/ VARIANT FacesToRemove ) = 0;
      virtual HRESULT __stdcall IRemoveFacesFromSheet (
        /*[in]*/ long NumOfFaces,
        /*[in]*/ struct IFace2 * * FacesToRemove ) = 0;
      virtual HRESULT __stdcall ICreatePlanarTrimSurfaceDLL (
        /*[in]*/ long VertexCount,
        /*[in]*/ double * Points,
        /*[in]*/ double * Normal ) = 0;
      virtual HRESULT __stdcall get_MaterialPropertyValues (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall put_MaterialPropertyValues (
        /*[in]*/ VARIANT Retval ) = 0;
      virtual HRESULT __stdcall get_IMaterialPropertyValues (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_IMaterialPropertyValues (
        /*[in]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall AddPropertyExtension (
        /*[in]*/ VARIANT PropertyExtension,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetPropertyExtension (
        /*[in]*/ long ID,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall ResetPropertyExtension ( ) = 0;
      virtual HRESULT __stdcall GetMaterialIdName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetMaterialIdName (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetMaterialUserName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetMaterialUserName (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetMassProperties (
        /*[in]*/ double Density,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetMassProperties (
        /*[in]*/ double Density,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall ICreatePsplineSurfaceDLL (
        /*[in]*/ long Dim,
        /*[in]*/ long Uorder,
        /*[in]*/ long VOrder,
        /*[in]*/ long Ncol,
        /*[in]*/ long Nrow,
        /*[in]*/ double * Coeffs,
        /*[in]*/ long Basis,
        /*[in]*/ double * Xform,
        /*[in]*/ double ScaleFactor,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall SetXform (
        /*[in]*/ VARIANT XformIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ISetXform (
        /*[in]*/ double * XformIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateTempBodyFromSurfaces (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateTempBodyFromSurfaces (
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall Operations (
        /*[in]*/ int OperationType,
        /*[in]*/ IDispatch * ToolBody,
        /*[in]*/ long NumMaxSections,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IOperations (
        /*[in]*/ int OperationType,
        /*[in]*/ struct IBody2 * ToolBody,
        /*[in]*/ long NumMaxSections,
        /*[in]*/ struct IBody2 * * ResultingBodies,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetSheetBody (
        /*[in]*/ int Index,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetSheetBody (
        /*[in]*/ int Index,
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall GetProcessedBody (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetProcessedBody (
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall GetProcessedBodyWithSelFace (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetProcessedBodyWithSelFace (
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall Check (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetExcessBodyArray (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetExcessBodyArray (
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall IGetExcessBodyCount (
        /*[out,retval]*/ int * Retval ) = 0;
      virtual HRESULT __stdcall CreateBaseFeature (
        /*[in]*/ IDispatch * BodyIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ICreateBaseFeature (
        /*[in]*/ struct IBody2 * BodyIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DeleteFaces2 (
        /*[in]*/ long NumOfFaces,
        /*[in]*/ VARIANT FaceList,
        /*[in]*/ int Option,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IDeleteFaces2 (
        /*[in]*/ long NumOfFaces,
        /*[in]*/ struct IFace2 * * FaceList,
        /*[in]*/ int Option,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IAddVertexPoint (
        /*[in]*/ double * Point,
        /*[out,retval]*/ struct IVertex * * Retval ) = 0;
      virtual HRESULT __stdcall AddVertexPoint (
        /*[in]*/ VARIANT Point,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall GetExtremePoint (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out]*/ double * Outx,
        /*[out]*/ double * Outy,
        /*[out]*/ double * Outz,
        /*[out,retval]*/ VARIANT_BOOL * Found ) = 0;
      virtual HRESULT __stdcall GetType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall IDeleteFaces3 (
        /*[in]*/ long NumOfFaces,
        /*[in]*/ struct IFace2 * * FaceList,
        /*[in]*/ long Option,
        /*[in]*/ VARIANT_BOOL DoLocalCheck,
        /*[in]*/ VARIANT_BOOL * LocalCheckResult ) = 0;
      virtual HRESULT __stdcall SetCurrentSurface (
        /*[in]*/ IDispatch * SurfaceIn ) = 0;
      virtual HRESULT __stdcall ISetCurrentSurface (
        /*[in]*/ struct ISurface * SurfaceIn ) = 0;
      virtual HRESULT __stdcall DraftBody (
        /*[in]*/ long NumOfFaces,
        /*[in]*/ VARIANT FaceList,
        /*[in]*/ VARIANT EdgeList,
        /*[in]*/ double DraftAngle,
        /*[in]*/ VARIANT Dir,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IDraftBody (
        /*[in]*/ long NumOfFaces,
        /*[in]*/ struct IFace2 * * FaceList,
        /*[in]*/ struct IEdge * * EdgeList,
        /*[in]*/ double DraftAngle,
        /*[in]*/ double * Dir,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DeleteBlends (
        /*[in]*/ long NumOfFaces,
        /*[in]*/ VARIANT FaceList,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IDeleteBlends (
        /*[in]*/ long NumOfFaces,
        /*[in]*/ struct IFace2 * * FaceList,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Operations2 (
        /*[in]*/ int OperationType,
        /*[in]*/ IDispatch * ToolBody,
        /*[out]*/ long * ErrorCode,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IOperations2 (
        /*[in]*/ int OperationType,
        /*[in]*/ struct IBody2 * ToolBody,
        /*[out]*/ long * ErrorCode,
        /*[out,retval]*/ struct IEnumBodies2 * * Retval ) = 0;
      virtual HRESULT __stdcall GetBodyBox (
        /*[out,retval]*/ VARIANT * BoxCorners ) = 0;
      virtual HRESULT __stdcall DeleteBlends2 (
        /*[in]*/ long NumOfFaces,
        /*[in]*/ VARIANT FaceList,
        /*[in]*/ VARIANT_BOOL DoLocalCheck,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IDeleteBlends2 (
        /*[in]*/ long NumOfFaces,
        /*[in]*/ struct IFace2 * * FaceList,
        /*[in]*/ VARIANT_BOOL DoLocalCheck,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetTessellation (
        /*[in]*/ VARIANT FaceList,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetTessellation (
        /*[in]*/ long NumOfFaces,
        /*[in]*/ struct IFace2 * * FaceList,
        /*[out,retval]*/ struct ITessellation * * Retval ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall MatchedBoolean (
        /*[in]*/ int OperationType,
        /*[in]*/ IDispatch * ToolBody,
        /*[in]*/ long NumOfMatchingFaces,
        /*[in]*/ VARIANT FaceList1,
        /*[in]*/ VARIANT FaceList2,
        /*[out]*/ long * ErrorCode,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IMatchedBoolean (
        /*[in]*/ int OperationType,
        /*[in]*/ struct IBody2 * ToolBody,
        /*[in]*/ long NumOfMatchingFaces,
        /*[in]*/ struct IFace2 * * FaceList1,
        /*[in]*/ struct IFace2 * * FaceList2,
        /*[out]*/ long * ErrorCode,
        /*[out,retval]*/ struct IEnumBodies2 * * Retval ) = 0;
      virtual HRESULT __stdcall GetEdgeCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall CreateRuledSurface (
        /*[in]*/ IDispatch * Curve1,
        /*[in]*/ IDispatch * Curve2,
        /*[in]*/ VARIANT ApexPoint,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateRuledSurface (
        /*[in]*/ struct ICurve * Curve1,
        /*[in]*/ struct ICurve * Curve2,
        /*[in]*/ double * ApexPoint,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall AddProfileBsplineByPts (
        /*[in]*/ long NumPoints,
        /*[in]*/ VARIANT PointArray,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IAddProfileBsplineByPts (
        /*[in]*/ long NumPoints,
        /*[in]*/ double * PointArray,
        /*[out,retval]*/ struct ICurve * * Retval ) = 0;
      virtual HRESULT __stdcall GetEdges (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetEdges (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IEdge * * Retval ) = 0;
      virtual HRESULT __stdcall ApplyTransform (
        /*[in]*/ struct IMathTransform * Xform,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT_BOOL Append,
        /*[in]*/ long Mark,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DeSelect (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall MatchedBoolean2 (
        /*[in]*/ int OperationType,
        /*[in]*/ VARIANT ToolBody,
        /*[in]*/ long NumOfMatchingFaces,
        /*[in]*/ VARIANT FaceList1,
        /*[in]*/ VARIANT FaceList2,
        /*[out]*/ long * ErrorCode,
        /*[out,retval]*/ VARIANT * ResultBodies ) = 0;
      virtual HRESULT __stdcall IMatchedBoolean2 (
        /*[in]*/ int OperationType,
        /*[in]*/ long ToolBodyCount,
        /*[in]*/ struct IBody2 * * ToolBodyArr,
        /*[in]*/ long NumOfMatchingFaces,
        /*[in]*/ struct IFace2 * * FaceList1,
        /*[in]*/ struct IFace2 * * FaceList2,
        /*[out]*/ long * ErrorCode,
        /*[out,retval]*/ struct IEnumBodies2 * * Retval ) = 0;
      virtual HRESULT __stdcall HideBody (
        /*[in]*/ VARIANT_BOOL BHide ) = 0;
      virtual HRESULT __stdcall get_IsSafe (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetSafeBody (
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall GetProcessedBody2 (
        /*[in]*/ double MaxUAngle,
        /*[in]*/ double MaxVAngle,
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall FindAttribute (
        /*[in]*/ struct IAttributeDef * AttributeDef,
        /*[in]*/ long WhichOne,
        /*[out,retval]*/ struct IAttribute * * Retval ) = 0;
      virtual HRESULT __stdcall MatchedBoolean3 (
        /*[in]*/ int OperationType,
        /*[in]*/ VARIANT ToolBody,
        /*[in]*/ long NumOfMatchingFaces,
        /*[in]*/ VARIANT FaceList1,
        /*[in]*/ VARIANT FaceList2,
        /*[out]*/ long * ErrorCode,
        /*[out,retval]*/ VARIANT * ResultBodies ) = 0;
      virtual HRESULT __stdcall IMatchedBoolean3 (
        /*[in]*/ int OperationType,
        /*[in]*/ long ToolBodyCount,
        /*[in]*/ struct IBody2 * * ToolBodyArr,
        /*[in]*/ long NumOfMatchingFaces,
        /*[in]*/ struct IFace2 * * FaceList1,
        /*[in]*/ struct IFace2 * * FaceList2,
        /*[out]*/ long * ErrorCode,
        /*[out,retval]*/ struct IEnumBodies2 * * Retval ) = 0;
      virtual HRESULT __stdcall GetSelectionId (
        /*[out,retval]*/ BSTR * SelectionId ) = 0;
      virtual HRESULT __stdcall get_MaterialPropertyValues2 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall put_MaterialPropertyValues2 (
        /*[in]*/ VARIANT Retval ) = 0;
      virtual HRESULT __stdcall get_IMaterialPropertyValues2 (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_IMaterialPropertyValues2 (
        /*[in]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall AddPropertyExtension2 (
        /*[in]*/ VARIANT PropertyExtension,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetPropertyExtension2 (
        /*[in]*/ long ID,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall ResetPropertyExtension2 ( ) = 0;
      virtual HRESULT __stdcall GetMaterialIdName2 (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetMaterialIdName2 (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetMaterialUserName2 (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetMaterialUserName2 (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IGetMaterialPropertyValuesForFace (
        /*[in]*/ IDispatch * FaceIn,
        /*[out,retval]*/ double * Material_values ) = 0;
      virtual HRESULT __stdcall Display2 (
        /*[in]*/ struct IPartDoc * Part,
        /*[in]*/ long Color,
        /*[in]*/ long Option ) = 0;
      virtual HRESULT __stdcall IsTemporaryBody (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Check2 (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall CreatePlanarTrimSurfaceDLL (
        /*[in]*/ VARIANT Points,
        /*[in]*/ VARIANT Normal,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DeleteFaces3 (
        /*[in]*/ VARIANT FaceList,
        /*[in]*/ long Option,
        /*[in]*/ VARIANT_BOOL DoLocalCheck,
        /*[out]*/ VARIANT_BOOL * LocalCheckResult,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Diagnose (
        /*[out,retval]*/ struct IDiagnoseResult * * PResult ) = 0;
      virtual HRESULT __stdcall get_Check3 (
        /*[out,retval]*/ struct IFaultEntity * * PFaultEntity ) = 0;
      virtual HRESULT __stdcall DeleteFacesMakeSheetBodies (
        /*[in]*/ VARIANT FaceList,
        /*[out,retval]*/ VARIANT * SheetBodies ) = 0;
      virtual HRESULT __stdcall IDeleteFacesMakeSheetBodiesCount (
        /*[in]*/ long FaceCount,
        /*[in]*/ struct IFace2 * * FaceList,
        /*[out,retval]*/ long * SheetCount ) = 0;
      virtual HRESULT __stdcall IDeleteFacesMakeSheetBodies (
        /*[in]*/ long FaceCount,
        /*[in]*/ struct IFace2 * * FaceList,
        /*[in]*/ long SheetCount,
        /*[out,retval]*/ struct IBody2 * * SheetBodies ) = 0;
      virtual HRESULT __stdcall GetTexture (
        /*[in]*/ BSTR Config_name,
        /*[out,retval]*/ struct ITexture * * Retval ) = 0;
      virtual HRESULT __stdcall SetTexture (
        /*[in]*/ BSTR Config_name,
        /*[in]*/ struct ITexture * TextureIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall RemoveTexture (
        /*[in]*/ BSTR Config_name,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall MakeOffset (
        /*[in]*/ double Distance,
        /*[in]*/ VARIANT_BOOL Direction,
        /*[out,retval]*/ struct IBody2 * * OffsetBody ) = 0;
      virtual HRESULT __stdcall ExtendSurface (
        /*[in]*/ VARIANT EdgesToExtend,
        /*[in]*/ VARIANT_BOOL ExtendLinear,
        /*[in]*/ long EndCondition,
        /*[in]*/ double Dist,
        /*[in]*/ struct IVertex * PUpToVtx,
        /*[in]*/ struct IFace * PUpToFace,
        /*[out,retval]*/ struct IBody2 * * ResultantBody ) = 0;
      virtual HRESULT __stdcall IExtendSurface (
        /*[in]*/ long EdgeCount,
        /*[in]*/ struct IEdge * * EdgesToExtend,
        /*[in]*/ VARIANT_BOOL ExtendLinear,
        /*[in]*/ long EndCondition,
        /*[in]*/ double Dist,
        /*[in]*/ struct IVertex * PUpToVtx,
        /*[in]*/ struct IFace * PUpToFace,
        /*[out,retval]*/ struct IBody2 * * ResultantBody ) = 0;
      virtual HRESULT __stdcall OffsetPlanarWireBody (
        /*[in]*/ double Distance,
        /*[in]*/ struct IMathVector * Normal,
        /*[in]*/ long Option,
        /*[out,retval]*/ struct IBody2 * * OffsetBody ) = 0;
      virtual HRESULT __stdcall AddConstantFillets (
        /*[in]*/ double Radius,
        /*[in]*/ VARIANT EdgesToFillet,
        /*[out,retval]*/ VARIANT * RetFaces ) = 0;
      virtual HRESULT __stdcall DraftBody2 (
        /*[in]*/ long NumOfFaces,
        /*[in]*/ VARIANT FaceList,
        /*[in]*/ VARIANT EdgeList,
        /*[in]*/ IDispatch * BasePoint,
        /*[in]*/ double DraftAngle,
        /*[in]*/ VARIANT Dir,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IDraftBody2 (
        /*[in]*/ long NumOfFaces,
        /*[in]*/ struct IFace2 * * FaceList,
        /*[in]*/ struct IEdge * * EdgeList,
        /*[in]*/ struct IMathPoint * BasePoint,
        /*[in]*/ double DraftAngle,
        /*[in]*/ double * Dir,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Negate (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Display3 (
        /*[in]*/ IDispatch * Component,
        /*[in]*/ long Color,
        /*[in]*/ long Option,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall MinimumRadius (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall ResetEdgeTolerances ( ) = 0;
      virtual HRESULT __stdcall Select2 (
        /*[in]*/ VARIANT_BOOL Append,
        /*[in]*/ struct ISelectData * Data,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetVertexCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetVertices (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetVertices (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IVertex * * Retval ) = 0;
      virtual HRESULT __stdcall GetCoincidenceTransform (
        /*[in]*/ IDispatch * BodyDispIn,
        /*[out]*/ struct IMathTransform * * Xform,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsPatternSeed (
        /*[in]*/ IDispatch * BodyDispIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall RemoveMaterialProperty (
        /*[in]*/ long Config_opt,
        /*[in]*/ VARIANT Config_names,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IRemoveMaterialProperty (
        /*[in]*/ long Config_opt,
        /*[in]*/ long Config_count,
        /*[in]*/ BSTR * Config_names,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall MatchedBoolean4 (
        /*[in]*/ int OperationType,
        /*[in]*/ VARIANT ToolBody,
        /*[in]*/ long NumOfMatchingFaces,
        /*[in]*/ VARIANT FaceList1,
        /*[in]*/ VARIANT FaceList2,
        /*[in]*/ double MatchingTolerance,
        /*[out]*/ long * ErrorCode,
        /*[out,retval]*/ VARIANT * ResultBodies ) = 0;
      virtual HRESULT __stdcall IMatchedBoolean4 (
        /*[in]*/ int OperationType,
        /*[in]*/ long ToolBodyCount,
        /*[in]*/ struct IBody2 * * ToolBodyArr,
        /*[in]*/ long NumOfMatchingFaces,
        /*[in]*/ struct IFace2 * * FaceList1,
        /*[in]*/ struct IFace2 * * FaceList2,
        /*[in]*/ double MatchingTolerance,
        /*[out]*/ long * ErrorCode,
        /*[out,retval]*/ struct IEnumBodies2 * * Retval ) = 0;
      virtual HRESULT __stdcall GetFaces (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetFaces (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IFace2 * * Retval ) = 0;
      virtual HRESULT __stdcall IsSheetMetal (
        /*[out,retval]*/ VARIANT_BOOL * ValueOut ) = 0;
      virtual HRESULT __stdcall GetTrackingIDs (
        /*[in]*/ long TrackingCookie,
        /*[out]*/ VARIANT * TrackingIDs,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall SetTrackingID (
        /*[in]*/ long TrackingCookie,
        /*[in]*/ long TrackingID,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall RemoveTrackingID (
        /*[in]*/ long TrackingCookie,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall GetMiddleSurface (
        /*[in]*/ double PlacementPercentage,
        /*[in,out]*/ VARIANT * Face1List,
        /*[in,out]*/ VARIANT * Face2List,
        /*[in,out]*/ VARIANT * Thickness,
        /*[in,out]*/ IDispatch * * MiddleSurfaceBody,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IGetMiddleSurface (
        /*[in]*/ double PlacementPercentage,
        /*[in,out]*/ VARIANT * Face1List,
        /*[in,out]*/ VARIANT * Face2List,
        /*[in,out]*/ VARIANT * Thickness,
        /*[in,out]*/ struct IBody2 * * MiddleSurfaceBody,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetSelectedFaces (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetSelectedFaces (
        /*[in]*/ long SelectedFaceCount,
        /*[out,retval]*/ struct IFace2 * * Retval ) = 0;
      virtual HRESULT __stdcall DeleteFaces4 (
        /*[in]*/ VARIANT FaceList,
        /*[in]*/ long Option,
        /*[in]*/ VARIANT_BOOL DoLocalCheck,
        /*[out]*/ VARIANT * BodyList,
        /*[out]*/ VARIANT_BOOL * LocalCheckResult,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_DisableDisplay (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_DisableDisplay (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall GetUpdateStamp (
        /*[out,retval]*/ long * TimeStamp ) = 0;
      virtual HRESULT __stdcall GetTrackingIDsCount (
        /*[in]*/ long TrackingCookie,
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetTrackingIDs (
        /*[in]*/ long TrackingCookie,
        /*[in]*/ long Count,
        /*[out]*/ long * TrackingIDs,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall put_DisableHighlight (
        /*[in]*/ VARIANT_BOOL HighlightDisabled ) = 0;
      virtual HRESULT __stdcall get_DisableHighlight (
        /*[out,retval]*/ VARIANT_BOOL * HighlightDisabled ) = 0;
};

struct __declspec(uuid("97a9befa-6814-4fa6-acb4-8cc84f76fb99"))
IEnumBodies2 : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Next (
        /*[in]*/ long Celt,
        /*[out]*/ struct IBody2 * * Rgelt,
        /*[in,out]*/ long * PceltFetched ) = 0;
      virtual HRESULT __stdcall Skip (
        /*[in]*/ long Celt ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
      virtual HRESULT __stdcall Clone (
        /*[out]*/ struct IEnumBodies2 * * Ppenum ) = 0;
};

struct __declspec(uuid("6dc71ec8-09f6-4d6f-ac3f-19d8ea258e0b"))
IImportedCurveFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Curves (
        /*[out,retval]*/ VARIANT * CurveVar ) = 0;
      virtual HRESULT __stdcall put_Curves (
        /*[in]*/ VARIANT CurveVar ) = 0;
      virtual HRESULT __stdcall GetCurveCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetCurves (
        /*[in]*/ long Count,
        /*[out,retval]*/ IDispatch * * DispArr ) = 0;
      virtual HRESULT __stdcall ISetCurves (
        /*[in]*/ long Count,
        /*[in]*/ IDispatch * * DispArr ) = 0;
      virtual HRESULT __stdcall SetBody (
        /*[in]*/ struct IBody2 * DispBody ) = 0;
};

struct __declspec(uuid("4a8ba4d8-da25-4b75-8e2d-4922b74d81ed"))
IFace2 : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Normal (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall put_Normal (
        /*[in]*/ VARIANT Retval ) = 0;
      virtual HRESULT __stdcall get_MaterialUserName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_MaterialUserName (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall get_MaterialIdName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_MaterialIdName (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall get_MaterialPropertyValues (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall put_MaterialPropertyValues (
        /*[in]*/ VARIANT Retval ) = 0;
      virtual HRESULT __stdcall get_INormal (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_INormal (
        /*[in]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetNextFace (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNextFace (
        /*[out,retval]*/ struct IFace2 * * Retval ) = 0;
      virtual HRESULT __stdcall GetSurface (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetSurface (
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall GetEdgeCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetEdges (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetEdges (
        /*[out,retval]*/ struct IEdge * * EdgeList ) = 0;
      virtual HRESULT __stdcall GetFeature (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFeature (
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall GetFeatureId (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTrimCurves (
        /*[in]*/ VARIANT_BOOL WantCubic,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetUVBounds (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall FaceInSurfaceSense (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetLoopCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstLoop (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstLoop (
        /*[out,retval]*/ struct ILoop2 * * Retval ) = 0;
      virtual HRESULT __stdcall IsSame (
        /*[in]*/ IDispatch * FaceIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IIsSame (
        /*[in]*/ struct IFace2 * FaceIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddPropertyExtension (
        /*[in]*/ VARIANT PropertyExtension,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetPropertyExtension (
        /*[in]*/ long ID,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall ResetPropertyExtension ( ) = 0;
      virtual HRESULT __stdcall GetTessTriangles (
        /*[in]*/ VARIANT_BOOL NoConversion,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetTessNorms (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetTessTriStrips (
        /*[in]*/ VARIANT_BOOL NoConversion,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetTessTriStripNorms (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall EnumLoops (
        /*[out,retval]*/ struct IEnumLoops2 * * Retval ) = 0;
      virtual HRESULT __stdcall EnumEdges (
        /*[out,retval]*/ struct IEnumEdges * * Retval ) = 0;
      virtual HRESULT __stdcall GetBody (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetBody (
        /*[out,retval]*/ struct IBody2 * * Body ) = 0;
      virtual HRESULT __stdcall IGetTessTriangles (
        /*[in]*/ VARIANT_BOOL NoConversion,
        /*[out,retval]*/ float * Retval ) = 0;
      virtual HRESULT __stdcall IGetTessNorms (
        /*[out,retval]*/ float * Retval ) = 0;
      virtual HRESULT __stdcall GetTessTriangleCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IGetTessTriStrips (
        /*[in]*/ VARIANT_BOOL NoConversion,
        /*[out,retval]*/ float * Retval ) = 0;
      virtual HRESULT __stdcall IGetTessTriStripNorms (
        /*[out,retval]*/ float * Retval ) = 0;
      virtual HRESULT __stdcall GetTessTriStripSize (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IGetUVBounds (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetClosestPointOn (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetClosestPointOn (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall Highlight (
        /*[in]*/ VARIANT_BOOL State ) = 0;
      virtual HRESULT __stdcall IHighlight (
        /*[in]*/ VARIANT_BOOL State ) = 0;
      virtual HRESULT __stdcall GetTrimCurveTopology (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTrimCurveTopology (
        /*[out,retval]*/ IDispatch * * TopolList ) = 0;
      virtual HRESULT __stdcall GetTrimCurveTopologyCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTrimCurveTopologyTypes (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTrimCurveTopologyTypes (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall RemoveRedundantTopology (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateSheetBodyByFaceExtension (
        /*[in]*/ VARIANT BoxLowIn,
        /*[in]*/ VARIANT BoxHighIn,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateSheetBodyByFaceExtension (
        /*[in]*/ double * BoxLowIn,
        /*[in]*/ double * BoxHighIn,
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall GetArea (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetBox (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetBox (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall RemoveInnerLoops (
        /*[in]*/ long NumOfLoops,
        /*[in]*/ VARIANT InnerLoopsIn,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IRemoveInnerLoops (
        /*[in]*/ long NumOfLoops,
        /*[in]*/ struct ILoop2 * * InnerLoopsIn,
        /*[out,retval]*/ struct IFace2 * * Retval ) = 0;
      virtual HRESULT __stdcall CreateSheetBody (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateSheetBody (
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall GetSilhoutteEdges (
        /*[in]*/ double * Root,
        /*[in]*/ double * Normal,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetSilhoutteEdges (
        /*[in]*/ double * Root,
        /*[in]*/ double * Normal,
        /*[out,retval]*/ struct IEdge * * Siledgesout ) = 0;
      virtual HRESULT __stdcall IGetSilhoutteEdgeCount (
        /*[in]*/ double * Root,
        /*[in]*/ double * Normal,
        /*[out,retval]*/ long * Ret ) = 0;
      virtual HRESULT __stdcall IGetTrimCurveSize (
        /*[in]*/ VARIANT_BOOL WantCubic,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IGetTrimCurve (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_IMaterialPropertyValues (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_IMaterialPropertyValues (
        /*[in]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetFaceId (
        /*[out,retval]*/ int * Retval ) = 0;
      virtual HRESULT __stdcall SetFaceId (
        /*[in]*/ int IdIn ) = 0;
      virtual HRESULT __stdcall IGetTrimCurveSize2 (
        /*[in]*/ long WantCubic,
        /*[in]*/ long WantNRational,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetSilhoutteEdgesVB (
        /*[in]*/ double Xroot,
        /*[in]*/ double Yroot,
        /*[in]*/ double Zroot,
        /*[in]*/ double Xnormal,
        /*[in]*/ double Ynormal,
        /*[in]*/ double Znormal,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall RemoveFaceId (
        /*[in]*/ int IdIn ) = 0;
      virtual HRESULT __stdcall GetTrimCurves2 (
        /*[in]*/ VARIANT_BOOL WantCubic,
        /*[in]*/ VARIANT_BOOL WantNRational,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetShellType (
        /*[out,retval]*/ int * Retval ) = 0;
      virtual HRESULT __stdcall IGetFacetData (
        /*[in]*/ int FacetMesh,
        /*[in]*/ int * NFacets,
        /*[in]*/ int * NStrips,
        /*[in]*/ int * StripVertexNums,
        /*[in]*/ float * VertexCoords,
        /*[in]*/ float * NormalCoords ) = 0;
      virtual HRESULT __stdcall GetTessTriStripEdges (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTessTriStripEdges (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IGetTessTriStripEdgeSize (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall RemoveMaterialProperty (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetPatternSeedFeature (
        /*[out,retval]*/ IDispatch * * SeedFeature ) = 0;
      virtual HRESULT __stdcall IGetPatternSeedFeature (
        /*[out,retval]*/ struct IFeature * * SeedFeature ) = 0;
      virtual HRESULT __stdcall SetMaterialPropertyValues2 (
        /*[in]*/ VARIANT Material_values,
        /*[in]*/ long Config_opt,
        /*[in]*/ VARIANT Config_names ) = 0;
      virtual HRESULT __stdcall ISetMaterialPropertyValues2 (
        /*[in]*/ double * Material_values,
        /*[in]*/ long Config_opt,
        /*[in]*/ long Config_count,
        /*[in]*/ BSTR * Config_names ) = 0;
      virtual HRESULT __stdcall GetMaterialPropertyValues2 (
        /*[in]*/ long Config_opt,
        /*[in]*/ VARIANT Config_names,
        /*[out,retval]*/ VARIANT * Material_values ) = 0;
      virtual HRESULT __stdcall IGetMaterialPropertyValues2 (
        /*[in]*/ long Config_opt,
        /*[in]*/ long Config_count,
        /*[in]*/ BSTR * Config_names,
        /*[out,retval]*/ double * Material_values ) = 0;
      virtual HRESULT __stdcall IGetTessTextures (
        /*[out,retval]*/ float * Retval ) = 0;
      virtual HRESULT __stdcall RemoveMaterialProperty2 (
        /*[in]*/ long Config_opt,
        /*[in]*/ VARIANT Config_names,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IRemoveMaterialProperty2 (
        /*[in]*/ long Config_opt,
        /*[in]*/ long Config_count,
        /*[in]*/ BSTR * Config_names,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ImprintCurve (
        /*[in]*/ IDispatch * Curve,
        /*[out]*/ VARIANT * NewEdges,
        /*[out]*/ VARIANT * NewFaces ) = 0;
      virtual HRESULT __stdcall ImprintCurveCount (
        /*[in]*/ struct ICurve * Curve,
        /*[out]*/ long * NewEdgeCount,
        /*[out]*/ long * NewFaceCount ) = 0;
      virtual HRESULT __stdcall IImprintCurve (
        /*[in]*/ struct ICurve * Curve,
        /*[in]*/ long NewEdgeCount,
        /*[out]*/ struct IEdge * * NewEdges,
        /*[in]*/ long NewFaceCount,
        /*[out]*/ struct IFace2 * * NewFaces ) = 0;
      virtual HRESULT __stdcall get_Check (
        /*[out,retval]*/ struct IFaultEntity * * PFaultEntity ) = 0;
      virtual HRESULT __stdcall AttachSurface (
        /*[in]*/ struct ISurface * SurfIn,
        /*[in]*/ VARIANT_BOOL SenseIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DetachSurface (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetTexture (
        /*[in]*/ BSTR Config_name,
        /*[out,retval]*/ struct ITexture * * Retval ) = 0;
      virtual HRESULT __stdcall SetTexture (
        /*[in]*/ BSTR Config_name,
        /*[in]*/ struct ITexture * TextureIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall RemoveTexture (
        /*[in]*/ BSTR Config_name,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetTessTextures (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetProjectedPointOn (
        /*[in]*/ struct IMathPoint * Point,
        /*[in]*/ struct IMathVector * Direction,
        /*[out,retval]*/ struct IMathPoint * * Retval ) = 0;
      virtual HRESULT __stdcall IsCoincident (
        /*[in]*/ IDispatch * FaceIn,
        /*[in]*/ double Tolerance,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IIsCoincident (
        /*[in]*/ struct IFace2 * FaceIn,
        /*[in]*/ double Tolerance,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetDecalsCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetAllDecalProperties (
        /*[out,retval]*/ VARIANT * PDecalInfoVar ) = 0;
      virtual HRESULT __stdcall IGetAllDecalProperties (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IFaceDecalProperties * * PFaceDecalPropertiesArr ) = 0;
      virtual HRESULT __stdcall IGetDecalProperties (
        struct IDecal * PDecal,
        struct IFaceDecalProperties * * pFaceDecalProperties ) = 0;
      virtual HRESULT __stdcall GetSeedFeature (
        /*[out,retval]*/ struct IFeature * * SeedFeature ) = 0;
      virtual HRESULT __stdcall GetTrackingIDs (
        /*[in]*/ long TrackingCookie,
        /*[out]*/ VARIANT * TrackingIDs,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall SetTrackingID (
        /*[in]*/ long TrackingCookie,
        /*[in]*/ long TrackingID,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall RemoveTrackingID (
        /*[in]*/ long TrackingCookie,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall GetLoops (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetLoops (
        /*[in]*/ long NumberOfLoops,
        /*[out,retval]*/ struct ILoop2 * * Retval ) = 0;
      virtual HRESULT __stdcall GetTrackingIDsCount (
        /*[in]*/ long TrackingCookie,
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetTrackingIDs (
        /*[in]*/ long TrackingCookie,
        /*[in]*/ long Count,
        /*[out]*/ long * TrackingIDs,
        /*[out,retval]*/ long * Status ) = 0;
};

struct __declspec(uuid("e0a98a37-8780-4e5f-a28a-c7c6af25231c"))
IFaceHatch : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Pattern (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_Pattern (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall get_Scale (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_Scale (
        /*[in]*/ double Retval ) = 0;
      virtual HRESULT __stdcall get_Angle (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_Angle (
        /*[in]*/ double Retval ) = 0;
      virtual HRESULT __stdcall get_Face (
        /*[out,retval]*/ struct IFace2 * * Retval ) = 0;
      virtual HRESULT __stdcall put_Face (
        /*[in]*/ struct IFace2 * Retval ) = 0;
      virtual HRESULT __stdcall get_Layer (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_Layer (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall get_Color (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall put_Color (
        /*[in]*/ long Retval ) = 0;
      virtual HRESULT __stdcall get_Definition (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_Definition (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall get_SolidFill (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_SolidFill (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_Scale2 (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_Scale2 (
        /*[in]*/ double Retval ) = 0;
      virtual HRESULT __stdcall get_PatternId (
        /*[out,retval]*/ long * IdOut ) = 0;
      virtual HRESULT __stdcall put_PatternId (
        /*[in]*/ long IdOut ) = 0;
};

struct __declspec(uuid("61ecff18-ac2c-405e-b9b8-30d85fdb5087"))
IEnumFaces2 : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Next (
        /*[in]*/ long Celt,
        /*[out]*/ struct IFace2 * * Rgelt,
        /*[in,out]*/ long * PceltFetched ) = 0;
      virtual HRESULT __stdcall Skip (
        /*[in]*/ long Celt ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
      virtual HRESULT __stdcall Clone (
        /*[out]*/ struct IEnumFaces2 * * Ppenum ) = 0;
};

struct __declspec(uuid("83a33d42-27c5-11ce-bfd4-00400513bb57"))
IEdge : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetCurve (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetCurve (
        /*[out,retval]*/ struct ICurve * * Retval ) = 0;
      virtual HRESULT __stdcall GetCurveParams (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetCurveParams (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall Evaluate (
        /*[in]*/ double Parameter,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IEvaluate (
        /*[in]*/ double Parameter,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetParameter (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetParameter (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall EdgeInFaceSense (
        /*[in]*/ IDispatch * Facedisp,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IEdgeInFaceSense (
        /*[in]*/ struct IFace * Facedisp,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetTwoAdjacentFaces (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTwoAdjacentFaces (
        /*[out]*/ struct IFace * * Face1,
        /*[out]*/ struct IFace * * Face2 ) = 0;
      virtual HRESULT __stdcall EnumCoEdges (
        /*[out,retval]*/ struct IEnumCoEdges * * Retval ) = 0;
      virtual HRESULT __stdcall GetStartVertex (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetStartVertex (
        /*[out,retval]*/ struct IVertex * * Retval ) = 0;
      virtual HRESULT __stdcall GetEndVertex (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetEndVertex (
        /*[out,retval]*/ struct IVertex * * Retval ) = 0;
      virtual HRESULT __stdcall GetClosestPointOn (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetClosestPointOn (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall RemoveRedundantTopology (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetID (
        /*[out,retval]*/ int * Retval ) = 0;
      virtual HRESULT __stdcall SetId (
        /*[in]*/ int IdIn ) = 0;
      virtual HRESULT __stdcall RemoveId ( ) = 0;
      virtual HRESULT __stdcall GetCurveParams2 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetCurveParams2 (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IsParamReversed (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Highlight (
        /*[in]*/ VARIANT_BOOL State ) = 0;
      virtual HRESULT __stdcall GetCoEdges (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IEdgeInFaceSense2 (
        /*[in]*/ struct IFace2 * Facedisp,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetTwoAdjacentFaces2 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTwoAdjacentFaces2 (
        /*[out]*/ struct IFace2 * * Face1,
        /*[out]*/ struct IFace2 * * Face2 ) = 0;
      virtual HRESULT __stdcall Display (
        /*[in]*/ long Width,
        /*[in]*/ double Red,
        /*[in]*/ double Green,
        /*[in]*/ double Blue,
        /*[in]*/ VARIANT_BOOL HighlightState ) = 0;
      virtual HRESULT __stdcall GetTangentEdgesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetTangentEdges (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IEdge * * EdgeArr ) = 0;
      virtual HRESULT __stdcall GetTangentEdges (
        /*[out,retval]*/ VARIANT * EdgeArr ) = 0;
      virtual HRESULT __stdcall CreateWireBody (
        /*[out,retval]*/ struct IBody2 * * PBody ) = 0;
      virtual HRESULT __stdcall GetBody (
        /*[out,retval]*/ struct IBody2 * * PBody ) = 0;
      virtual HRESULT __stdcall get_Check (
        /*[out,retval]*/ struct IFaultEntity * * PFaultEntity ) = 0;
      virtual HRESULT __stdcall Evaluate2 (
        /*[in]*/ double Parameter,
        /*[in]*/ long NumberOfDerivatives,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IEvaluate2 (
        /*[in]*/ double Parameter,
        /*[in]*/ long NumberOfDerivatives,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTrackingIDs (
        /*[in]*/ long TrackingCookie,
        /*[out]*/ VARIANT * TrackingIDs,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall SetTrackingID (
        /*[in]*/ long TrackingCookie,
        /*[in]*/ long TrackingID,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall RemoveTrackingID (
        /*[in]*/ long TrackingCookie,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall GetTrackingIDsCount (
        /*[in]*/ long TrackingCookie,
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetTrackingIDs (
        /*[in]*/ long TrackingCookie,
        /*[in]*/ long Count,
        /*[out]*/ long * TrackingIDs,
        /*[out,retval]*/ long * Status ) = 0;
};

struct __declspec(uuid("83a33d5f-27c5-11ce-bfd4-00400513bb57"))
IEnumEdges : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Next (
        /*[in]*/ long Celt,
        /*[out]*/ struct IEdge * * Rgelt,
        /*[in,out]*/ long * PceltFetched ) = 0;
      virtual HRESULT __stdcall Skip (
        /*[in]*/ long Celt ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
      virtual HRESULT __stdcall Clone (
        /*[out]*/ struct IEnumEdges * * Ppenum ) = 0;
};

struct __declspec(uuid("5b6e8476-461f-43af-b784-90d3cd74337c"))
IMidSurface2 : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetFacePairCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstFacePair (
        /*[out]*/ double * Thickness,
        /*[out]*/ IDispatch * * PartnerFaceDisp,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstFacePair (
        /*[out]*/ double * Thickness,
        /*[out]*/ struct IFace2 * * PartnerFaceDisp,
        /*[out,retval]*/ struct IFace2 * * Retval ) = 0;
      virtual HRESULT __stdcall GetNextFacePair (
        /*[out]*/ double * Thickness,
        /*[out]*/ IDispatch * * PartnerFaceDisp,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNextFacePair (
        /*[out]*/ double * Thickness,
        /*[out]*/ struct IFace2 * * PartnerFaceDisp,
        /*[out,retval]*/ struct IFace2 * * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstNeutralSheet (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstNeutralSheet (
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall GetNextNeutralSheet (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNextNeutralSheet (
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall GetNeutralSheetCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetFaceCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstFace (
        /*[out]*/ IDispatch * * FromFace1Disp,
        /*[out]*/ IDispatch * * FromFace2Disp,
        /*[out]*/ double * Thickness,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstFace (
        /*[out]*/ struct IFace2 * * FromFace1Disp,
        /*[out]*/ struct IFace2 * * FromFace2Disp,
        /*[out]*/ double * Thickness,
        /*[out,retval]*/ struct IFace2 * * Retval ) = 0;
      virtual HRESULT __stdcall GetNextFace (
        /*[out]*/ IDispatch * * FromFace1Disp,
        /*[out]*/ IDispatch * * FromFace2Disp,
        /*[out]*/ double * Thickness,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNextFace (
        /*[out]*/ struct IFace2 * * FromFace1Disp,
        /*[out]*/ struct IFace2 * * FromFace2Disp,
        /*[out]*/ double * Thickness,
        /*[out,retval]*/ struct IFace2 * * Retval ) = 0;
      virtual HRESULT __stdcall EdgeGetFace (
        /*[in]*/ IDispatch * EdgeInDisp,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IEdgeGetFace (
        /*[in]*/ struct IEdge * EdgeInDisp,
        /*[out,retval]*/ struct IFace2 * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstFaceArray (
        /*[out]*/ struct IFace2 * * FromFrontFaceListDisp,
        /*[out]*/ long * SizeOfFrontFaceList,
        /*[out]*/ struct IFace2 * * FromFaceBackListDisp,
        /*[out]*/ long * SizeOfBackFaceList,
        /*[out]*/ double * Thickness,
        /*[out,retval]*/ struct IFace2 * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNextFaceArray (
        /*[out]*/ struct IFace2 * * FromFrontFaceListDisp,
        /*[out]*/ long * SizeOfFrontFaceList,
        /*[out]*/ struct IFace2 * * FromFaceBackListDisp,
        /*[out]*/ long * SizeOfBackFaceList,
        /*[out]*/ double * Thickness,
        /*[out,retval]*/ struct IFace2 * * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstFaceArray (
        /*[out]*/ double * Thickness,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetNextFaceArray (
        /*[out]*/ double * Thickness,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
};

struct __declspec(uuid("83a33da3-27c5-11ce-bfd4-00400513bb57"))
IReferenceCurve : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetSegmentCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstSegment (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstSegment (
        /*[out,retval]*/ struct IEdge * * Retval ) = 0;
      virtual HRESULT __stdcall GetNextSegment (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNextSegment (
        /*[out,retval]*/ struct IEdge * * Retval ) = 0;
      virtual HRESULT __stdcall SetColor (
        /*[in]*/ long ColorIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetVisible (
        /*[in]*/ VARIANT_BOOL Visible,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetSegments (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetSegments (
        /*[in]*/ long NumSegments,
        /*[out,retval]*/ struct IEdge * * Retval ) = 0;
};

struct __declspec(uuid("83a33dc5-27c5-11ce-bfd4-00400513bb57"))
ISketchText : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetEdges (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall EnumEdges (
        /*[out,retval]*/ struct IEnumEdges * * Retval ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall GetCoordinates (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetCoordinates (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall SetCoordinates (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetUseDocTextFormat (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetTextFormat (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetTextFormat (
        /*[out,retval]*/ struct ITextFormat * * Retval ) = 0;
      virtual HRESULT __stdcall SetTextFormat (
        /*[in]*/ VARIANT_BOOL UseDoc,
        /*[in]*/ IDispatch * TextFormat,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ISetTextFormat (
        /*[in]*/ VARIANT_BOOL UseDoc,
        /*[in]*/ struct ITextFormat * TextFormat,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("699c7492-db56-4cc2-b7a2-9ffd56698434"))
ITessellation : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_MaxFacetWidth (
        /*[out,retval]*/ double * MaxWidth ) = 0;
      virtual HRESULT __stdcall put_MaxFacetWidth (
        /*[in]*/ double MaxWidth ) = 0;
      virtual HRESULT __stdcall get_CurveChordTolerance (
        /*[out,retval]*/ double * Tolerance ) = 0;
      virtual HRESULT __stdcall put_CurveChordTolerance (
        /*[in]*/ double Tolerance ) = 0;
      virtual HRESULT __stdcall get_CurveChordAngleTolerance (
        /*[out,retval]*/ double * Tolerance ) = 0;
      virtual HRESULT __stdcall put_CurveChordAngleTolerance (
        /*[in]*/ double Tolerance ) = 0;
      virtual HRESULT __stdcall get_SurfacePlaneTolerance (
        /*[out,retval]*/ double * Tolerance ) = 0;
      virtual HRESULT __stdcall put_SurfacePlaneTolerance (
        /*[in]*/ double Tolerance ) = 0;
      virtual HRESULT __stdcall get_SurfacePlaneAngleTolerance (
        /*[out,retval]*/ double * Tolerance ) = 0;
      virtual HRESULT __stdcall put_SurfacePlaneAngleTolerance (
        /*[in]*/ double Tolerance ) = 0;
      virtual HRESULT __stdcall get_NeedVertexNormal (
        /*[out,retval]*/ VARIANT_BOOL * Option ) = 0;
      virtual HRESULT __stdcall put_NeedVertexNormal (
        /*[in]*/ VARIANT_BOOL Option ) = 0;
      virtual HRESULT __stdcall get_NeedVertexParams (
        /*[out,retval]*/ VARIANT_BOOL * Option ) = 0;
      virtual HRESULT __stdcall put_NeedVertexParams (
        /*[in]*/ VARIANT_BOOL Option ) = 0;
      virtual HRESULT __stdcall get_NeedFaceFacetMap (
        /*[out,retval]*/ VARIANT_BOOL * Option ) = 0;
      virtual HRESULT __stdcall put_NeedFaceFacetMap (
        /*[in]*/ VARIANT_BOOL Option ) = 0;
      virtual HRESULT __stdcall get_NeedEdgeFinMap (
        /*[out,retval]*/ VARIANT_BOOL * Option ) = 0;
      virtual HRESULT __stdcall put_NeedEdgeFinMap (
        /*[in]*/ VARIANT_BOOL Option ) = 0;
      virtual HRESULT __stdcall get_NeedErrorList (
        /*[out,retval]*/ VARIANT_BOOL * Option ) = 0;
      virtual HRESULT __stdcall put_NeedErrorList (
        /*[in]*/ VARIANT_BOOL Option ) = 0;
      virtual HRESULT __stdcall Tessellate (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetFacetCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetFinCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetVertexCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetFacetFins (
        /*[in]*/ long FacetId,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetFacetFinsCount (
        /*[in]*/ long FacetId,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IGetFacetFins (
        /*[in]*/ long FacetId,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetFinCoFin (
        /*[in]*/ long FinId,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetFinVertices (
        /*[in]*/ long FinId,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetFinVertices (
        /*[in]*/ long FinId,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetVertexPoint (
        /*[in]*/ long VertexId,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetVertexPoint (
        /*[in]*/ long VertexId,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetVertexNormal (
        /*[in]*/ long VertexId,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetVertexNormal (
        /*[in]*/ long VertexId,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetVertexParams (
        /*[in]*/ long VertexId,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetVertexParams (
        /*[in]*/ long VertexId,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetFaceFacets (
        /*[in]*/ IDispatch * Facedisp,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetFaceFacetsCount (
        /*[in]*/ struct IFace * FaceObj,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IGetFaceFacets (
        /*[in]*/ struct IFace * FaceObj,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetFacetFace (
        /*[in]*/ long FacetId,
        /*[out,retval]*/ IDispatch * * Facedisp ) = 0;
      virtual HRESULT __stdcall IGetFacetFace (
        /*[in]*/ long FacetId,
        /*[out,retval]*/ struct IFace * * FaceObj ) = 0;
      virtual HRESULT __stdcall GetEdgeFins (
        /*[in]*/ IDispatch * EdgeDisp,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetEdgeFinsCount (
        /*[in]*/ struct IEdge * EdgeObj,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IGetEdgeFins (
        /*[in]*/ struct IEdge * EdgeObj,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetFinEdge (
        /*[in]*/ long FinId,
        /*[out,retval]*/ IDispatch * * EdgeDisp ) = 0;
      virtual HRESULT __stdcall IGetFinEdge (
        /*[in]*/ long FinId,
        /*[out,retval]*/ struct IEdge * * EdgeDisp ) = 0;
      virtual HRESULT __stdcall GetErrorList (
        /*[out]*/ VARIANT * FaceErrArray,
        /*[out]*/ VARIANT * FacetErrArray,
        /*[out]*/ VARIANT * VertexPointErrArray,
        /*[out]*/ VARIANT * VertexNormalErrArray,
        /*[out]*/ VARIANT * VertexParamsErrArray ) = 0;
      virtual HRESULT __stdcall IGetErrorListCount (
        /*[out]*/ long * FaceErrArrayCount,
        /*[out]*/ long * FacetErrArrayCount,
        /*[out]*/ long * VertexPointErrArrayCount,
        /*[out]*/ long * VertexNormalErrArrayCount,
        /*[out]*/ long * VertexParamsErrArrayCount ) = 0;
      virtual HRESULT __stdcall IGetErrorList (
        /*[out]*/ struct IFace * * FaceErrArray,
        /*[out]*/ long * FacetErrArray,
        /*[out]*/ long * VertexPointErrArray,
        /*[out]*/ long * VertexNormalErrArray,
        /*[out]*/ long * VertexParamsErrArray ) = 0;
      virtual HRESULT __stdcall IGetFaceFacetsCount2 (
        /*[in]*/ struct IFace2 * FaceObj,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IGetFaceFacets2 (
        /*[in]*/ struct IFace2 * FaceObj,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IGetFacetFace2 (
        /*[in]*/ long FacetId,
        /*[out,retval]*/ struct IFace2 * * FaceObj ) = 0;
      virtual HRESULT __stdcall IGetErrorList2 (
        /*[out]*/ struct IFace2 * * FaceErrArray,
        /*[out]*/ long * FacetErrArray,
        /*[out]*/ long * VertexPointErrArray,
        /*[out]*/ long * VertexNormalErrArray,
        /*[out]*/ long * VertexParamsErrArray ) = 0;
      virtual HRESULT __stdcall get_MinFacetWidth (
        /*[out,retval]*/ double * MinWidth ) = 0;
      virtual HRESULT __stdcall put_MinFacetWidth (
        /*[in]*/ double MinWidth ) = 0;
      virtual HRESULT __stdcall get_MatchType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_MatchType (
        /*[in]*/ long Type ) = 0;
};

struct __declspec(uuid("83a33d88-27c5-11ce-bfd4-00400513bb57"))
IMidSurface : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetFacePairCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstFacePair (
        /*[out]*/ double * Thickness,
        /*[out]*/ IDispatch * * PartnerFaceDisp,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstFacePair (
        /*[out]*/ double * Thickness,
        /*[out]*/ struct IFace * * PartnerFaceDisp,
        /*[out,retval]*/ struct IFace * * Retval ) = 0;
      virtual HRESULT __stdcall GetNextFacePair (
        /*[out]*/ double * Thickness,
        /*[out]*/ IDispatch * * PartnerFaceDisp,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNextFacePair (
        /*[out]*/ double * Thickness,
        /*[out]*/ struct IFace * * PartnerFaceDisp,
        /*[out,retval]*/ struct IFace * * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstNeutralSheet (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstNeutralSheet (
        /*[out,retval]*/ struct IBody * * Retval ) = 0;
      virtual HRESULT __stdcall GetNextNeutralSheet (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNextNeutralSheet (
        /*[out,retval]*/ struct IBody * * Retval ) = 0;
      virtual HRESULT __stdcall GetNeutralSheetCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetFaceCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstFace (
        /*[out]*/ IDispatch * * FromFace1Disp,
        /*[out]*/ IDispatch * * FromFace2Disp,
        /*[out]*/ double * Thickness,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstFace (
        /*[out]*/ struct IFace * * FromFace1Disp,
        /*[out]*/ struct IFace * * FromFace2Disp,
        /*[out]*/ double * Thickness,
        /*[out,retval]*/ struct IFace * * Retval ) = 0;
      virtual HRESULT __stdcall GetNextFace (
        /*[out]*/ IDispatch * * FromFace1Disp,
        /*[out]*/ IDispatch * * FromFace2Disp,
        /*[out]*/ double * Thickness,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNextFace (
        /*[out]*/ struct IFace * * FromFace1Disp,
        /*[out]*/ struct IFace * * FromFace2Disp,
        /*[out]*/ double * Thickness,
        /*[out,retval]*/ struct IFace * * Retval ) = 0;
      virtual HRESULT __stdcall EdgeGetFace (
        /*[in]*/ IDispatch * EdgeInDisp,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IEdgeGetFace (
        /*[in]*/ struct IEdge * EdgeInDisp,
        /*[out,retval]*/ struct IFace * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstFaceArray (
        /*[out]*/ struct IFace * * * FromFrontFaceListDisp,
        /*[out]*/ long * SizeOfFrontFaceList,
        /*[out]*/ struct IFace * * * FromFaceBackListDisp,
        /*[out]*/ long * SizeOfBackFaceList,
        /*[out]*/ double * Thickness,
        /*[out,retval]*/ struct IFace * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNextFaceArray (
        /*[out]*/ struct IFace * * * FromFrontFaceListDisp,
        /*[out]*/ long * SizeOfFrontFaceList,
        /*[out]*/ struct IFace * * * FromFaceBackListDisp,
        /*[out]*/ long * SizeOfBackFaceList,
        /*[out]*/ double * Thickness,
        /*[out,retval]*/ struct IFace * * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstFaceArray (
        /*[out]*/ double * Thickness,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetNextFaceArray (
        /*[out]*/ double * Thickness,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
};

struct __declspec(uuid("7e4684a4-9af8-4d28-953d-56cabf23d1bd"))
IMidSurface3 : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetFacePairCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstFacePair (
        /*[out]*/ double * Thickness,
        /*[out]*/ IDispatch * * PartnerFaceDisp,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstFacePair (
        /*[out]*/ double * Thickness,
        /*[out]*/ struct IFace2 * * PartnerFaceDisp,
        /*[out,retval]*/ struct IFace2 * * Retval ) = 0;
      virtual HRESULT __stdcall GetNextFacePair (
        /*[out]*/ double * Thickness,
        /*[out]*/ IDispatch * * PartnerFaceDisp,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNextFacePair (
        /*[out]*/ double * Thickness,
        /*[out]*/ struct IFace2 * * PartnerFaceDisp,
        /*[out,retval]*/ struct IFace2 * * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstNeutralSheet (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstNeutralSheet (
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall GetNextNeutralSheet (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNextNeutralSheet (
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall GetNeutralSheetCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetFaceCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstFace (
        /*[out]*/ IDispatch * * FromFace1Disp,
        /*[out]*/ IDispatch * * FromFace2Disp,
        /*[out]*/ double * Thickness,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstFace (
        /*[out]*/ struct IFace2 * * FromFace1Disp,
        /*[out]*/ struct IFace2 * * FromFace2Disp,
        /*[out]*/ double * Thickness,
        /*[out,retval]*/ struct IFace2 * * Retval ) = 0;
      virtual HRESULT __stdcall GetNextFace (
        /*[out]*/ IDispatch * * FromFace1Disp,
        /*[out]*/ IDispatch * * FromFace2Disp,
        /*[out]*/ double * Thickness,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNextFace (
        /*[out]*/ struct IFace2 * * FromFace1Disp,
        /*[out]*/ struct IFace2 * * FromFace2Disp,
        /*[out]*/ double * Thickness,
        /*[out,retval]*/ struct IFace2 * * Retval ) = 0;
      virtual HRESULT __stdcall EdgeGetFace (
        /*[in]*/ IDispatch * EdgeInDisp,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IEdgeGetFace (
        /*[in]*/ struct IEdge * EdgeInDisp,
        /*[out,retval]*/ struct IFace2 * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstFaceArray (
        /*[out]*/ struct IFace2 * * FromFrontFaceListDisp,
        /*[out]*/ long * SizeOfFrontFaceList,
        /*[out]*/ struct IFace2 * * FromFaceBackListDisp,
        /*[out]*/ long * SizeOfBackFaceList,
        /*[out]*/ double * Thickness,
        /*[out,retval]*/ struct IFace2 * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNextFaceArray (
        /*[out]*/ struct IFace2 * * FromFrontFaceListDisp,
        /*[out]*/ long * SizeOfFrontFaceList,
        /*[out]*/ struct IFace2 * * FromFaceBackListDisp,
        /*[out]*/ long * SizeOfBackFaceList,
        /*[out]*/ double * Thickness,
        /*[out,retval]*/ struct IFace2 * * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstFaceArray (
        /*[out]*/ double * Thickness,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetNextFaceArray (
        /*[out]*/ double * Thickness,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetFaces (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetFaces (
        /*[in]*/ long NumFaces,
        /*[out,retval]*/ struct IFace2 * * Retval ) = 0;
};

struct __declspec(uuid("83a33d61-27c5-11ce-bfd4-00400513bb57"))
IEnumCoEdges : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Next (
        /*[in]*/ long Celt,
        /*[out]*/ struct ICoEdge * * Rgelt,
        /*[in,out]*/ long * PceltFetched ) = 0;
      virtual HRESULT __stdcall Skip (
        /*[in]*/ long Celt ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
      virtual HRESULT __stdcall Clone (
        /*[out]*/ struct IEnumCoEdges * * Ppenum ) = 0;
};

struct __declspec(uuid("83a33d57-27c5-11ce-bfd4-00400513bb57"))
ICoEdge : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetEdge (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetEdge (
        /*[out,retval]*/ struct IEdge * * Retval ) = 0;
      virtual HRESULT __stdcall GetNext (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNext (
        /*[out,retval]*/ struct ICoEdge * * Retval ) = 0;
      virtual HRESULT __stdcall GetLoop (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetLoop (
        /*[out,retval]*/ struct ILoop * * Body ) = 0;
      virtual HRESULT __stdcall GetSense (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetPartner (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetPartner (
        /*[out,retval]*/ struct ICoEdge * * Retval ) = 0;
      virtual HRESULT __stdcall GetCurveParams (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall Evaluate (
        /*[in]*/ double Param,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetCurveParams (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IEvaluate (
        /*[in]*/ double Param,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetCurve (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetCurve (
        /*[out,retval]*/ struct ICurve * * Body ) = 0;
      virtual HRESULT __stdcall IGetLoop2 (
        /*[out,retval]*/ struct ILoop2 * * Loop ) = 0;
      virtual HRESULT __stdcall Evaluate2 (
        /*[in]*/ double Param,
        /*[in]*/ long NumberOfDerivatives,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IEvaluate2 (
        /*[in]*/ double Param,
        /*[in]*/ long NumberOfDerivatives,
        /*[out,retval]*/ double * Retval ) = 0;
};

struct __declspec(uuid("83a33d53-27c5-11ce-bfd4-00400513bb57"))
ILoop : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetNext (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNext (
        /*[out,retval]*/ struct ILoop * * Retval ) = 0;
      virtual HRESULT __stdcall GetEdges (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetEdges (
        /*[out,retval]*/ struct IEdge * * * EdgeList ) = 0;
      virtual HRESULT __stdcall GetEdgeCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IsOuter (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstCoEdge (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstCoEdge (
        /*[out,retval]*/ struct ICoEdge * * Retval ) = 0;
      virtual HRESULT __stdcall EnumEdges (
        /*[out,retval]*/ struct IEnumEdges * * Retval ) = 0;
      virtual HRESULT __stdcall EnumCoEdges (
        /*[out,retval]*/ struct IEnumCoEdges * * Retval ) = 0;
      virtual HRESULT __stdcall GetFace (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFace (
        /*[out,retval]*/ struct IFace * * Retval ) = 0;
      virtual HRESULT __stdcall SweepPlanarLoop (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in]*/ double DraftAngle,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall ISweepPlanarLoop (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in]*/ double DraftAngle,
        /*[in]*/ struct IFace * * StopFacesOut,
        /*[out,retval]*/ struct IBody * * Retval ) = 0;
      virtual HRESULT __stdcall Dummy015 ( ) = 0;
      virtual HRESULT __stdcall Dummy016 ( ) = 0;
      virtual HRESULT __stdcall RevolvePlanarLoop (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in]*/ double Axisx,
        /*[in]*/ double Axisy,
        /*[in]*/ double Axisz,
        /*[in]*/ double RevAngle,
        /*[out,retval]*/ VARIANT * FacesAndBody ) = 0;
      virtual HRESULT __stdcall IRevolvePlanarLoop (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in]*/ double Axisx,
        /*[in]*/ double Axisy,
        /*[in]*/ double Axisz,
        /*[in]*/ double RevAngle,
        /*[in]*/ struct IFace * * StopFacesOut,
        /*[out,retval]*/ struct IBody * * Retval ) = 0;
};

struct __declspec(uuid("08cc54d0-eca9-416c-abf0-07586843d51d"))
IDiagnoseResult : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetGapsCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetCoEdgesCountAtGap (
        /*[in]*/ long Index,
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetCoEdgesAtGap (
        /*[in]*/ long Index,
        /*[in]*/ long CoEdgeCount,
        /*[out,retval]*/ struct ICoEdge * * PCoEdgeArr ) = 0;
      virtual HRESULT __stdcall GetCoEdgesAtGap (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * CoEdgeVar ) = 0;
};

struct __declspec(uuid("83a33d5d-27c5-11ce-bfd4-00400513bb57"))
IEnumLoops : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Next (
        /*[in]*/ long Celt,
        /*[out]*/ struct ILoop * * Rgelt,
        /*[in,out]*/ long * PceltFetched ) = 0;
      virtual HRESULT __stdcall Skip (
        /*[in]*/ long Celt ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
      virtual HRESULT __stdcall Clone (
        /*[out]*/ struct IEnumLoops * * Ppenum ) = 0;
};

struct __declspec(uuid("9350ca6e-0adb-485a-8941-9407dd7b3b8e"))
ILoop2 : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetNext (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNext (
        /*[out,retval]*/ struct ILoop2 * * Retval ) = 0;
      virtual HRESULT __stdcall GetEdges (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetEdges (
        /*[out,retval]*/ struct IEdge * * EdgeList ) = 0;
      virtual HRESULT __stdcall GetEdgeCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IsOuter (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstCoEdge (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstCoEdge (
        /*[out,retval]*/ struct ICoEdge * * Retval ) = 0;
      virtual HRESULT __stdcall EnumEdges (
        /*[out,retval]*/ struct IEnumEdges * * Retval ) = 0;
      virtual HRESULT __stdcall EnumCoEdges (
        /*[out,retval]*/ struct IEnumCoEdges * * Retval ) = 0;
      virtual HRESULT __stdcall GetFace (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFace (
        /*[out,retval]*/ struct IFace2 * * Retval ) = 0;
      virtual HRESULT __stdcall SweepPlanarLoop (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in]*/ double DraftAngle,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall ISweepPlanarLoop (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in]*/ double DraftAngle,
        /*[in]*/ struct IFace2 * * StopFacesOut,
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall Dummy015 ( ) = 0;
      virtual HRESULT __stdcall Dummy016 ( ) = 0;
      virtual HRESULT __stdcall RevolvePlanarLoop (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in]*/ double Axisx,
        /*[in]*/ double Axisy,
        /*[in]*/ double Axisz,
        /*[in]*/ double RevAngle,
        /*[out,retval]*/ VARIANT * FacesAndBody ) = 0;
      virtual HRESULT __stdcall IRevolvePlanarLoop (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in]*/ double Axisx,
        /*[in]*/ double Axisy,
        /*[in]*/ double Axisz,
        /*[in]*/ double RevAngle,
        /*[in,out]*/ struct IFace2 * * StopFacesOut,
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall IsSingular (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetVertexCount (
        /*[out,retval]*/ long * NumVertices ) = 0;
      virtual HRESULT __stdcall GetVertices (
        /*[out,retval]*/ VARIANT * Vertices ) = 0;
      virtual HRESULT __stdcall IGetVertices (
        /*[in]*/ long NumVertices,
        /*[in,out]*/ struct IVertex * * Vertices ) = 0;
      virtual HRESULT __stdcall GetTrackingIDs (
        /*[in]*/ long TrackingCookie,
        /*[out]*/ VARIANT * TrackingIDs,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall SetTrackingID (
        /*[in]*/ long TrackingCookie,
        /*[in]*/ long TrackingID,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall RemoveTrackingID (
        /*[in]*/ long TrackingCookie,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall GetTrackingIDsCount (
        /*[in]*/ long TrackingCookie,
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetTrackingIDs (
        /*[in]*/ long TrackingCookie,
        /*[in]*/ long Count,
        /*[out]*/ long * TrackingIDs,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ IDispatch * Edge,
        /*[in]*/ VARIANT_BOOL Append,
        /*[in]*/ IDispatch * SelectionData,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetCoEdgeCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetCoEdges (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetCoEdges (
        /*[in]*/ long NumCoEdges,
        /*[out,retval]*/ struct ICoEdge * * Retval ) = 0;
};

struct __declspec(uuid("9a6ad388-3fc9-48de-bfa5-b8953433ab36"))
IEnumLoops2 : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Next (
        /*[in]*/ long Celt,
        /*[out]*/ struct ILoop2 * * Rgelt,
        /*[in,out]*/ long * PceltFetched ) = 0;
      virtual HRESULT __stdcall Skip (
        /*[in]*/ long Celt ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
      virtual HRESULT __stdcall Clone (
        /*[out]*/ struct IEnumLoops2 * * Ppenum ) = 0;
};

struct __declspec(uuid("83a33d63-27c5-11ce-bfd4-00400513bb57"))
IVertex : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetPoint (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetPoint (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall EnumEdges (
        /*[out,retval]*/ struct IEnumEdges * * Retval ) = 0;
      virtual HRESULT __stdcall GetClosestPointOn (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetClosestPointOn (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall EnumEdgesOriented (
        /*[out,retval]*/ struct IEnumEdges * * Retval ) = 0;
      virtual HRESULT __stdcall GetEdges (
        /*[out,retval]*/ VARIANT * VEdgeArray ) = 0;
      virtual HRESULT __stdcall GetEdgesOriented (
        /*[out,retval]*/ VARIANT * VOrientedEdgeArray ) = 0;
      virtual HRESULT __stdcall GetAdjacentFaces (
        /*[out,retval]*/ VARIANT * VFaceArray ) = 0;
      virtual HRESULT __stdcall IGetAdjacentFacesCount (
        /*[out,retval]*/ long * NFaceCount ) = 0;
      virtual HRESULT __stdcall IGetAdjacentFaces (
        /*[in]*/ long NFaceCount,
        /*[out,retval]*/ struct IFace2 * * PFaceArray ) = 0;
      virtual HRESULT __stdcall Display (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ long Color,
        /*[in]*/ double Scale,
        /*[in]*/ VARIANT_BOOL HighlightState ) = 0;
      virtual HRESULT __stdcall GetTrackingIDs (
        /*[in]*/ long TrackingCookie,
        /*[out]*/ VARIANT * TrackingIDs,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall SetTrackingID (
        /*[in]*/ long TrackingCookie,
        /*[in]*/ long TrackingID,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall RemoveTrackingID (
        /*[in]*/ long TrackingCookie,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall GetTrackingIDsCount (
        /*[in]*/ long TrackingCookie,
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetTrackingIDs (
        /*[in]*/ long TrackingCookie,
        /*[in]*/ long Count,
        /*[out]*/ long * TrackingIDs,
        /*[out,retval]*/ long * Status ) = 0;
};

struct __declspec(uuid("1d06fd54-96dd-11d3-aeaa-00c04f683cba"))
ISimpleHoleFeatureData : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc * TopDoc,
        /*[in]*/ struct IComponent * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_ReverseDirection (
        /*[out,retval]*/ VARIANT_BOOL * ReverseDirection ) = 0;
      virtual HRESULT __stdcall put_ReverseDirection (
        /*[in]*/ VARIANT_BOOL ReverseDirection ) = 0;
      virtual HRESULT __stdcall get_DraftWhileExtruding (
        /*[out,retval]*/ VARIANT_BOOL * DraftWhileExtrude ) = 0;
      virtual HRESULT __stdcall put_DraftWhileExtruding (
        /*[in]*/ VARIANT_BOOL DraftWhileExtrude ) = 0;
      virtual HRESULT __stdcall get_DraftOutward (
        /*[out,retval]*/ VARIANT_BOOL * DraftOutward ) = 0;
      virtual HRESULT __stdcall put_DraftOutward (
        /*[in]*/ VARIANT_BOOL DraftOutward ) = 0;
      virtual HRESULT __stdcall get_ReverseOffset (
        /*[out,retval]*/ VARIANT_BOOL * DraftOutward ) = 0;
      virtual HRESULT __stdcall put_ReverseOffset (
        /*[in]*/ VARIANT_BOOL DraftOutward ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ int * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ int Type ) = 0;
      virtual HRESULT __stdcall get_Diameter (
        /*[out,retval]*/ double * Diameter ) = 0;
      virtual HRESULT __stdcall put_Diameter (
        /*[in]*/ double Diameter ) = 0;
      virtual HRESULT __stdcall get_Depth (
        /*[out,retval]*/ double * Depth ) = 0;
      virtual HRESULT __stdcall put_Depth (
        /*[in]*/ double Depth ) = 0;
      virtual HRESULT __stdcall get_DraftAngle (
        /*[out,retval]*/ double * DraftAngle ) = 0;
      virtual HRESULT __stdcall put_DraftAngle (
        /*[in]*/ double DraftAngle ) = 0;
      virtual HRESULT __stdcall get_SurfaceOffset (
        /*[out,retval]*/ double * SurfaceOffset ) = 0;
      virtual HRESULT __stdcall put_SurfaceOffset (
        /*[in]*/ double SurfaceOffset ) = 0;
      virtual HRESULT __stdcall get_Face (
        /*[out,retval]*/ IDispatch * * Face ) = 0;
      virtual HRESULT __stdcall put_Face (
        /*[in]*/ IDispatch * Face ) = 0;
      virtual HRESULT __stdcall get_IFace (
        /*[out,retval]*/ struct IFace * * Face ) = 0;
      virtual HRESULT __stdcall put_IFace (
        /*[in]*/ struct IFace * Face ) = 0;
      virtual HRESULT __stdcall get_Vertex (
        /*[out,retval]*/ IDispatch * * Vertex ) = 0;
      virtual HRESULT __stdcall put_Vertex (
        /*[in]*/ IDispatch * Vertex ) = 0;
      virtual HRESULT __stdcall get_IVertex (
        /*[out,retval]*/ struct IVertex * * Vertex ) = 0;
      virtual HRESULT __stdcall put_IVertex (
        /*[in]*/ struct IVertex * Vertex ) = 0;
};

struct __declspec(uuid("887ab457-a739-11d3-b97f-001083029a97"))
IWizardHoleFeatureData : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc * TopDoc,
        /*[in]*/ struct IComponent * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ int * Hole_type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ int Hole_type ) = 0;
      virtual HRESULT __stdcall get_Diameter (
        /*[out,retval]*/ double * Diameter ) = 0;
      virtual HRESULT __stdcall put_Diameter (
        /*[in]*/ double Diameter ) = 0;
      virtual HRESULT __stdcall get_CounterBoreDiameter (
        /*[out,retval]*/ double * Cbore_dia ) = 0;
      virtual HRESULT __stdcall put_CounterBoreDiameter (
        /*[in]*/ double Cbore_dia ) = 0;
      virtual HRESULT __stdcall get_CounterDrillDiameter (
        /*[out,retval]*/ double * Cdrill_dia ) = 0;
      virtual HRESULT __stdcall put_CounterDrillDiameter (
        /*[in]*/ double Cdrill_dia ) = 0;
      virtual HRESULT __stdcall get_CounterSinkDiameter (
        /*[out,retval]*/ double * Csunk_dia ) = 0;
      virtual HRESULT __stdcall put_CounterSinkDiameter (
        /*[in]*/ double Csunk_dia ) = 0;
      virtual HRESULT __stdcall get_MinorDiameter (
        /*[out,retval]*/ double * Minor_dia ) = 0;
      virtual HRESULT __stdcall put_MinorDiameter (
        /*[in]*/ double Minor_dia ) = 0;
      virtual HRESULT __stdcall get_MajorDiameter (
        /*[out,retval]*/ double * Major_dia ) = 0;
      virtual HRESULT __stdcall put_MajorDiameter (
        /*[in]*/ double Major_dia ) = 0;
      virtual HRESULT __stdcall get_HoleDiameter (
        /*[out,retval]*/ double * Diameter ) = 0;
      virtual HRESULT __stdcall put_HoleDiameter (
        /*[in]*/ double Diameter ) = 0;
      virtual HRESULT __stdcall get_ThruHoleDiameter (
        /*[out,retval]*/ double * Diameter ) = 0;
      virtual HRESULT __stdcall put_ThruHoleDiameter (
        /*[in]*/ double Diameter ) = 0;
      virtual HRESULT __stdcall get_TapDrillDiameter (
        /*[out,retval]*/ double * Diameter ) = 0;
      virtual HRESULT __stdcall put_TapDrillDiameter (
        /*[in]*/ double Diameter ) = 0;
      virtual HRESULT __stdcall get_ThruTapDrillDiameter (
        /*[out,retval]*/ double * Diameter ) = 0;
      virtual HRESULT __stdcall put_ThruTapDrillDiameter (
        /*[in]*/ double Diameter ) = 0;
      virtual HRESULT __stdcall get_NearCounterSinkDiameter (
        /*[out,retval]*/ double * Diameter ) = 0;
      virtual HRESULT __stdcall put_NearCounterSinkDiameter (
        /*[in]*/ double Diameter ) = 0;
      virtual HRESULT __stdcall get_MidCounterSinkDiameter (
        /*[out,retval]*/ double * Diameter ) = 0;
      virtual HRESULT __stdcall put_MidCounterSinkDiameter (
        /*[in]*/ double Diameter ) = 0;
      virtual HRESULT __stdcall get_FarCounterSinkDiameter (
        /*[out,retval]*/ double * Diameter ) = 0;
      virtual HRESULT __stdcall put_FarCounterSinkDiameter (
        /*[in]*/ double Diameter ) = 0;
      virtual HRESULT __stdcall get_ThreadDiameter (
        /*[out,retval]*/ double * Diameter ) = 0;
      virtual HRESULT __stdcall put_ThreadDiameter (
        /*[in]*/ double Diameter ) = 0;
      virtual HRESULT __stdcall get_Depth (
        /*[out,retval]*/ double * Depth ) = 0;
      virtual HRESULT __stdcall put_Depth (
        /*[in]*/ double Depth ) = 0;
      virtual HRESULT __stdcall get_CounterBoreDepth (
        /*[out,retval]*/ double * Cbore_depth ) = 0;
      virtual HRESULT __stdcall put_CounterBoreDepth (
        /*[in]*/ double Cbore_depth ) = 0;
      virtual HRESULT __stdcall get_CounterDrillDepth (
        /*[out,retval]*/ double * Cdrill_depth ) = 0;
      virtual HRESULT __stdcall put_CounterDrillDepth (
        /*[in]*/ double Cdrill_depth ) = 0;
      virtual HRESULT __stdcall get_HoleDepth (
        /*[out,retval]*/ double * Depth ) = 0;
      virtual HRESULT __stdcall put_HoleDepth (
        /*[in]*/ double Depth ) = 0;
      virtual HRESULT __stdcall get_ThruHoleDepth (
        /*[out,retval]*/ double * Depth ) = 0;
      virtual HRESULT __stdcall put_ThruHoleDepth (
        /*[in]*/ double Depth ) = 0;
      virtual HRESULT __stdcall get_TapDrillDepth (
        /*[out,retval]*/ double * Depth ) = 0;
      virtual HRESULT __stdcall put_TapDrillDepth (
        /*[in]*/ double Depth ) = 0;
      virtual HRESULT __stdcall get_ThruTapDrillDepth (
        /*[out,retval]*/ double * Depth ) = 0;
      virtual HRESULT __stdcall put_ThruTapDrillDepth (
        /*[in]*/ double Depth ) = 0;
      virtual HRESULT __stdcall get_ThreadDepth (
        /*[out,retval]*/ double * Depth ) = 0;
      virtual HRESULT __stdcall put_ThreadDepth (
        /*[in]*/ double Depth ) = 0;
      virtual HRESULT __stdcall get_CounterDrillAngle (
        /*[out,retval]*/ double * Cdrill_angle ) = 0;
      virtual HRESULT __stdcall put_CounterDrillAngle (
        /*[in]*/ double Cdrill_angle ) = 0;
      virtual HRESULT __stdcall get_CounterSinkAngle (
        /*[out,retval]*/ double * Csunk_angle ) = 0;
      virtual HRESULT __stdcall put_CounterSinkAngle (
        /*[in]*/ double Csunk_angle ) = 0;
      virtual HRESULT __stdcall get_DrillAngle (
        /*[out,retval]*/ double * Drill_angle ) = 0;
      virtual HRESULT __stdcall put_DrillAngle (
        /*[in]*/ double Drill_angle ) = 0;
      virtual HRESULT __stdcall get_NearCounterSinkAngle (
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall put_NearCounterSinkAngle (
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall get_MidCounterSinkAngle (
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall put_MidCounterSinkAngle (
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall get_FarCounterSinkAngle (
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall put_FarCounterSinkAngle (
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall get_ThreadAngle (
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall put_ThreadAngle (
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall get_HeadClearance (
        /*[out,retval]*/ double * HeadClearance ) = 0;
      virtual HRESULT __stdcall put_HeadClearance (
        /*[in]*/ double HeadClearance ) = 0;
      virtual HRESULT __stdcall get_Face (
        /*[out,retval]*/ IDispatch * * Face ) = 0;
      virtual HRESULT __stdcall put_Face (
        /*[in]*/ IDispatch * Face ) = 0;
      virtual HRESULT __stdcall get_IFace (
        /*[out,retval]*/ struct IFace * * Face ) = 0;
      virtual HRESULT __stdcall put_IFace (
        /*[in]*/ struct IFace * Face ) = 0;
      virtual HRESULT __stdcall get_Vertex (
        /*[out,retval]*/ IDispatch * * Vertex ) = 0;
      virtual HRESULT __stdcall put_Vertex (
        /*[in]*/ IDispatch * Vertex ) = 0;
      virtual HRESULT __stdcall get_IVertex (
        /*[out,retval]*/ struct IVertex * * Vertex ) = 0;
      virtual HRESULT __stdcall put_IVertex (
        /*[in]*/ struct IVertex * Vertex ) = 0;
      virtual HRESULT __stdcall get_EndCondition (
        /*[out,retval]*/ int * EndCondition ) = 0;
      virtual HRESULT __stdcall put_EndCondition (
        /*[in]*/ int EndCondition ) = 0;
      virtual HRESULT __stdcall get_Standard (
        /*[out,retval]*/ BSTR * Standard ) = 0;
      virtual HRESULT __stdcall put_Standard (
        /*[in]*/ BSTR Standard ) = 0;
      virtual HRESULT __stdcall get_FastenerType (
        /*[out,retval]*/ BSTR * FastenerType ) = 0;
      virtual HRESULT __stdcall put_FastenerType (
        /*[in]*/ BSTR FastenerType ) = 0;
      virtual HRESULT __stdcall get_FastenerSize (
        /*[out,retval]*/ BSTR * FastenerSize ) = 0;
      virtual HRESULT __stdcall put_FastenerSize (
        /*[in]*/ BSTR FastenerSize ) = 0;
};

struct __declspec(uuid("cc929f0d-b404-11d3-b981-001083029a97"))
IVariableFilletFeatureData : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DefaultRadius (
        /*[out,retval]*/ double * Radius ) = 0;
      virtual HRESULT __stdcall put_DefaultRadius (
        /*[in]*/ double Radius ) = 0;
      virtual HRESULT __stdcall get_OverflowType (
        /*[out,retval]*/ int * Overflow_type ) = 0;
      virtual HRESULT __stdcall put_OverflowType (
        /*[in]*/ int Overflow_type ) = 0;
      virtual HRESULT __stdcall get_TransitionType (
        /*[out,retval]*/ int * Transition_type ) = 0;
      virtual HRESULT __stdcall put_TransitionType (
        /*[in]*/ int Transition_type ) = 0;
      virtual HRESULT __stdcall get_PropagateToTangentFaces (
        /*[out,retval]*/ VARIANT_BOOL * PropTgtFaces ) = 0;
      virtual HRESULT __stdcall put_PropagateToTangentFaces (
        /*[in]*/ VARIANT_BOOL PropTgtFaces ) = 0;
      virtual HRESULT __stdcall get_FilletEdgeCount (
        /*[out,retval]*/ int * Count ) = 0;
      virtual HRESULT __stdcall GetFilletEdgeAtIndex (
        /*[in]*/ int Index,
        /*[out,retval]*/ IDispatch * * PFilletItem ) = 0;
      virtual HRESULT __stdcall IGetFilletEdgeAtIndex (
        /*[in]*/ int Index,
        /*[out,retval]*/ struct IEdge * * PFilletItem ) = 0;
      virtual HRESULT __stdcall GetRadius (
        /*[in]*/ IDispatch * PFilletItem,
        /*[out,retval]*/ double * Radius ) = 0;
      virtual HRESULT __stdcall IGetRadius (
        /*[in]*/ struct IVertex * PFilletItem,
        /*[out,retval]*/ double * Radius ) = 0;
      virtual HRESULT __stdcall SetRadius (
        /*[in]*/ IDispatch * PFilletItem,
        /*[in]*/ double Radius ) = 0;
      virtual HRESULT __stdcall ISetRadius (
        /*[in]*/ struct IVertex * PFilletItem,
        /*[in]*/ double Radius ) = 0;
      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc * TopDoc,
        /*[in]*/ struct IComponent * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
};

struct __declspec(uuid("908a7175-b72c-11d3-b981-001083029a97"))
IExtrudeFeatureData : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetEndCondition (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[out,retval]*/ int * EndCondition ) = 0;
      virtual HRESULT __stdcall SetEndCondition (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[in]*/ int EndCondition ) = 0;
      virtual HRESULT __stdcall GetDepth (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[out,retval]*/ double * Depth ) = 0;
      virtual HRESULT __stdcall SetDepth (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[in]*/ double Depth ) = 0;
      virtual HRESULT __stdcall GetWallThickness (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[out,retval]*/ double * WallThickness ) = 0;
      virtual HRESULT __stdcall SetWallThickness (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[in]*/ double WallThickness ) = 0;
      virtual HRESULT __stdcall GetDraftWhileExtruding (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[out,retval]*/ VARIANT_BOOL * DraftWhileExtrude ) = 0;
      virtual HRESULT __stdcall SetDraftWhileExtruding (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[in]*/ VARIANT_BOOL DraftWhileExtrude ) = 0;
      virtual HRESULT __stdcall GetDraftOutward (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[out,retval]*/ VARIANT_BOOL * DraftOutward ) = 0;
      virtual HRESULT __stdcall SetDraftOutward (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[in]*/ VARIANT_BOOL DraftOutward ) = 0;
      virtual HRESULT __stdcall GetDraftAngle (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[out,retval]*/ double * DraftAngle ) = 0;
      virtual HRESULT __stdcall SetDraftAngle (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[in]*/ double DraftAngle ) = 0;
      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc * TopDoc,
        /*[in]*/ struct IComponent * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall GetFace (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[out,retval]*/ IDispatch * * Face ) = 0;
      virtual HRESULT __stdcall SetFace (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[in]*/ IDispatch * Face ) = 0;
      virtual HRESULT __stdcall IGetFace (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[out,retval]*/ struct IFace * * Face ) = 0;
      virtual HRESULT __stdcall ISetFace (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[in]*/ struct IFace * Face ) = 0;
      virtual HRESULT __stdcall GetVertex (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[out,retval]*/ IDispatch * * Face ) = 0;
      virtual HRESULT __stdcall SetVertex (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[in]*/ IDispatch * Face ) = 0;
      virtual HRESULT __stdcall IGetVertex (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[out,retval]*/ struct IVertex * * Face ) = 0;
      virtual HRESULT __stdcall ISetVertex (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[in]*/ struct IVertex * Face ) = 0;
      virtual HRESULT __stdcall get_ReverseDirection (
        /*[out,retval]*/ VARIANT_BOOL * ReverseDirection ) = 0;
      virtual HRESULT __stdcall put_ReverseDirection (
        /*[in]*/ VARIANT_BOOL ReverseDirection ) = 0;
      virtual HRESULT __stdcall get_BothDirections (
        /*[out,retval]*/ VARIANT_BOOL * BothDirections ) = 0;
      virtual HRESULT __stdcall put_BothDirections (
        /*[in]*/ VARIANT_BOOL BothDirections ) = 0;
      virtual HRESULT __stdcall get_FlipSideToCut (
        /*[out,retval]*/ VARIANT_BOOL * Flip ) = 0;
      virtual HRESULT __stdcall put_FlipSideToCut (
        /*[in]*/ VARIANT_BOOL Flip ) = 0;
      virtual HRESULT __stdcall IsBossFeature (
        /*[out,retval]*/ VARIANT_BOOL * IsBossFeature ) = 0;
      virtual HRESULT __stdcall IsThinFeature (
        /*[out,retval]*/ VARIANT_BOOL * IsThinFeature ) = 0;
      virtual HRESULT __stdcall IsBaseExtrude (
        /*[out,retval]*/ VARIANT_BOOL * IsBaseExtrude ) = 0;
      virtual HRESULT __stdcall get_ThinWallType (
        /*[out,retval]*/ int * ThinWallType ) = 0;
      virtual HRESULT __stdcall put_ThinWallType (
        /*[in]*/ int ThinWallType ) = 0;
      virtual HRESULT __stdcall get_CapEnds (
        /*[out,retval]*/ VARIANT_BOOL * CapEnds ) = 0;
      virtual HRESULT __stdcall put_CapEnds (
        /*[in]*/ VARIANT_BOOL CapEnds ) = 0;
      virtual HRESULT __stdcall get_CapThickness (
        /*[out,retval]*/ double * CapThickness ) = 0;
      virtual HRESULT __stdcall put_CapThickness (
        /*[in]*/ double CapThickness ) = 0;
};

struct __declspec(uuid("b90793fb-ef3d-4b80-a5c4-99959cdb6ceb"))
IModelDoc2 : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SelectionManager (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall get_ISelectionManager (
        /*[out,retval]*/ struct ISelectionMgr * * Retval ) = 0;
      virtual HRESULT __stdcall put_SelectionManager (
        /*[in]*/ IDispatch * Retval ) = 0;
      virtual HRESULT __stdcall get_ActiveView (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall get_IActiveView (
        /*[out,retval]*/ struct IModelView * * Retval ) = 0;
      virtual HRESULT __stdcall put_ActiveView (
        /*[in]*/ IDispatch * Retval ) = 0;
      virtual HRESULT __stdcall get_LengthUnit (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall put_LengthUnit (
        /*[in]*/ long Retval ) = 0;
      virtual HRESULT __stdcall get_LightSourceUserName (
        /*[in]*/ long ID,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_LightSourceUserName (
        /*[in]*/ long ID,
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall get_LightSourcePropertyValues (
        /*[in]*/ long ID,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall put_LightSourcePropertyValues (
        /*[in]*/ long ID,
        /*[in]*/ VARIANT Retval ) = 0;
      virtual HRESULT __stdcall get_SceneName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_SceneName (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall get_SceneUserName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_SceneUserName (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall FeatureFillet (
        /*[in]*/ double R1,
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ VARIANT_BOOL Ftyp,
        /*[in]*/ VARIANT_BOOL VarRadTyp,
        /*[in]*/ long OverflowType ) = 0;
      virtual HRESULT __stdcall GridOptions (
        /*[in]*/ VARIANT_BOOL DispGrid,
        /*[in]*/ double GridSpacing,
        /*[in]*/ VARIANT_BOOL Snap,
        /*[in]*/ VARIANT_BOOL DotStyle,
        /*[in]*/ short NMajor,
        /*[in]*/ short NMinor,
        /*[in]*/ VARIANT_BOOL Align2edge,
        /*[in]*/ VARIANT_BOOL AngleSnap,
        /*[in]*/ double AngleUnit,
        /*[in]*/ VARIANT_BOOL MinorAuto ) = 0;
      virtual HRESULT __stdcall SetUnits (
        /*[in]*/ short UType,
        /*[in]*/ short FractBase,
        /*[in]*/ short FractDenom,
        /*[in]*/ short SigDigits,
        /*[in]*/ VARIANT_BOOL RoundToFraction ) = 0;
      virtual HRESULT __stdcall LBDownAt (
        /*[in]*/ long Flags,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z ) = 0;
      virtual HRESULT __stdcall LBUpAt (
        /*[in]*/ long Flags,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z ) = 0;
      virtual HRESULT __stdcall DragTo (
        /*[in]*/ long Flags,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z ) = 0;
      virtual HRESULT __stdcall SelectAt (
        /*[in]*/ long Flags,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z ) = 0;
      virtual HRESULT __stdcall CreateLineVB (
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ double Z1,
        /*[in]*/ double X2,
        /*[in]*/ double Y2,
        /*[in]*/ double Z2 ) = 0;
      virtual HRESULT __stdcall CreateLine (
        /*[in]*/ VARIANT P1,
        /*[in]*/ VARIANT P2,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateCenterLineVB (
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ double Z1,
        /*[in]*/ double X2,
        /*[in]*/ double Y2,
        /*[in]*/ double Z2 ) = 0;
      virtual HRESULT __stdcall CreateCenterLine (
        /*[in]*/ VARIANT P1,
        /*[in]*/ VARIANT P2,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateArcVB (
        /*[in]*/ double P1x,
        /*[in]*/ double P1y,
        /*[in]*/ double P1z,
        /*[in]*/ double P2x,
        /*[in]*/ double P2y,
        /*[in]*/ double P2z,
        /*[in]*/ double P3x,
        /*[in]*/ double P3y,
        /*[in]*/ double P3z,
        /*[in]*/ short Dir ) = 0;
      virtual HRESULT __stdcall CreateArc (
        /*[in]*/ VARIANT P1,
        /*[in]*/ VARIANT P2,
        /*[in]*/ VARIANT P3,
        /*[in]*/ short Dir,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateCircleVB (
        /*[in]*/ double P1x,
        /*[in]*/ double P1y,
        /*[in]*/ double P1z,
        /*[in]*/ double Radius ) = 0;
      virtual HRESULT __stdcall CreateCircleByRadius (
        /*[in]*/ VARIANT P1,
        /*[in]*/ double Radius,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetLines (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall SketchTrim (
        /*[in]*/ long Op,
        /*[in]*/ long SelEnd,
        /*[in]*/ double X,
        /*[in]*/ double Y ) = 0;
      virtual HRESULT __stdcall SketchOffsetEdges (
        /*[in]*/ double Val ) = 0;
      virtual HRESULT __stdcall SketchRectangle (
        /*[in]*/ double Val1,
        /*[in]*/ double Val2,
        /*[in]*/ double Z1,
        /*[in]*/ double Val3,
        /*[in]*/ double Val4,
        /*[in]*/ double Z2,
        /*[in]*/ VARIANT_BOOL Val5 ) = 0;
      virtual HRESULT __stdcall SketchPoint (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z ) = 0;
      virtual HRESULT __stdcall FeatureCut (
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2 ) = 0;
      virtual HRESULT __stdcall FeatureBoss (
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2 ) = 0;
      virtual HRESULT __stdcall SimpleHole (
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2 ) = 0;
      virtual HRESULT __stdcall FeatureLinearPattern (
        /*[in]*/ long Num1,
        /*[in]*/ double Spacing1,
        /*[in]*/ long Num2,
        /*[in]*/ double Spacing2,
        /*[in]*/ VARIANT_BOOL FlipDir1,
        /*[in]*/ VARIANT_BOOL FlipDir2,
        /*[in]*/ BSTR DName1,
        /*[in]*/ BSTR DName2 ) = 0;
      virtual HRESULT __stdcall NameView (
        /*[in]*/ BSTR VName ) = 0;
      virtual HRESULT __stdcall ShowNamedView (
        /*[in]*/ BSTR VName ) = 0;
      virtual HRESULT __stdcall CreatePlaneAtOffset (
        /*[in]*/ double Val,
        /*[in]*/ VARIANT_BOOL FlipDir ) = 0;
      virtual HRESULT __stdcall Toolbars (
        /*[in]*/ VARIANT_BOOL M,
        /*[in]*/ VARIANT_BOOL Vw,
        /*[in]*/ VARIANT_BOOL SkMain,
        /*[in]*/ VARIANT_BOOL Sk,
        /*[in]*/ VARIANT_BOOL Feat,
        /*[in]*/ VARIANT_BOOL Constr,
        /*[in]*/ VARIANT_BOOL Macro ) = 0;
      virtual HRESULT __stdcall CreatePlaneAtAngle (
        /*[in]*/ double Val,
        /*[in]*/ VARIANT_BOOL FlipDir ) = 0;
      virtual HRESULT __stdcall SetParamValue (
        /*[in]*/ double Val ) = 0;
      virtual HRESULT __stdcall AddRelation (
        /*[in]*/ BSTR RelStr ) = 0;
      virtual HRESULT __stdcall DeleteAllRelations ( ) = 0;
      virtual HRESULT __stdcall HoleWizard (
        /*[in]*/ double Depth,
        /*[in]*/ short EndType,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long HType,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ double D3,
        /*[in]*/ double D4,
        /*[in]*/ double D5,
        /*[in]*/ double D6,
        /*[in]*/ double D7,
        /*[in]*/ double D8,
        /*[in]*/ double D9,
        /*[in]*/ double D10,
        /*[in]*/ double D11,
        /*[in]*/ double D12 ) = 0;
      virtual HRESULT __stdcall SaveAs (
        /*[in]*/ BSTR NewName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ActivateSelectedFeature ( ) = 0;
      virtual HRESULT __stdcall SelectByName (
        /*[in]*/ long Flags,
        /*[in]*/ BSTR IdStr ) = 0;
      virtual HRESULT __stdcall SketchAddConstraints (
        /*[in]*/ BSTR IdStr ) = 0;
      virtual HRESULT __stdcall SketchConstraintsDel (
        /*[in]*/ long ConstrInd,
        /*[in]*/ BSTR IdStr ) = 0;
      virtual HRESULT __stdcall SketchConstraintsDelAll ( ) = 0;
      virtual HRESULT __stdcall Lock ( ) = 0;
      virtual HRESULT __stdcall UnLock ( ) = 0;
      virtual HRESULT __stdcall InsertFeatureShell (
        /*[in]*/ double Thickness,
        /*[in]*/ VARIANT_BOOL Outward ) = 0;
      virtual HRESULT __stdcall SketchFillet (
        /*[in]*/ double Rad ) = 0;
      virtual HRESULT __stdcall FeatureChamfer (
        /*[in]*/ double Width,
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL Flip ) = 0;
      virtual HRESULT __stdcall InsertMfDraft (
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL FlipDir,
        /*[in]*/ VARIANT_BOOL IsEdgeDraft,
        /*[in]*/ long PropType ) = 0;
      virtual HRESULT __stdcall ParentChildRelationship ( ) = 0;
      virtual HRESULT __stdcall SketchSpline (
        /*[in]*/ long MorePts,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z ) = 0;
      virtual HRESULT __stdcall SelectSketchPoint (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ long Incidence ) = 0;
      virtual HRESULT __stdcall SelectSketchLine (
        /*[in]*/ double X0,
        /*[in]*/ double Y0,
        /*[in]*/ long Inc0,
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ long Inc1 ) = 0;
      virtual HRESULT __stdcall SelectSketchArc (
        /*[in]*/ double X0,
        /*[in]*/ double Y0,
        /*[in]*/ long Inc0,
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ long Inc1,
        /*[in]*/ double XC,
        /*[in]*/ double YC,
        /*[in]*/ long IncC,
        /*[in]*/ long RotDir ) = 0;
      virtual HRESULT __stdcall SelectSketchSpline (
        /*[in]*/ long Size,
        /*[in]*/ double X0,
        /*[in]*/ double Y0,
        /*[in]*/ long Inc0,
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ long Inc1,
        /*[in]*/ double XC,
        /*[in]*/ double YC,
        /*[in]*/ long IncC ) = 0;
      virtual HRESULT __stdcall CreateTangentArc (
        /*[in]*/ double P1x,
        /*[in]*/ double P1y,
        /*[in]*/ double P1z,
        /*[in]*/ double P2x,
        /*[in]*/ double P2y,
        /*[in]*/ double P2z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Create3PointArc (
        /*[in]*/ double P1x,
        /*[in]*/ double P1y,
        /*[in]*/ double P1z,
        /*[in]*/ double P2x,
        /*[in]*/ double P2y,
        /*[in]*/ double P2z,
        /*[in]*/ double P3x,
        /*[in]*/ double P3y,
        /*[in]*/ double P3z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateArcByCenter (
        /*[in]*/ double P1x,
        /*[in]*/ double P1y,
        /*[in]*/ double P1z,
        /*[in]*/ double P2x,
        /*[in]*/ double P2y,
        /*[in]*/ double P2z,
        /*[in]*/ double P3x,
        /*[in]*/ double P3y,
        /*[in]*/ double P3z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateCircle (
        /*[in]*/ double P1x,
        /*[in]*/ double P1y,
        /*[in]*/ double P1z,
        /*[in]*/ double P2x,
        /*[in]*/ double P2y,
        /*[in]*/ double P2z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddDimension (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddHorizontalDimension (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddVerticalDimension (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SelectSketchItem (
        /*[in]*/ long SelOpt,
        /*[in]*/ BSTR Name,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ClearSelection ( ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ BSTR SelID,
        /*[in]*/ BSTR SelParams,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z ) = 0;
      virtual HRESULT __stdcall AndSelect (
        /*[in]*/ BSTR SelID,
        /*[in]*/ BSTR SelParams,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z ) = 0;
      virtual HRESULT __stdcall CreatePoint (
        /*[in]*/ double PointX,
        /*[in]*/ double PointY,
        /*[in]*/ double PointZ,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateLineDB (
        /*[in]*/ double Sx,
        /*[in]*/ double Sy,
        /*[in]*/ double Sz,
        /*[in]*/ double Ex,
        /*[in]*/ double Ey,
        /*[in]*/ double Ez,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateArcDB (
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ double Z1,
        /*[in]*/ double X2,
        /*[in]*/ double Y2,
        /*[in]*/ double Z2,
        /*[in]*/ double X3,
        /*[in]*/ double Y3,
        /*[in]*/ double Z3,
        /*[in]*/ short Dir,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateCircleDB (
        /*[in]*/ double Cx,
        /*[in]*/ double Cy,
        /*[in]*/ double Cz,
        /*[in]*/ double Radius,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreatePointDB (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetTitle (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetPathName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetType (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall InsertObject ( ) = 0;
      virtual HRESULT __stdcall EditClearAll ( ) = 0;
      virtual HRESULT __stdcall EditCopy ( ) = 0;
      virtual HRESULT __stdcall EditCut ( ) = 0;
      virtual HRESULT __stdcall ObjectDisplayContent ( ) = 0;
      virtual HRESULT __stdcall ObjectDisplayAsIcon ( ) = 0;
      virtual HRESULT __stdcall ObjectResetsize ( ) = 0;
      virtual HRESULT __stdcall WindowRedraw ( ) = 0;
      virtual HRESULT __stdcall Dummy3 ( ) = 0;
      virtual HRESULT __stdcall SetPickMode ( ) = 0;
      virtual HRESULT __stdcall ViewRotateminusx ( ) = 0;
      virtual HRESULT __stdcall ViewRotateminusy ( ) = 0;
      virtual HRESULT __stdcall ViewRotateminusz ( ) = 0;
      virtual HRESULT __stdcall ViewRotateplusx ( ) = 0;
      virtual HRESULT __stdcall ViewRotateplusy ( ) = 0;
      virtual HRESULT __stdcall ViewRotateplusz ( ) = 0;
      virtual HRESULT __stdcall ViewTranslateminusx ( ) = 0;
      virtual HRESULT __stdcall ViewTranslateminusy ( ) = 0;
      virtual HRESULT __stdcall ViewTranslateplusx ( ) = 0;
      virtual HRESULT __stdcall ViewTranslateplusy ( ) = 0;
      virtual HRESULT __stdcall ViewRotXMinusNinety ( ) = 0;
      virtual HRESULT __stdcall ViewRotYMinusNinety ( ) = 0;
      virtual HRESULT __stdcall ViewRotYPlusNinety ( ) = 0;
      virtual HRESULT __stdcall ViewZoomin ( ) = 0;
      virtual HRESULT __stdcall ViewZoomout ( ) = 0;
      virtual HRESULT __stdcall ViewDisplayHiddenremoved ( ) = 0;
      virtual HRESULT __stdcall ViewDisplayWireframe ( ) = 0;
      virtual HRESULT __stdcall ViewDisplayShaded ( ) = 0;
      virtual HRESULT __stdcall ViewRwShading ( ) = 0;
      virtual HRESULT __stdcall ViewOglShading ( ) = 0;
      virtual HRESULT __stdcall ViewZoomtofit ( ) = 0;
      virtual HRESULT __stdcall ViewRotate ( ) = 0;
      virtual HRESULT __stdcall ViewTranslate ( ) = 0;
      virtual HRESULT __stdcall ViewZoomto ( ) = 0;
      virtual HRESULT __stdcall ViewDisplayHiddengreyed ( ) = 0;
      virtual HRESULT __stdcall ViewDisplayFaceted ( ) = 0;
      virtual HRESULT __stdcall ViewConstraint ( ) = 0;
      virtual HRESULT __stdcall UserFavors ( ) = 0;
      virtual HRESULT __stdcall FeatureCirPattern (
        /*[in]*/ long Num,
        /*[in]*/ double Spacing,
        /*[in]*/ VARIANT_BOOL FlipDir,
        /*[in]*/ BSTR DName ) = 0;
      virtual HRESULT __stdcall EditSketch ( ) = 0;
      virtual HRESULT __stdcall FeatEdit ( ) = 0;
      virtual HRESULT __stdcall FeatEditDef ( ) = 0;
      virtual HRESULT __stdcall InsertPoint ( ) = 0;
      virtual HRESULT __stdcall InsertFamilyTableNew ( ) = 0;
      virtual HRESULT __stdcall Dummy1 ( ) = 0;
      virtual HRESULT __stdcall InsertFamilyTableEdit ( ) = 0;
      virtual HRESULT __stdcall Dummy2 ( ) = 0;
      virtual HRESULT __stdcall ToolsMacro ( ) = 0;
      virtual HRESULT __stdcall ToolsGrid ( ) = 0;
      virtual HRESULT __stdcall SketchCenterline ( ) = 0;
      virtual HRESULT __stdcall SketchAlign ( ) = 0;
      virtual HRESULT __stdcall SketchArc ( ) = 0;
      virtual HRESULT __stdcall SketchTangentArc ( ) = 0;
      virtual HRESULT __stdcall SketchCircle ( ) = 0;
      virtual HRESULT __stdcall SketchUndo ( ) = 0;
      virtual HRESULT __stdcall UserPreferences ( ) = 0;
      virtual HRESULT __stdcall Lights ( ) = 0;
      virtual HRESULT __stdcall SketchConstrainCoincident ( ) = 0;
      virtual HRESULT __stdcall SketchConstrainConcentric ( ) = 0;
      virtual HRESULT __stdcall SketchConstrainPerp ( ) = 0;
      virtual HRESULT __stdcall SketchConstrainTangent ( ) = 0;
      virtual HRESULT __stdcall SketchConstrainParallel ( ) = 0;
      virtual HRESULT __stdcall SketchUseEdge ( ) = 0;
      virtual HRESULT __stdcall SketchUseEdgeCtrline ( ) = 0;
      virtual HRESULT __stdcall SketchMirror ( ) = 0;
      virtual HRESULT __stdcall Save ( ) = 0;
      virtual HRESULT __stdcall Close ( ) = 0;
      virtual HRESULT __stdcall ViewDispRefaxes ( ) = 0;
      virtual HRESULT __stdcall ViewDispRefplanes ( ) = 0;
      virtual HRESULT __stdcall InsertSketch ( ) = 0;
      virtual HRESULT __stdcall InsertProtrusionSwept (
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ VARIANT_BOOL Alignment,
        /*[in]*/ VARIANT_BOOL KeepNormalConstant ) = 0;
      virtual HRESULT __stdcall InsertProtrusionBlend (
        /*[in]*/ VARIANT_BOOL Closed ) = 0;
      virtual HRESULT __stdcall ToolsMassProps ( ) = 0;
      virtual HRESULT __stdcall ShowPropertySheet ( ) = 0;
      virtual HRESULT __stdcall BlankRefGeom ( ) = 0;
      virtual HRESULT __stdcall UnBlankRefGeom ( ) = 0;
      virtual HRESULT __stdcall EditDelete ( ) = 0;
      virtual HRESULT __stdcall InsertProjectedSketch ( ) = 0;
      virtual HRESULT __stdcall CreatePlaneFixed (
        /*[in]*/ VARIANT P1,
        /*[in]*/ VARIANT P2,
        /*[in]*/ VARIANT P3,
        /*[in]*/ VARIANT_BOOL UseGlobal,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Dummy5 ( ) = 0;
      virtual HRESULT __stdcall Dummy6 ( ) = 0;
      virtual HRESULT __stdcall DebugCheckBody ( ) = 0;
      virtual HRESULT __stdcall Dummy8 ( ) = 0;
      virtual HRESULT __stdcall DimPreferences ( ) = 0;
      virtual HRESULT __stdcall UnblankSketch ( ) = 0;
      virtual HRESULT __stdcall EditSketchOrSingleSketchFeature ( ) = 0;
      virtual HRESULT __stdcall DebugCheckIgesGeom ( ) = 0;
      virtual HRESULT __stdcall BlankSketch ( ) = 0;
      virtual HRESULT __stdcall GetDefaultTextHeight (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IsActive (
        /*[in]*/ BSTR CompStr,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateEllipse (
        /*[in]*/ VARIANT Center,
        /*[in]*/ VARIANT Major,
        /*[in]*/ VARIANT Minor,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateEllipseVB (
        /*[in]*/ double CenterX,
        /*[in]*/ double CenterY,
        /*[in]*/ double CenterZ,
        /*[in]*/ double MajorX,
        /*[in]*/ double MajorY,
        /*[in]*/ double MajorZ,
        /*[in]*/ double MinorX,
        /*[in]*/ double MinorY,
        /*[in]*/ double MinorZ,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateEllipticalArcByCenter (
        /*[in]*/ VARIANT Center,
        /*[in]*/ VARIANT Major,
        /*[in]*/ VARIANT Minor,
        /*[in]*/ VARIANT Start,
        /*[in]*/ VARIANT End,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateEllipticalArcByCenterVB (
        /*[in]*/ double CenterX,
        /*[in]*/ double CenterY,
        /*[in]*/ double CenterZ,
        /*[in]*/ double MajorX,
        /*[in]*/ double MajorY,
        /*[in]*/ double MajorZ,
        /*[in]*/ double MinorX,
        /*[in]*/ double MinorY,
        /*[in]*/ double MinorZ,
        /*[in]*/ double StartX,
        /*[in]*/ double StartY,
        /*[in]*/ double StartZ,
        /*[in]*/ double EndX,
        /*[in]*/ double EndY,
        /*[in]*/ double EndZ,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetActiveSketch (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetActiveSketch (
        /*[out,retval]*/ struct ISketch * * Retval ) = 0;
      virtual HRESULT __stdcall GetTessellationQuality (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetTessellationQuality (
        /*[in]*/ long QualityNum ) = 0;
      virtual HRESULT __stdcall Parameter (
        /*[in]*/ BSTR StringIn,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IParameter (
        /*[in]*/ BSTR StringIn,
        /*[out,retval]*/ struct IDimension * * Retval ) = 0;
      virtual HRESULT __stdcall SelectByID (
        /*[in]*/ BSTR SelID,
        /*[in]*/ BSTR SelParams,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AndSelectByID (
        /*[in]*/ BSTR SelID,
        /*[in]*/ BSTR SelParams,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Insert3DSketch ( ) = 0;
      virtual HRESULT __stdcall GetLightSourceName (
        /*[in]*/ long ID,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall AddLightSource (
        /*[in]*/ BSTR IdName,
        /*[in]*/ int LTyp,
        /*[in]*/ BSTR UserName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddLightSourceExtProperty (
        /*[in]*/ long ID,
        /*[in]*/ VARIANT PropertyExtension,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall ResetLightSourceExtProperty (
        /*[in]*/ long ID ) = 0;
      virtual HRESULT __stdcall DeleteLightSource (
        /*[in]*/ long ID ) = 0;
      virtual HRESULT __stdcall GetLightSourceExtProperty (
        /*[in]*/ long ID,
        /*[in]*/ long PropertyId,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall AddLightToScene (
        /*[in]*/ BSTR LpszNewValue,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall AddSceneExtProperty (
        /*[in]*/ VARIANT PropertyExtension,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall ResetSceneExtProperty ( ) = 0;
      virtual HRESULT __stdcall GetSceneExtProperty (
        /*[in]*/ long PropertyId,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall FileSummaryInfo ( ) = 0;
      virtual HRESULT __stdcall GetGridSettings (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall ToolsSketchTranslate ( ) = 0;
      virtual HRESULT __stdcall ToolsDistance ( ) = 0;
      virtual HRESULT __stdcall SkToolsAutoConstr ( ) = 0;
      virtual HRESULT __stdcall ToolsSketchScale ( ) = 0;
      virtual HRESULT __stdcall Paste ( ) = 0;
      virtual HRESULT __stdcall ToolsConfiguration ( ) = 0;
      virtual HRESULT __stdcall EntityProperties ( ) = 0;
      virtual HRESULT __stdcall GetArcCentersDisplayed (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetArcCentersDisplayed (
        /*[in]*/ VARIANT_BOOL Setting ) = 0;
      virtual HRESULT __stdcall AutoSolveToggle ( ) = 0;
      virtual HRESULT __stdcall Dummy7 ( ) = 0;
      virtual HRESULT __stdcall IGetLines (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetLineCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall ICreateEllipse (
        /*[in]*/ double * Center,
        /*[in]*/ double * Major,
        /*[in]*/ double * Minor ) = 0;
      virtual HRESULT __stdcall ICreateEllipticalArcByCenter (
        /*[in]*/ double * Center,
        /*[in]*/ double * Major,
        /*[in]*/ double * Minor,
        /*[in]*/ double * Start,
        /*[in]*/ double * End ) = 0;
      virtual HRESULT __stdcall get_ILightSourcePropertyValues (
        /*[in]*/ long ID,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_ILightSourcePropertyValues (
        /*[in]*/ long ID,
        /*[in]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall InsertCutSwept (
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ VARIANT_BOOL Alignment,
        /*[in]*/ VARIANT_BOOL KeepNormalConstant ) = 0;
      virtual HRESULT __stdcall InsertCutBlend (
        /*[in]*/ VARIANT_BOOL Closed ) = 0;
      virtual HRESULT __stdcall InsertHelix (
        /*[in]*/ VARIANT_BOOL Reversed,
        /*[in]*/ VARIANT_BOOL Clockwised,
        /*[in]*/ VARIANT_BOOL Tapered,
        /*[in]*/ VARIANT_BOOL Outward,
        /*[in]*/ long Helixdef,
        /*[in]*/ double Height,
        /*[in]*/ double Pitch,
        /*[in]*/ double Revolution,
        /*[in]*/ double TaperAngle,
        /*[in]*/ double Startangle ) = 0;
      virtual HRESULT __stdcall ICreateLine (
        /*[in]*/ double * P1,
        /*[in]*/ double * P2 ) = 0;
      virtual HRESULT __stdcall ICreateCenterLine (
        /*[in]*/ double * P1,
        /*[in]*/ double * P2 ) = 0;
      virtual HRESULT __stdcall ICreateArc (
        /*[in]*/ double * P1,
        /*[in]*/ double * P2,
        /*[in]*/ double * P3,
        /*[in]*/ short Dir ) = 0;
      virtual HRESULT __stdcall ICreateCircleByRadius (
        /*[in]*/ double * P1,
        /*[in]*/ double Radius ) = 0;
      virtual HRESULT __stdcall GraphicsRedraw ( ) = 0;
      virtual HRESULT __stdcall GetVisibilityOfConstructPlanes (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetDisplayWhenAdded (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetDisplayWhenAdded (
        /*[in]*/ VARIANT_BOOL Setting ) = 0;
      virtual HRESULT __stdcall GetAddToDB (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetAddToDB (
        /*[in]*/ VARIANT_BOOL Setting ) = 0;
      virtual HRESULT __stdcall DeSelectByID (
        /*[in]*/ BSTR SelID,
        /*[in]*/ BSTR SelParams,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall PrintDirect ( ) = 0;
      virtual HRESULT __stdcall PrintPreview ( ) = 0;
      virtual HRESULT __stdcall Quit ( ) = 0;
      virtual HRESULT __stdcall CreatePlaneThru3Points ( ) = 0;
      virtual HRESULT __stdcall ViewRotXPlusNinety ( ) = 0;
      virtual HRESULT __stdcall GetUnits (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall SetAngularUnits (
        /*[in]*/ short UType,
        /*[in]*/ short FractBase,
        /*[in]*/ short FractDenom,
        /*[in]*/ short SigDigits ) = 0;
      virtual HRESULT __stdcall GetAngularUnits (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetUnits (
        /*[out,retval]*/ short * Retval ) = 0;
      virtual HRESULT __stdcall ISetAngularUnits (
        /*[in]*/ short UType,
        /*[in]*/ short FractBase,
        /*[in]*/ short FractDenom,
        /*[in]*/ short SigDigits ) = 0;
      virtual HRESULT __stdcall IGetAngularUnits (
        /*[out,retval]*/ short * Retval ) = 0;
      virtual HRESULT __stdcall ShowConfiguration (
        /*[in]*/ BSTR ConfigurationName ) = 0;
      virtual HRESULT __stdcall ResetConfiguration ( ) = 0;
      virtual HRESULT __stdcall AddConfiguration (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR Comment,
        /*[in]*/ BSTR AlternateName,
        /*[in]*/ VARIANT_BOOL SuppressByDefault,
        /*[in]*/ VARIANT_BOOL HideByDefault,
        /*[in]*/ VARIANT_BOOL MinFeatureManager,
        /*[in]*/ VARIANT_BOOL InheritProperties,
        /*[in]*/ unsigned long Flags ) = 0;
      virtual HRESULT __stdcall DeleteConfiguration (
        /*[in]*/ BSTR ConfigurationName ) = 0;
      virtual HRESULT __stdcall EditConfiguration (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR NewName,
        /*[in]*/ BSTR Comment,
        /*[in]*/ BSTR AlternateName,
        /*[in]*/ VARIANT_BOOL SuppressByDefault,
        /*[in]*/ VARIANT_BOOL HideByDefault,
        /*[in]*/ VARIANT_BOOL MinFeatureManager,
        /*[in]*/ VARIANT_BOOL InheritProperties,
        /*[in]*/ unsigned long Flags ) = 0;
      virtual HRESULT __stdcall CreatePlanePerCurveAndPassPoint (
        /*[in]*/ VARIANT_BOOL OrigAtCurve ) = 0;
      virtual HRESULT __stdcall CreateFeatureMgrView (
        /*[in]*/ long * Bitmap,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall AddFeatureMgrView (
        /*[in]*/ long * Bitmap,
        /*[in]*/ long * AppView,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetStandardViewRotation (
        /*[in]*/ long ViewId,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetStandardViewRotation (
        /*[in]*/ long ViewId,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall FeatureExtruRefSurface (
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2 ) = 0;
      virtual HRESULT __stdcall IGet3rdPartyStorage (
        /*[in]*/ BSTR StringIn,
        /*[in]*/ VARIANT_BOOL IsStoring,
        /*[out,retval]*/ IUnknown * * Retval ) = 0;
      virtual HRESULT __stdcall DeleteFeatureMgrView (
        /*[in]*/ long * AppView ) = 0;
      virtual HRESULT __stdcall GetMassProperties (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetMassProperties (
        /*[in]*/ double * MPropsData,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetLightSourceCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetLightSourceIdFromName (
        /*[in]*/ BSTR LightName,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetNextSelectionGroupId (
        /*[in]*/ long ID ) = 0;
      virtual HRESULT __stdcall ISetNextSelectionGroupId (
        /*[in]*/ long ID ) = 0;
      virtual HRESULT __stdcall InsertMidSurfaceExt (
        /*[in]*/ double Placement,
        /*[in]*/ VARIANT_BOOL KnitFlag,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IInsertMidSurfaceExt (
        /*[in]*/ double Placement,
        /*[in]*/ VARIANT_BOOL KnitFlag,
        /*[out,retval]*/ struct IMidSurface2 * * Retval ) = 0;
      virtual HRESULT __stdcall ICreatePlaneFixed (
        /*[in]*/ double * P1,
        /*[in]*/ double * P2,
        /*[in]*/ double * P3,
        /*[in]*/ VARIANT_BOOL UseGlobal ) = 0;
      virtual HRESULT __stdcall SelectByMark (
        /*[in]*/ BSTR SelID,
        /*[in]*/ BSTR SelParams,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in]*/ long Mark,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AndSelectByMark (
        /*[in]*/ BSTR SelID,
        /*[in]*/ BSTR SelParams,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in]*/ long Mark,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetDependencies (
        /*[in]*/ long Traverseflag,
        /*[in]*/ long Searchflag,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetDependencies (
        /*[in]*/ long Traverseflag,
        /*[in]*/ long Searchflag,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetNumDependencies (
        /*[in]*/ long Traverseflag,
        /*[in]*/ long Searchflag,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IGetNumDependencies (
        /*[in]*/ long Traverseflag,
        /*[in]*/ long Searchflag,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall FirstFeature (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IFirstFeature (
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall UnderiveSketch ( ) = 0;
      virtual HRESULT __stdcall DeriveSketch ( ) = 0;
      virtual HRESULT __stdcall IsExploded (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DeleteSelection (
        /*[in]*/ VARIANT_BOOL ConfirmFlag,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DeleteNamedView (
        /*[in]*/ BSTR ViewName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetLightSourceName (
        /*[in]*/ long ID,
        /*[in]*/ BSTR NewName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Insert3DSplineCurve (
        /*[in]*/ VARIANT_BOOL CurveClosed ) = 0;
      virtual HRESULT __stdcall SetLightSourcePropertyValuesVB (
        /*[in]*/ BSTR IdName,
        /*[in]*/ int LType,
        /*[in]*/ double Diff,
        /*[in]*/ long RgbColor,
        /*[in]*/ double Dist,
        /*[in]*/ double DirX,
        /*[in]*/ double DirY,
        /*[in]*/ double DirZ,
        /*[in]*/ double SpotDirX,
        /*[in]*/ double SpotDirY,
        /*[in]*/ double SpotDirZ,
        /*[in]*/ double SpotAngle,
        /*[in]*/ double FallOff0,
        /*[in]*/ double FallOff1,
        /*[in]*/ double FallOff2,
        /*[in]*/ double Ambient,
        /*[in]*/ double Specular,
        /*[in]*/ double SpotExponent,
        /*[in]*/ VARIANT_BOOL BDisable,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ICreateFeatureMgrView (
        /*[in]*/ long * Bitmap,
        /*[out,retval]*/ struct IFeatMgrView * * Retval ) = 0;
      virtual HRESULT __stdcall SelectedEdgeProperties (
        /*[in]*/ BSTR EdgeName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SelectedFaceProperties (
        /*[in]*/ long RgbColor,
        /*[in]*/ double Ambient,
        /*[in]*/ double Diffuse,
        /*[in]*/ double Specular,
        /*[in]*/ double Shininess,
        /*[in]*/ double Transparency,
        /*[in]*/ double Emission,
        /*[in]*/ VARIANT_BOOL UsePartProps,
        /*[in]*/ BSTR FaceName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SelectedFeatureProperties (
        /*[in]*/ long RgbColor,
        /*[in]*/ double Ambient,
        /*[in]*/ double Diffuse,
        /*[in]*/ double Specular,
        /*[in]*/ double Shininess,
        /*[in]*/ double Transparency,
        /*[in]*/ double Emission,
        /*[in]*/ VARIANT_BOOL UsePartProps,
        /*[in]*/ VARIANT_BOOL Suppressed,
        /*[in]*/ BSTR FeatureName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertSplitLineSil ( ) = 0;
      virtual HRESULT __stdcall InsertSplitLineProject (
        /*[in]*/ VARIANT_BOOL IsDirectional,
        /*[in]*/ VARIANT_BOOL FlipDir ) = 0;
      virtual HRESULT __stdcall InsertRib (
        /*[in]*/ VARIANT_BOOL Is2Sided,
        /*[in]*/ VARIANT_BOOL ReverseThicknessDir,
        /*[in]*/ double Thickness,
        /*[in]*/ long ReferenceEdgeIndex,
        /*[in]*/ VARIANT_BOOL ReverseMaterialDir,
        /*[in]*/ VARIANT_BOOL IsDrafted,
        /*[in]*/ VARIANT_BOOL DraftOutward,
        /*[in]*/ double DraftAngle ) = 0;
      virtual HRESULT __stdcall AddRadialDimension (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddDiameterDimension (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetModelViewNames (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetModelViewNames (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetModelViewCount (
        /*[out,retval]*/ int * Retval ) = 0;
      virtual HRESULT __stdcall GetUserPreferenceDoubleValue (
        /*[in]*/ long UserPreferenceValue,
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall SetUserPreferenceDoubleValue (
        /*[in]*/ long UserPreferenceValue,
        /*[in]*/ double Value,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ViewDisplayCurvature ( ) = 0;
      virtual HRESULT __stdcall Scale ( ) = 0;
      virtual HRESULT __stdcall AddIns ( ) = 0;
      virtual HRESULT __stdcall InsertCurveFile (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertCurveFileBegin ( ) = 0;
      virtual HRESULT __stdcall InsertCurveFilePoint (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertCurveFileEnd (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ChangeSketchPlane (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ViewOrientationUndo ( ) = 0;
      virtual HRESULT __stdcall PrintOut (
        /*[in]*/ long FromPage,
        /*[in]*/ long ToPage,
        /*[in]*/ long NumCopies,
        /*[in]*/ VARIANT_BOOL Collate,
        /*[in]*/ BSTR Printer,
        /*[in]*/ double Scale,
        /*[in]*/ VARIANT_BOOL PrintToFile ) = 0;
      virtual HRESULT __stdcall SketchOffsetEntities (
        /*[in]*/ double Offset,
        /*[in]*/ VARIANT_BOOL Flip ) = 0;
      virtual HRESULT __stdcall InsertLibraryFeature (
        /*[in]*/ BSTR LibFeatPartNameIn ) = 0;
      virtual HRESULT __stdcall SketchModifyTranslate (
        /*[in]*/ double StartX,
        /*[in]*/ double StartY,
        /*[in]*/ double EndX,
        /*[in]*/ double EndY ) = 0;
      virtual HRESULT __stdcall SketchModifyRotate (
        /*[in]*/ double CenterX,
        /*[in]*/ double CenterY,
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall SketchModifyFlip (
        /*[in]*/ int AxisFlag ) = 0;
      virtual HRESULT __stdcall SketchModifyScale (
        /*[in]*/ double ScaleFactor,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetActiveConfiguration (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetActiveConfiguration (
        /*[out,retval]*/ struct IConfiguration * * Retval ) = 0;
      virtual HRESULT __stdcall GetUserPreferenceToggle (
        /*[in]*/ long UserPreferenceToggle,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetUserPreferenceToggle (
        /*[in]*/ long UserPreferenceValue,
        /*[in]*/ VARIANT_BOOL OnFlag,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertSweepRefSurface (
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ short TwistCtrlOption,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational ) = 0;
      virtual HRESULT __stdcall InsertLoftRefSurface (
        /*[in]*/ VARIANT_BOOL Closed,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational ) = 0;
      virtual HRESULT __stdcall InsertProtrusionSwept2 (
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ VARIANT_BOOL Alignment,
        /*[in]*/ short TwistCtrlOption,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational ) = 0;
      virtual HRESULT __stdcall InsertProtrusionBlend2 (
        /*[in]*/ VARIANT_BOOL Closed,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational ) = 0;
      virtual HRESULT __stdcall InsertCutSwept2 (
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ VARIANT_BOOL Alignment,
        /*[in]*/ short TwistCtrlOption,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational ) = 0;
      virtual HRESULT __stdcall InsertCutBlend2 (
        /*[in]*/ VARIANT_BOOL Closed,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational ) = 0;
      virtual HRESULT __stdcall IsEditingSelf (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ShowNamedView2 (
        /*[in]*/ BSTR VName,
        /*[in]*/ long ViewId ) = 0;
      virtual HRESULT __stdcall InsertDome (
        /*[in]*/ double Height,
        /*[in]*/ VARIANT_BOOL ReverseDir,
        /*[in]*/ VARIANT_BOOL DoEllipticSurface ) = 0;
      virtual HRESULT __stdcall get_MaterialUserName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_MaterialUserName (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall get_MaterialIdName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_MaterialIdName (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall get_MaterialPropertyValues (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall put_MaterialPropertyValues (
        /*[in]*/ VARIANT Retval ) = 0;
      virtual HRESULT __stdcall get_IMaterialPropertyValues (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_IMaterialPropertyValues (
        /*[in]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall AddPropertyExtension (
        /*[in]*/ VARIANT PropertyExtension,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetPropertyExtension (
        /*[in]*/ long ID,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall ResetPropertyExtension ( ) = 0;
      virtual HRESULT __stdcall GetUpdateStamp (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall ViewZoomTo2 (
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ double Z1,
        /*[in]*/ double X2,
        /*[in]*/ double Y2,
        /*[in]*/ double Z2 ) = 0;
      virtual HRESULT __stdcall ScreenRotate ( ) = 0;
      virtual HRESULT __stdcall get_PrintSetup (
        /*[in]*/ long SetupType,
        /*[out,retval]*/ short * SetupValue ) = 0;
      virtual HRESULT __stdcall put_PrintSetup (
        /*[in]*/ long SetupType,
        /*[in]*/ short SetupValue ) = 0;
      virtual HRESULT __stdcall GraphicsRedraw2 ( ) = 0;
      virtual HRESULT __stdcall InsertCosmeticThread (
        /*[in]*/ short Type,
        /*[in]*/ double Depth,
        /*[in]*/ double Length,
        /*[in]*/ BSTR Note ) = 0;
      virtual HRESULT __stdcall HideCosmeticThread ( ) = 0;
      virtual HRESULT __stdcall ShowCosmeticThread ( ) = 0;
      virtual HRESULT __stdcall SimpleHole2 (
        /*[in]*/ double Dia,
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2 ) = 0;
      virtual HRESULT __stdcall IRelease3rdPartyStorage (
        /*[in]*/ BSTR StringIn ) = 0;
      virtual HRESULT __stdcall FeatureRevolve2 (
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL ReverseDir,
        /*[in]*/ double Angle2,
        /*[in]*/ long RevType,
        /*[in]*/ long Options,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall FeatureRevolveCut2 (
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL ReverseDir,
        /*[in]*/ double Angle2,
        /*[in]*/ long RevType,
        /*[in]*/ long Options,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetSaveFlag ( ) = 0;
      virtual HRESULT __stdcall GetExternalReferenceName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SelectByRay (
        /*[in]*/ VARIANT DoubleInfoIn,
        /*[in]*/ long TypeWanted,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ISelectByRay (
        /*[in]*/ double * PointIn,
        /*[in]*/ double * VectorIn,
        /*[in]*/ double RadiusIn,
        /*[in]*/ long TypeWanted,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetSceneBkgDIB (
        /*[in]*/ long L_dib ) = 0;
      virtual HRESULT __stdcall get_SceneBkgImageFileName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_SceneBkgImageFileName (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall InsertBkgImage (
        /*[in]*/ BSTR NewName ) = 0;
      virtual HRESULT __stdcall DeleteBkgImage ( ) = 0;
      virtual HRESULT __stdcall InsertSplinePoint (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z ) = 0;
      virtual HRESULT __stdcall InsertLoftRefSurface2 (
        /*[in]*/ VARIANT_BOOL Closed,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational,
        /*[in]*/ double TessToleranceFactor,
        /*[in]*/ short StartMatchingType,
        /*[in]*/ short EndMatchingType ) = 0;
      virtual HRESULT __stdcall InsertProtrusionBlend3 (
        /*[in]*/ VARIANT_BOOL Closed,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational,
        /*[in]*/ double TessToleranceFactor,
        /*[in]*/ short StartMatchingType,
        /*[in]*/ short EndMatchingType ) = 0;
      virtual HRESULT __stdcall InsertCutBlend3 (
        /*[in]*/ VARIANT_BOOL Closed,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational,
        /*[in]*/ double TessToleranceFactor,
        /*[in]*/ short StartMatchingType,
        /*[in]*/ short EndMatchingType ) = 0;
      virtual HRESULT __stdcall AlignDimensions ( ) = 0;
      virtual HRESULT __stdcall BreakDimensionAlignment ( ) = 0;
      virtual HRESULT __stdcall SketchFillet1 (
        /*[in]*/ double Rad ) = 0;
      virtual HRESULT __stdcall FeatureChamferType (
        /*[in]*/ short ChamferType,
        /*[in]*/ double Width,
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ double OtherDist,
        /*[in]*/ double VertexChamDist1,
        /*[in]*/ double VertexChamDist2,
        /*[in]*/ double VertexChamDist3 ) = 0;
      virtual HRESULT __stdcall FeatureCutThin (
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2,
        /*[in]*/ double Thk1,
        /*[in]*/ double Thk2,
        /*[in]*/ double EndThk,
        /*[in]*/ long RevThinDir,
        /*[in]*/ long CapEnds,
        /*[in]*/ VARIANT_BOOL AddBends,
        /*[in]*/ double BendRad ) = 0;
      virtual HRESULT __stdcall FeatureBossThin (
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2,
        /*[in]*/ double Thk1,
        /*[in]*/ double Thk2,
        /*[in]*/ double EndThk,
        /*[in]*/ long RevThinDir,
        /*[in]*/ long CapEnds,
        /*[in]*/ VARIANT_BOOL AddBends,
        /*[in]*/ double BendRad ) = 0;
      virtual HRESULT __stdcall InsertDatumTargetSymbol (
        /*[in]*/ BSTR Datum1,
        /*[in]*/ BSTR Datum2,
        /*[in]*/ BSTR Datum3,
        /*[in]*/ short AreaStyle,
        /*[in]*/ VARIANT_BOOL AreaOutside,
        /*[in]*/ double Value1,
        /*[in]*/ double Value2,
        /*[in]*/ BSTR ValueStr1,
        /*[in]*/ BSTR ValueStr2,
        /*[in]*/ VARIANT_BOOL ArrowsSmart,
        /*[in]*/ short ArrowStyle,
        /*[in]*/ short LeaderLineStyle,
        /*[in]*/ VARIANT_BOOL LeaderBent,
        /*[in]*/ VARIANT_BOOL ShowArea,
        /*[in]*/ VARIANT_BOOL ShowSymbol,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall EditDatumTargetSymbol (
        /*[in]*/ BSTR Datum1,
        /*[in]*/ BSTR Datum2,
        /*[in]*/ BSTR Datum3,
        /*[in]*/ short AreaStyle,
        /*[in]*/ VARIANT_BOOL AreaOutside,
        /*[in]*/ double Value1,
        /*[in]*/ double Value2,
        /*[in]*/ BSTR ValueStr1,
        /*[in]*/ BSTR ValueStr2,
        /*[in]*/ VARIANT_BOOL ArrowsSmart,
        /*[in]*/ short ArrowStyle,
        /*[in]*/ short LeaderLineStyle,
        /*[in]*/ VARIANT_BOOL LeaderBent,
        /*[in]*/ VARIANT_BOOL ShowArea,
        /*[in]*/ VARIANT_BOOL ShowSymbol,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertBOMBalloon ( ) = 0;
      virtual HRESULT __stdcall FeatureReferenceCurve (
        /*[in]*/ long NumOfCurves,
        /*[in]*/ VARIANT BaseCurves,
        /*[in]*/ VARIANT_BOOL Merge,
        /*[in]*/ BSTR FromFileName,
        /*[out]*/ long * ErrorCode,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IFeatureReferenceCurve (
        /*[in]*/ long NumOfCurves,
        /*[in]*/ struct ICurve * * BaseCurves,
        /*[in]*/ VARIANT_BOOL Merge,
        /*[in]*/ BSTR FromFileName,
        /*[out]*/ long * ErrorCode,
        /*[out,retval]*/ struct IReferenceCurve * * Retval ) = 0;
      virtual HRESULT __stdcall FontBold (
        /*[in]*/ VARIANT_BOOL Bold ) = 0;
      virtual HRESULT __stdcall FontItalic (
        /*[in]*/ VARIANT_BOOL Italic ) = 0;
      virtual HRESULT __stdcall FontUnderline (
        /*[in]*/ VARIANT_BOOL Underline ) = 0;
      virtual HRESULT __stdcall FontFace (
        /*[in]*/ BSTR Face ) = 0;
      virtual HRESULT __stdcall FontPoints (
        /*[in]*/ short Points ) = 0;
      virtual HRESULT __stdcall FontUnits (
        /*[in]*/ double Units ) = 0;
      virtual HRESULT __stdcall SketchSplineByEqnParams (
        /*[in]*/ VARIANT ParamsIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AlignParallelDimensions ( ) = 0;
      virtual HRESULT __stdcall SetBlockingState (
        /*[in]*/ long StateIn ) = 0;
      virtual HRESULT __stdcall ResetBlockingState ( ) = 0;
      virtual HRESULT __stdcall GetSceneBkgDIB (
        /*[out,retval]*/ long * L_dib ) = 0;
      virtual HRESULT __stdcall InsertHatchedFace ( ) = 0;
      virtual HRESULT __stdcall GetColorTable (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetColorTable (
        /*[out,retval]*/ struct IColorTable * * Retval ) = 0;
      virtual HRESULT __stdcall InsertSweepRefSurface2 (
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ short TwistCtrlOption,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational,
        /*[in]*/ short StartMatchingType,
        /*[in]*/ short EndMatchingType ) = 0;
      virtual HRESULT __stdcall InsertProtrusionSwept3 (
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ VARIANT_BOOL Alignment,
        /*[in]*/ short TwistCtrlOption,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational,
        /*[in]*/ short StartMatchingType,
        /*[in]*/ short EndMatchingType ) = 0;
      virtual HRESULT __stdcall InsertCutSwept3 (
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ VARIANT_BOOL Alignment,
        /*[in]*/ short TwistCtrlOption,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational,
        /*[in]*/ short StartMatchingType,
        /*[in]*/ short EndMatchingType ) = 0;
      virtual HRESULT __stdcall IsOpenedViewOnly (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsOpenedReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ViewZoomToSelection ( ) = 0;
      virtual HRESULT __stdcall FeatureBossThicken (
        /*[in]*/ double Thickness,
        /*[in]*/ long Direction,
        /*[in]*/ long FaceIndex ) = 0;
      virtual HRESULT __stdcall FeatureCutThicken (
        /*[in]*/ double Thickness,
        /*[in]*/ long Direction,
        /*[in]*/ long FaceIndex ) = 0;
      virtual HRESULT __stdcall InsertAxis (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall EditUndo (
        /*[in]*/ unsigned long NSteps ) = 0;
      virtual HRESULT __stdcall SelectMidpoint ( ) = 0;
      virtual HRESULT __stdcall ISketchSplineByEqnParams (
        /*[in]*/ int * PropArray,
        /*[in]*/ double * KnotsArray,
        /*[in]*/ double * CntrlPntCoordArray,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall VersionHistory (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IVersionHistory (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall IGetVersionHistoryCount (
        /*[out,retval]*/ int * Retval ) = 0;
      virtual HRESULT __stdcall Rebuild (
        /*[in]*/ long Options ) = 0;
      virtual HRESULT __stdcall InsertFeatureShellAddThickness (
        /*[in]*/ double Thickness ) = 0;
      virtual HRESULT __stdcall InsertOffsetSurface (
        /*[in]*/ double Thickness,
        /*[in]*/ VARIANT_BOOL Reverse ) = 0;
      virtual HRESULT __stdcall SimplifySpline (
        /*[in]*/ double ToleranceIn ) = 0;
      virtual HRESULT __stdcall get_SummaryInfo (
        /*[in]*/ long FieldId,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_SummaryInfo (
        /*[in]*/ long FieldId,
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall get_CustomInfo (
        /*[in]*/ BSTR FieldName,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_CustomInfo (
        /*[in]*/ BSTR FieldName,
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall GetCustomInfoCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetCustomInfoType (
        /*[in]*/ BSTR FieldName,
        /*[out,retval]*/ BSTR * Type ) = 0;
      virtual HRESULT __stdcall GetCustomInfoNames (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetCustomInfoNames (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall AddCustomInfo (
        /*[in]*/ BSTR FieldName,
        /*[in]*/ BSTR FieldType,
        /*[in]*/ BSTR FieldValue,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DeleteCustomInfo (
        /*[in]*/ BSTR FieldName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall PrintOut2 (
        /*[in]*/ long FromPage,
        /*[in]*/ long ToPage,
        /*[in]*/ long NumCopies,
        /*[in]*/ VARIANT_BOOL Collate,
        /*[in]*/ BSTR Printer,
        /*[in]*/ double Scale,
        /*[in]*/ VARIANT_BOOL PrintToFile,
        /*[in]*/ BSTR PtfName ) = 0;
      virtual HRESULT __stdcall SetReadOnlyState (
        /*[in]*/ VARIANT_BOOL SetReadOnly,
        /*[out,retval]*/ VARIANT_BOOL * Success ) = 0;
      virtual HRESULT __stdcall InsertFamilyTableOpen (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ VARIANT_BOOL * Ok ) = 0;
      virtual HRESULT __stdcall MultiSelectByRay (
        /*[in]*/ VARIANT DoubleInfoIn,
        /*[in]*/ long TypeWanted,
        /*[in]*/ VARIANT_BOOL Append,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IMultiSelectByRay (
        /*[in]*/ double * PointIn,
        /*[in]*/ double * VectorIn,
        /*[in]*/ double RadiusIn,
        /*[in]*/ long TypeWanted,
        /*[in]*/ VARIANT_BOOL Append,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertNewNote3 (
        /*[in]*/ BSTR UpperText,
        /*[in]*/ VARIANT_BOOL NoLeader,
        /*[in]*/ VARIANT_BOOL BentLeader,
        /*[in]*/ short ArrowStyle,
        /*[in]*/ short LeaderSide,
        /*[in]*/ double Angle,
        /*[in]*/ short BalloonStyle,
        /*[in]*/ short BalloonFit,
        /*[in]*/ VARIANT_BOOL SmartArrow ) = 0;
      virtual HRESULT __stdcall InsertWeldSymbol2 (
        /*[in]*/ BSTR Dim1,
        /*[in]*/ BSTR Symbol,
        /*[in]*/ BSTR Dim2,
        /*[in]*/ VARIANT_BOOL Symmetric,
        /*[in]*/ VARIANT_BOOL FieldWeld,
        /*[in]*/ VARIANT_BOOL ShowOtherSide,
        /*[in]*/ VARIANT_BOOL DashOnTop,
        /*[in]*/ VARIANT_BOOL Peripheral,
        /*[in]*/ VARIANT_BOOL HasProcess,
        /*[in]*/ BSTR ProcessValue ) = 0;
      virtual HRESULT __stdcall InsertSurfaceFinishSymbol2 (
        /*[in]*/ long SymType,
        /*[in]*/ long LeaderType,
        /*[in]*/ double LocX,
        /*[in]*/ double LocY,
        /*[in]*/ double LocZ,
        /*[in]*/ long LaySymbol,
        /*[in]*/ long ArrowType,
        /*[in]*/ BSTR MachAllowance,
        /*[in]*/ BSTR OtherVals,
        /*[in]*/ BSTR ProdMethod,
        /*[in]*/ BSTR SampleLen,
        /*[in]*/ BSTR MaxRoughness,
        /*[in]*/ BSTR MinRoughness,
        /*[in]*/ BSTR RoughnessSpacing,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SaveSilent (
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall SaveAsSilent (
        /*[in]*/ BSTR NewName,
        /*[in]*/ VARIANT_BOOL SaveAsCopy,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall AddCustomInfo2 (
        /*[in]*/ BSTR FieldName,
        /*[in]*/ long FieldType,
        /*[in]*/ BSTR FieldValue,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetCustomInfoType2 (
        /*[in]*/ BSTR FieldName,
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall InsertRefPoint (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall FeatureFillet2 (
        /*[in]*/ double R1,
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ VARIANT_BOOL Ftyp,
        /*[in]*/ VARIANT_BOOL VarRadTyp,
        /*[in]*/ long OverflowType,
        /*[in]*/ int NRadii,
        /*[in]*/ VARIANT Radii,
        /*[out,retval]*/ long * Res ) = 0;
      virtual HRESULT __stdcall IFeatureFillet2 (
        /*[in]*/ double R1,
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ VARIANT_BOOL Ftyp,
        /*[in]*/ VARIANT_BOOL VarRadTyp,
        /*[in]*/ long OverflowType,
        /*[in]*/ int NRadii,
        /*[in]*/ double * Radii,
        /*[out,retval]*/ long * Res ) = 0;
      virtual HRESULT __stdcall GetFirstAnnotation (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstAnnotation (
        /*[out,retval]*/ struct IAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall InsertCoordinateSystem (
        /*[in]*/ VARIANT_BOOL XFlippedIn,
        /*[in]*/ VARIANT_BOOL YFlippedIn,
        /*[in]*/ VARIANT_BOOL ZFlippedIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetToolbarVisibility (
        /*[in]*/ long Toolbar,
        /*[out,retval]*/ VARIANT_BOOL * Visibility ) = 0;
      virtual HRESULT __stdcall SetToolbarVisibility (
        /*[in]*/ long Toolbar,
        /*[in]*/ VARIANT_BOOL Visibility ) = 0;
      virtual HRESULT __stdcall ViewDispCoordinateSystems ( ) = 0;
      virtual HRESULT __stdcall ViewDispTempRefaxes ( ) = 0;
      virtual HRESULT __stdcall ViewDispRefPoints ( ) = 0;
      virtual HRESULT __stdcall ViewDispOrigins ( ) = 0;
      virtual HRESULT __stdcall GetCoordinateSystemXformByName (
        /*[in]*/ BSTR NameIn,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetCoordinateSystemXformByName (
        /*[in]*/ BSTR NameIn,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetCurrentCoordinateSystemName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall EnumModelViews (
        /*[out,retval]*/ struct IEnumModelViews * * Retval ) = 0;
      virtual HRESULT __stdcall InsertCompositeCurve (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SketchParabola (
        /*[in]*/ double Val1,
        /*[in]*/ double Val2,
        /*[in]*/ double Z1,
        /*[in]*/ double Val3,
        /*[in]*/ double Val4,
        /*[in]*/ double Z2,
        /*[in]*/ double Val5,
        /*[in]*/ double Val6,
        /*[in]*/ double Z3,
        /*[in]*/ double Val7,
        /*[in]*/ double Val8,
        /*[in]*/ double Z4 ) = 0;
      virtual HRESULT __stdcall InsertRadiateSurface (
        /*[in]*/ double Distance,
        /*[in]*/ VARIANT_BOOL FlipDir,
        /*[in]*/ VARIANT_BOOL TangentPropagate ) = 0;
      virtual HRESULT __stdcall InsertSewRefSurface ( ) = 0;
      virtual HRESULT __stdcall InsertShape (
        /*[in]*/ long PressureOn,
        /*[in]*/ long TangentsOn,
        /*[in]*/ double PressureGain,
        /*[in]*/ double TangentGain,
        /*[in]*/ double CurveSpringGain,
        /*[in]*/ double Alpha,
        /*[in]*/ double Beta,
        /*[in]*/ double Gamma,
        /*[in]*/ double Delta,
        /*[in]*/ long Degree,
        /*[in]*/ long Split,
        /*[in]*/ long Tuning,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall InsertMfDraft2 (
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL FlipDir,
        /*[in]*/ VARIANT_BOOL IsEdgeDraft,
        /*[in]*/ long PropType,
        /*[in]*/ VARIANT_BOOL StepDraft ) = 0;
      virtual HRESULT __stdcall GetConfigurationCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetConfigurationNames (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetConfigurationNames (
        /*[in,out]*/ long * Count,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall FeatureCut2 (
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2,
        /*[in]*/ long KeepPieceIndex ) = 0;
      virtual HRESULT __stdcall InsertCutSurface (
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ long KeepPieceIndex ) = 0;
      virtual HRESULT __stdcall GetDetailingDefaults (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetDetailingDefaults (
        /*[out,retval]*/ struct IDetailingDefaults * * Retval ) = 0;
      virtual HRESULT __stdcall ListExternalFileReferencesCount (
        /*[in]*/ VARIANT_BOOL UseSearchRules,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall ListExternalFileReferences (
        /*[in]*/ VARIANT_BOOL UseSearchRules,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IListExternalFileReferences (
        /*[in]*/ VARIANT_BOOL UseSearchRules,
        /*[in]*/ long NumRefs,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SketchSplineByEqnParams2 (
        /*[in]*/ VARIANT ParamsIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstModelView (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstModelView (
        /*[out,retval]*/ struct IModelView * * Retval ) = 0;
      virtual HRESULT __stdcall InsertPlanarRefSurface (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetNext (
        /*[out,retval]*/ IDispatch * * NextDoc ) = 0;
      virtual HRESULT __stdcall GetSaveFlag (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddCustomInfo3 (
        /*[in]*/ BSTR Configuration,
        /*[in]*/ BSTR FieldName,
        /*[in]*/ long FieldType,
        /*[in]*/ BSTR FieldValue,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_CustomInfo2 (
        /*[in]*/ BSTR Configuration,
        /*[in]*/ BSTR FieldName,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_CustomInfo2 (
        /*[in]*/ BSTR Configuration,
        /*[in]*/ BSTR FieldName,
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall DeleteCustomInfo2 (
        /*[in]*/ BSTR Configuration,
        /*[in]*/ BSTR FieldName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetCustomInfoCount2 (
        /*[in]*/ BSTR Configuration,
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetCustomInfoNames2 (
        /*[in]*/ BSTR Configuration,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetCustomInfoNames2 (
        /*[in]*/ BSTR Configuration,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetCustomInfoType3 (
        /*[in]*/ BSTR Configuration,
        /*[in]*/ BSTR FieldName,
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall GetConsiderLeadersAsLines (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetConsiderLeadersAsLines (
        /*[in]*/ VARIANT_BOOL LeadersAsLines,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertRevolvedRefSurface (
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL ReverseDir,
        /*[in]*/ double Angle2,
        /*[in]*/ int RevType ) = 0;
      virtual HRESULT __stdcall GetBendState (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetBendState (
        /*[in]*/ long BendState,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall get_ShowFeatureErrorDialog (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_ShowFeatureErrorDialog (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall ClearUndoList ( ) = 0;
      virtual HRESULT __stdcall GetFeatureManagerWidth (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetFeatureManagerWidth (
        /*[in]*/ long Width,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall InsertProjectedSketch2 (
        /*[in]*/ long Reverse,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IInsertProjectedSketch2 (
        /*[in]*/ long Reverse,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall GetFeatureCount (
        /*[out,retval]*/ long * Num ) = 0;
      virtual HRESULT __stdcall FeatureByPositionReverse (
        /*[in]*/ long Num,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IFeatureByPositionReverse (
        /*[in]*/ long Num,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall RayIntersections (
        /*[in]*/ VARIANT BodiesIn,
        /*[in]*/ VARIANT BasePointsIn,
        /*[in]*/ VARIANT VectorsIn,
        /*[in]*/ long Options,
        /*[in]*/ double HitRadius,
        /*[in]*/ double Offset,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IRayIntersections (
        /*[in]*/ struct IBody2 * * BodiesIn,
        /*[in]*/ long NumBodies,
        /*[in]*/ double * BasePointsIn,
        /*[in]*/ double * VectorsIn,
        /*[in]*/ long NumRays,
        /*[in]*/ long Options,
        /*[in]*/ double HitRadius,
        /*[in]*/ double Offset,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetRayIntersectionsPoints (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetRayIntersectionsPoints (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetRayIntersectionsTopology (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetRayIntersectionsTopology (
        /*[out,retval]*/ IUnknown * * Retval ) = 0;
      virtual HRESULT __stdcall EditSeedFeat ( ) = 0;
      virtual HRESULT __stdcall EditSuppress (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall EditUnsuppress (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall EditUnsuppressDependent (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall EditRollback (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Save2 (
        /*[in]*/ VARIANT_BOOL Silent,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SaveAs2 (
        /*[in]*/ BSTR NewName,
        /*[in]*/ long SaveAsVersion,
        /*[in]*/ VARIANT_BOOL SaveAsCopy,
        /*[in]*/ VARIANT_BOOL Silent,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetPopupMenuMode (
        /*[in]*/ int ModeIn ) = 0;
      virtual HRESULT __stdcall GetPopupMenuMode (
        /*[out,retval]*/ int * Retval ) = 0;
      virtual HRESULT __stdcall CloseFamilyTable ( ) = 0;
      virtual HRESULT __stdcall CreatePlaneAtSurface (
        /*[in]*/ int InterIndex,
        /*[in]*/ VARIANT_BOOL ProjOpt,
        /*[in]*/ VARIANT_BOOL ReverseDir,
        /*[in]*/ VARIANT_BOOL NormalPlane,
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall SketchOffset (
        /*[in]*/ double Offset,
        /*[in]*/ VARIANT_BOOL ContourMode ) = 0;
      virtual HRESULT __stdcall CreateLinearSketchStepAndRepeat (
        /*[in]*/ long NumX,
        /*[in]*/ long NumY,
        /*[in]*/ double SpacingX,
        /*[in]*/ double SpacingY,
        /*[in]*/ double AngleX,
        /*[in]*/ double AngleY,
        /*[in]*/ BSTR DeleteInstances,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetAmbientLightProperties (
        /*[in]*/ BSTR Name,
        /*[in]*/ double Ambient,
        /*[in]*/ double Diffuse,
        /*[in]*/ double Specular,
        /*[in]*/ long Colour,
        /*[in]*/ VARIANT_BOOL Enabled,
        /*[in]*/ VARIANT_BOOL Fixed,
        /*[out,retval]*/ VARIANT_BOOL * Ok ) = 0;
      virtual HRESULT __stdcall GetAmbientLightProperties (
        /*[in]*/ BSTR Name,
        /*[in]*/ double * Ambient,
        /*[in]*/ double * Diffuse,
        /*[in]*/ double * Specular,
        /*[in]*/ long * Colour,
        /*[in]*/ VARIANT_BOOL * Enabled,
        /*[in]*/ VARIANT_BOOL * Fixed,
        /*[out,retval]*/ VARIANT_BOOL * Ok ) = 0;
      virtual HRESULT __stdcall SetPointLightProperties (
        /*[in]*/ BSTR Name,
        /*[in]*/ double Ambient,
        /*[in]*/ double Diffuse,
        /*[in]*/ double Specular,
        /*[in]*/ long Colour,
        /*[in]*/ VARIANT_BOOL Enabled,
        /*[in]*/ VARIANT_BOOL Fixed,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Ok ) = 0;
      virtual HRESULT __stdcall GetPointLightProperties (
        /*[in]*/ BSTR Name,
        /*[in]*/ double * Ambient,
        /*[in]*/ double * Diffuse,
        /*[in]*/ double * Specular,
        /*[in]*/ long * Colour,
        /*[in]*/ VARIANT_BOOL * Enabled,
        /*[in]*/ VARIANT_BOOL * Fixed,
        /*[in]*/ double * X,
        /*[in]*/ double * Y,
        /*[in]*/ double * Z,
        /*[out,retval]*/ VARIANT_BOOL * Ok ) = 0;
      virtual HRESULT __stdcall SetDirectionLightProperties (
        /*[in]*/ BSTR Name,
        /*[in]*/ double Ambient,
        /*[in]*/ double Diffuse,
        /*[in]*/ double Specular,
        /*[in]*/ long Colour,
        /*[in]*/ VARIANT_BOOL Enabled,
        /*[in]*/ VARIANT_BOOL Fixed,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Ok ) = 0;
      virtual HRESULT __stdcall GetDirectionLightProperties (
        /*[in]*/ BSTR Name,
        /*[in]*/ double * Ambient,
        /*[in]*/ double * Diffuse,
        /*[in]*/ double * Specular,
        /*[in]*/ long * Colour,
        /*[in]*/ VARIANT_BOOL * Enabled,
        /*[in]*/ VARIANT_BOOL * Fixed,
        /*[in]*/ double * X,
        /*[in]*/ double * Y,
        /*[in]*/ double * Z,
        /*[out,retval]*/ VARIANT_BOOL * Ok ) = 0;
      virtual HRESULT __stdcall SetSpotlightProperties (
        /*[in]*/ BSTR Name,
        /*[in]*/ double Ambient,
        /*[in]*/ double Diffuse,
        /*[in]*/ double Specular,
        /*[in]*/ long Colour,
        /*[in]*/ VARIANT_BOOL Enabled,
        /*[in]*/ VARIANT_BOOL Fixed,
        /*[in]*/ double Posx,
        /*[in]*/ double Posy,
        /*[in]*/ double Posz,
        /*[in]*/ double Targetx,
        /*[in]*/ double Targety,
        /*[in]*/ double Targetz,
        /*[in]*/ double ConeAngle,
        /*[out,retval]*/ VARIANT_BOOL * Ok ) = 0;
      virtual HRESULT __stdcall GetSpotlightProperties (
        /*[in]*/ BSTR Name,
        /*[in]*/ double * Ambient,
        /*[in]*/ double * Diffuse,
        /*[in]*/ double * Specular,
        /*[in]*/ long * Colour,
        /*[in]*/ VARIANT_BOOL * Enabled,
        /*[in]*/ VARIANT_BOOL * Fixed,
        /*[in]*/ double * X,
        /*[in]*/ double * Y,
        /*[in]*/ double * Z,
        /*[in]*/ double * Targetx,
        /*[in]*/ double * Targety,
        /*[in]*/ double * Targetz,
        /*[in]*/ double * ConeAngle,
        /*[out,retval]*/ VARIANT_BOOL * Ok ) = 0;
      virtual HRESULT __stdcall SplitOpenSegment (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z ) = 0;
      virtual HRESULT __stdcall AutoInferToggle ( ) = 0;
      virtual HRESULT __stdcall SketchRectangleAtAnyAngle (
        /*[in]*/ double Val1,
        /*[in]*/ double Val2,
        /*[in]*/ double Z1,
        /*[in]*/ double Val3,
        /*[in]*/ double Val4,
        /*[in]*/ double Z2,
        /*[in]*/ double Val3x,
        /*[in]*/ double Val3y,
        /*[in]*/ double Z3,
        /*[in]*/ VARIANT_BOOL Val5 ) = 0;
      virtual HRESULT __stdcall CreateCircularSketchStepAndRepeat (
        /*[in]*/ double ArcRadius,
        /*[in]*/ double ArcAngle,
        /*[in]*/ long PatternNum,
        /*[in]*/ double PatternSpacing,
        /*[in]*/ VARIANT_BOOL PatternRotate,
        /*[in]*/ BSTR DeleteInstances,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SplitClosedSegment (
        /*[in]*/ double X0,
        /*[in]*/ double Y0,
        /*[in]*/ double Z0,
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ double Z1 ) = 0;
      virtual HRESULT __stdcall IsLightLockedToModel (
        /*[in]*/ long LightId,
        /*[out,retval]*/ VARIANT_BOOL * IsFixed ) = 0;
      virtual HRESULT __stdcall LockLightToModel (
        /*[in]*/ long LightId,
        /*[in]*/ VARIANT_BOOL Fix,
        /*[out,retval]*/ VARIANT_BOOL * Success ) = 0;
      virtual HRESULT __stdcall FeatureFillet3 (
        /*[in]*/ double R1,
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ int Ftyp,
        /*[in]*/ VARIANT_BOOL VarRadTyp,
        /*[in]*/ long OverflowType,
        /*[in]*/ int NRadii,
        /*[in]*/ VARIANT Radii,
        /*[in]*/ VARIANT_BOOL UseHelpPoint,
        /*[in]*/ VARIANT_BOOL UseTangentHoldLine,
        /*[out,retval]*/ long * Res ) = 0;
      virtual HRESULT __stdcall IFeatureFillet3 (
        /*[in]*/ double R1,
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ int Ftyp,
        /*[in]*/ VARIANT_BOOL VarRadTyp,
        /*[in]*/ long OverflowType,
        /*[in]*/ int NRadii,
        /*[in]*/ double * Radii,
        /*[in]*/ VARIANT_BOOL UseHelpPoint,
        /*[in]*/ VARIANT_BOOL UseTangentHoldLine,
        /*[out,retval]*/ long * Res ) = 0;
      virtual HRESULT __stdcall InsertConnectionPoint ( ) = 0;
      virtual HRESULT __stdcall InsertRoutePoint ( ) = 0;
      virtual HRESULT __stdcall FeatureBossThicken2 (
        /*[in]*/ double Thickness,
        /*[in]*/ long Direction,
        /*[in]*/ long FaceIndex,
        /*[in]*/ VARIANT_BOOL FillVolume ) = 0;
      virtual HRESULT __stdcall FeatureCutThicken2 (
        /*[in]*/ double Thickness,
        /*[in]*/ long Direction,
        /*[in]*/ long FaceIndex,
        /*[in]*/ VARIANT_BOOL FillVolume ) = 0;
      virtual HRESULT __stdcall GetConfigurationByName (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetConfigurationByName (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct IConfiguration * * Retval ) = 0;
      virtual HRESULT __stdcall CreatePoint2 (
        /*[in]*/ double PointX,
        /*[in]*/ double PointY,
        /*[in]*/ double PointZ,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreatePoint2 (
        /*[in]*/ double PointX,
        /*[in]*/ double PointY,
        /*[in]*/ double PointZ,
        /*[out,retval]*/ struct ISketchPoint * * Retval ) = 0;
      virtual HRESULT __stdcall CreateLine2 (
        /*[in]*/ double P1x,
        /*[in]*/ double P1y,
        /*[in]*/ double P1z,
        /*[in]*/ double P2x,
        /*[in]*/ double P2y,
        /*[in]*/ double P2z,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateLine2 (
        /*[in]*/ double P1x,
        /*[in]*/ double P1y,
        /*[in]*/ double P1z,
        /*[in]*/ double P2x,
        /*[in]*/ double P2y,
        /*[in]*/ double P2z,
        /*[out,retval]*/ struct ISketchSegment * * Retval ) = 0;
      virtual HRESULT __stdcall GetActiveSketch2 (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetActiveSketch2 (
        /*[out,retval]*/ struct ISketch * * Retval ) = 0;
      virtual HRESULT __stdcall DrawLightIcons ( ) = 0;
      virtual HRESULT __stdcall GetLayerManager (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetLayerManager (
        /*[out,retval]*/ struct ILayerMgr * * Retval ) = 0;
      virtual HRESULT __stdcall CreateCircle2 (
        /*[in]*/ double XC,
        /*[in]*/ double YC,
        /*[in]*/ double Zc,
        /*[in]*/ double Xp,
        /*[in]*/ double Yp,
        /*[in]*/ double Zp,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateCircle2 (
        /*[in]*/ double XC,
        /*[in]*/ double YC,
        /*[in]*/ double Zc,
        /*[in]*/ double Xp,
        /*[in]*/ double Yp,
        /*[in]*/ double Zp,
        /*[out,retval]*/ struct ISketchSegment * * Retval ) = 0;
      virtual HRESULT __stdcall CreateCircleByRadius2 (
        /*[in]*/ double XC,
        /*[in]*/ double YC,
        /*[in]*/ double Zc,
        /*[in]*/ double Radius,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateCircleByRadius2 (
        /*[in]*/ double XC,
        /*[in]*/ double YC,
        /*[in]*/ double Zc,
        /*[in]*/ double Radius,
        /*[out,retval]*/ struct ISketchSegment * * Retval ) = 0;
      virtual HRESULT __stdcall CreateArc2 (
        /*[in]*/ double XC,
        /*[in]*/ double YC,
        /*[in]*/ double Zc,
        /*[in]*/ double Xp1,
        /*[in]*/ double Yp1,
        /*[in]*/ double Zp1,
        /*[in]*/ double Xp2,
        /*[in]*/ double Yp2,
        /*[in]*/ double Zp2,
        /*[in]*/ short Direction,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateArc2 (
        /*[in]*/ double XC,
        /*[in]*/ double YC,
        /*[in]*/ double Zc,
        /*[in]*/ double Xp1,
        /*[in]*/ double Yp1,
        /*[in]*/ double Zp1,
        /*[in]*/ double Xp2,
        /*[in]*/ double Yp2,
        /*[in]*/ double Zp2,
        /*[in]*/ short Direction,
        /*[out,retval]*/ struct ISketchSegment * * Retval ) = 0;
      virtual HRESULT __stdcall CreateEllipse2 (
        /*[in]*/ double CenterX,
        /*[in]*/ double CenterY,
        /*[in]*/ double CenterZ,
        /*[in]*/ double MajorX,
        /*[in]*/ double MajorY,
        /*[in]*/ double MajorZ,
        /*[in]*/ double MinorX,
        /*[in]*/ double MinorY,
        /*[in]*/ double MinorZ,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateEllipse2 (
        /*[in]*/ double CenterX,
        /*[in]*/ double CenterY,
        /*[in]*/ double CenterZ,
        /*[in]*/ double MajorX,
        /*[in]*/ double MajorY,
        /*[in]*/ double MajorZ,
        /*[in]*/ double MinorX,
        /*[in]*/ double MinorY,
        /*[in]*/ double MinorZ,
        /*[out,retval]*/ struct ISketchSegment * * Retval ) = 0;
      virtual HRESULT __stdcall CreateEllipticalArc2 (
        /*[in]*/ double CenterX,
        /*[in]*/ double CenterY,
        /*[in]*/ double CenterZ,
        /*[in]*/ double MajorX,
        /*[in]*/ double MajorY,
        /*[in]*/ double MajorZ,
        /*[in]*/ double MinorX,
        /*[in]*/ double MinorY,
        /*[in]*/ double MinorZ,
        /*[in]*/ double StartX,
        /*[in]*/ double StartY,
        /*[in]*/ double StartZ,
        /*[in]*/ double EndX,
        /*[in]*/ double EndY,
        /*[in]*/ double EndZ,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateEllipticalArc2 (
        /*[in]*/ double CenterX,
        /*[in]*/ double CenterY,
        /*[in]*/ double CenterZ,
        /*[in]*/ double MajorX,
        /*[in]*/ double MajorY,
        /*[in]*/ double MajorZ,
        /*[in]*/ double MinorX,
        /*[in]*/ double MinorY,
        /*[in]*/ double MinorZ,
        /*[in]*/ double StartX,
        /*[in]*/ double StartY,
        /*[in]*/ double StartZ,
        /*[in]*/ double EndX,
        /*[in]*/ double EndY,
        /*[in]*/ double EndZ,
        /*[out,retval]*/ struct ISketchSegment * * Retval ) = 0;
      virtual HRESULT __stdcall CreateSpline (
        /*[in]*/ VARIANT PointData,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateSpline (
        /*[in]*/ long PointCount,
        /*[in]*/ double * PointData,
        /*[out,retval]*/ struct ISketchSegment * * Retval ) = 0;
      virtual HRESULT __stdcall ViewZoomtofit2 ( ) = 0;
      virtual HRESULT __stdcall SetInferenceMode (
        /*[in]*/ VARIANT_BOOL InferenceMode ) = 0;
      virtual HRESULT __stdcall GetInferenceMode (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetTitle2 (
        /*[in]*/ BSTR NewTitle,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SketchFillet2 (
        /*[in]*/ double Rad,
        /*[in]*/ short ConstrainedCorners,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsTessellationValid (
        /*[out,retval]*/ VARIANT_BOOL * IsValid ) = 0;
      virtual HRESULT __stdcall EditRoute ( ) = 0;
      virtual HRESULT __stdcall FileReload ( ) = 0;
      virtual HRESULT __stdcall GetDesignTable (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetDesignTable (
        /*[out,retval]*/ struct IDesignTable * * Retval ) = 0;
      virtual HRESULT __stdcall GetEntityName (
        /*[in]*/ IDispatch * Entity,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall IGetEntityName (
        /*[in]*/ struct IEntity * Entity,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall IGetNext (
        /*[out,retval]*/ struct IModelDoc2 * * NextDoc ) = 0;
      virtual HRESULT __stdcall ShowConfiguration2 (
        /*[in]*/ BSTR ConfigurationName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddConfiguration2 (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR Comment,
        /*[in]*/ BSTR AlternateName,
        /*[in]*/ VARIANT_BOOL SuppressByDefault,
        /*[in]*/ VARIANT_BOOL HideByDefault,
        /*[in]*/ VARIANT_BOOL MinFeatureManager,
        /*[in]*/ VARIANT_BOOL InheritProperties,
        /*[in]*/ unsigned long Flags,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DeleteConfiguration2 (
        /*[in]*/ BSTR ConfigurationName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall EditConfiguration2 (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR NewName,
        /*[in]*/ BSTR Comment,
        /*[in]*/ BSTR AlternateName,
        /*[in]*/ VARIANT_BOOL SuppressByDefault,
        /*[in]*/ VARIANT_BOOL HideByDefault,
        /*[in]*/ VARIANT_BOOL MinFeatureManager,
        /*[in]*/ VARIANT_BOOL InheritProperties,
        /*[in]*/ unsigned long Flags,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateSplineByEqnParams (
        /*[in]*/ VARIANT ParamsIn,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateSplineByEqnParams (
        /*[in]*/ int * PropArray,
        /*[in]*/ double * KnotsArray,
        /*[in]*/ double * CntrlPntCoordArray,
        /*[out,retval]*/ struct ISketchSegment * * Retval ) = 0;
      virtual HRESULT __stdcall CreateFeatureMgrView2 (
        /*[in]*/ long * Bitmap,
        /*[in]*/ BSTR ToolTip,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateFeatureMgrView2 (
        /*[in]*/ long * Bitmap,
        /*[in]*/ BSTR ToolTip,
        /*[out,retval]*/ struct IFeatMgrView * * Retval ) = 0;
      virtual HRESULT __stdcall AddFeatureMgrView2 (
        /*[in]*/ long * Bitmap,
        /*[in]*/ long * AppView,
        /*[in]*/ BSTR ToolTip,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall FeatureCut3 (
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2,
        /*[in]*/ long KeepPieceIndex ) = 0;
      virtual HRESULT __stdcall GetFirstAnnotation2 (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstAnnotation2 (
        /*[out,retval]*/ struct IAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall InsertExtendSurface (
        /*[in]*/ VARIANT_BOOL ExtendLinear,
        /*[in]*/ long EndCondition,
        /*[in]*/ double Distance ) = 0;
      virtual HRESULT __stdcall InsertTangencySurface (
        /*[in]*/ VARIANT_BOOL OneSide,
        /*[in]*/ VARIANT_BOOL IsFlip ) = 0;
      virtual HRESULT __stdcall CreateSplinesByEqnParams (
        /*[in]*/ VARIANT ParamsIn,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall ICreateSplinesByEqnParams (
        /*[in]*/ int * PropArray,
        /*[in]*/ double * KnotsArray,
        /*[in]*/ double * CntrlPntCoordArray,
        /*[out,retval]*/ struct IEnumSketchSegments * * Retval ) = 0;
      virtual HRESULT __stdcall CreateClippedSplines (
        /*[in]*/ VARIANT ParamsIn,
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ double X2,
        /*[in]*/ double Y2,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall ICreateClippedSplines (
        /*[in]*/ int * PropArray,
        /*[in]*/ double * KnotsArray,
        /*[in]*/ double * CntrlPntCoordArray,
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ double X2,
        /*[in]*/ double Y2,
        /*[out,retval]*/ struct IEnumSketchSegments * * Retval ) = 0;
      virtual HRESULT __stdcall EditSuppress2 (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall EditUnsuppress2 (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall EditUnsuppressDependent2 (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall EditRollback2 (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall HideDimension ( ) = 0;
      virtual HRESULT __stdcall ShowFeatureDimensions ( ) = 0;
      virtual HRESULT __stdcall HideFeatureDimensions ( ) = 0;
      virtual HRESULT __stdcall Sketch3DIntersections ( ) = 0;
      virtual HRESULT __stdcall FeatureFillet4 (
        /*[in]*/ double R1,
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ VARIANT_BOOL UniformRadius,
        /*[in]*/ int Ftyp,
        /*[in]*/ VARIANT_BOOL VarRadTyp,
        /*[in]*/ long OverflowType,
        /*[in]*/ int NRadii,
        /*[in]*/ VARIANT Radii,
        /*[in]*/ VARIANT_BOOL UseHelpPoint,
        /*[in]*/ VARIANT_BOOL UseTangentHoldLine,
        /*[in]*/ VARIANT_BOOL CornerType,
        /*[in]*/ int SetbackDistCount,
        /*[in]*/ VARIANT SetBackDistances,
        /*[out,retval]*/ long * Res ) = 0;
      virtual HRESULT __stdcall IFeatureFillet4 (
        /*[in]*/ double R1,
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ VARIANT_BOOL UniformRadius,
        /*[in]*/ int Ftyp,
        /*[in]*/ VARIANT_BOOL VarRadTyp,
        /*[in]*/ long OverflowType,
        /*[in]*/ int NRadii,
        /*[in]*/ double * Radii,
        /*[in]*/ VARIANT_BOOL UseHelpPoint,
        /*[in]*/ VARIANT_BOOL UseTangentHoldLine,
        /*[in]*/ VARIANT_BOOL CornerType,
        /*[in]*/ int SetbackDistCount,
        /*[in]*/ double * SetBackDistances,
        /*[out,retval]*/ long * Res ) = 0;
      virtual HRESULT __stdcall InsertDeleteFace ( ) = 0;
      virtual HRESULT __stdcall GetDependencies2 (
        /*[in]*/ VARIANT_BOOL Traverseflag,
        /*[in]*/ VARIANT_BOOL Searchflag,
        /*[in]*/ VARIANT_BOOL AddReadOnlyInfo,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetDependencies2 (
        /*[in]*/ VARIANT_BOOL Traverseflag,
        /*[in]*/ VARIANT_BOOL Searchflag,
        /*[in]*/ VARIANT_BOOL AddReadOnlyInfo,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall IGetNumDependencies2 (
        /*[in]*/ VARIANT_BOOL Traverseflag,
        /*[in]*/ VARIANT_BOOL Searchflag,
        /*[in]*/ VARIANT_BOOL AddReadOnlyInfo,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall InsertScale (
        /*[in]*/ double ScaleFactor_x,
        /*[in]*/ double ScaleFactor_y,
        /*[in]*/ double ScaleFactor_z,
        /*[in]*/ VARIANT_BOOL IsUniform,
        /*[in]*/ int ScaleType ) = 0;
      virtual HRESULT __stdcall LockAllExternalReferences ( ) = 0;
      virtual HRESULT __stdcall UnlockAllExternalReferences ( ) = 0;
      virtual HRESULT __stdcall BreakAllExternalReferences ( ) = 0;
      virtual HRESULT __stdcall EditDimensionProperties (
        /*[in]*/ long TolType,
        /*[in]*/ double TolMax,
        /*[in]*/ double TolMin,
        /*[in]*/ BSTR TolMaxFit,
        /*[in]*/ BSTR TolMinFit,
        /*[in]*/ VARIANT_BOOL UseDocPrec,
        /*[in]*/ long Precision,
        /*[in]*/ long ArrowsIn,
        /*[in]*/ VARIANT_BOOL UseDocArrows,
        /*[in]*/ long Arrow1,
        /*[in]*/ long Arrow2,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SketchPolygon (
        /*[in]*/ double XCenter,
        /*[in]*/ double YCenter,
        /*[in]*/ double XEdge,
        /*[in]*/ double YEdge,
        /*[in]*/ int NSides,
        /*[in]*/ VARIANT_BOOL BInscribed,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetBlockingState (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall CreateFeatureMgrView3 (
        /*[in]*/ long * Bitmap,
        /*[in]*/ BSTR ToolTip,
        /*[in]*/ long WhichPane,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateFeatureMgrView3 (
        /*[in]*/ long * Bitmap,
        /*[in]*/ BSTR ToolTip,
        /*[in]*/ long WhichPane,
        /*[out,retval]*/ struct IFeatMgrView * * Retval ) = 0;
      virtual HRESULT __stdcall AddFeatureMgrView3 (
        /*[in]*/ long * Bitmap,
        /*[in]*/ long * AppView,
        /*[in]*/ BSTR ToolTip,
        /*[in]*/ long WhichPane,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreatePlaneAtOffset2 (
        /*[in]*/ double Val,
        /*[in]*/ VARIANT_BOOL FlipDir,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreatePlaneAtOffset2 (
        /*[in]*/ double Val,
        /*[in]*/ VARIANT_BOOL FlipDir,
        /*[out,retval]*/ struct IRefPlane * * Retval ) = 0;
      virtual HRESULT __stdcall CreatePlaneAtAngle2 (
        /*[in]*/ double Val,
        /*[in]*/ VARIANT_BOOL FlipDir,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreatePlaneAtAngle2 (
        /*[in]*/ double Val,
        /*[in]*/ VARIANT_BOOL FlipDir,
        /*[out,retval]*/ struct IRefPlane * * Retval ) = 0;
      virtual HRESULT __stdcall CreatePlaneThru3Points2 (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreatePlaneThru3Points2 (
        /*[out,retval]*/ struct IRefPlane * * Retval ) = 0;
      virtual HRESULT __stdcall CreatePlanePerCurveAndPassPoint2 (
        /*[in]*/ VARIANT_BOOL OrigAtCurve,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreatePlanePerCurveAndPassPoint2 (
        /*[in]*/ VARIANT_BOOL OrigAtCurve,
        /*[out,retval]*/ struct IRefPlane * * Retval ) = 0;
      virtual HRESULT __stdcall CreatePlaneAtSurface2 (
        /*[in]*/ int InterIndex,
        /*[in]*/ VARIANT_BOOL ProjOpt,
        /*[in]*/ VARIANT_BOOL ReverseDir,
        /*[in]*/ VARIANT_BOOL NormalPlane,
        /*[in]*/ double Angle,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreatePlaneAtSurface2 (
        /*[in]*/ int InterIndex,
        /*[in]*/ VARIANT_BOOL ProjOpt,
        /*[in]*/ VARIANT_BOOL ReverseDir,
        /*[in]*/ VARIANT_BOOL NormalPlane,
        /*[in]*/ double Angle,
        /*[out,retval]*/ struct IRefPlane * * Retval ) = 0;
      virtual HRESULT __stdcall GetUserPreferenceIntegerValue (
        /*[in]*/ long UserPreferenceValue,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetUserPreferenceIntegerValue (
        /*[in]*/ long UserPreferenceValue,
        /*[in]*/ long Value,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetUserPreferenceTextFormat (
        /*[in]*/ long UserPreferenceValue,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetUserPreferenceTextFormat (
        /*[in]*/ long UserPreferenceValue,
        /*[out,retval]*/ struct ITextFormat * * Retval ) = 0;
      virtual HRESULT __stdcall SetUserPreferenceTextFormat (
        /*[in]*/ long UserPreferenceValue,
        /*[in]*/ IDispatch * Value,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ISetUserPreferenceTextFormat (
        /*[in]*/ long UserPreferenceValue,
        /*[in]*/ struct ITextFormat * Value,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertRib2 (
        /*[in]*/ VARIANT_BOOL Is2Sided,
        /*[in]*/ VARIANT_BOOL ReverseThicknessDir,
        /*[in]*/ double Thickness,
        /*[in]*/ long ReferenceEdgeIndex,
        /*[in]*/ VARIANT_BOOL ReverseMaterialDir,
        /*[in]*/ VARIANT_BOOL IsDrafted,
        /*[in]*/ VARIANT_BOOL DraftOutward,
        /*[in]*/ double DraftAngle,
        /*[in]*/ VARIANT_BOOL IsNormToSketch ) = 0;
      virtual HRESULT __stdcall InsertObjectFromFile (
        /*[in]*/ BSTR FilePath,
        /*[in]*/ VARIANT_BOOL CreateLink,
        /*[in]*/ double Xx,
        /*[in]*/ double Yy,
        /*[in]*/ double Zz,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InspectCurvature ( ) = 0;
      virtual HRESULT __stdcall RemoveInspectCurvature ( ) = 0;
      virtual HRESULT __stdcall InsertDatumTag2 (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IInsertDatumTag2 (
        /*[out,retval]*/ struct IDatumTag * * Retval ) = 0;
      virtual HRESULT __stdcall ActivateFeatureMgrView (
        /*[in]*/ long * AppView,
        /*[out,retval]*/ long * PaneType ) = 0;
      virtual HRESULT __stdcall FeatureSketchDrivenPattern (
        /*[in]*/ VARIANT_BOOL UseCentroid ) = 0;
      virtual HRESULT __stdcall HideShowBodies ( ) = 0;
      virtual HRESULT __stdcall HideSolidBody ( ) = 0;
      virtual HRESULT __stdcall ShowSolidBody ( ) = 0;
      virtual HRESULT __stdcall InsertFramePoint (
        /*[in]*/ double Xx,
        /*[in]*/ double Yy,
        /*[in]*/ double Zz ) = 0;
      virtual HRESULT __stdcall LockFramePoint ( ) = 0;
      virtual HRESULT __stdcall UnlockFramePoint ( ) = 0;
      virtual HRESULT __stdcall InsertGtol (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IInsertGtol (
        /*[out,retval]*/ struct IGtol * * Retval ) = 0;
      virtual HRESULT __stdcall DeActivateFeatureMgrView (
        /*[in]*/ long * AppView,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertNote (
        /*[in]*/ BSTR Text,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IInsertNote (
        /*[in]*/ BSTR Text,
        /*[out,retval]*/ struct INote * * Retval ) = 0;
      virtual HRESULT __stdcall SetSaveAsFileName (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall ClosePrintPreview ( ) = 0;
      virtual HRESULT __stdcall HideComponent2 ( ) = 0;
      virtual HRESULT __stdcall ShowComponent2 ( ) = 0;
      virtual HRESULT __stdcall SaveBMP (
        /*[in]*/ BSTR FileNameIn,
        /*[in]*/ long WidthIn,
        /*[in]*/ long HeightIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertSketch2 (
        /*[in]*/ VARIANT_BOOL UpdateEditRebuild ) = 0;
      virtual HRESULT __stdcall Insert3DSketch2 (
        /*[in]*/ VARIANT_BOOL UpdateEditRebuild ) = 0;
      virtual HRESULT __stdcall InsertDeleteHole ( ) = 0;
      virtual HRESULT __stdcall PreTrimSurface (
        /*[in]*/ VARIANT_BOOL BMutualTrimIn ) = 0;
      virtual HRESULT __stdcall PostTrimSurface (
        /*[in]*/ VARIANT_BOOL BSewSurfaceIn ) = 0;
      virtual HRESULT __stdcall SketchConvertIsoCurves (
        /*[in]*/ double PercentRatio,
        /*[in]*/ VARIANT_BOOL VORuDir,
        /*[in]*/ VARIANT_BOOL DoConstrain,
        /*[in]*/ VARIANT_BOOL SkipHoles ) = 0;
      virtual HRESULT __stdcall SelectLoop ( ) = 0;
      virtual HRESULT __stdcall InsertSheetMetalBaseFlange (
        /*[in]*/ double Thickness,
        /*[in]*/ VARIANT_BOOL ThickenDir,
        /*[in]*/ double Radius,
        /*[in]*/ double ExtrudeDist1,
        /*[in]*/ double ExtrudeDist2,
        /*[in]*/ VARIANT_BOOL FlipExtruDir,
        /*[in]*/ long EndCondition1,
        /*[in]*/ long EndCondition2,
        /*[in]*/ long DirToUse ) = 0;
      virtual HRESULT __stdcall InsertSheetMetalFold ( ) = 0;
      virtual HRESULT __stdcall InsertSheetMetalUnfold ( ) = 0;
      virtual HRESULT __stdcall InsertSheetMetalMiterFlange (
        /*[in]*/ VARIANT_BOOL UseReliefRatio,
        /*[in]*/ VARIANT_BOOL UseDefaultGap,
        /*[in]*/ VARIANT_BOOL UseAutoRelief,
        /*[in]*/ double GlobalRadius,
        /*[in]*/ double RipGap,
        /*[in]*/ double AutoReliefRatio,
        /*[in]*/ double AutoReliefWidth,
        /*[in]*/ double AutoReliefDepth,
        /*[in]*/ long ReliefType,
        /*[in]*/ long RipLocation,
        /*[in]*/ VARIANT_BOOL TrimSideBends ) = 0;
      virtual HRESULT __stdcall CreateGroup ( ) = 0;
      virtual HRESULT __stdcall RemoveItemsFromGroup ( ) = 0;
      virtual HRESULT __stdcall RemoveGroups ( ) = 0;
      virtual HRESULT __stdcall InsertBOMBalloon2 (
        /*[in]*/ long Style,
        /*[in]*/ long Size,
        /*[in]*/ long UpperTextStyle,
        /*[in]*/ BSTR UpperText,
        /*[in]*/ long LowerTextStyle,
        /*[in]*/ BSTR LowerText,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IInsertBOMBalloon2 (
        /*[in]*/ long Style,
        /*[in]*/ long Size,
        /*[in]*/ long UpperTextStyle,
        /*[in]*/ BSTR UpperText,
        /*[in]*/ long LowerTextStyle,
        /*[in]*/ BSTR LowerText,
        /*[out,retval]*/ struct INote * * Retval ) = 0;
      virtual HRESULT __stdcall EditRedo (
        /*[in]*/ unsigned long NSteps ) = 0;
      virtual HRESULT __stdcall InsertProtrusionBlend4 (
        /*[in]*/ VARIANT_BOOL Closed,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational,
        /*[in]*/ double TessToleranceFactor,
        /*[in]*/ short StartMatchingType,
        /*[in]*/ short EndMatchingType,
        /*[in]*/ VARIANT_BOOL IsThinBody,
        /*[in]*/ double Thickness1,
        /*[in]*/ double Thickness2,
        /*[in]*/ short ThinType ) = 0;
      virtual HRESULT __stdcall InsertCutBlend4 (
        /*[in]*/ VARIANT_BOOL Closed,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational,
        /*[in]*/ double TessToleranceFactor,
        /*[in]*/ short StartMatchingType,
        /*[in]*/ short EndMatchingType,
        /*[in]*/ VARIANT_BOOL IsThinBody,
        /*[in]*/ double Thickness1,
        /*[in]*/ double Thickness2,
        /*[in]*/ short ThinType ) = 0;
      virtual HRESULT __stdcall InsertProtrusionSwept4 (
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ VARIANT_BOOL Alignment,
        /*[in]*/ short TwistCtrlOption,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational,
        /*[in]*/ short StartMatchingType,
        /*[in]*/ short EndMatchingType,
        /*[in]*/ VARIANT_BOOL IsThinBody,
        /*[in]*/ double Thickness1,
        /*[in]*/ double Thickness2,
        /*[in]*/ short ThinType ) = 0;
      virtual HRESULT __stdcall InsertCutSwept4 (
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ VARIANT_BOOL Alignment,
        /*[in]*/ short TwistCtrlOption,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational,
        /*[in]*/ short StartMatchingType,
        /*[in]*/ short EndMatchingType,
        /*[in]*/ VARIANT_BOOL IsThinBody,
        /*[in]*/ double Thickness1,
        /*[in]*/ double Thickness2,
        /*[in]*/ short ThinType ) = 0;
      virtual HRESULT __stdcall SelectTangency ( ) = 0;
      virtual HRESULT __stdcall InsertBendTableOpen (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ VARIANT_BOOL * Ok ) = 0;
      virtual HRESULT __stdcall InsertBendTableNew (
        /*[in]*/ BSTR FileName,
        /*[in]*/ BSTR Units,
        /*[in]*/ BSTR Type,
        /*[out,retval]*/ VARIANT_BOOL * Ok ) = 0;
      virtual HRESULT __stdcall InsertBendTableEdit ( ) = 0;
      virtual HRESULT __stdcall DeleteBendTable ( ) = 0;
      virtual HRESULT __stdcall InsertSheetMetal3dBend (
        /*[in]*/ double Angle,
        /*[in]*/ double Radius,
        /*[in]*/ VARIANT_BOOL FlipDir,
        /*[in]*/ short BendPos ) = 0;
      virtual HRESULT __stdcall CreateTangentArc2 (
        /*[in]*/ double P1x,
        /*[in]*/ double P1y,
        /*[in]*/ double P1z,
        /*[in]*/ double P2x,
        /*[in]*/ double P2y,
        /*[in]*/ double P2z,
        /*[in]*/ long ArcTypeIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetMassProperties2 (
        /*[in,out]*/ long * Status,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetMassProperties2 (
        /*[in,out]*/ long * Status,
        /*[out,retval]*/ double * MPropsData ) = 0;
      virtual HRESULT __stdcall SketchChamfer (
        /*[in]*/ double AngleORdist,
        /*[in]*/ double Dist1,
        /*[in]*/ long Options ) = 0;
      virtual HRESULT __stdcall FeatureCut4 (
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2,
        /*[in]*/ long KeepPieceIndex,
        /*[in]*/ VARIANT_BOOL NormalCut ) = 0;
      virtual HRESULT __stdcall GetPropertyManagerPage (
        /*[in]*/ long DialogId,
        /*[in]*/ BSTR Title,
        /*[in]*/ IUnknown * Handler,
        /*[out,retval]*/ struct IPropertyManagerPage * * Retval ) = 0;
      virtual HRESULT __stdcall AlignOrdinate ( ) = 0;
      virtual HRESULT __stdcall EditOrdinate ( ) = 0;
      virtual HRESULT __stdcall ReattachOrdinate (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall EditBalloonProperties (
        /*[in]*/ long Style,
        /*[in]*/ long Size,
        /*[in]*/ long UpperTextStyle,
        /*[in]*/ BSTR UpperText,
        /*[in]*/ long LowerTextStyle,
        /*[in]*/ BSTR LowerText,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall EditDimensionProperties2 (
        /*[in]*/ long TolType,
        /*[in]*/ double TolMax,
        /*[in]*/ double TolMin,
        /*[in]*/ BSTR TolMaxFit,
        /*[in]*/ BSTR TolMinFit,
        /*[in]*/ VARIANT_BOOL UseDocPrec,
        /*[in]*/ long Precision,
        /*[in]*/ long ArrowsIn,
        /*[in]*/ VARIANT_BOOL UseDocArrows,
        /*[in]*/ long Arrow1,
        /*[in]*/ long Arrow2,
        /*[in]*/ BSTR PrefixText,
        /*[in]*/ BSTR SuffixText,
        /*[in]*/ VARIANT_BOOL ShowValue,
        /*[in]*/ BSTR CalloutText1,
        /*[in]*/ BSTR CalloutText2,
        /*[in]*/ VARIANT_BOOL CenterText,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertSheetMetalClosedCorner ( ) = 0;
      virtual HRESULT __stdcall SketchUseEdge2 (
        /*[in]*/ VARIANT_BOOL Chain,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SketchOffsetEntities2 (
        /*[in]*/ double Offset,
        /*[in]*/ VARIANT_BOOL BothDirections,
        /*[in]*/ VARIANT_BOOL Chain,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SketchOffset2 (
        /*[in]*/ double Offset,
        /*[in]*/ VARIANT_BOOL BothDirections,
        /*[in]*/ VARIANT_BOOL Chain,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddDimension2 (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IAddDimension2 (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ struct IDisplayDimension * * Retval ) = 0;
      virtual HRESULT __stdcall AddHorizontalDimension2 (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IAddHorizontalDimension2 (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ struct IDisplayDimension * * Retval ) = 0;
      virtual HRESULT __stdcall AddVerticalDimension2 (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IAddVerticalDimension2 (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ struct IDisplayDimension * * Retval ) = 0;
      virtual HRESULT __stdcall AddRadialDimension2 (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IAddRadialDimension2 (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ struct IDisplayDimension * * Retval ) = 0;
      virtual HRESULT __stdcall AddDiameterDimension2 (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IAddDiameterDimension2 (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ struct IDisplayDimension * * Retval ) = 0;
      virtual HRESULT __stdcall GetUserUnit (
        /*[in]*/ long UnitType,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetUserUnit (
        /*[in]*/ long UnitType,
        /*[out,retval]*/ struct IUserUnit * * Retval ) = 0;
      virtual HRESULT __stdcall InsertWeldSymbol3 (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IInsertWeldSymbol3 (
        /*[out,retval]*/ struct IWeldSymbol * * Retval ) = 0;
      virtual HRESULT __stdcall SaveAs3 (
        /*[in]*/ BSTR NewName,
        /*[in]*/ long SaveAsVersion,
        /*[in]*/ long Options,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetUserPreferenceStringValue (
        /*[in]*/ long UserPreference,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetUserPreferenceStringValue (
        /*[in]*/ long UserPreference,
        /*[in]*/ BSTR Value,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DeleteDesignTable ( ) = 0;
      virtual HRESULT __stdcall EditRebuild3 (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ForceRebuild3 (
        /*[in]*/ VARIANT_BOOL TopOnly,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall FeatureFillet5 (
        /*[in]*/ long Options,
        /*[in]*/ double R1,
        /*[in]*/ long Ftyp,
        /*[in]*/ long OverflowType,
        /*[in]*/ VARIANT Radii,
        /*[in]*/ VARIANT SetBackDistances,
        /*[in]*/ VARIANT PointRadiusArray,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IFeatureFillet5 (
        /*[in]*/ long Options,
        /*[in]*/ double R1,
        /*[in]*/ long Ftyp,
        /*[in]*/ long OverflowType,
        /*[in]*/ long NRadii,
        /*[in]*/ double * Radii,
        /*[in]*/ long SetbackDistCount,
        /*[in]*/ double * SetBackDistances,
        /*[in]*/ long PointCount,
        /*[in]*/ double * PointRadiusArray,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall InsertSheetMetalBreakCorner (
        /*[in]*/ long Type,
        /*[in]*/ double Distance ) = 0;
      virtual HRESULT __stdcall InsertSheetMetalHem (
        /*[in]*/ long Type,
        /*[in]*/ long Position,
        /*[in]*/ VARIANT_BOOL Reverse,
        /*[in]*/ double DLength,
        /*[in]*/ double DGap,
        /*[in]*/ double DAngle,
        /*[in]*/ double DRad,
        /*[in]*/ double DMiterGap ) = 0;
      virtual HRESULT __stdcall CreatePlaneAtOffset3 (
        /*[in]*/ double Val,
        /*[in]*/ VARIANT_BOOL FlipDir,
        /*[in]*/ VARIANT_BOOL AutoSize,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreatePlaneAtOffset3 (
        /*[in]*/ double Val,
        /*[in]*/ VARIANT_BOOL FlipDir,
        /*[in]*/ VARIANT_BOOL AutoSize,
        /*[out,retval]*/ struct IRefPlane * * Retval ) = 0;
      virtual HRESULT __stdcall CreatePlaneAtAngle3 (
        /*[in]*/ double Val,
        /*[in]*/ VARIANT_BOOL FlipDir,
        /*[in]*/ VARIANT_BOOL AutoSize,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreatePlaneAtAngle3 (
        /*[in]*/ double Val,
        /*[in]*/ VARIANT_BOOL FlipDir,
        /*[in]*/ VARIANT_BOOL AutoSize,
        /*[out,retval]*/ struct IRefPlane * * Retval ) = 0;
      virtual HRESULT __stdcall CreatePlaneThru3Points3 (
        /*[in]*/ VARIANT_BOOL AutoSize,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreatePlaneThru3Points3 (
        /*[in]*/ VARIANT_BOOL AutoSize,
        /*[out,retval]*/ struct IRefPlane * * Retval ) = 0;
      virtual HRESULT __stdcall CreatePlaneThruPtParallelToPlane (
        /*[in]*/ VARIANT_BOOL AutoSize,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreatePlaneThruPtParallelToPlane (
        /*[in]*/ VARIANT_BOOL AutoSize,
        /*[out,retval]*/ struct IRefPlane * * Retval ) = 0;
      virtual HRESULT __stdcall CreatePlaneThruLineAndPt (
        /*[in]*/ VARIANT_BOOL AutoSize,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreatePlaneThruLineAndPt (
        /*[in]*/ VARIANT_BOOL AutoSize,
        /*[out,retval]*/ struct IRefPlane * * Retval ) = 0;
      virtual HRESULT __stdcall CreatePlanePerCurveAndPassPoint3 (
        /*[in]*/ VARIANT_BOOL OrigAtCurve,
        /*[in]*/ VARIANT_BOOL AutoSize,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreatePlanePerCurveAndPassPoint3 (
        /*[in]*/ VARIANT_BOOL OrigAtCurve,
        /*[in]*/ VARIANT_BOOL AutoSize,
        /*[out,retval]*/ struct IRefPlane * * Retval ) = 0;
      virtual HRESULT __stdcall CreatePlaneAtSurface3 (
        /*[in]*/ short InterIndex,
        /*[in]*/ VARIANT_BOOL ProjOpt,
        /*[in]*/ VARIANT_BOOL ReverseDir,
        /*[in]*/ VARIANT_BOOL NormalPlane,
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL AutoSize,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreatePlaneAtSurface3 (
        /*[in]*/ short InterIndex,
        /*[in]*/ VARIANT_BOOL ProjOpt,
        /*[in]*/ VARIANT_BOOL ReverseDir,
        /*[in]*/ VARIANT_BOOL NormalPlane,
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL AutoSize,
        /*[out,retval]*/ struct IRefPlane * * Retval ) = 0;
      virtual HRESULT __stdcall InsertAxis2 (
        /*[in]*/ VARIANT_BOOL AutoSize,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertSketchPicture (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ VARIANT_BOOL * PResult ) = 0;
      virtual HRESULT __stdcall GetZebraStripeData (
        /*[in,out]*/ double * Size,
        /*[in,out]*/ double * Ratio,
        /*[in,out]*/ long * Color1,
        /*[in,out]*/ long * Color2 ) = 0;
      virtual HRESULT __stdcall SetZebraStripeData (
        /*[in]*/ double Size,
        /*[in]*/ double Ratio,
        /*[in]*/ long Color1,
        /*[in]*/ long Color2 ) = 0;
      virtual HRESULT __stdcall InsertSketchPictureData (
        /*[in]*/ short Width,
        /*[in]*/ short Height,
        /*[in]*/ long PDataIn ) = 0;
      virtual HRESULT __stdcall FeatureCurvePattern (
        /*[in]*/ long Num1,
        /*[in]*/ double Spacing1,
        /*[in]*/ long Num2,
        /*[in]*/ double Spacing2,
        /*[in]*/ VARIANT_BOOL FlipDir1,
        /*[in]*/ VARIANT_BOOL FlipDir2,
        /*[in]*/ VARIANT_BOOL EqualSpacing1,
        /*[in]*/ VARIANT_BOOL EqualSpacing2,
        /*[in]*/ VARIANT_BOOL UseCentroid,
        /*[in]*/ VARIANT_BOOL AlignToSeed,
        /*[in]*/ VARIANT_BOOL OffsetCurve,
        /*[in]*/ VARIANT_BOOL PatternSeedOnly ) = 0;
      virtual HRESULT __stdcall InsertFeatureReplaceFace ( ) = 0;
      virtual HRESULT __stdcall InsertRip (
        /*[in]*/ double Gap ) = 0;
      virtual HRESULT __stdcall InsertSheetMetalEdgeFlange (
        /*[in]*/ IDispatch * FlangeEdge,
        /*[in]*/ IDispatch * SketchFeat,
        /*[in]*/ long BooleanOptions,
        /*[in]*/ double DAngle,
        /*[in]*/ double DRadius,
        /*[in]*/ long BendPosition,
        /*[in]*/ double DOffsetDist,
        /*[in]*/ long ReliefType,
        /*[in]*/ double DReliefRatio,
        /*[in]*/ double DReliefWidth,
        /*[in]*/ double DReliefDepth,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IInsertSheetMetalEdgeFlange (
        /*[in]*/ struct IEdge * FlangeEdge,
        /*[in]*/ struct IFeature * SketchFeat,
        /*[in]*/ long BooleanOptions,
        /*[in]*/ double DAngle,
        /*[in]*/ double DRadius,
        /*[in]*/ long BendPosition,
        /*[in]*/ double DOffsetDist,
        /*[in]*/ long ReliefType,
        /*[in]*/ double DReliefRatio,
        /*[in]*/ double DReliefWidth,
        /*[in]*/ double DReliefDepth,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertSketchText (
        /*[in]*/ double Ptx,
        /*[in]*/ double Pty,
        /*[in]*/ double Ptz,
        /*[in]*/ BSTR Text,
        /*[in]*/ long Alignment,
        /*[in]*/ long FlipDirection,
        /*[in]*/ long HorizontalMirror,
        /*[in]*/ long WidthFactor,
        /*[in]*/ long SpaceBetweenChars,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IInsertSketchText (
        /*[in]*/ double Ptx,
        /*[in]*/ double Pty,
        /*[in]*/ double Ptz,
        /*[in]*/ BSTR Text,
        /*[in]*/ long Alignment,
        /*[in]*/ long FlipDirection,
        /*[in]*/ long HorizontalMirror,
        /*[in]*/ long WidthFactor,
        /*[in]*/ long SpaceBetweenChars,
        /*[out,retval]*/ struct ISketchText * * Retval ) = 0;
      virtual HRESULT __stdcall DissolveSketchText ( ) = 0;
      virtual HRESULT __stdcall MoldDraftAnalysis (
        /*[in]*/ double Angle,
        /*[in]*/ long Options,
        /*[in]*/ VARIANT Colors,
        /*[in]*/ long Shows ) = 0;
      virtual HRESULT __stdcall InsertSheetMetalJog (
        /*[in]*/ double Angle,
        /*[in]*/ double Radius,
        /*[in]*/ double OffsetDist,
        /*[in]*/ VARIANT_BOOL FlipDir,
        /*[in]*/ VARIANT_BOOL FixProjLen,
        /*[in]*/ short DimPos,
        /*[in]*/ short BendPos ) = 0;
      virtual HRESULT __stdcall InsertSketchForEdgeFlange (
        /*[in]*/ IDispatch * FlangeEdge,
        /*[in]*/ double DAngle,
        /*[in]*/ VARIANT_BOOL FlipDir,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IInsertSketchForEdgeFlange (
        /*[in]*/ struct IEdge * FlangeEdge,
        /*[in]*/ double DAngle,
        /*[in]*/ VARIANT_BOOL FlipDir,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall ClearSelection2 (
        /*[in]*/ VARIANT_BOOL All ) = 0;
      virtual HRESULT __stdcall ListExternalFileReferences2 (
        /*[out]*/ VARIANT * ModelPathName,
        /*[out]*/ VARIANT * ComponentPathName,
        /*[out]*/ VARIANT * Feature,
        /*[out]*/ VARIANT * DataType,
        /*[out]*/ VARIANT * Status,
        /*[out]*/ VARIANT * RefEntity,
        /*[out]*/ VARIANT * FeatCom ) = 0;
      virtual HRESULT __stdcall ListExternalFileReferencesCount2 (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IListExternalFileReferences2 (
        /*[in]*/ long NumRefs,
        /*[out]*/ BSTR * ModelPathName,
        /*[out]*/ BSTR * CompPathName,
        /*[out]*/ BSTR * Feature,
        /*[out]*/ BSTR * DataType,
        /*[out]*/ long * Status,
        /*[out]*/ BSTR * RefEntity,
        /*[out]*/ BSTR * FeatComp ) = 0;
      virtual HRESULT __stdcall InsertDeleteFace2 (
        /*[in]*/ long Refill,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddLoftSection ( ) = 0;
      virtual HRESULT __stdcall InsertMacroFeature (
        /*[in]*/ BSTR CmdFile,
        /*[in]*/ BSTR CmdModule,
        /*[in]*/ BSTR CmdProcedure,
        /*[in]*/ VARIANT ParamNames,
        /*[in]*/ VARIANT ParamTypes,
        /*[in]*/ VARIANT ParamValues,
        /*[in]*/ BSTR PmFile,
        /*[in]*/ BSTR PmModule,
        /*[in]*/ BSTR PmProcedure,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IInsertMacroFeature (
        /*[in]*/ BSTR CmdFile,
        /*[in]*/ BSTR CmdModule,
        /*[in]*/ BSTR CmdProcedure,
        /*[in]*/ long ParamCount,
        /*[in]*/ BSTR * ParamNames,
        /*[in]*/ long * ParamTypes,
        /*[in]*/ BSTR * ParamValues,
        /*[in]*/ BSTR PmFile,
        /*[in]*/ BSTR PmModule,
        /*[in]*/ BSTR PmProcedure,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall ListAuxiliaryExternalFileReferences (
        /*[out]*/ VARIANT * Feature,
        /*[out]*/ VARIANT * ExternalFileName ) = 0;
      virtual HRESULT __stdcall ListAuxiliaryExternalFileReferencesCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IListAuxiliaryExternalFileReferences (
        /*[in]*/ long NumRefs,
        /*[out]*/ BSTR * Feature,
        /*[out]*/ BSTR * ExternalFileName ) = 0;
      virtual HRESULT __stdcall FeatureCut5 (
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2,
        /*[in]*/ VARIANT_BOOL TranslateSurface1,
        /*[in]*/ VARIANT_BOOL TranslateSurface2,
        /*[in]*/ long KeepPieceIndex,
        /*[in]*/ VARIANT_BOOL NormalCut ) = 0;
      virtual HRESULT __stdcall FeatureBoss2 (
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2,
        /*[in]*/ VARIANT_BOOL TranslateSurface1,
        /*[in]*/ VARIANT_BOOL TranslateSurface2 ) = 0;
      virtual HRESULT __stdcall DissolveLibraryFeature (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall FeatureExtruRefSurface2 (
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2,
        /*[in]*/ VARIANT_BOOL TranslateSurface1,
        /*[in]*/ VARIANT_BOOL TranslateSurface2 ) = 0;
      virtual HRESULT __stdcall FeatureCutThin2 (
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2,
        /*[in]*/ VARIANT_BOOL TranslateSurface1,
        /*[in]*/ VARIANT_BOOL TranslateSurface2,
        /*[in]*/ double Thk1,
        /*[in]*/ double Thk2,
        /*[in]*/ double EndThk,
        /*[in]*/ long RevThinDir,
        /*[in]*/ long CapEnds,
        /*[in]*/ VARIANT_BOOL AddBends,
        /*[in]*/ double BendRad ) = 0;
      virtual HRESULT __stdcall FeatureBossThin2 (
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2,
        /*[in]*/ VARIANT_BOOL TranslateSurface1,
        /*[in]*/ VARIANT_BOOL TranslateSurface2,
        /*[in]*/ double Thk1,
        /*[in]*/ double Thk2,
        /*[in]*/ double EndThk,
        /*[in]*/ long RevThinDir,
        /*[in]*/ long CapEnds,
        /*[in]*/ VARIANT_BOOL AddBends,
        /*[in]*/ double BendRad ) = 0;
      virtual HRESULT __stdcall SimpleHole3 (
        /*[in]*/ double Dia,
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2,
        /*[in]*/ VARIANT_BOOL TranslateSurface1,
        /*[in]*/ VARIANT_BOOL TranslateSurface2 ) = 0;
      virtual HRESULT __stdcall EditUndo2 (
        /*[in]*/ long Steps ) = 0;
      virtual HRESULT __stdcall EditRedo2 (
        /*[in]*/ long Steps ) = 0;
      virtual HRESULT __stdcall AddConfiguration3 (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR Comment,
        /*[in]*/ BSTR AlternateName,
        /*[in]*/ long Options,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IAddConfiguration3 (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR Comment,
        /*[in]*/ BSTR AlternateName,
        /*[in]*/ long Options,
        /*[out,retval]*/ struct IConfiguration * * Retval ) = 0;
      virtual HRESULT __stdcall EditConfiguration3 (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR NewName,
        /*[in]*/ BSTR Comment,
        /*[in]*/ BSTR AlternateName,
        /*[in]*/ long Options,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetEquationMgr (
        /*[out,retval]*/ struct IEquationMgr * * Retval ) = 0;
      virtual HRESULT __stdcall ClosestDistance (
        /*[in]*/ IDispatch * Object1,
        /*[in]*/ IDispatch * Object2,
        /*[out]*/ VARIANT * Point1,
        /*[out]*/ VARIANT * Point2,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IClosestDistance (
        /*[in]*/ IDispatch * Object1,
        /*[in]*/ IDispatch * Object2,
        /*[out]*/ double * Point1,
        /*[out]*/ double * Point2,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall ReloadOrReplace (
        /*[in]*/ VARIANT_BOOL ReadOnly,
        /*[in]*/ BSTR ReplaceFileName,
        /*[in]*/ VARIANT_BOOL DiscardChanges,
        /*[out,retval]*/ long * Errors ) = 0;
      virtual HRESULT __stdcall get_FeatureManagerSplitterPosition (
        /*[out,retval]*/ double * SplitterPosition ) = 0;
      virtual HRESULT __stdcall put_FeatureManagerSplitterPosition (
        /*[in]*/ double SplitterPosition ) = 0;
      virtual HRESULT __stdcall GetCustomInfoValue (
        /*[in]*/ BSTR Configuration,
        /*[in]*/ BSTR FieldName,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall get_Printer (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Printer (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_PageSetup (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall get_IPageSetup (
        /*[out,retval]*/ struct IPageSetup * * Retval ) = 0;
      virtual HRESULT __stdcall InsertStackedBalloon (
        /*[in]*/ long Style,
        /*[in]*/ long Size,
        /*[in]*/ long UpperTextStyle,
        /*[in]*/ BSTR UpperText,
        /*[in]*/ long LowerTextStyle,
        /*[in]*/ BSTR LowerText,
        /*[out,retval]*/ struct INote * * Retval ) = 0;
      virtual HRESULT __stdcall SaveAs4 (
        /*[in]*/ BSTR Name,
        /*[in]*/ long Version,
        /*[in]*/ long Options,
        /*[in,out]*/ long * Errors,
        /*[in,out]*/ long * Warnings,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Save3 (
        /*[in]*/ long Options,
        /*[in,out]*/ long * Errors,
        /*[in,out]*/ long * Warnings,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreatePlaneFixed2 (
        /*[in]*/ VARIANT P1,
        /*[in]*/ VARIANT P2,
        /*[in]*/ VARIANT P3,
        /*[in]*/ VARIANT_BOOL UseGlobal,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreatePlaneFixed2 (
        /*[in]*/ double * P1,
        /*[in]*/ double * P2,
        /*[in]*/ double * P3,
        /*[in]*/ VARIANT_BOOL UseGlobal,
        /*[out,retval]*/ struct IRefPlane * * Retval ) = 0;
      virtual HRESULT __stdcall get_LargeAssemblyMode (
        /*[out,retval]*/ VARIANT_BOOL * Large ) = 0;
      virtual HRESULT __stdcall put_LargeAssemblyMode (
        /*[in]*/ VARIANT_BOOL Large ) = 0;
      virtual HRESULT __stdcall AddOrEditConfiguration (
        /*[in]*/ BSTR ConfigName,
        /*[in]*/ VARIANT Params,
        /*[in]*/ VARIANT Values,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IAddOrEditConfiguration (
        /*[in]*/ BSTR ConfigName,
        /*[in]*/ long ParamCount,
        /*[in]*/ BSTR * ParamNames,
        /*[in]*/ BSTR * ParamValues,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall ForceReleaseLocks (
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall get_FeatureManager (
        /*[out,retval]*/ struct IFeatureManager * * PFeatMgr ) = 0;
      virtual HRESULT __stdcall get_ModelViewManager (
        /*[out,retval]*/ struct IModelViewManager * * PModelViewMgr ) = 0;
      virtual HRESULT __stdcall get_Extension (
        /*[out,retval]*/ struct IModelDocExtension * * ModelDocExt ) = 0;
      virtual HRESULT __stdcall get_ConfigurationManager (
        /*[out,retval]*/ struct IConfigurationManager * * ConfigMgr ) = 0;
      virtual HRESULT __stdcall get_SketchManager (
        /*[out,retval]*/ struct ISketchManager * * PSketchMgr ) = 0;
      virtual HRESULT __stdcall EditDimensionProperties3 (
        /*[in]*/ long TolType,
        /*[in]*/ double TolMax,
        /*[in]*/ double TolMin,
        /*[in]*/ BSTR TolMaxFit,
        /*[in]*/ BSTR TolMinFit,
        /*[in]*/ VARIANT_BOOL UseDocPrec,
        /*[in]*/ long Precision,
        /*[in]*/ long ArrowsIn,
        /*[in]*/ VARIANT_BOOL UseDocArrows,
        /*[in]*/ long Arrow1,
        /*[in]*/ long Arrow2,
        /*[in]*/ BSTR PrefixText,
        /*[in]*/ BSTR SuffixText,
        /*[in]*/ VARIANT_BOOL ShowValue,
        /*[in]*/ BSTR CalloutText1,
        /*[in]*/ BSTR CalloutText2,
        /*[in]*/ VARIANT_BOOL CenterText,
        /*[in]*/ long ConfigOption,
        /*[in]*/ VARIANT ConfigNames,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IEditDimensionProperties3 (
        /*[in]*/ long TolType,
        /*[in]*/ double TolMax,
        /*[in]*/ double TolMin,
        /*[in]*/ BSTR TolMaxFit,
        /*[in]*/ BSTR TolMinFit,
        /*[in]*/ VARIANT_BOOL UseDocPrec,
        /*[in]*/ long Precision,
        /*[in]*/ long ArrowsIn,
        /*[in]*/ VARIANT_BOOL UseDocArrows,
        /*[in]*/ long Arrow1,
        /*[in]*/ long Arrow2,
        /*[in]*/ BSTR PrefixText,
        /*[in]*/ BSTR SuffixText,
        /*[in]*/ VARIANT_BOOL ShowValue,
        /*[in]*/ BSTR CalloutText1,
        /*[in]*/ BSTR CalloutText2,
        /*[in]*/ VARIANT_BOOL CenterText,
        /*[in]*/ long ConfigOption,
        /*[in]*/ long Count,
        /*[in]*/ BSTR * ConfigNames,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("84bc447e-d4a9-43cf-8287-5d9f5ab0ca41"))
IModelWindow : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Activate ( ) = 0;
      virtual HRESULT __stdcall get_HWnd (
        /*[out,retval]*/ long * HWnd ) = 0;
      virtual HRESULT __stdcall get_Title (
        /*[out,retval]*/ BSTR * ModelWindowTitle ) = 0;
      virtual HRESULT __stdcall get_ModelDoc (
        /*[out,retval]*/ struct IModelDoc2 * * LpModelDoc ) = 0;
};

struct __declspec(uuid("83a33d48-27c5-11ce-bfd4-00400513bb57"))
IFrame : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AddMenuItem (
        /*[in]*/ BSTR Menu,
        /*[in]*/ BSTR Item,
        /*[in]*/ long Position,
        /*[in]*/ BSTR CallbackFcnAndModule,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddMenu (
        /*[in]*/ BSTR Menu,
        /*[in]*/ long Position,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Dummy003 ( ) = 0;
      virtual HRESULT __stdcall Dummy004 ( ) = 0;
      virtual HRESULT __stdcall GetMenuState (
        /*[in]*/ BSTR MenuItemString,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall RenameMenu (
        /*[in]*/ BSTR MenuItemString,
        /*[in]*/ BSTR NewName ) = 0;
      virtual HRESULT __stdcall RemoveMenu (
        /*[in]*/ BSTR MenuItemString ) = 0;
      virtual HRESULT __stdcall AddMenuPopupItem (
        /*[in]*/ long DocType,
        /*[in]*/ long SelectType,
        /*[in]*/ BSTR Item,
        /*[in]*/ BSTR CallbackFcnAndModule,
        /*[in]*/ BSTR CustomNames,
        /*[in]*/ long Unused,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetStatusBarPane (
        /*[out,retval]*/ struct IStatusBarPane * * Retval ) = 0;
      virtual HRESULT __stdcall SetStatusBarText (
        /*[in]*/ BSTR MessageString ) = 0;
      virtual HRESULT __stdcall GetHWnd (
        /*[out,retval]*/ long * WindowHandle ) = 0;
      virtual HRESULT __stdcall GetSubMenuCount (
        /*[in]*/ long DocType,
        /*[in]*/ BSTR FullMenuName,
        /*[out,retval]*/ long * NumSubMenus ) = 0;
      virtual HRESULT __stdcall GetSubMenus (
        /*[in]*/ long DocType,
        /*[in]*/ BSTR FullMenuName,
        /*[out,retval]*/ VARIANT * SubMenus ) = 0;
      virtual HRESULT __stdcall IGetSubMenus (
        /*[in]*/ long DocType,
        /*[in]*/ BSTR FullMenuName,
        /*[in]*/ long NumSubMenus,
        /*[out,retval]*/ BSTR * SubMenus ) = 0;
      virtual HRESULT __stdcall AddMenuItem2 (
        /*[in]*/ BSTR Menu,
        /*[in]*/ BSTR Item,
        /*[in]*/ long Position,
        /*[in]*/ BSTR CallbackFcnAndModule,
        /*[in]*/ BSTR BitmapFileName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetHWndx64 (
        /*[out,retval]*/ __int64 * WindowHandle ) = 0;
      virtual HRESULT __stdcall get_ModelWindows (
        /*[out,retval]*/ VARIANT * Windows ) = 0;
      virtual HRESULT __stdcall GetModelWindowCount (
        /*[out,retval]*/ long * ModelWindowCount ) = 0;
      virtual HRESULT __stdcall IGetModelWindows (
        /*[in]*/ long ModelWindowCount,
        /*[out,retval]*/ struct IModelWindow * * LpModelWindows ) = 0;
      virtual HRESULT __stdcall ShowModelWindow (
        /*[in]*/ struct IModelWindow * LpModelWindow ) = 0;
      virtual HRESULT __stdcall get_MenuPinned (
        /*[out,retval]*/ VARIANT_BOOL * Pinned ) = 0;
      virtual HRESULT __stdcall put_MenuPinned (
        /*[in]*/ VARIANT_BOOL Pinned ) = 0;
      virtual HRESULT __stdcall GetMenu (
        /*[out,retval]*/ long * MenuHandle ) = 0;
      virtual HRESULT __stdcall GetMenux64 (
        /*[out,retval]*/ __int64 * MenuHandle ) = 0;
      virtual HRESULT __stdcall AddMenuPopupItem2 (
        /*[in]*/ long DocType,
        /*[in]*/ long SelectType,
        /*[in]*/ BSTR Item,
        /*[in]*/ BSTR CallbackFcnAndModule,
        /*[in]*/ BSTR CustomNames,
        /*[in]*/ long Unused,
        /*[in]*/ BSTR BitmapFileName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("76d82d71-339a-4d1c-91a1-f6ac0cf9b625"))
IEnumDocuments2 : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Next (
        /*[in]*/ long Celt,
        /*[out]*/ struct IModelDoc2 * * Rgelt,
        /*[in,out]*/ long * PceltFetched ) = 0;
      virtual HRESULT __stdcall Skip (
        /*[in]*/ long Celt ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
      virtual HRESULT __stdcall Clone (
        /*[out]*/ struct IEnumDocuments2 * * Ppenum ) = 0;
};

struct __declspec(uuid("83a33d4c-27c5-11ce-bfd4-00400513bb57"))
IModelView : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Xform (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall put_Xform (
        /*[in]*/ VARIANT Retval ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ VARIANT Retval ) = 0;
      virtual HRESULT __stdcall get_Translation (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall put_Translation (
        /*[in]*/ VARIANT Retval ) = 0;
      virtual HRESULT __stdcall get_Scale (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_Scale (
        /*[in]*/ double Retval ) = 0;
      virtual HRESULT __stdcall get_IXform (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_IXform (
        /*[in]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_IOrientation (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_IOrientation (
        /*[in]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_ITranslation (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_ITranslation (
        /*[in]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetViewHWnd (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall StartDynamics ( ) = 0;
      virtual HRESULT __stdcall StopDynamics ( ) = 0;
      virtual HRESULT __stdcall AddPerspective ( ) = 0;
      virtual HRESULT __stdcall RemovePerspective ( ) = 0;
      virtual HRESULT __stdcall HasPerspective (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetEyePoint (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetEyePoint (
        /*[in]*/ double * Eyept ) = 0;
      virtual HRESULT __stdcall GetViewPlaneDistance (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall InitializeShading ( ) = 0;
      virtual HRESULT __stdcall get_Orientation2 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall put_Orientation2 (
        /*[in]*/ VARIANT Retval ) = 0;
      virtual HRESULT __stdcall get_Translation2 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall put_Translation2 (
        /*[in]*/ VARIANT Retval ) = 0;
      virtual HRESULT __stdcall get_IOrientation2 (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_IOrientation2 (
        /*[in]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_ITranslation2 (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_ITranslation2 (
        /*[in]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetDisplayState (
        /*[in]*/ long DisplayType,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetViewDIB (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall ZoomByFactor (
        /*[in]*/ double Factor ) = 0;
      virtual HRESULT __stdcall TranslateBy (
        /*[in]*/ double X,
        /*[in]*/ double Y ) = 0;
      virtual HRESULT __stdcall RotateAboutCenter (
        /*[in]*/ double XAngle,
        /*[in]*/ double YAngle ) = 0;
      virtual HRESULT __stdcall RotateAboutPoint (
        /*[in]*/ double XAngle,
        /*[in]*/ double YAngle,
        /*[in]*/ double Ptx,
        /*[in]*/ double Pty,
        /*[in]*/ double Ptz ) = 0;
      virtual HRESULT __stdcall RotateAboutAxis (
        /*[in]*/ double Angle,
        /*[in]*/ double Ptx,
        /*[in]*/ double Pty,
        /*[in]*/ double Ptz,
        /*[in]*/ double AxisVecX,
        /*[in]*/ double AxisVecY,
        /*[in]*/ double AxisVecZ ) = 0;
      virtual HRESULT __stdcall SetEyePoint (
        /*[in]*/ VARIANT Eyept,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ISetEyePoint (
        /*[in]*/ double * Eyept,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetStereoSeparation (
        /*[in]*/ VARIANT DfSeparation,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ISetStereoSeparation (
        /*[in]*/ double * DfSeparation,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetStereoSeparation (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetStereoSeparation (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetDIBHeader (
        /*[in]*/ long Ldib ) = 0;
      virtual HRESULT __stdcall GetStripsOfDIB (
        /*[in]*/ long Ldib,
        /*[in]*/ long NScanLinesPerStrip,
        /*[in]*/ long StripIndex ) = 0;
      virtual HRESULT __stdcall put_FrameLeft (
        /*[in]*/ int Left ) = 0;
      virtual HRESULT __stdcall put_FrameTop (
        /*[in]*/ int Top ) = 0;
      virtual HRESULT __stdcall put_FrameWidth (
        /*[in]*/ int Width ) = 0;
      virtual HRESULT __stdcall put_FrameHeight (
        /*[in]*/ int Height ) = 0;
      virtual HRESULT __stdcall put_FrameState (
        /*[in]*/ int State ) = 0;
      virtual HRESULT __stdcall get_ObjectSizesAway (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_ObjectSizesAway (
        /*[in]*/ double Retval ) = 0;
      virtual HRESULT __stdcall get_DynamicMode (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall DrawHighlightedItems ( ) = 0;
      virtual HRESULT __stdcall GetNext (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNext (
        /*[out,retval]*/ struct IModelView * * Retval ) = 0;
      virtual HRESULT __stdcall get_Scale2 (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_Scale2 (
        /*[in]*/ double Retval ) = 0;
      virtual HRESULT __stdcall get_HlrQuality (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall put_HlrQuality (
        /*[in]*/ long Retval ) = 0;
      virtual HRESULT __stdcall get_XorHighlight (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_XorHighlight (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_DisplayZebraStripes (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_DisplayZebraStripes (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_Transform (
        /*[out,retval]*/ struct IMathTransform * * Xform ) = 0;
      virtual HRESULT __stdcall put_Transform (
        /*[in]*/ struct IMathTransform * Xform ) = 0;
      virtual HRESULT __stdcall get_Orientation3 (
        /*[out,retval]*/ struct IMathTransform * * Xform ) = 0;
      virtual HRESULT __stdcall put_Orientation3 (
        /*[in]*/ struct IMathTransform * Xform ) = 0;
      virtual HRESULT __stdcall get_Translation3 (
        /*[out,retval]*/ struct IMathVector * * VectorObj ) = 0;
      virtual HRESULT __stdcall put_Translation3 (
        /*[in]*/ struct IMathVector * VectorObj ) = 0;
      virtual HRESULT __stdcall ProjectModelPoint (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out]*/ double * XOut,
        /*[out]*/ double * YOut,
        /*[out]*/ double * ZOut ) = 0;
      virtual HRESULT __stdcall UnprojectModelPoint (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out]*/ double * XOut,
        /*[out]*/ double * YOut,
        /*[out]*/ double * ZOut ) = 0;
      virtual HRESULT __stdcall get_SuppressWaitCursorDuringRedraw (
        /*[out,retval]*/ VARIANT_BOOL * Suppress ) = 0;
      virtual HRESULT __stdcall put_SuppressWaitCursorDuringRedraw (
        /*[in]*/ VARIANT_BOOL Suppress ) = 0;
      virtual HRESULT __stdcall get_FrameLeft (
        /*[out,retval]*/ int * Left ) = 0;
      virtual HRESULT __stdcall get_FrameTop (
        /*[out,retval]*/ int * Top ) = 0;
      virtual HRESULT __stdcall get_FrameWidth (
        /*[out,retval]*/ int * Width ) = 0;
      virtual HRESULT __stdcall get_FrameHeight (
        /*[out,retval]*/ int * Height ) = 0;
      virtual HRESULT __stdcall get_FrameState (
        /*[out,retval]*/ int * State ) = 0;
      virtual HRESULT __stdcall DrawTransparentFeatureTree ( ) = 0;
      virtual HRESULT __stdcall get_DisplayMode (
        /*[out,retval]*/ long * State ) = 0;
      virtual HRESULT __stdcall put_DisplayMode (
        /*[in]*/ long State ) = 0;
      virtual HRESULT __stdcall get_EnableGraphicsUpdate (
        /*[out,retval]*/ VARIANT_BOOL * State ) = 0;
      virtual HRESULT __stdcall put_EnableGraphicsUpdate (
        /*[in]*/ VARIANT_BOOL State ) = 0;
      virtual HRESULT __stdcall get_Camera (
        /*[out,retval]*/ struct ICamera * * Retval ) = 0;
      virtual HRESULT __stdcall put_Camera (
        /*[in]*/ struct ICamera * Retval ) = 0;
      virtual HRESULT __stdcall SetCameraByName (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetIsoPlaneDistance (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_Linked (
        /*[out,retval]*/ VARIANT_BOOL * Linked ) = 0;
      virtual HRESULT __stdcall GetViewDIBx64 (
        /*[out,retval]*/ __int64 * Retval ) = 0;
      virtual HRESULT __stdcall GetDIBHeaderx64 (
        /*[in]*/ __int64 Ldib ) = 0;
      virtual HRESULT __stdcall GetStripsOfDIBx64 (
        /*[in]*/ __int64 Ldib,
        /*[in]*/ long NScanLinesPerStrip,
        /*[in]*/ long StripIndex ) = 0;
      virtual HRESULT __stdcall GetViewHWndx64 (
        /*[out,retval]*/ __int64 * Retval ) = 0;
      virtual HRESULT __stdcall GetMouse (
        /*[out,retval]*/ struct IMouse * * Mouse ) = 0;
      virtual HRESULT __stdcall SectionAnnotationViewAttr (
        /*[in]*/ VARIANT_BOOL BarrayIn,
        /*[in]*/ double DistIn,
        /*[in]*/ BSTR LabelIn ) = 0;
      virtual HRESULT __stdcall RollBy (
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall TurnBy (
        /*[in]*/ double XAngle,
        /*[in]*/ double YAngle ) = 0;
      virtual HRESULT __stdcall GraphicsRedraw (
        /*[in]*/ VARIANT Rect ) = 0;
      virtual HRESULT __stdcall IGraphicsRedraw (
        /*[in]*/ long * Rect ) = 0;
      virtual HRESULT __stdcall get_VisibilityViewTools (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_VisibilityViewTools (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall Activate ( ) = 0;
      virtual HRESULT __stdcall GetVisibleBox (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetVisibleBox (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall get_UpdateAllGraphicsLayers (
        /*[out,retval]*/ VARIANT_BOOL * State ) = 0;
      virtual HRESULT __stdcall put_UpdateAllGraphicsLayers (
        /*[in]*/ VARIANT_BOOL State ) = 0;
      virtual HRESULT __stdcall GetBkgdImageDisplayAreaAspectRatio (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall ShowMagnifyingGlass (
        /*[in]*/ double Ptx,
        /*[in]*/ double Pty,
        /*[in]*/ double Ptz,
        /*[in]*/ double ZoomFactor,
        /*[in]*/ VARIANT_BOOL HideOnClick,
        /*[in]*/ VARIANT_BOOL FollowMouse ) = 0;
      virtual HRESULT __stdcall HideMagnifyingGlass ( ) = 0;
      virtual HRESULT __stdcall MoveMagnifyingGlass (
        /*[in]*/ double Ptx,
        /*[in]*/ double Pty,
        /*[in]*/ double Ptz ) = 0;
};

struct __declspec(uuid("83a33db1-27c5-11ce-bfd4-00400513bb57"))
IEnumModelViews : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Next (
        /*[in]*/ long Celt,
        /*[out]*/ struct IModelView * * Rgelt,
        /*[in,out]*/ long * PceltFetched ) = 0;
      virtual HRESULT __stdcall Skip (
        /*[in]*/ long Celt ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
      virtual HRESULT __stdcall Clone (
        /*[out]*/ struct IEnumModelViews * * Ppenum ) = 0;
};

struct __declspec(uuid("f7d97f82-162e-11d4-aeab-00c04fa0ac51"))
IMathTransform : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Multiply (
        /*[in]*/ IDispatch * TransformObjIn,
        /*[out,retval]*/ IDispatch * * TransformObjOut ) = 0;
      virtual HRESULT __stdcall IMultiply (
        /*[in]*/ struct IMathTransform * TransformObjIn,
        /*[out,retval]*/ struct IMathTransform * * TransformObjOut ) = 0;
      virtual HRESULT __stdcall get_ArrayData (
        /*[out,retval]*/ VARIANT * ArrayDataOut ) = 0;
      virtual HRESULT __stdcall put_ArrayData (
        /*[in]*/ VARIANT ArrayDataOut ) = 0;
      virtual HRESULT __stdcall get_IArrayData (
        /*[out,retval]*/ double * ArrayDataOut ) = 0;
      virtual HRESULT __stdcall put_IArrayData (
        /*[in]*/ double * ArrayDataOut ) = 0;
      virtual HRESULT __stdcall GetData (
        /*[in,out]*/ IDispatch * * XAxisObjOut,
        /*[in,out]*/ IDispatch * * YAxisObjOut,
        /*[in,out]*/ IDispatch * * ZAxisObjOut,
        /*[in,out]*/ IDispatch * * TransformObjOut,
        /*[in,out]*/ double * ScaleOut ) = 0;
      virtual HRESULT __stdcall IGetData (
        /*[in,out]*/ struct IMathVector * * XAxisObjOut,
        /*[in,out]*/ struct IMathVector * * YAxisObjOut,
        /*[in,out]*/ struct IMathVector * * ZAxisObjOut,
        /*[in,out]*/ struct IMathVector * * TransformObjOut,
        /*[in,out]*/ double * ScaleOut ) = 0;
      virtual HRESULT __stdcall SetData (
        /*[in]*/ IDispatch * XAxisObjIn,
        /*[in]*/ IDispatch * YAxisObjIn,
        /*[in]*/ IDispatch * ZAxisObjIn,
        /*[in]*/ IDispatch * TransformObjIn,
        /*[in]*/ double ScaleValIn ) = 0;
      virtual HRESULT __stdcall ISetData (
        /*[in]*/ struct IMathVector * XAxisObjIn,
        /*[in]*/ struct IMathVector * YAxisObjIn,
        /*[in]*/ struct IMathVector * ZAxisObjIn,
        /*[in]*/ struct IMathVector * TransformObjIn,
        /*[in]*/ double ScaleValIn ) = 0;
      virtual HRESULT __stdcall Inverse (
        /*[out,retval]*/ IDispatch * * TransformObjOut ) = 0;
      virtual HRESULT __stdcall IInverse (
        /*[out,retval]*/ struct IMathTransform * * TransformObjOut ) = 0;
      virtual HRESULT __stdcall GetData2 (
        /*[in,out]*/ IDispatch * * XAxisObjOut,
        /*[in,out]*/ IDispatch * * YAxisObjOut,
        /*[in,out]*/ IDispatch * * ZAxisObjOut,
        /*[in,out]*/ IDispatch * * TransformObjOut,
        /*[in,out]*/ double * ScaleOut ) = 0;
      virtual HRESULT __stdcall IGetData2 (
        /*[in,out]*/ struct IMathVector * * XAxisObjOut,
        /*[in,out]*/ struct IMathVector * * YAxisObjOut,
        /*[in,out]*/ struct IMathVector * * ZAxisObjOut,
        /*[in,out]*/ struct IMathVector * * TransformObjOut,
        /*[in,out]*/ double * ScaleOut ) = 0;
};

struct __declspec(uuid("158bad02-d515-4400-ada4-f9941c974dc1"))
IMassProperty : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseSystemUnits (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_UseSystemUnits (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_Mass (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_Volume (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_Density (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_SurfaceArea (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_CenterOfMass (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetCenterOfMass (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_PrincipleAxesOfInertia (
        /*[in]*/ long Axis,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetPrincipleAxesOfInertia (
        /*[in]*/ long Axis,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_PrincipleMomentsOfInertia (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetPrincipleMomentsOfInertia (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetMomentOfInertia (
        /*[in]*/ long WhereTaken,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetMomentOfInertia (
        /*[in]*/ long WhereTaken,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall SetCoordinateSystem (
        /*[in]*/ struct IMathTransform * Coords,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddBodies (
        /*[in]*/ VARIANT BodyListIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IAddBodies (
        /*[in]*/ long NumBodies,
        /*[in]*/ struct IBody2 * * BodyListIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetAssignedMassProp (
        /*[in]*/ double Mass,
        /*[in]*/ double Center_x,
        /*[in]*/ double Center_y,
        /*[in]*/ double Center_z,
        /*[in]*/ long Config_opt,
        /*[in]*/ VARIANT Config_names,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ISetAssignedMassProp (
        /*[in]*/ double Mass,
        /*[in]*/ double Center_x,
        /*[in]*/ double Center_y,
        /*[in]*/ double Center_z,
        /*[in]*/ long Config_opt,
        /*[in]*/ long ConfigNum,
        /*[in]*/ BSTR * Config_names,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_UserAssigned (
        /*[out,retval]*/ VARIANT_BOOL * Flag ) = 0;
      virtual HRESULT __stdcall put_UserAssigned (
        /*[in]*/ VARIANT_BOOL Flag ) = 0;
};

struct __declspec(uuid("f7d97f86-162e-11d4-aeab-00c04fa0ac51"))
IMathVector : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall MultiplyTransform (
        /*[in]*/ IDispatch * TransformObjIn,
        /*[out,retval]*/ IDispatch * * VectorObjOut ) = 0;
      virtual HRESULT __stdcall IMultiplyTransform (
        /*[in]*/ struct IMathTransform * TransformObjIn,
        /*[out,retval]*/ struct IMathVector * * VectorObjOut ) = 0;
      virtual HRESULT __stdcall get_ArrayData (
        /*[out,retval]*/ VARIANT * ArrayDataOut ) = 0;
      virtual HRESULT __stdcall put_ArrayData (
        /*[in]*/ VARIANT ArrayDataOut ) = 0;
      virtual HRESULT __stdcall get_IArrayData (
        /*[out,retval]*/ double * ArrayDataOut ) = 0;
      virtual HRESULT __stdcall put_IArrayData (
        /*[in]*/ double * ArrayDataOut ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ IDispatch * VectorObjIn,
        /*[out,retval]*/ IDispatch * * VectorObjOut ) = 0;
      virtual HRESULT __stdcall IAdd (
        /*[in]*/ struct IMathVector * VectorObjIn,
        /*[out,retval]*/ struct IMathVector * * VectorObjOut ) = 0;
      virtual HRESULT __stdcall Subtract (
        /*[in]*/ IDispatch * VectorObjIn,
        /*[out,retval]*/ IDispatch * * VectorObjOut ) = 0;
      virtual HRESULT __stdcall ISubtract (
        /*[in]*/ struct IMathVector * VectorObjIn,
        /*[out,retval]*/ struct IMathVector * * VectorObjOut ) = 0;
      virtual HRESULT __stdcall Scale (
        /*[in]*/ double ValueIn,
        /*[out,retval]*/ IDispatch * * VectorObjOut ) = 0;
      virtual HRESULT __stdcall IScale (
        /*[in]*/ double ValueIn,
        /*[out,retval]*/ struct IMathVector * * VectorObjOut ) = 0;
      virtual HRESULT __stdcall GetLength (
        /*[out,retval]*/ double * ValueOut ) = 0;
      virtual HRESULT __stdcall Dot (
        /*[in]*/ IDispatch * VectorObjIn,
        /*[out,retval]*/ double * ValOut ) = 0;
      virtual HRESULT __stdcall IDot (
        /*[in]*/ struct IMathVector * VectorObjIn,
        /*[out,retval]*/ double * ValOut ) = 0;
      virtual HRESULT __stdcall Cross (
        /*[in]*/ IDispatch * VectorObjIn,
        /*[out,retval]*/ IDispatch * * VectorObjOut ) = 0;
      virtual HRESULT __stdcall ICross (
        /*[in]*/ struct IMathVector * VectorObjIn,
        /*[out,retval]*/ struct IMathVector * * VectorObjOut ) = 0;
      virtual HRESULT __stdcall ConvertToPoint (
        /*[out,retval]*/ IDispatch * * PointObjOut ) = 0;
      virtual HRESULT __stdcall IConvertToPoint (
        /*[out,retval]*/ struct IMathPoint * * PointObjOut ) = 0;
      virtual HRESULT __stdcall Normalise (
        /*[out,retval]*/ struct IMathVector * * Retval ) = 0;
};

struct __declspec(uuid("f7d97f84-162e-11d4-aeab-00c04fa0ac51"))
IMathPoint : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall MultiplyTransform (
        /*[in]*/ IDispatch * TransformObjIn,
        /*[out,retval]*/ IDispatch * * PointObjOut ) = 0;
      virtual HRESULT __stdcall IMultiplyTransform (
        /*[in]*/ struct IMathTransform * TransformObjIn,
        /*[out,retval]*/ struct IMathPoint * * PointObjOut ) = 0;
      virtual HRESULT __stdcall get_ArrayData (
        /*[out,retval]*/ VARIANT * ArrayDataOut ) = 0;
      virtual HRESULT __stdcall put_ArrayData (
        /*[in]*/ VARIANT ArrayDataOut ) = 0;
      virtual HRESULT __stdcall get_IArrayData (
        /*[out,retval]*/ double * ArrayDataOut ) = 0;
      virtual HRESULT __stdcall put_IArrayData (
        /*[in]*/ double * ArrayDataOut ) = 0;
      virtual HRESULT __stdcall AddVector (
        /*[in]*/ IDispatch * VectorObjIn,
        /*[out,retval]*/ IDispatch * * PointObjOut ) = 0;
      virtual HRESULT __stdcall IAddVector (
        /*[in]*/ struct IMathVector * VectorObjIn,
        /*[out,retval]*/ struct IMathPoint * * PointObjOut ) = 0;
      virtual HRESULT __stdcall SubtractVector (
        /*[in]*/ IDispatch * VectorObjIn,
        /*[out,retval]*/ IDispatch * * PointObjOut ) = 0;
      virtual HRESULT __stdcall ISubtractVector (
        /*[in]*/ struct IMathVector * VectorObjIn,
        /*[out,retval]*/ struct IMathPoint * * PointObjOut ) = 0;
      virtual HRESULT __stdcall Subtract (
        /*[in]*/ IDispatch * PointObjIn,
        /*[out,retval]*/ IDispatch * * VectorObjOut ) = 0;
      virtual HRESULT __stdcall ISubtract (
        /*[in]*/ struct IMathPoint * PointObjIn,
        /*[out,retval]*/ struct IMathVector * * VectorObjOut ) = 0;
      virtual HRESULT __stdcall Scale (
        /*[in]*/ double ValueIn,
        /*[out,retval]*/ IDispatch * * PointObjOut ) = 0;
      virtual HRESULT __stdcall IScale (
        /*[in]*/ double ValueIn,
        /*[out,retval]*/ struct IMathPoint * * PointObjOut ) = 0;
      virtual HRESULT __stdcall ConvertToVector (
        /*[out,retval]*/ IDispatch * * VectorObjOut ) = 0;
      virtual HRESULT __stdcall IConvertToVector (
        /*[out,retval]*/ struct IMathVector * * VectorObjOut ) = 0;
};

struct __declspec(uuid("48bf52ea-4654-4227-8c54-8af49c3bcef2"))
ICamera : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ long * ID ) = 0;
      virtual HRESULT __stdcall GetPosition (
        /*[out,retval]*/ struct IMathPoint * * Retval ) = 0;
      virtual HRESULT __stdcall GetViewVector (
        /*[out,retval]*/ struct IMathVector * * Retval ) = 0;
      virtual HRESULT __stdcall GetUpVector (
        /*[out,retval]*/ struct IMathVector * * Retval ) = 0;
      virtual HRESULT __stdcall GetFocalDistance (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_Perspective (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_Perspective (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_FieldOfViewHeight (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_FieldOfViewHeight (
        /*[in]*/ double Retval ) = 0;
      virtual HRESULT __stdcall get_FieldOfViewDepth (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_FieldOfViewDepth (
        /*[in]*/ double Retval ) = 0;
      virtual HRESULT __stdcall get_FieldOfViewAngle (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_FieldOfViewAngle (
        /*[in]*/ double Retval ) = 0;
      virtual HRESULT __stdcall get_DepthOfFieldEnabled (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_DepthOfFieldEnabled (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_DepthOfFieldOffset (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_DepthOfFieldOffset (
        /*[in]*/ double Retval ) = 0;
      virtual HRESULT __stdcall get_AspectRatio (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_AspectRatio (
        /*[in]*/ double Retval ) = 0;
      virtual HRESULT __stdcall GetPointOfInterestDistance (
        /*[out,retval]*/ double * Distance ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall get_LockCameraPosition (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_LockCameraPosition (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_TargetPointBySelection (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_TargetPointBySelection (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_TargetPointPosition (
        /*[out,retval]*/ struct IMathPoint * * Retval ) = 0;
      virtual HRESULT __stdcall put_TargetPointPosition (
        /*[in]*/ struct IMathPoint * Retval ) = 0;
      virtual HRESULT __stdcall GetTargetPointEntity (
        /*[out]*/ struct IMathPoint * * Point,
        /*[out]*/ double * PercentTarget,
        /*[out,retval]*/ IDispatch * * TargetPointEntity ) = 0;
      virtual HRESULT __stdcall SetTargetPointEntity (
        /*[in]*/ struct IMathPoint * Point,
        /*[in]*/ double PercentTarget,
        /*[in]*/ IDispatch * TargetPointEntity ) = 0;
      virtual HRESULT __stdcall GetPositionEntity (
        /*[out]*/ struct IMathPoint * * Point,
        /*[out]*/ double * PercentPosition,
        /*[out,retval]*/ IDispatch * * PositionEntity ) = 0;
      virtual HRESULT __stdcall SetPositionEntity (
        /*[in]*/ struct IMathPoint * Point,
        /*[in]*/ double PercentPosition,
        /*[in]*/ IDispatch * PositionEntity ) = 0;
      virtual HRESULT __stdcall GetPositionCartesian (
        /*[out]*/ double * X,
        /*[out]*/ double * Y,
        /*[out]*/ double * Z ) = 0;
      virtual HRESULT __stdcall SetPositionCartesian (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z ) = 0;
      virtual HRESULT __stdcall GetPositionSpherical (
        /*[out]*/ double * L,
        /*[out]*/ double * A1,
        /*[out]*/ double * A2 ) = 0;
      virtual HRESULT __stdcall SetPositionSpherical (
        /*[in]*/ double L,
        /*[in]*/ double A1,
        /*[in]*/ double A2 ) = 0;
      virtual HRESULT __stdcall get_PositionType (
        /*[out,retval]*/ long * PositionType ) = 0;
      virtual HRESULT __stdcall put_PositionType (
        /*[in]*/ long PositionType ) = 0;
      virtual HRESULT __stdcall get_RotationRollEntity (
        /*[out,retval]*/ IDispatch * * RotationRollEntity ) = 0;
      virtual HRESULT __stdcall put_RotationRollEntity (
        /*[in]*/ IDispatch * RotationRollEntity ) = 0;
      virtual HRESULT __stdcall get_RotationRollBySelection (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_RotationRollBySelection (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_RotationRollAngle (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_RotationRollAngle (
        /*[in]*/ double Retval ) = 0;
      virtual HRESULT __stdcall get_RotationRollFlipDirection (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_RotationRollFlipDirection (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
};

struct __declspec(uuid("9caaa1aa-f2fc-11d5-af66-00c04f603faf"))
ICallout : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Label (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_Label (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall get_TargetStyle (
        /*[out,retval]*/ long * Style ) = 0;
      virtual HRESULT __stdcall put_TargetStyle (
        /*[in]*/ long Style ) = 0;
      virtual HRESULT __stdcall get_TextBox (
        /*[out,retval]*/ VARIANT_BOOL * Box ) = 0;
      virtual HRESULT __stdcall put_TextBox (
        /*[in]*/ VARIANT_BOOL Box ) = 0;
      virtual HRESULT __stdcall get_Label2 (
        /*[in]*/ long RowID,
        /*[out,retval]*/ BSTR * BstrLabel ) = 0;
      virtual HRESULT __stdcall put_Label2 (
        /*[in]*/ long RowID,
        /*[in]*/ BSTR BstrLabel ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[in]*/ long RowID,
        /*[out,retval]*/ BSTR * BstrValue ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ long RowID,
        /*[in]*/ BSTR BstrValue ) = 0;
      virtual HRESULT __stdcall GetTargetPoint (
        /*[in]*/ long RowID,
        /*[out]*/ double * XPos,
        /*[out]*/ double * YPos,
        /*[out]*/ double * ZPos ) = 0;
      virtual HRESULT __stdcall SetTargetPoint (
        /*[in]*/ long RowID,
        /*[in]*/ double XPos,
        /*[in]*/ double YPos,
        /*[in]*/ double ZPos ) = 0;
      virtual HRESULT __stdcall UpdatePosition (
        /*[in]*/ double XPos,
        /*[in]*/ double YPos,
        /*[in]*/ double ZPos ) = 0;
      virtual HRESULT __stdcall get_ValueInactive (
        /*[in]*/ long RowID,
        /*[out,retval]*/ VARIANT_BOOL * VbValueInActive ) = 0;
      virtual HRESULT __stdcall put_ValueInactive (
        /*[in]*/ long RowID,
        /*[in]*/ VARIANT_BOOL VbValueInActive ) = 0;
      virtual HRESULT __stdcall get_OpaqueColor (
        /*[out,retval]*/ long * OpaqueColor ) = 0;
      virtual HRESULT __stdcall put_OpaqueColor (
        /*[in]*/ long OpaqueColor ) = 0;
      virtual HRESULT __stdcall get_TextColor (
        /*[in]*/ long RowID,
        /*[out,retval]*/ long * TextColor ) = 0;
      virtual HRESULT __stdcall put_TextColor (
        /*[in]*/ long RowID,
        /*[in]*/ long TextColor ) = 0;
      virtual HRESULT __stdcall get_MultipleLeaders (
        /*[out,retval]*/ VARIANT_BOOL * VbMultipleLeaders ) = 0;
      virtual HRESULT __stdcall put_MultipleLeaders (
        /*[in]*/ VARIANT_BOOL VbMultipleLeaders ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ struct IMathPoint * * Retval ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ struct IMathPoint * Retval ) = 0;
      virtual HRESULT __stdcall Display (
        /*[in]*/ VARIANT_BOOL Display,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetLeader (
        /*[in,out]*/ VARIANT_BOOL * Visible,
        /*[in,out]*/ VARIANT_BOOL * Multiple,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetLeader (
        /*[in]*/ VARIANT_BOOL Visible,
        /*[in]*/ VARIANT_BOOL Multiple,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("83a33d84-27c5-11ce-bfd4-00400513bb57"))
IRefPlane : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetRefPlaneParams (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetRefPlaneParams (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_Transform (
        /*[out,retval]*/ struct IMathTransform * * Retval ) = 0;
      virtual HRESULT __stdcall get_BoundingBox (
        /*[out,retval]*/ VARIANT * VBoundingPoints ) = 0;
      virtual HRESULT __stdcall IGetBoundingBox (
        /*[out,retval]*/ struct IMathPoint * * PBoundingPoints ) = 0;
};

struct __declspec(uuid("f73fa7fd-c4e7-44ac-82fa-3e03a11ddb21"))
ISectionViewData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_FirstPlane (
        /*[out,retval]*/ IDispatch * * Plane ) = 0;
      virtual HRESULT __stdcall put_FirstPlane (
        /*[in]*/ IDispatch * Plane ) = 0;
      virtual HRESULT __stdcall get_SecondPlane (
        /*[out,retval]*/ IDispatch * * Plane ) = 0;
      virtual HRESULT __stdcall put_SecondPlane (
        /*[in]*/ IDispatch * Plane ) = 0;
      virtual HRESULT __stdcall get_ThirdPlane (
        /*[out,retval]*/ IDispatch * * Plane ) = 0;
      virtual HRESULT __stdcall put_ThirdPlane (
        /*[in]*/ IDispatch * Plane ) = 0;
      virtual HRESULT __stdcall get_FirstOffset (
        /*[out,retval]*/ double * Offset ) = 0;
      virtual HRESULT __stdcall put_FirstOffset (
        /*[in]*/ double Offset ) = 0;
      virtual HRESULT __stdcall get_SecondOffset (
        /*[out,retval]*/ double * Offset ) = 0;
      virtual HRESULT __stdcall put_SecondOffset (
        /*[in]*/ double Offset ) = 0;
      virtual HRESULT __stdcall get_ThirdOffset (
        /*[out,retval]*/ double * Offset ) = 0;
      virtual HRESULT __stdcall put_ThirdOffset (
        /*[in]*/ double Offset ) = 0;
      virtual HRESULT __stdcall get_FirstRotationX (
        /*[out,retval]*/ double * RotationX ) = 0;
      virtual HRESULT __stdcall put_FirstRotationX (
        /*[in]*/ double RotationX ) = 0;
      virtual HRESULT __stdcall get_SecondRotationX (
        /*[out,retval]*/ double * RotationX ) = 0;
      virtual HRESULT __stdcall put_SecondRotationX (
        /*[in]*/ double RotationX ) = 0;
      virtual HRESULT __stdcall get_ThirdRotationX (
        /*[out,retval]*/ double * RotationX ) = 0;
      virtual HRESULT __stdcall put_ThirdRotationX (
        /*[in]*/ double RotationX ) = 0;
      virtual HRESULT __stdcall get_FirstRotationY (
        /*[out,retval]*/ double * RotationY ) = 0;
      virtual HRESULT __stdcall put_FirstRotationY (
        /*[in]*/ double RotationY ) = 0;
      virtual HRESULT __stdcall get_SecondRotationY (
        /*[out,retval]*/ double * RotationY ) = 0;
      virtual HRESULT __stdcall put_SecondRotationY (
        /*[in]*/ double RotationY ) = 0;
      virtual HRESULT __stdcall get_ThirdRotationY (
        /*[out,retval]*/ double * RotationY ) = 0;
      virtual HRESULT __stdcall put_ThirdRotationY (
        /*[in]*/ double RotationY ) = 0;
      virtual HRESULT __stdcall get_FirstColor (
        /*[out,retval]*/ long * Color ) = 0;
      virtual HRESULT __stdcall put_FirstColor (
        /*[in]*/ long Color ) = 0;
      virtual HRESULT __stdcall get_SecondColor (
        /*[out,retval]*/ long * Color ) = 0;
      virtual HRESULT __stdcall put_SecondColor (
        /*[in]*/ long Color ) = 0;
      virtual HRESULT __stdcall get_ThirdColor (
        /*[out,retval]*/ long * Color ) = 0;
      virtual HRESULT __stdcall put_ThirdColor (
        /*[in]*/ long Color ) = 0;
      virtual HRESULT __stdcall get_FirstReverseDirection (
        /*[out,retval]*/ VARIANT_BOOL * Reverse ) = 0;
      virtual HRESULT __stdcall put_FirstReverseDirection (
        /*[in]*/ VARIANT_BOOL Reverse ) = 0;
      virtual HRESULT __stdcall get_SecondReverseDirection (
        /*[out,retval]*/ VARIANT_BOOL * Reverse ) = 0;
      virtual HRESULT __stdcall put_SecondReverseDirection (
        /*[in]*/ VARIANT_BOOL Reverse ) = 0;
      virtual HRESULT __stdcall get_ThirdReverseDirection (
        /*[out,retval]*/ VARIANT_BOOL * Reverse ) = 0;
      virtual HRESULT __stdcall put_ThirdReverseDirection (
        /*[in]*/ VARIANT_BOOL Reverse ) = 0;
      virtual HRESULT __stdcall get_ShowSectionCap (
        /*[out,retval]*/ VARIANT_BOOL * ShowCap ) = 0;
      virtual HRESULT __stdcall put_ShowSectionCap (
        /*[in]*/ VARIANT_BOOL ShowCap ) = 0;
      virtual HRESULT __stdcall GetFirstPlaneParameters (
        /*[out]*/ struct IMathPoint * * PlaneCenter,
        /*[out]*/ struct IMathVector * * PlaneVector ) = 0;
      virtual HRESULT __stdcall GetSecondPlaneParameters (
        /*[out]*/ struct IMathPoint * * PlaneCenter,
        /*[out]*/ struct IMathVector * * PlaneVector ) = 0;
      virtual HRESULT __stdcall GetThirdPlaneParameters (
        /*[out]*/ struct IMathPoint * * PlaneCenter,
        /*[out]*/ struct IMathVector * * PlaneVector ) = 0;
};

struct __declspec(uuid("0f8f1b36-faba-4552-82c3-5511ca5124e6"))
ISpring : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SpringType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_SpringType (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall get_Revolution (
        /*[out,retval]*/ double * Rev ) = 0;
      virtual HRESULT __stdcall put_Revolution (
        /*[in]*/ double Rev ) = 0;
      virtual HRESULT __stdcall get_StartingEndLength (
        /*[out,retval]*/ double * Length ) = 0;
      virtual HRESULT __stdcall put_StartingEndLength (
        /*[in]*/ double Length ) = 0;
      virtual HRESULT __stdcall get_EndingEndLength (
        /*[out,retval]*/ double * Length ) = 0;
      virtual HRESULT __stdcall put_EndingEndLength (
        /*[in]*/ double Length ) = 0;
      virtual HRESULT __stdcall get_StartingRevolution (
        /*[out,retval]*/ double * Rev ) = 0;
      virtual HRESULT __stdcall put_StartingRevolution (
        /*[in]*/ double Rev ) = 0;
      virtual HRESULT __stdcall get_EndingRevolution (
        /*[out,retval]*/ double * Rev ) = 0;
      virtual HRESULT __stdcall put_EndingRevolution (
        /*[in]*/ double Rev ) = 0;
      virtual HRESULT __stdcall get_StartingPitch (
        /*[out,retval]*/ double * Pitch ) = 0;
      virtual HRESULT __stdcall put_StartingPitch (
        /*[in]*/ double Pitch ) = 0;
      virtual HRESULT __stdcall get_EndingPitch (
        /*[out,retval]*/ double * Pitch ) = 0;
      virtual HRESULT __stdcall put_EndingPitch (
        /*[in]*/ double Pitch ) = 0;
      virtual HRESULT __stdcall get_Tolerance (
        /*[out,retval]*/ double * Tolerance ) = 0;
      virtual HRESULT __stdcall put_Tolerance (
        /*[in]*/ double Tolerance ) = 0;
      virtual HRESULT __stdcall get_Pitch (
        /*[out,retval]*/ double * Pitch ) = 0;
      virtual HRESULT __stdcall put_Pitch (
        /*[in]*/ double Pitch ) = 0;
      virtual HRESULT __stdcall get_ProfileType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_ProfileType (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall get_ProfileParameters (
        /*[out,retval]*/ VARIANT * Params ) = 0;
      virtual HRESULT __stdcall put_ProfileParameters (
        /*[in]*/ VARIANT Params ) = 0;
      virtual HRESULT __stdcall get_StartingEndType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_StartingEndType (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall get_EndingEndType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_EndingEndType (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall get_Clockwise (
        /*[out,retval]*/ VARIANT_BOOL * Dir ) = 0;
      virtual HRESULT __stdcall put_Clockwise (
        /*[in]*/ VARIANT_BOOL Dir ) = 0;
      virtual HRESULT __stdcall get_ReverseDirection (
        /*[out,retval]*/ VARIANT_BOOL * Dir ) = 0;
      virtual HRESULT __stdcall put_ReverseDirection (
        /*[in]*/ VARIANT_BOOL Dir ) = 0;
      virtual HRESULT __stdcall get_GroundType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_GroundType (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall get_BaseProfile (
        /*[out,retval]*/ struct IBody2 * * Profile ) = 0;
      virtual HRESULT __stdcall put_BaseProfile (
        /*[in]*/ struct IBody2 * Profile ) = 0;
      virtual HRESULT __stdcall get_SectionProfile (
        /*[out,retval]*/ struct IBody2 * * Profile ) = 0;
      virtual HRESULT __stdcall put_SectionProfile (
        /*[in]*/ struct IBody2 * Profile ) = 0;
      virtual HRESULT __stdcall get_TaperAngle (
        /*[out,retval]*/ double * Ang ) = 0;
      virtual HRESULT __stdcall put_TaperAngle (
        /*[in]*/ double Ang ) = 0;
      virtual HRESULT __stdcall get_TaperOutward (
        /*[out,retval]*/ VARIANT_BOOL * Outward ) = 0;
      virtual HRESULT __stdcall put_TaperOutward (
        /*[in]*/ VARIANT_BOOL Outward ) = 0;
      virtual HRESULT __stdcall get_SectionProfileCenter (
        /*[out,retval]*/ struct IMathPoint * * Point ) = 0;
      virtual HRESULT __stdcall put_SectionProfileCenter (
        /*[in]*/ struct IMathPoint * Point ) = 0;
      virtual HRESULT __stdcall GetSpringBody (
        /*[out,retval]*/ struct IBody2 * * SpringBody ) = 0;
      virtual HRESULT __stdcall GetProfilePoints (
        /*[out,retval]*/ VARIANT * Points ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * Height ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double Height ) = 0;
      virtual HRESULT __stdcall get_DefineType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_DefineType (
        /*[in]*/ long Type ) = 0;
};

struct __declspec(uuid("f7d97f80-162e-11d4-aeab-00c04fa0ac51"))
IMathUtility : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall CreateTransform (
        /*[in]*/ VARIANT ArrayDataIn,
        /*[out,retval]*/ IDispatch * * TransformObjOut ) = 0;
      virtual HRESULT __stdcall ICreateTransform (
        /*[in]*/ double * ArrayDataIn,
        /*[out,retval]*/ struct IMathTransform * * TransformObjOut ) = 0;
      virtual HRESULT __stdcall CreateTransformRotateAxis (
        /*[in]*/ IDispatch * PointObjIn,
        /*[in]*/ IDispatch * VectorObjIn,
        /*[in]*/ double Angle,
        /*[out,retval]*/ IDispatch * * TransformObjOut ) = 0;
      virtual HRESULT __stdcall ICreateTransformRotateAxis (
        /*[in]*/ struct IMathPoint * PointObjIn,
        /*[in]*/ struct IMathVector * VectorObjIn,
        /*[in]*/ double Angle,
        /*[out,retval]*/ struct IMathTransform * * TransformObjOut ) = 0;
      virtual HRESULT __stdcall CreatePoint (
        /*[in]*/ VARIANT ArrayDataIn,
        /*[out,retval]*/ IDispatch * * PointObjOut ) = 0;
      virtual HRESULT __stdcall ICreatePoint (
        /*[in]*/ double * ArrayDataIn,
        /*[out,retval]*/ struct IMathPoint * * PointObjOut ) = 0;
      virtual HRESULT __stdcall CreateVector (
        /*[in]*/ VARIANT ArrayDataIn,
        /*[out,retval]*/ IDispatch * * VectorObjOut ) = 0;
      virtual HRESULT __stdcall ICreateVector (
        /*[in]*/ double * ArrayDataIn,
        /*[out,retval]*/ struct IMathVector * * VectorObjOut ) = 0;
      virtual HRESULT __stdcall ComposeTransform (
        /*[in]*/ struct IMathVector * XVec,
        /*[in]*/ struct IMathVector * YVec,
        /*[in]*/ struct IMathVector * ZVec,
        /*[in]*/ struct IMathVector * TransVec,
        /*[in]*/ double Scale,
        /*[out,retval]*/ struct IMathTransform * * XformOut ) = 0;
};

struct __declspec(uuid("71520755-04d2-4075-b756-124495c591c5"))
IRefPoint : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetRefPoint (
        /*[out,retval]*/ struct IMathPoint * * Retval ) = 0;
};

struct __declspec(uuid("173137b4-84ac-428c-8f04-ec0e9fcea390"))
ITriadManipulator : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DoNotShow (
        /*[out,retval]*/ long * Flags ) = 0;
      virtual HRESULT __stdcall put_DoNotShow (
        /*[in]*/ long Flags ) = 0;
      virtual HRESULT __stdcall get_Origin (
        /*[out,retval]*/ struct IMathPoint * * PPt ) = 0;
      virtual HRESULT __stdcall put_Origin (
        /*[in]*/ struct IMathPoint * PPt ) = 0;
      virtual HRESULT __stdcall get_XAxis (
        /*[out,retval]*/ struct IMathVector * * PVector ) = 0;
      virtual HRESULT __stdcall put_XAxis (
        /*[in]*/ struct IMathVector * PVector ) = 0;
      virtual HRESULT __stdcall get_YAxis (
        /*[out,retval]*/ struct IMathVector * * PVector ) = 0;
      virtual HRESULT __stdcall put_YAxis (
        /*[in]*/ struct IMathVector * PVector ) = 0;
      virtual HRESULT __stdcall get_ZAxis (
        /*[out,retval]*/ struct IMathVector * * PVector ) = 0;
      virtual HRESULT __stdcall put_ZAxis (
        /*[in]*/ struct IMathVector * PVector ) = 0;
      virtual HRESULT __stdcall UpdateScale (
        /*[in]*/ double Scale ) = 0;
      virtual HRESULT __stdcall UpdatePosition (
        /*[out,retval]*/ VARIANT_BOOL * BResult ) = 0;
      virtual HRESULT __stdcall put_Cursor (
        /*[in]*/ long _arg1 ) = 0;
      virtual HRESULT __stdcall get_PreviousDragPoint (
        /*[out,retval]*/ struct IMathPoint * * PPt ) = 0;
      virtual HRESULT __stdcall SetColorRefAtIndex (
        /*[in]*/ long Index,
        /*[in]*/ long ColorRef ) = 0;
};

struct __declspec(uuid("4a9ce84f-42b5-4047-bf37-ec2e101b42a2"))
IDragArrowManipulator : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Origin (
        /*[out,retval]*/ struct IMathPoint * * PPt ) = 0;
      virtual HRESULT __stdcall put_Origin (
        /*[in]*/ struct IMathPoint * PPt ) = 0;
      virtual HRESULT __stdcall get_Direction (
        /*[out,retval]*/ struct IMathVector * * PVector ) = 0;
      virtual HRESULT __stdcall put_Direction (
        /*[in]*/ struct IMathVector * PVector ) = 0;
      virtual HRESULT __stdcall get_Length (
        /*[out,retval]*/ double * Length ) = 0;
      virtual HRESULT __stdcall put_Length (
        /*[in]*/ double Length ) = 0;
      virtual HRESULT __stdcall get_LengthOppositeDirection (
        /*[out,retval]*/ double * Length ) = 0;
      virtual HRESULT __stdcall put_LengthOppositeDirection (
        /*[in]*/ double Length ) = 0;
      virtual HRESULT __stdcall get_ShowOppositeDirection (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_ShowOppositeDirection (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall Update (
        /*[out,retval]*/ VARIANT_BOOL * BResult ) = 0;
};

struct __declspec(uuid("96567556-1eda-11d5-af25-00c04f603faf"))
IPropertyManagerPageSelectionbox : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ short * Height ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ short Height ) = 0;
      virtual HRESULT __stdcall get_Mark (
        /*[out,retval]*/ long * Mark ) = 0;
      virtual HRESULT __stdcall put_Mark (
        /*[in]*/ long Mark ) = 0;
      virtual HRESULT __stdcall get_SingleEntityOnly (
        /*[out,retval]*/ VARIANT_BOOL * Single ) = 0;
      virtual HRESULT __stdcall put_SingleEntityOnly (
        /*[in]*/ VARIANT_BOOL Single ) = 0;
      virtual HRESULT __stdcall SetSelectionFilters (
        /*[in]*/ VARIANT Filters ) = 0;
      virtual HRESULT __stdcall ISetSelectionFilters (
        /*[in]*/ short FilterCount,
        /*[in]*/ long * Filters ) = 0;
      virtual HRESULT __stdcall GetSelectionFocus (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetSelectionFocus ( ) = 0;
      virtual HRESULT __stdcall SetSelectionColor (
        /*[in]*/ VARIANT_BOOL Special,
        /*[in]*/ long Color,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetCalloutLabel (
        /*[in]*/ BSTR Label,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_Callout (
        /*[out,retval]*/ struct ICallout * * Retval ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ long * Style ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ long Style ) = 0;
      virtual HRESULT __stdcall get_ItemCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_CurrentSelection (
        /*[out,retval]*/ long * Item ) = 0;
      virtual HRESULT __stdcall put_CurrentSelection (
        /*[in]*/ long Item ) = 0;
      virtual HRESULT __stdcall get_SelectionIndex (
        /*[in]*/ long Item,
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall get_AllowSelectInMultipleBoxes (
        /*[out,retval]*/ VARIANT_BOOL * Allow ) = 0;
      virtual HRESULT __stdcall put_AllowSelectInMultipleBoxes (
        /*[in]*/ VARIANT_BOOL Allow ) = 0;
      virtual HRESULT __stdcall get_AllowMultipleSelectOfSameEntity (
        /*[out,retval]*/ VARIANT_BOOL * Allow ) = 0;
      virtual HRESULT __stdcall put_AllowMultipleSelectOfSameEntity (
        /*[in]*/ VARIANT_BOOL Allow ) = 0;
      virtual HRESULT __stdcall get_ItemText (
        /*[in]*/ short Item,
        /*[out,retval]*/ BSTR * Text ) = 0;
      virtual HRESULT __stdcall put_Callout (
        /*[in]*/ struct ICallout * Retval ) = 0;
      virtual HRESULT __stdcall AddMenuPopupItem (
        /*[in]*/ long ID,
        /*[in]*/ BSTR ItemText,
        /*[in]*/ long DocumentType,
        /*[in]*/ BSTR HintText,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetSelectedItemsCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetSelectedItems (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetSelectedItems (
        /*[in]*/ long Count,
        /*[out,retval]*/ short * Retval ) = 0;
      virtual HRESULT __stdcall SetSelectedItem (
        /*[in]*/ short Item,
        /*[in]*/ VARIANT_BOOL Selected,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("83a33d51-27c5-11ce-bfd4-00400513bb57"))
ISketch : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ModelToSketchXform (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall put_ModelToSketchXform (
        /*[in]*/ VARIANT Retval ) = 0;
      virtual HRESULT __stdcall GetLines (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetLines (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetLineCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetArcs (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetArcs (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetArcCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetPolylines (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetPolylines (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetPolyLineCount (
        /*[in]*/ long * PointCount,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetSplines (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetSplines (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetSplineCount (
        /*[in]*/ long * PointCount,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetEllipses (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetEllipses (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetEllipseCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall get_IModelToSketchXform (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetUserPoints (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetUserPoints (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetUserPointsCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetSplinesInterpolate (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetSplinesInterpolate (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetSplineInterpolateCount (
        /*[in]*/ long * PointCount,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetAutomaticSolve (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetAutomaticSolve (
        /*[in]*/ VARIANT_BOOL SolveFlag,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ConstrainAll (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetSplineParams (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetSplineParams (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetSplineParamsCount (
        /*[out]*/ long * Size,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetParabolas (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetParabolas (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetParabolaCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetEllipses2 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetEllipses2 (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetSketchPoints (
        /*[out,retval]*/ VARIANT * Points ) = 0;
      virtual HRESULT __stdcall IEnumSketchPoints (
        /*[out,retval]*/ struct IEnumSketchPoints * * Points ) = 0;
      virtual HRESULT __stdcall GetSketchSegments (
        /*[out,retval]*/ VARIANT * Segments ) = 0;
      virtual HRESULT __stdcall IEnumSketchSegments (
        /*[out,retval]*/ struct IEnumSketchSegments * * Segments ) = 0;
      virtual HRESULT __stdcall Is3D (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetSketchPointsCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetSketchHatches (
        /*[out,retval]*/ VARIANT * Hatches ) = 0;
      virtual HRESULT __stdcall IEnumSketchHatches (
        /*[out,retval]*/ struct IEnumSketchHatches * * Hatches ) = 0;
      virtual HRESULT __stdcall GetSplineParams2 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetSplineParams2 (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetSplineParamsCount2 (
        /*[out]*/ long * Size,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetSketchTextSegments (
        /*[out,retval]*/ VARIANT * TextSegments ) = 0;
      virtual HRESULT __stdcall IEnumSketchTextSegments (
        /*[out,retval]*/ struct IEnumSketchSegments * * TextSegments ) = 0;
      virtual HRESULT __stdcall GetConstrainedStatus (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetEntityCount (
        /*[in]*/ long EntityType,
        /*[in]*/ long EntityCount,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CheckFeatureUse (
        /*[in]*/ long FeatureType,
        /*[in,out]*/ long * OpenCount,
        /*[in,out]*/ long * ClosedCount,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall MergePoints (
        /*[in]*/ double Distance,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetReferenceEntity (
        /*[in,out]*/ long * LEntityType,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall GetContourEdgeCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetContourEdges (
        /*[in]*/ VARIANT Xform,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetContourEdges (
        /*[in]*/ double * Xform,
        /*[in]*/ long EdgeCount,
        /*[out,retval]*/ struct IEdge * * Edges ) = 0;
      virtual HRESULT __stdcall get_ModelToSketchTransform (
        /*[out,retval]*/ struct IMathTransform * * Xform ) = 0;
      virtual HRESULT __stdcall put_ModelToSketchTransform (
        /*[in]*/ struct IMathTransform * Xform ) = 0;
      virtual HRESULT __stdcall AutoDimension (
        /*[in]*/ long EntitiesToDimension,
        /*[in]*/ long HorizontalScheme,
        /*[in]*/ long HorizontalPlacement,
        /*[in]*/ long VerticalScheme,
        /*[in]*/ long VerticalPlacement,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall GetLineCount2 (
        /*[in]*/ short CrossHatchOption,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetLines2 (
        /*[in]*/ short CrossHatchOption,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetLines2 (
        /*[in]*/ short CrossHatchOption,
        /*[in]*/ long ArraySize,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetArcs2 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetArcs2 (
        /*[in]*/ long ArraySize,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetUserPoints2 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetUserPoints2 (
        /*[in]*/ long ArraySize,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetEllipses3 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetEllipses3 (
        /*[in]*/ long ArraySize,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetParabolas2 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetParabolas2 (
        /*[in]*/ long ArraySize,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IsShared (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_RelationManager (
        /*[out,retval]*/ struct ISketchRelationManager * * PSketchRelationMgr ) = 0;
      virtual HRESULT __stdcall AutoDimension2 (
        /*[in]*/ long EntitiesToDimension,
        /*[in]*/ long HorizontalScheme,
        /*[in]*/ long HorizontalPlacement,
        /*[in]*/ long VerticalScheme,
        /*[in]*/ long VerticalPlacement,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall GetDetachSegmentOnDrag (
        /*[out,retval]*/ VARIANT_BOOL * Detach ) = 0;
      virtual HRESULT __stdcall SetDetachSegmentOnDrag (
        /*[in]*/ VARIANT_BOOL Detach,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AutoTraceSketchPicture ( ) = 0;
      virtual HRESULT __stdcall GetSketchPointsCount2 (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetSketchPoints2 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetSketchPoints2 (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct ISketchPoint * * Retval ) = 0;
      virtual HRESULT __stdcall GetSketchBlockInstanceCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetSketchBlockInstances (
        /*[out,retval]*/ VARIANT * VSketchBlockInstances ) = 0;
      virtual HRESULT __stdcall IGetSketchBlockInstances (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct ISketchBlockInstance * * SketchBlockInstances ) = 0;
      virtual HRESULT __stdcall SetWorkingPlaneOrientation (
        /*[in]*/ double OriginX,
        /*[in]*/ double OriginY,
        /*[in]*/ double OriginZ,
        /*[in]*/ double XAxisX,
        /*[in]*/ double XAxisY,
        /*[in]*/ double XAxisZ,
        /*[in]*/ double YAxisX,
        /*[in]*/ double YAxisY,
        /*[in]*/ double YAxisZ,
        /*[in]*/ double NormalX,
        /*[in]*/ double NormalY,
        /*[in]*/ double NormalZ,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetSketchPaths (
        /*[out,retval]*/ VARIANT * Paths ) = 0;
      virtual HRESULT __stdcall IGetSketchPaths (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct ISketchPath * * Paths ) = 0;
      virtual HRESULT __stdcall GetSketchPathCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetSketchPictureCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetSketchPictures (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetSketchPictures (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct ISketchPicture * * Retval ) = 0;
      virtual HRESULT __stdcall GetSketchRegionCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetSketchRegions (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetSketchRegions (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct ISketchRegion * * Retval ) = 0;
      virtual HRESULT __stdcall GetSketchContourCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetSketchContours (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetSketchContours (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct ISketchContour * * Retval ) = 0;
      virtual HRESULT __stdcall GetSketchSlotCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetSketchSlots (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetSketchSlots (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct ISketchSlot * * Retval ) = 0;
};

struct __declspec(uuid("83a33dcd-27c5-11ce-bfd4-00400513bb57"))
IEnumSketchPoints : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Next (
        /*[in]*/ long Celt,
        /*[out]*/ struct ISketchPoint * * Rgelt,
        /*[in,out]*/ long * PceltFetched ) = 0;
      virtual HRESULT __stdcall Skip (
        /*[in]*/ long Celt ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
      virtual HRESULT __stdcall Clone (
        /*[out]*/ struct IEnumSketchPoints * * Ppenum ) = 0;
};

struct __declspec(uuid("83a33dbd-27c5-11ce-bfd4-00400513bb57"))
ISketchPoint : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_X (
        /*[out,retval]*/ double * X ) = 0;
      virtual HRESULT __stdcall get_Y (
        /*[out,retval]*/ double * Y ) = 0;
      virtual HRESULT __stdcall get_Z (
        /*[out,retval]*/ double * Z ) = 0;
      virtual HRESULT __stdcall GetCoords (
        /*[out,retval]*/ double * Coords ) = 0;
      virtual HRESULT __stdcall GetID (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetID (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT_BOOL AppendFlag,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SelectByMark (
        /*[in]*/ VARIANT_BOOL AppendFlag,
        /*[in]*/ long Mark,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DeSelect (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_Layer (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_Layer (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall get_LayerOverride (
        /*[out,retval]*/ int * Retval ) = 0;
      virtual HRESULT __stdcall put_LayerOverride (
        /*[in]*/ int Retval ) = 0;
      virtual HRESULT __stdcall get_Color (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall put_Color (
        /*[in]*/ long Retval ) = 0;
      virtual HRESULT __stdcall SetCoords (
        /*[in]*/ double Xx,
        /*[in]*/ double Yy,
        /*[in]*/ double Zz,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetFramePointTangent (
        /*[out]*/ VARIANT_BOOL * Status,
        /*[out,retval]*/ VARIANT * VectorOut ) = 0;
      virtual HRESULT __stdcall IGetFramePointTangent (
        /*[out]*/ VARIANT_BOOL * Status,
        /*[out,retval]*/ double * VectorOut ) = 0;
      virtual HRESULT __stdcall SetFramePointTangent (
        /*[in]*/ VARIANT ToVector,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ISetFramePointTangent (
        /*[in]*/ double * ToVector,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetSketch (
        /*[out,retval]*/ struct ISketch * * Sketch ) = 0;
      virtual HRESULT __stdcall Select2 (
        /*[in]*/ VARIANT_BOOL Append,
        /*[in]*/ long Mark,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Select3 (
        /*[in]*/ VARIANT_BOOL Append,
        /*[in]*/ long Mark,
        /*[in]*/ struct ICallout * Callout,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetRelations (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetRelationsCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetRelations (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct ISketchRelation * * PSketchRelationArr ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall put_Status (
        /*[in]*/ long Status ) = 0;
      virtual HRESULT __stdcall Select4 (
        /*[in]*/ VARIANT_BOOL Append,
        /*[in]*/ struct ISelectData * Data,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall put_X (
        /*[in]*/ double X ) = 0;
      virtual HRESULT __stdcall put_Y (
        /*[in]*/ double Y ) = 0;
      virtual HRESULT __stdcall put_Z (
        /*[in]*/ double Z ) = 0;
};

struct __declspec(uuid("e64199c3-6876-412b-a924-5f62af5e6c83"))
ISketchSlot : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_LengthType (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall put_LengthType (
        /*[in]*/ long Retval ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * WidthOut ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double WidthOut ) = 0;
      virtual HRESULT __stdcall get_Length (
        /*[out,retval]*/ double * LengthOut ) = 0;
      virtual HRESULT __stdcall put_Length (
        /*[in]*/ double LengthOut ) = 0;
      virtual HRESULT __stdcall GetCenterPoint (
        /*[out,retval]*/ struct IMathPoint * * Retval ) = 0;
      virtual HRESULT __stdcall GetCenterPointHandle (
        /*[out,retval]*/ struct ISketchPoint * * StartPoint ) = 0;
      virtual HRESULT __stdcall get_CenterArcDirection (
        /*[out,retval]*/ long * Direction ) = 0;
      virtual HRESULT __stdcall GetSlotPoints (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall get_CreationType (
        /*[out,retval]*/ long * Retval ) = 0;
};

struct __declspec(uuid("83a33dcb-27c5-11ce-bfd4-00400513bb57"))
ISketchSpline : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetPointCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetPoints (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetPoints (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetPoints2 (
        /*[out,retval]*/ VARIANT * SplinePoints ) = 0;
      virtual HRESULT __stdcall IEnumPoints (
        /*[out,retval]*/ struct IEnumSketchPoints * * SplinePoints ) = 0;
      virtual HRESULT __stdcall get_ShowSplineHandles (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_ShowSplineHandles (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall get_DisplayControlPolygon (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_DisplayControlPolygon (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall get_ShowInflectionPoints (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_ShowInflectionPoints (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall get_ShowMinimumRadius (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_ShowMinimumRadius (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall get_ShowCurvatureCombs (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_ShowCurvatureCombs (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall AddTangencyControl (
        /*[in]*/ double XPos,
        /*[in]*/ double YPos,
        /*[in]*/ double ZPos,
        /*[out,retval]*/ struct ISplineHandle * * LpHandle ) = 0;
      virtual HRESULT __stdcall AddCurvatureControl (
        /*[in]*/ double XPos,
        /*[in]*/ double YPos,
        /*[in]*/ double ZPos,
        /*[out,retval]*/ struct ISplineHandle * * LpHandle ) = 0;
      virtual HRESULT __stdcall GetSplineHandles (
        /*[out,retval]*/ VARIANT * VArraySplineHandles ) = 0;
      virtual HRESULT __stdcall IGetSplineHandles (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct ISplineHandle * * SplineHandles ) = 0;
      virtual HRESULT __stdcall ResetAllHandles ( ) = 0;
      virtual HRESULT __stdcall RelaxSpline ( ) = 0;
      virtual HRESULT __stdcall get_Proportional (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_Proportional (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall Simplify (
        /*[in]*/ double ToleranceIn ) = 0;
      virtual HRESULT __stdcall GetSplineHandleCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall InsertPoint (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DeletePoint (
        /*[in]*/ struct ISketchPoint * Point,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetEquationParameters (
        /*[out]*/ BSTR * YExpression,
        /*[out]*/ double * RangeStart,
        /*[out]*/ double * RangeEnd,
        /*[out]*/ VARIANT_BOOL * IsAngleRange,
        /*[out]*/ double * RotationAngle,
        /*[out]*/ double * XOffset,
        /*[out]*/ double * YOffset,
        /*[out]*/ VARIANT_BOOL * LockStart,
        /*[out]*/ VARIANT_BOOL * LockEnd,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetEquationParameters (
        /*[in]*/ BSTR YExpression,
        /*[in]*/ double RangeStart,
        /*[in]*/ double RangeEnd,
        /*[in]*/ VARIANT_BOOL IsAngleRange,
        /*[in]*/ double RotationAngle,
        /*[in]*/ double XOffset,
        /*[in]*/ double YOffset,
        /*[in]*/ VARIANT_BOOL LockStart,
        /*[in]*/ VARIANT_BOOL LockEnd,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("83a33dc1-27c5-11ce-bfd4-00400513bb57"))
ISketchLine : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetStartPoint (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetStartPoint (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetEndPoint (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetEndPoint (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetStartPoint2 (
        /*[out,retval]*/ IDispatch * * StartPoint ) = 0;
      virtual HRESULT __stdcall IGetStartPoint2 (
        /*[out,retval]*/ struct ISketchPoint * * StartPoint ) = 0;
      virtual HRESULT __stdcall GetEndPoint2 (
        /*[out,retval]*/ IDispatch * * EndPoint ) = 0;
      virtual HRESULT __stdcall IGetEndPoint2 (
        /*[out,retval]*/ struct ISketchPoint * * EndPoint ) = 0;
      virtual HRESULT __stdcall get_Infinite (
        /*[out,retval]*/ VARIANT_BOOL * InfiniteOut ) = 0;
      virtual HRESULT __stdcall get_Angle (
        /*[out,retval]*/ double * AngleOut ) = 0;
      virtual HRESULT __stdcall put_Angle (
        /*[in]*/ double AngleOut ) = 0;
      virtual HRESULT __stdcall MakeInfinite (
        /*[out,retval]*/ VARIANT_BOOL * Result ) = 0;
};

struct __declspec(uuid("83a33dc3-27c5-11ce-bfd4-00400513bb57"))
ISketchArc : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetStartPoint (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetStartPoint (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetEndPoint (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetEndPoint (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetCenterPoint (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetCenterPoint (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IsCircle (
        /*[out,retval]*/ int * Retval ) = 0;
      virtual HRESULT __stdcall GetRotationDir (
        /*[out,retval]*/ int * Retval ) = 0;
      virtual HRESULT __stdcall GetStartPoint2 (
        /*[out,retval]*/ IDispatch * * StartPoint ) = 0;
      virtual HRESULT __stdcall IGetStartPoint2 (
        /*[out,retval]*/ struct ISketchPoint * * StartPoint ) = 0;
      virtual HRESULT __stdcall GetEndPoint2 (
        /*[out,retval]*/ IDispatch * * EndPoint ) = 0;
      virtual HRESULT __stdcall IGetEndPoint2 (
        /*[out,retval]*/ struct ISketchPoint * * EndPoint ) = 0;
      virtual HRESULT __stdcall GetCenterPoint2 (
        /*[out,retval]*/ IDispatch * * CenterPoint ) = 0;
      virtual HRESULT __stdcall IGetCenterPoint2 (
        /*[out,retval]*/ struct ISketchPoint * * CenterPoint ) = 0;
      virtual HRESULT __stdcall GetRadius (
        /*[out,retval]*/ double * Radius ) = 0;
      virtual HRESULT __stdcall SetRadius (
        /*[in]*/ double Radius,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetNormalVector (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetNormalVector (
        /*[out,retval]*/ double * Retval ) = 0;
};

struct __declspec(uuid("83a33dc7-27c5-11ce-bfd4-00400513bb57"))
ISketchEllipse : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetStartPoint (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetStartPoint (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetEndPoint (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetEndPoint (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetCenterPoint (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetCenterPoint (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetMajorPoint (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetMajorPoint (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetMinorPoint (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetMinorPoint (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetStartPoint2 (
        /*[out,retval]*/ IDispatch * * StartPoint ) = 0;
      virtual HRESULT __stdcall IGetStartPoint2 (
        /*[out,retval]*/ struct ISketchPoint * * StartPoint ) = 0;
      virtual HRESULT __stdcall GetEndPoint2 (
        /*[out,retval]*/ IDispatch * * EndPoint ) = 0;
      virtual HRESULT __stdcall IGetEndPoint2 (
        /*[out,retval]*/ struct ISketchPoint * * EndPoint ) = 0;
      virtual HRESULT __stdcall GetCenterPoint2 (
        /*[out,retval]*/ IDispatch * * CenterPoint ) = 0;
      virtual HRESULT __stdcall IGetCenterPoint2 (
        /*[out,retval]*/ struct ISketchPoint * * CenterPoint ) = 0;
      virtual HRESULT __stdcall GetMajorPoint2 (
        /*[out,retval]*/ IDispatch * * MajorPoint ) = 0;
      virtual HRESULT __stdcall IGetMajorPoint2 (
        /*[out,retval]*/ struct ISketchPoint * * MajorPoint ) = 0;
      virtual HRESULT __stdcall GetMinorPoint2 (
        /*[out,retval]*/ IDispatch * * MinorPoint ) = 0;
      virtual HRESULT __stdcall IGetMinorPoint2 (
        /*[out,retval]*/ struct ISketchPoint * * MinorPoint ) = 0;
      virtual HRESULT __stdcall GetRotationDir (
        /*[out,retval]*/ long * Retval ) = 0;
};

struct __declspec(uuid("83a33dc9-27c5-11ce-bfd4-00400513bb57"))
ISketchParabola : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetStartPoint (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetStartPoint (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetEndPoint (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetEndPoint (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetFocalPoint (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetFocalPoint (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetApexPoint (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetApexPoint (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetStartPoint2 (
        /*[out,retval]*/ IDispatch * * StartPoint ) = 0;
      virtual HRESULT __stdcall IGetStartPoint2 (
        /*[out,retval]*/ struct ISketchPoint * * StartPoint ) = 0;
      virtual HRESULT __stdcall GetEndPoint2 (
        /*[out,retval]*/ IDispatch * * EndPoint ) = 0;
      virtual HRESULT __stdcall IGetEndPoint2 (
        /*[out,retval]*/ struct ISketchPoint * * EndPoint ) = 0;
      virtual HRESULT __stdcall GetFocalPoint2 (
        /*[out,retval]*/ IDispatch * * FocalPoint ) = 0;
      virtual HRESULT __stdcall IGetFocalPoint2 (
        /*[out,retval]*/ struct ISketchPoint * * FocalPoint ) = 0;
      virtual HRESULT __stdcall GetApexPoint2 (
        /*[out,retval]*/ IDispatch * * ApexPoint ) = 0;
      virtual HRESULT __stdcall IGetApexPoint2 (
        /*[out,retval]*/ struct ISketchPoint * * ApexPoint ) = 0;
      virtual HRESULT __stdcall SetPoints (
        /*[in]*/ double CenterX,
        /*[in]*/ double CenterY,
        /*[in]*/ double CenterZ,
        /*[in]*/ double ApexX,
        /*[in]*/ double ApexY,
        /*[in]*/ double ApexZ,
        /*[in]*/ double StartX,
        /*[in]*/ double StartY,
        /*[in]*/ double StartZ,
        /*[in]*/ double EndX,
        /*[in]*/ double EndY,
        /*[in]*/ double EndZ,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("4df2e524-c744-4c8b-92d5-1b96eca5a0d0"))
ISelectData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_X (
        /*[out,retval]*/ double * X ) = 0;
      virtual HRESULT __stdcall put_X (
        /*[in]*/ double X ) = 0;
      virtual HRESULT __stdcall get_Y (
        /*[out,retval]*/ double * Y ) = 0;
      virtual HRESULT __stdcall put_Y (
        /*[in]*/ double Y ) = 0;
      virtual HRESULT __stdcall get_Z (
        /*[out,retval]*/ double * Z ) = 0;
      virtual HRESULT __stdcall put_Z (
        /*[in]*/ double Z ) = 0;
      virtual HRESULT __stdcall get_Mark (
        /*[out,retval]*/ long * Mark ) = 0;
      virtual HRESULT __stdcall put_Mark (
        /*[in]*/ long Mark ) = 0;
      virtual HRESULT __stdcall get_View (
        /*[out,retval]*/ struct IView * * View ) = 0;
      virtual HRESULT __stdcall put_View (
        /*[in]*/ struct IView * View ) = 0;
      virtual HRESULT __stdcall get_Callout (
        /*[out,retval]*/ struct ICallout * * Callout ) = 0;
      virtual HRESULT __stdcall put_Callout (
        /*[in]*/ struct ICallout * Callout ) = 0;
      virtual HRESULT __stdcall GetCellRange (
        /*[in,out]*/ long * FirstRow,
        /*[in,out]*/ long * LastRow,
        /*[in,out]*/ long * FirstColumn,
        /*[in,out]*/ long * LastColumn ) = 0;
      virtual HRESULT __stdcall SetCellRange (
        /*[in]*/ long FirstRow,
        /*[in]*/ long LastRow,
        /*[in]*/ long FirstColumn,
        /*[in]*/ long LastColumn ) = 0;
};

struct __declspec(uuid("c3d00926-4068-11d3-ae9b-00c04f683cba"))
ISketchHatch : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetID (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetID (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT_BOOL AppendFlag,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SelectByMark (
        /*[in]*/ VARIANT_BOOL AppendFlag,
        /*[in]*/ long Mark,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DeSelect (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_Layer (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_Layer (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall get_LayerOverride (
        /*[out,retval]*/ int * Retval ) = 0;
      virtual HRESULT __stdcall put_LayerOverride (
        /*[in]*/ int Retval ) = 0;
      virtual HRESULT __stdcall get_Color (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall put_Color (
        /*[in]*/ long Retval ) = 0;
      virtual HRESULT __stdcall get_Pattern (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_Pattern (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall get_Scale (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_Scale (
        /*[in]*/ double Retval ) = 0;
      virtual HRESULT __stdcall get_Angle (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_Angle (
        /*[in]*/ double Retval ) = 0;
      virtual HRESULT __stdcall GetFace (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFace (
        /*[out,retval]*/ struct IFace * * Retval ) = 0;
      virtual HRESULT __stdcall GetSketch (
        /*[out,retval]*/ struct ISketch * * Sketch ) = 0;
      virtual HRESULT __stdcall get_Scale2 (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_Scale2 (
        /*[in]*/ double Retval ) = 0;
      virtual HRESULT __stdcall IGetFace2 (
        /*[out,retval]*/ struct IFace2 * * Retval ) = 0;
      virtual HRESULT __stdcall Select2 (
        /*[in]*/ VARIANT_BOOL Append,
        /*[in]*/ long Mark,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Select3 (
        /*[in]*/ VARIANT_BOOL Append,
        /*[in]*/ long Mark,
        /*[in]*/ struct ICallout * Callout,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_SolidFill (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_SolidFill (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall Select4 (
        /*[in]*/ VARIANT_BOOL Append,
        /*[in]*/ struct ISelectData * Data,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_PatternId (
        /*[out,retval]*/ long * IdOut ) = 0;
      virtual HRESULT __stdcall put_PatternId (
        /*[in]*/ long IdOut ) = 0;
};

struct __declspec(uuid("54729b8e-4086-11d3-ae9b-00c04f683cba"))
IEnumSketchHatches : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Next (
        /*[in]*/ long Celt,
        /*[out]*/ struct ISketchHatch * * Rgelt,
        /*[in,out]*/ long * PceltFetched ) = 0;
      virtual HRESULT __stdcall Skip (
        /*[in]*/ long Celt ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
      virtual HRESULT __stdcall Clone (
        /*[out]*/ struct IEnumSketchHatches * * Ppenum ) = 0;
};

struct __declspec(uuid("eb53b511-e23d-4b6a-b48d-21828af5f151"))
ISketchRegion : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Sketch (
        /*[out,retval]*/ struct ISketch * * Retval ) = 0;
      virtual HRESULT __stdcall GetEdgesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetEdges (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetEdges (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IEdge * * EdgeArr ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT_BOOL Append,
        /*[in]*/ long Mark,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DeSelect (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Select2 (
        /*[in]*/ VARIANT_BOOL Append,
        /*[in]*/ struct ISelectData * Data,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstLoop (
        /*[out,retval]*/ struct ILoop2 * * Retval ) = 0;
};

struct __declspec(uuid("c73d0a8d-b615-4f79-bf31-9ec49016a861"))
IManipulator : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * BVisible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL BVisible ) = 0;
      virtual HRESULT __stdcall Show (
        /*[in]*/ IDispatch * PModelDoc ) = 0;
      virtual HRESULT __stdcall Remove ( ) = 0;
      virtual HRESULT __stdcall GetSpecificManipulator (
        /*[out,retval]*/ IDispatch * * PSpecificManipulator ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Selectable (
        /*[out,retval]*/ VARIANT_BOOL * BSelectable ) = 0;
      virtual HRESULT __stdcall put_Selectable (
        /*[in]*/ VARIANT_BOOL BSelectable ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT_BOOL Append,
        /*[in]*/ struct ISelectData * Data,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("1aa249ff-b758-440a-8b88-26512f385bf3"))
IModelViewManager : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AddControl (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR ControlName,
        /*[in]*/ BSTR BstrLicKey,
        /*[out,retval]*/ IUnknown * * Retval ) = 0;
      virtual HRESULT __stdcall GetControl (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetControl (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ IUnknown * * Retval ) = 0;
      virtual HRESULT __stdcall DeleteControlTab (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ActivateControlTab (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ActivateModelTab (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsControlTabActive (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsModelTabActive (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateFeatureMgrView (
        /*[in]*/ IDispatch * PPicture,
        /*[in]*/ BSTR ToolTip,
        /*[in]*/ long WhichPane,
        /*[out,retval]*/ struct IFeatMgrView * * Retval ) = 0;
      virtual HRESULT __stdcall CreateFeatureMgrControl (
        /*[in]*/ IDispatch * PPicture,
        /*[in]*/ BSTR Class,
        /*[in]*/ BSTR LicKey,
        /*[in]*/ BSTR ToolTip,
        /*[in]*/ long WhichPane,
        /*[out,retval]*/ struct IFeatMgrView * * Retval ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct IModelDoc2 * * ModelDoc ) = 0;
      virtual HRESULT __stdcall CreateFeatureMgrView2 (
        /*[in]*/ BSTR BitMapFile,
        /*[in]*/ BSTR ToolTip,
        /*[in]*/ long WhichPane,
        /*[out,retval]*/ struct IFeatMgrView * * Retval ) = 0;
      virtual HRESULT __stdcall CreateFeatureMgrControl2 (
        /*[in]*/ BSTR BitMapFile,
        /*[in]*/ BSTR Class,
        /*[in]*/ BSTR LicKey,
        /*[in]*/ BSTR ToolTip,
        /*[in]*/ long WhichPane,
        /*[out,retval]*/ struct IFeatMgrView * * Retval ) = 0;
      virtual HRESULT __stdcall GetFeatureMgrViewHWnd (
        /*[in]*/ long FeatMgrViewPane,
        /*[out,retval]*/ long * WindowHandle ) = 0;
      virtual HRESULT __stdcall CreateManipulator (
        /*[in]*/ long Type,
        /*[in]*/ IDispatch * PHandler,
        /*[out,retval]*/ struct IManipulator * * PManip ) = 0;
      virtual HRESULT __stdcall AddControl2 (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR ControlName,
        /*[in]*/ BSTR BstrLicKey,
        /*[out,retval]*/ IUnknown * * Retval ) = 0;
      virtual HRESULT __stdcall CreateFeatureMgrControl3 (
        /*[in]*/ BSTR BitMapFile,
        /*[in]*/ BSTR Class,
        /*[in]*/ BSTR LicKey,
        /*[in]*/ BSTR ToolTip,
        /*[in]*/ long WhichPane,
        /*[out,retval]*/ struct IFeatMgrView * * Retval ) = 0;
      virtual HRESULT __stdcall get_LinkedViews (
        /*[out,retval]*/ VARIANT_BOOL * Linked ) = 0;
      virtual HRESULT __stdcall put_LinkedViews (
        /*[in]*/ VARIANT_BOOL Linked ) = 0;
      virtual HRESULT __stdcall GetFeatureMgrViewHWndx64 (
        /*[in]*/ long FeatMgrViewPane,
        /*[out,retval]*/ __int64 * WindowHandle ) = 0;
      virtual HRESULT __stdcall AddControl3 (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR ControlName,
        /*[in]*/ BSTR BstrLicKey,
        /*[in]*/ VARIANT_BOOL SplitWindow,
        /*[out,retval]*/ IUnknown * * Retval ) = 0;
      virtual HRESULT __stdcall CreateSectionView (
        /*[in]*/ struct ISectionViewData * SectionData,
        /*[out,retval]*/ VARIANT_BOOL * Result ) = 0;
      virtual HRESULT __stdcall RemoveSectionView (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateSectionViewData (
        /*[out,retval]*/ struct ISectionViewData * * Retval ) = 0;
      virtual HRESULT __stdcall GetSectionViewData (
        /*[in]*/ BSTR ViewName,
        /*[out,retval]*/ struct ISectionViewData * * Retval ) = 0;
};

struct __declspec(uuid("83a33d50-27c5-11ce-bfd4-00400513bb57"))
IView : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SuppressState (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall put_SuppressState (
        /*[in]*/ long Retval ) = 0;
      virtual HRESULT __stdcall GetNextView (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNextView (
        /*[out,retval]*/ struct IView * * Retval ) = 0;
      virtual HRESULT __stdcall GetLines (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetOutline (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetXform (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetArcs (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetUserPoints (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetPolylines (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetSplines (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetDimensionInfo (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetDimensionString (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstNote (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstNote (
        /*[out,retval]*/ struct INote * * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstGTOL (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstGTOL (
        /*[out,retval]*/ struct IGtol * * Retval ) = 0;
      virtual HRESULT __stdcall IGetLines (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetOutline (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetXform (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetArcs (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetUserPoints (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetPolylines (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetSplines (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetDimensionInfo (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetDimensionString (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetLineCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetArcCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetUserPointsCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetPolyLineCount (
        /*[out]*/ long * PointCount,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetSplineCount (
        /*[out]*/ long * PointCount,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetDimensionCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetEllipses (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetEllipses (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetEllipseCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetDisplayMode (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetDisplayMode (
        /*[in]*/ long DisplayIn ) = 0;
      virtual HRESULT __stdcall GetDisplayTangentEdges (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetDisplayTangentEdges (
        /*[in]*/ VARIANT_BOOL DisplayIn ) = 0;
      virtual HRESULT __stdcall GetCenterMarkCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetCenterMarkInfo (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetCenterMarkInfo (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetSectionLineCount (
        /*[out]*/ long * Size,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetSectionLineInfo (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetSectionLineStrings (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetSectionLineInfo (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetSectionLineStrings (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall UpdateViewDisplayGeometry ( ) = 0;
      virtual HRESULT __stdcall GetDetailCircleCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetDetailCircleInfo (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetDetailCircleInfo (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetDetailCircleStrings (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetDetailCircleStrings (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetDimensionIds (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetDimensionIds (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetDimensionDisplayInfo (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetDimensionDisplayInfo (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetDimensionDisplayString (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetDimensionDisplayString (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetArcs2 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetArcs2 (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetEllipses2 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetEllipses2 (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetViewXform (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetViewXform (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstSFSymbol (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstSFSymbol (
        /*[out,retval]*/ struct ISFSymbol * * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstDatumTag (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstDatumTag (
        /*[out,retval]*/ struct IDatumTag * * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstDatumTargetSym (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstDatumTargetSym (
        /*[out,retval]*/ struct IDatumTargetSym * * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstWeldSymbol (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstWeldSymbol (
        /*[out,retval]*/ struct IWeldSymbol * * Retval ) = 0;
      virtual HRESULT __stdcall GetDatumPointsCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetDatumPoints (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetDatumPoints (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall UseDefaultAlignment ( ) = 0;
      virtual HRESULT __stdcall RemoveAlignment ( ) = 0;
      virtual HRESULT __stdcall AlignVerticalTo (
        /*[in]*/ BSTR ViewNameIn ) = 0;
      virtual HRESULT __stdcall AlignHorizontalTo (
        /*[in]*/ BSTR ViewNameIn ) = 0;
      virtual HRESULT __stdcall GetDisplayData (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetDisplayData (
        /*[out,retval]*/ struct IDisplayData * * Retval ) = 0;
      virtual HRESULT __stdcall GetPolyLineCount2 (
        /*[out]*/ long * PointCount,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetPolylines2 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetPolylines2 (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall ShowExploded (
        /*[in]*/ VARIANT_BOOL ShowIt,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsExploded (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_ReferencedConfiguration (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall get_ReferencedConfiguration (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstCThread (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstCThread (
        /*[out,retval]*/ struct ICThread * * Retval ) = 0;
      virtual HRESULT __stdcall CreateViewArrow (
        /*[in]*/ BSTR DrawingViewNameIn,
        /*[in]*/ BSTR ArrowNameIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ModifyViewArrow (
        /*[in]*/ BSTR DrawingViewNameIn,
        /*[in]*/ BSTR ArrowNameIn ) = 0;
      virtual HRESULT __stdcall MoveViewArrow (
        /*[in]*/ BSTR DrawingViewNameIn,
        /*[in]*/ double Dx,
        /*[in]*/ double Dy,
        /*[in]*/ double Dz ) = 0;
      virtual HRESULT __stdcall GetPolylines3 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetPolylines3 (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetPolyLineCount3 (
        /*[out]*/ long * PointCount,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstDisplayDimension (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstDisplayDimension (
        /*[out,retval]*/ struct IDisplayDimension * * Retval ) = 0;
      virtual HRESULT __stdcall GetSketch (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetSketch (
        /*[out,retval]*/ struct ISketch * * Retval ) = 0;
      virtual HRESULT __stdcall GetLines2 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetLines2 (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetSplines2 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetSplines2 (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetArcs3 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetArcs3 (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetEllipses3 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetEllipses3 (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetBomTable (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetBomTable (
        /*[out,retval]*/ struct IBomTable * * Retval ) = 0;
      virtual HRESULT __stdcall get_UseSheetScale (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall put_UseSheetScale (
        /*[in]*/ long Retval ) = 0;
      virtual HRESULT __stdcall get_ScaleDecimal (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_ScaleDecimal (
        /*[in]*/ double Retval ) = 0;
      virtual HRESULT __stdcall get_ScaleRatio (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall put_ScaleRatio (
        /*[in]*/ VARIANT Retval ) = 0;
      virtual HRESULT __stdcall get_IScaleRatio (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_IScaleRatio (
        /*[in]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ VARIANT Retval ) = 0;
      virtual HRESULT __stdcall get_IPosition (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_IPosition (
        /*[in]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall SetXform (
        /*[in]*/ VARIANT Transform,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ISetXform (
        /*[in]*/ double * Transform,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetAlignment (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetReferencedModelName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstAnnotation (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstAnnotation (
        /*[out,retval]*/ struct IAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstCustomSymbol (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstCustomSymbol (
        /*[out,retval]*/ struct ICustomSymbol * * Retval ) = 0;
      virtual HRESULT __stdcall GetDimensionInfo2 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetDimensionInfo2 (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetParabolas (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetParabolas (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetParabolaCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetEllipses4 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetEllipses4 (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetLines3 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetLines3 (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetArcs4 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetArcs4 (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetSplines3 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetSplines3 (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetEllipses5 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetEllipses5 (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetParabolas2 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetParabolas2 (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetUserPoints2 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetUserPoints2 (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetDimensionInfo3 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetDimensionInfo3 (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetDatumPoints2 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetDatumPoints2 (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall get_ProjectedDimensions (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_ProjectedDimensions (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall HasDesignTable (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetDesignTableExtent (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetDesignTableExtent (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetDisplayData2 (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetDisplayData2 (
        /*[out,retval]*/ struct IDisplayData * * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstAnnotation2 (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstAnnotation2 (
        /*[out,retval]*/ struct IAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall GetDimensionCount2 (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetDimensionInfo4 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetDimensionInfo4 (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetDimensionString2 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetDimensionString2 (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetDimensionIds2 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetDimensionIds2 (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetDimensionDisplayInfo2 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetDimensionDisplayInfo2 (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetDimensionDisplayString2 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetDimensionDisplayString2 (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstDisplayDimension2 (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstDisplayDimension2 (
        /*[out,retval]*/ struct IDisplayDimension * * Retval ) = 0;
      virtual HRESULT __stdcall GetPolylines4 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetPolylines4 (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetPolyLineCount4 (
        /*[out]*/ long * PointCount,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IsModelLoaded (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall LoadModel (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetDisplayTangentEdges2 (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetDisplayTangentEdges2 (
        /*[in]*/ long DisplayIn ) = 0;
      virtual HRESULT __stdcall GetSectionLines (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetSectionLines (
        /*[out,retval]*/ struct IDrSection * * Retval ) = 0;
      virtual HRESULT __stdcall GetSection (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetSection (
        /*[out,retval]*/ struct IDrSection * * Retval ) = 0;
      virtual HRESULT __stdcall GetHiddenComponents (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall EnumHiddenComponents (
        /*[out,retval]*/ struct IEnumComponents * * Retval ) = 0;
      virtual HRESULT __stdcall EnumSectionLines (
        /*[out,retval]*/ struct IEnumDrSections * * Retval ) = 0;
      virtual HRESULT __stdcall GetDisplayData3 (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetDisplayData3 (
        /*[out,retval]*/ struct IDisplayData * * Retval ) = 0;
      virtual HRESULT __stdcall GetDimensionCount3 (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetDimensionInfo5 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetDimensionInfo5 (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetDimensionString3 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetDimensionString3 (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetDimensionIds3 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetDimensionIds3 (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetDimensionDisplayInfo3 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetDimensionDisplayInfo3 (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetDimensionDisplayString3 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetDimensionDisplayString3 (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstDisplayDimension3 (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstDisplayDimension3 (
        /*[out,retval]*/ struct IDisplayDimension * * Retval ) = 0;
      virtual HRESULT __stdcall IsCropped (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_Angle (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_Angle (
        /*[in]*/ double Retval ) = 0;
      virtual HRESULT __stdcall GetDetailCircles (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetDetailCircles (
        /*[in]*/ long NumDetailCircles,
        /*[out,retval]*/ struct IDetailCircle * * Retval ) = 0;
      virtual HRESULT __stdcall GetProjectionArrow (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetProjectionArrow (
        /*[out,retval]*/ struct IProjectionArrow * * Retval ) = 0;
      virtual HRESULT __stdcall GetDetail (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetDetail (
        /*[out,retval]*/ struct IDetailCircle * * Retval ) = 0;
      virtual HRESULT __stdcall GetBaseView (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetBaseView (
        /*[out,retval]*/ struct IView * * Retval ) = 0;
      virtual HRESULT __stdcall EnumHiddenComponents2 (
        /*[out,retval]*/ struct IEnumComponents2 * * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstMultiJogLeader (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstMultiJogLeader (
        /*[out,retval]*/ struct IMultiJogLeader * * Retval ) = 0;
      virtual HRESULT __stdcall GetVisible (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetVisible (
        /*[in]*/ VARIANT_BOOL Visible,
        /*[in]*/ VARIANT_BOOL DependentsToo ) = 0;
      virtual HRESULT __stdcall GetFirstDowelSymbol (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstDowelSymbol (
        /*[out,retval]*/ struct IDowelSymbol * * Retval ) = 0;
      virtual HRESULT __stdcall InsertBomTable (
        /*[in]*/ BSTR Template,
        /*[in]*/ double Xloc,
        /*[in]*/ double Yloc,
        /*[in,out]*/ long * Errors,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IInsertBomTable (
        /*[in]*/ BSTR Template,
        /*[in]*/ double Xloc,
        /*[in]*/ double Yloc,
        /*[in,out]*/ long * Errors,
        /*[out,retval]*/ struct IBomTable * * Retval ) = 0;
      virtual HRESULT __stdcall SelectEntity (
        /*[in]*/ IDispatch * Entity,
        /*[in]*/ VARIANT_BOOL AppendFlag,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ISelectEntity (
        /*[in]*/ struct IEntity * Entity,
        /*[in]*/ VARIANT_BOOL AppendFlag,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsModelOutOfDate (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_ModelToViewTransform (
        /*[out,retval]*/ struct IMathTransform * * Xform ) = 0;
      virtual HRESULT __stdcall put_ModelToViewTransform (
        /*[in]*/ struct IMathTransform * Xform ) = 0;
      virtual HRESULT __stdcall GetDisplayMode2 (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetFacettedHlrDisplay (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetDisplayEdgesInShadedMode (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetDisplayMode2 (
        /*[in]*/ long Mode,
        /*[in]*/ VARIANT_BOOL Facetted,
        /*[in]*/ VARIANT_BOOL Edges,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetPolylines5 (
        /*[in]*/ short CrossHatchOption,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetPolylines5 (
        /*[in]*/ short CrossHatchOption,
        /*[in]*/ long ArraySize,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetPolyLineCount5 (
        /*[in]*/ short CrossHatchOption,
        /*[out]*/ long * PointCount,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetLineCount2 (
        /*[in]*/ short CrossHatchOption,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetLines4 (
        /*[in]*/ short CrossHatchOption,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetLines4 (
        /*[in]*/ short CrossHatchOption,
        /*[in]*/ long ArraySize,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstBlockInstance (
        /*[out,retval]*/ struct IBlockInstance * * Retval ) = 0;
      virtual HRESULT __stdcall GetSectionLineCount2 (
        /*[out]*/ long * Size,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetSectionLineInfo2 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetSectionLineInfo2 (
        /*[in]*/ long ArraySize,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetDetailCircleCount2 (
        /*[out]*/ long * Size,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetDetailCircleInfo2 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetDetailCircleInfo2 (
        /*[in]*/ long ArraySize,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IsBroken (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetBreakLineCount (
        /*[out]*/ long * Size,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetBreakLines (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetBreakLines (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IBreakLine * * Retval ) = 0;
      virtual HRESULT __stdcall InsertBreak (
        /*[in]*/ long Orientation,
        /*[in]*/ double Position1,
        /*[in]*/ double Position2,
        /*[in]*/ long Style,
        /*[out,retval]*/ struct IBreakLine * * Retval ) = 0;
      virtual HRESULT __stdcall GetBreakLineInfo (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetBreakLineInfo (
        /*[in]*/ long ArraySize,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetFaceHatchCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetFaceHatches (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetFaceHatches (
        /*[in]*/ long NumFacesHatches,
        /*[out,retval]*/ struct IFaceHatch * * Retval ) = 0;
      virtual HRESULT __stdcall GetCenterMarkCount2 (
        /*[in,out]*/ long * Size,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetCenterMarks (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetCenterMarks (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct ICenterMark * * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstCenterMark (
        /*[out,retval]*/ struct ICenterMark * * Retval ) = 0;
      virtual HRESULT __stdcall GetCenterLineSketch (
        /*[out,retval]*/ struct ISketch * * Retval ) = 0;
      virtual HRESULT __stdcall GetDimensionDisplayInfoSize (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetDimensionDisplayInfo4 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetDimensionDisplayInfo4 (
        /*[in]*/ long ArraySize,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstCenterLine (
        /*[out,retval]*/ struct ICenterLine * * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstDisplayDimension4 (
        /*[out,retval]*/ struct IDisplayDimension * * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstTableAnnotation (
        /*[out,retval]*/ struct ITableAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall get_RootDrawingComponent (
        /*[out,retval]*/ struct IDrawingComponent * * Retval ) = 0;
      virtual HRESULT __stdcall get_ReferencedDocument (
        /*[out,retval]*/ struct IModelDoc2 * * Retval ) = 0;
      virtual HRESULT __stdcall InsertHoleTable (
        /*[in]*/ VARIANT_BOOL UseAnchorPoint,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ long AnchorType,
        /*[in]*/ BSTR TableTemplate,
        /*[out,retval]*/ struct IHoleTableAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall InsertBomTable2 (
        /*[in]*/ VARIANT_BOOL UseAnchorPoint,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ long AnchorType,
        /*[in]*/ long BomType,
        /*[in]*/ BSTR Configuration,
        /*[in]*/ BSTR TableTemplate,
        /*[out,retval]*/ struct IBomTableAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstDatumOrigin (
        /*[out,retval]*/ struct IDatumOrigin * * Retval ) = 0;
      virtual HRESULT __stdcall GetUseParentDisplayMode (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetDisplayMode3 (
        /*[in]*/ VARIANT_BOOL UseParent,
        /*[in]*/ long Mode,
        /*[in]*/ VARIANT_BOOL Facetted,
        /*[in]*/ VARIANT_BOOL Edges,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AlignWithView (
        /*[in]*/ long AlignType,
        /*[in]*/ struct IView * BaseView,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_UseParentScale (
        /*[out,retval]*/ VARIANT_BOOL * UseParent ) = 0;
      virtual HRESULT __stdcall put_UseParentScale (
        /*[in]*/ VARIANT_BOOL UseParent ) = 0;
      virtual HRESULT __stdcall Crop (
        /*[out,retval]*/ long * CropErrors ) = 0;
      virtual HRESULT __stdcall IsPerspectiveView (
        /*[out,retval]*/ VARIANT_BOOL * Rettval ) = 0;
      virtual HRESULT __stdcall GetAnnotationCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetAnnotations (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetAnnotations (
        /*[in]*/ long NumAnnotations,
        /*[out,retval]*/ struct IAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall GetDimensionCount4 (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetDimensionDisplayInfoSize2 (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetDimensionDisplayInfo5 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetDimensionDisplayInfo5 (
        /*[in]*/ long ArraySize,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetDimensionDisplayString4 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetDimensionDisplayString4 (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetDimensionIds4 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetDimensionIds4 (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetDimensionInfo6 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetDimensionInfo6 (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetDimensionString4 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetDimensionString4 (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstDisplayDimension5 (
        /*[out,retval]*/ struct IDisplayDimension * * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstAnnotation3 (
        /*[out,retval]*/ struct IAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall IsLightweight (
        /*[out,retval]*/ VARIANT_BOOL * VbIsLightweight ) = 0;
      virtual HRESULT __stdcall SetResolvedToLightweight ( ) = 0;
      virtual HRESULT __stdcall SetLightweightToResolved ( ) = 0;
      virtual HRESULT __stdcall GetFirstWeldBead (
        /*[out,retval]*/ struct IWeldBead * * Retval ) = 0;
      virtual HRESULT __stdcall get_FocusLocked (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_FocusLocked (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall GetName2 (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall SetName2 (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_HiddenEdges (
        /*[out,retval]*/ VARIANT * EdgeList ) = 0;
      virtual HRESULT __stdcall put_HiddenEdges (
        /*[in]*/ VARIANT EdgeList ) = 0;
      virtual HRESULT __stdcall GetHiddenEdgeCount (
        /*[out,retval]*/ long * HiddenEdgeCount ) = 0;
      virtual HRESULT __stdcall IGetHiddenEdges (
        /*[in]*/ long HiddenEdgeCount,
        /*[out,retval]*/ struct IEdge * * EdgeList ) = 0;
      virtual HRESULT __stdcall ISetHiddenEdges (
        /*[in]*/ long HiddenEdgeCount,
        /*[in]*/ struct IEdge * * EdgeList ) = 0;
      virtual HRESULT __stdcall GetVisibleComponentCount (
        /*[out,retval]*/ long * ViewComponentCount ) = 0;
      virtual HRESULT __stdcall GetVisibleComponents (
        /*[out,retval]*/ VARIANT * ViewComponents ) = 0;
      virtual HRESULT __stdcall IGetVisibleComponents (
        /*[in]*/ long ViewComponentCount,
        /*[out,retval]*/ struct IComponent2 * * LpViewComponents ) = 0;
      virtual HRESULT __stdcall GetVisibleEntityCount (
        /*[in]*/ struct IComponent2 * LpViewComponent,
        /*[in]*/ long EntityType,
        /*[out,retval]*/ long * ViewEntityCount ) = 0;
      virtual HRESULT __stdcall GetVisibleEntities (
        /*[in]*/ struct IComponent2 * LpViewComponent,
        /*[in]*/ long EntityType,
        /*[out,retval]*/ VARIANT * ViewEntities ) = 0;
      virtual HRESULT __stdcall IGetVisibleEntities (
        /*[in]*/ struct IComponent2 * LpViewComponent,
        /*[in]*/ long EntityType,
        /*[in]*/ long ViewEntityCount,
        /*[out,retval]*/ struct IEntity * * LpViewEntities ) = 0;
      virtual HRESULT __stdcall GetPolyLinesAndCurves (
        /*[in]*/ short CrossHatchOption,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetPolyLinesAndCurves (
        /*[in]*/ short CrossHatchOption,
        /*[in]*/ long ArraySize,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetPolyLinesAndCurvesCount (
        /*[in]*/ short CrossHatchOption,
        /*[out]*/ long * PointCount,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall get_ShowSheetMetalBendNotes (
        /*[out,retval]*/ VARIANT_BOOL * ShowBendNote ) = 0;
      virtual HRESULT __stdcall put_ShowSheetMetalBendNotes (
        /*[in]*/ VARIANT_BOOL ShowBendNote ) = 0;
      virtual HRESULT __stdcall get_Sheet (
        /*[out,retval]*/ struct ISheet * * Sheet ) = 0;
      virtual HRESULT __stdcall GetDependentViewCount (
        /*[in]*/ VARIANT_BOOL AllViews,
        /*[in]*/ long SpecificViewType,
        /*[out,retval]*/ long * DependentViewCount ) = 0;
      virtual HRESULT __stdcall GetDependentViews (
        /*[in]*/ VARIANT_BOOL AllViews,
        /*[in]*/ long SpecificViewType,
        /*[out,retval]*/ VARIANT * DependentViews ) = 0;
      virtual HRESULT __stdcall IGetDependentViews (
        /*[in]*/ VARIANT_BOOL AllViews,
        /*[in]*/ long SpecificViewType,
        /*[in]*/ long DependentViewCount,
        /*[out,retval]*/ struct IView * * DependentViews ) = 0;
      virtual HRESULT __stdcall GetKeepLinkedToBOM (
        /*[out,retval]*/ VARIANT_BOOL * Linked ) = 0;
      virtual HRESULT __stdcall GetKeepLinkedToBOMName (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall SetKeepLinkedToBOM (
        /*[in]*/ VARIANT_BOOL Linked,
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetPolylines6 (
        /*[in]*/ short CrossHatchOption,
        /*[out]*/ VARIANT * Polylines,
        /*[out,retval]*/ VARIANT * Edges ) = 0;
      virtual HRESULT __stdcall IGetPolylines6 (
        /*[in]*/ short CrossHatchOption,
        /*[in]*/ long ArraySize,
        /*[out]*/ double * Polylines,
        /*[in]*/ long EdgeArraySize,
        /*[out,retval]*/ struct IEdge * * Edges ) = 0;
      virtual HRESULT __stdcall InsertWeldmentTable (
        /*[in]*/ VARIANT_BOOL UseAnchorPoint,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ long AnchorType,
        /*[in]*/ BSTR Configuration,
        /*[in]*/ BSTR TableTemplate,
        /*[out,retval]*/ struct IWeldmentCutListAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall get_BreakLineGap (
        /*[out,retval]*/ double * DBreakLineGap ) = 0;
      virtual HRESULT __stdcall put_BreakLineGap (
        /*[in]*/ double DBreakLineGap ) = 0;
      virtual HRESULT __stdcall InsertAlternateView (
        /*[in]*/ BSTR ConfigurationName,
        /*[out,retval]*/ struct IView * * LpView ) = 0;
      virtual HRESULT __stdcall GetTemporaryAxesCount (
        /*[out,retval]*/ long * TempAxesCount ) = 0;
      virtual HRESULT __stdcall GetTemporaryAxes (
        /*[out,retval]*/ VARIANT * TempAxesInfo ) = 0;
      virtual HRESULT __stdcall IGetTemporaryAxes (
        /*[in]*/ long TempAxesCount,
        /*[out,retval]*/ double * TempAxesInfo ) = 0;
      virtual HRESULT __stdcall GetProjectionLineCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetProjectionLines (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetProjectionLines (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IProjectionArrow * * Retval ) = 0;
      virtual HRESULT __stdcall GetOrientationName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall get_FlipView (
        /*[out,retval]*/ VARIANT_BOOL * FlipView ) = 0;
      virtual HRESULT __stdcall put_FlipView (
        /*[in]*/ VARIANT_BOOL FlipView ) = 0;
      virtual HRESULT __stdcall GetPolylines7 (
        /*[in]*/ short CrossHatchOption,
        /*[out]*/ VARIANT * Polylines,
        /*[out,retval]*/ VARIANT * Edges ) = 0;
      virtual HRESULT __stdcall IGetPolylines7 (
        /*[in]*/ short CrossHatchOption,
        /*[in]*/ long ArraySize,
        /*[out]*/ double * Polylines,
        /*[in]*/ long EdgeArraySize,
        /*[out,retval]*/ IUnknown * * Edges ) = 0;
      virtual HRESULT __stdcall GetNotes (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetNoteCount (
        /*[out,retval]*/ long * NumberOfNotes ) = 0;
      virtual HRESULT __stdcall IGetNotes (
        /*[in]*/ long NumberOfNotes,
        /*[out,retval]*/ struct INote * * Retval ) = 0;
};

struct __declspec(uuid("a2227e65-a3a7-11d4-aeff-00c04f603faf"))
IProjectionArrow : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetView (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetView (
        /*[out,retval]*/ struct IView * * Retval ) = 0;
      virtual HRESULT __stdcall GetProjectedView (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetProjectedView (
        /*[out,retval]*/ struct IView * * Retval ) = 0;
      virtual HRESULT __stdcall GetLabel (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetLabel (
        /*[in]*/ BSTR Label,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetUseDocTextFormat (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetTextFormat (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetTextFormat (
        /*[out,retval]*/ struct ITextFormat * * Retval ) = 0;
      virtual HRESULT __stdcall GetCoordinates (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetCoordinates (
        /*[out,retval]*/ double * Retval ) = 0;
};

struct __declspec(uuid("54e1ffbc-d989-437f-a701-62bda39fd195"))
IBreakLine : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetView (
        /*[out,retval]*/ struct IView * * Retval ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ long * Style ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ long Style ) = 0;
      virtual HRESULT __stdcall get_Layer (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Layer (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ long * Orientation ) = 0;
      virtual HRESULT __stdcall GetPosition (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall SetPosition (
        /*[in]*/ double Position1,
        /*[in]*/ double Position2,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT_BOOL Append,
        /*[in]*/ struct ISelectData * Data,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("b7a5b9b2-ca73-45b8-a41d-38fb6f2d3b6e"))
ISilhouetteEdge : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetStartPoint (
        /*[out,retval]*/ struct IMathPoint * * StartPoint ) = 0;
      virtual HRESULT __stdcall GetEndPoint (
        /*[out,retval]*/ struct IMathPoint * * EndPoint ) = 0;
      virtual HRESULT __stdcall GetFace (
        /*[out,retval]*/ struct IFace2 * * Face ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT_BOOL Append,
        /*[in]*/ struct ISelectData * Data,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetView (
        /*[out,retval]*/ struct IView * * View ) = 0;
      virtual HRESULT __stdcall GetCurve (
        /*[out,retval]*/ struct ICurve * * Curve ) = 0;
};

struct __declspec(uuid("83a33d55-27c5-11ce-bfd4-00400513bb57"))
INote : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetNext (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNext (
        /*[out,retval]*/ struct INote * * Retval ) = 0;
      virtual HRESULT __stdcall GetText (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetHeight (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetAttachPos (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetFontInfo (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetLeaderInfo (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IsAttached (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall HasExtraLeader (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall HasBalloon (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetBalloonInfo (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetTextPoint (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetArrowHeadInfo (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetAttachPos (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetFontInfo (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetLeaderInfo (
        /*[out]*/ long * PointCount,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetBalloonInfo (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetTextPoint (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetArrowHeadInfo (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetUpperRight (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetUpperRight (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetExtent (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetExtent (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IsCompoundNote (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddText (
        /*[in]*/ BSTR Txt,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetTextCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTextAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetHeightAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTextOffsetAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTextOffsetAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall BeginSketchEdit ( ) = 0;
      virtual HRESULT __stdcall EndSketchEdit ( ) = 0;
      virtual HRESULT __stdcall GetExtentAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetExtentAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall SetTextOffsetAtIndex (
        /*[in]*/ long Index,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z ) = 0;
      virtual HRESULT __stdcall GetSketch (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetSketch (
        /*[out,retval]*/ struct ISketch * * Retval ) = 0;
      virtual HRESULT __stdcall SetTextAtIndex (
        /*[in]*/ long Index,
        /*[in]*/ BSTR Txt,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetText (
        /*[in]*/ BSTR Txt,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetZeroLengthLeader (
        /*[in]*/ VARIANT_BOOL Flag,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetHeight (
        /*[in]*/ double HeightIn ) = 0;
      virtual HRESULT __stdcall GetHeightInPoints (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetHeightInPoints (
        /*[in]*/ long HeightIn ) = 0;
      virtual HRESULT __stdcall GetName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetName (
        /*[in]*/ BSTR NameIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetTextHeightAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTextPositionAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTextPositionAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTextAngleAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTextRefPositionAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTextInvertAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetLineCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetLineAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetLineAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetArcCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetArcAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetArcAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetArrowHeadCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetArrowHeadAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetArrowHeadAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTriangleCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTriangleAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTriangleAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTextFontAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetTextPoint (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z ) = 0;
      virtual HRESULT __stdcall GetTextLineSpacingAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetLeaderCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetLeaderAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetLeaderAtIndex (
        /*[in]*/ long Index,
        /*[out]*/ long * PointCount,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTextFormat (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetTextFormat (
        /*[out,retval]*/ struct ITextFormat * * Retval ) = 0;
      virtual HRESULT __stdcall SetTextFormat (
        /*[in]*/ long TextFormatType,
        /*[in]*/ IDispatch * TextFormat,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ISetTextFormat (
        /*[in]*/ long TextFormatType,
        /*[in]*/ struct ITextFormat * TextFormat,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetTextFormatAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetTextFormatAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct ITextFormat * * Retval ) = 0;
      virtual HRESULT __stdcall SetTextFormatAtIndex (
        /*[in]*/ long Index,
        /*[in]*/ IDispatch * TextFormat ) = 0;
      virtual HRESULT __stdcall ISetTextFormatAtIndex (
        /*[in]*/ long Index,
        /*[in]*/ struct ITextFormat * TextFormat ) = 0;
      virtual HRESULT __stdcall GetTextJustification (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetTextJustification (
        /*[in]*/ long Justification ) = 0;
      virtual HRESULT __stdcall GetTextJustificationAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetTextJustificationAtIndex (
        /*[in]*/ long Index,
        /*[in]*/ long Justification ) = 0;
      virtual HRESULT __stdcall GetUseDocTextFormat (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetHyperlinkText (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetHyperlinkText (
        /*[in]*/ BSTR Text,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetAnnotation (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetAnnotation (
        /*[out,retval]*/ struct IAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall get_Angle (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_Angle (
        /*[in]*/ double Retval ) = 0;
      virtual HRESULT __stdcall GetBalloonStyle (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetBalloonSize (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetBalloon (
        /*[in]*/ long Style,
        /*[in]*/ long Size,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IGetTextTokenCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTextTokens (
        /*[out]*/ VARIANT * Positions,
        /*[out]*/ VARIANT * Widths,
        /*[out]*/ VARIANT * Heights,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTextTokens (
        /*[out]*/ double * Positions,
        /*[out]*/ double * Widths,
        /*[out]*/ double * Heights,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall IsBomBalloon (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetBomBalloonTextStyle (
        /*[in]*/ VARIANT_BOOL WhichOne,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetBomBalloonText (
        /*[in]*/ VARIANT_BOOL WhichOne,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetBomBalloonText (
        /*[in]*/ long UpperTextStyle,
        /*[in]*/ BSTR UpperText,
        /*[in]*/ long LowerTextStyle,
        /*[in]*/ BSTR LowerText,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_ReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * ReadOnlyOut ) = 0;
      virtual HRESULT __stdcall put_ReadOnly (
        /*[in]*/ VARIANT_BOOL ReadOnlyOut ) = 0;
      virtual HRESULT __stdcall get_PromptText (
        /*[out,retval]*/ BSTR * PromptTextOut ) = 0;
      virtual HRESULT __stdcall put_PromptText (
        /*[in]*/ BSTR PromptTextOut ) = 0;
      virtual HRESULT __stdcall get_TagName (
        /*[out,retval]*/ BSTR * TagNameOut ) = 0;
      virtual HRESULT __stdcall put_TagName (
        /*[in]*/ BSTR TagNameOut ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * VisibleOut ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL VisibleOut ) = 0;
      virtual HRESULT __stdcall IsAttribute (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsStackedBalloon (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsStackedBalloonMaster (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetBalloonStack (
        /*[out,retval]*/ struct IBalloonStack * * Retval ) = 0;
      virtual HRESULT __stdcall get_PropertyLinkedText (
        /*[out,retval]*/ BSTR * Txt ) = 0;
      virtual HRESULT __stdcall put_PropertyLinkedText (
        /*[in]*/ BSTR Txt ) = 0;
      virtual HRESULT __stdcall GetTextPoint2 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTextPoint2 (
        /*[out,retval]*/ struct IMathPoint * * Retval ) = 0;
      virtual HRESULT __stdcall get_TextRightToLeft (
        /*[out,retval]*/ VARIANT_BOOL * VbRightToLeft ) = 0;
      virtual HRESULT __stdcall put_TextRightToLeft (
        /*[in]*/ VARIANT_BOOL VbRightToLeft ) = 0;
      virtual HRESULT __stdcall get_IsBendLineNote (
        /*[out,retval]*/ VARIANT_BOOL * VbIsBendLineNote ) = 0;
      virtual HRESULT __stdcall GetCompoundTextCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetCompoundTextAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall get_HasMultipleFonts (
        /*[out,retval]*/ VARIANT_BOOL * MultiFont ) = 0;
      virtual HRESULT __stdcall GetBendLineValues (
        /*[in,out]*/ VARIANT_BOOL * Up,
        /*[in,out]*/ double * Angle,
        /*[in,out]*/ double * Radius,
        /*[in,out]*/ struct IMathPoint * * StartPt,
        /*[in,out]*/ struct IMathPoint * * EndPt,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetBendLineValues2 (
        /*[in,out]*/ VARIANT_BOOL * Up,
        /*[in,out]*/ double * Angle,
        /*[in,out]*/ double * Radius,
        /*[in,out]*/ VARIANT * Points,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("4944f9e6-bf50-11d5-af56-00c04f603faf"))
IBalloonStack : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Master (
        /*[out,retval]*/ struct INote * * Master ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Stack (
        /*[out,retval]*/ VARIANT * Stack ) = 0;
      virtual HRESULT __stdcall IGetStack (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct INote * * Retval ) = 0;
      virtual HRESULT __stdcall get_Length (
        /*[out,retval]*/ long * Length ) = 0;
      virtual HRESULT __stdcall put_Length (
        /*[in]*/ long Length ) = 0;
      virtual HRESULT __stdcall get_Direction (
        /*[out,retval]*/ long * Direction ) = 0;
      virtual HRESULT __stdcall put_Direction (
        /*[in]*/ long Direction ) = 0;
      virtual HRESULT __stdcall AddTo (
        /*[in]*/ long UpperTextStyle,
        /*[in]*/ BSTR UpperText,
        /*[in]*/ long LowerTextStyle,
        /*[in]*/ BSTR LowerText,
        /*[out,retval]*/ struct INote * * Retval ) = 0;
};

struct __declspec(uuid("83a33da9-27c5-11ce-bfd4-00400513bb57"))
IAnnotation : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetNext (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNext (
        /*[out,retval]*/ struct IAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall GetDisplayData (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetDisplayData (
        /*[out,retval]*/ struct IDisplayData * * Retval ) = 0;
      virtual HRESULT __stdcall GetType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall GetSpecificAnnotation (
        /*[out,retval]*/ IDispatch * * Specific ) = 0;
      virtual HRESULT __stdcall IGetSpecificAnnotation (
        /*[out,retval]*/ IUnknown * * Specific ) = 0;
      virtual HRESULT __stdcall GetPosition (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetPosition (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall SetPosition (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetLeaderCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetLeaderPointsAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetLeaderPointsAtIndex (
        /*[in]*/ long Index,
        /*[in]*/ long PointCount,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetArrowHeadStyleAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetArrowHeadStyleAtIndex (
        /*[in]*/ long Index,
        /*[in]*/ long ArrowHeadStyle,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetLeader (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetBentLeader (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetLeaderSide (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetSmartArrowHeadStyle (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetLeader (
        /*[in]*/ VARIANT_BOOL Leader,
        /*[in]*/ long LeaderSide,
        /*[in]*/ VARIANT_BOOL SmartArrowHeadStyle,
        /*[in]*/ VARIANT_BOOL BentLeader,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetName (
        /*[in]*/ BSTR NameIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetVisualProperties (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetVisualProperties (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall get_Layer (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_Layer (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall get_LayerOverride (
        /*[out,retval]*/ int * Retval ) = 0;
      virtual HRESULT __stdcall put_LayerOverride (
        /*[in]*/ int Retval ) = 0;
      virtual HRESULT __stdcall get_Color (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall put_Color (
        /*[in]*/ long Retval ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ long Retval ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ long Retval ) = 0;
      virtual HRESULT __stdcall IGetAttachedEntityCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetAttachedEntities (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetAttachedEntities (
        /*[out,retval]*/ IUnknown * * Retval ) = 0;
      virtual HRESULT __stdcall GetAttachedEntityTypes (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetAttachedEntityTypes (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetNext2 (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNext2 (
        /*[out,retval]*/ struct IAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ long Retval ) = 0;
      virtual HRESULT __stdcall GetTextFormatCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetUseDocTextFormat (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetTextFormat (
        /*[in]*/ long Index,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetTextFormat (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct ITextFormat * * Retval ) = 0;
      virtual HRESULT __stdcall SetTextFormat (
        /*[in]*/ long Index,
        /*[in]*/ VARIANT_BOOL UseDoc,
        /*[in]*/ IDispatch * TextFormat,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ISetTextFormat (
        /*[in]*/ long Index,
        /*[in]*/ VARIANT_BOOL UseDoc,
        /*[in]*/ struct ITextFormat * TextFormat,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetLeaderPerpendicular (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetLeaderAllAround (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetLeader2 (
        /*[in]*/ VARIANT_BOOL Leader,
        /*[in]*/ long LeaderSide,
        /*[in]*/ VARIANT_BOOL SmartArrowHeadStyle,
        /*[in]*/ VARIANT_BOOL BentLeader,
        /*[in]*/ VARIANT_BOOL Perpendicular,
        /*[in]*/ VARIANT_BOOL AllAround,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT_BOOL AppendFlag,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SelectByMark (
        /*[in]*/ VARIANT_BOOL AppendFlag,
        /*[in]*/ long Mark,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DeSelect (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Select2 (
        /*[in]*/ VARIANT_BOOL Append,
        /*[in]*/ long Mark,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Select3 (
        /*[in]*/ VARIANT_BOOL Append,
        /*[in]*/ struct ISelectData * Data,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetAttachedEntityCount2 (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetAttachedEntities2 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall get_Owner (
        /*[out,retval]*/ IDispatch * * LpOwnerDisp ) = 0;
      virtual HRESULT __stdcall put_Owner (
        /*[in]*/ IDispatch * LpOwnerDisp ) = 0;
      virtual HRESULT __stdcall get_OwnerType (
        /*[out,retval]*/ long * NOwnerType ) = 0;
      virtual HRESULT __stdcall put_OwnerType (
        /*[in]*/ long NOwnerType ) = 0;
      virtual HRESULT __stdcall GetNext3 (
        /*[out,retval]*/ struct IAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall GetDashedLeader (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetLeaderStyle (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetLeader3 (
        /*[in]*/ long LeaderStyle,
        /*[in]*/ long LeaderSide,
        /*[in]*/ VARIANT_BOOL SmartArrowHeadStyle,
        /*[in]*/ VARIANT_BOOL Perpendicular,
        /*[in]*/ VARIANT_BOOL AllAround,
        /*[in]*/ VARIANT_BOOL Dashed,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetAttachedEntities (
        /*[in]*/ VARIANT AttachedEnts,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ISetAttachedEntities (
        /*[in]*/ long Count,
        /*[in]*/ IDispatch * * LpArr,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CheckSpelling (
        /*[in]*/ long Options,
        /*[in]*/ BSTR Dictionary,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall ConvertToMultiJog (
        /*[in]*/ long LeaderNumber,
        /*[in]*/ long NumberOfPoints,
        /*[in]*/ VARIANT PointsData,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_AnnotationView (
        /*[out,retval]*/ struct IAnnotationView * * AnnotationView ) = 0;
      virtual HRESULT __stdcall GetAttachedEntityCount3 (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetAttachedEntities3 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetArrowHeadCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetArrowHeadSizeAtIndex (
        /*[in]*/ long Index,
        /*[in,out]*/ VARIANT_BOOL * UseDoc,
        /*[in,out]*/ double * Length,
        /*[in,out]*/ double * Width,
        /*[in,out]*/ double * Height,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetArrowHeadSizeAtIndex (
        /*[in]*/ long Index,
        /*[in]*/ VARIANT_BOOL UseDoc,
        /*[in]*/ double Length,
        /*[in]*/ double Width,
        /*[in]*/ double Height,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetMultiJogLeaderCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetMultiJogLeaders (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetMultiJogLeaders (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IMultiJogLeader * * Retval ) = 0;
      virtual HRESULT __stdcall get_UseDocDispFrame (
        /*[out,retval]*/ VARIANT_BOOL * UseDocDispFrame ) = 0;
      virtual HRESULT __stdcall put_UseDocDispFrame (
        /*[in]*/ VARIANT_BOOL UseDocDispFrame ) = 0;
      virtual HRESULT __stdcall get_FrameThickness (
        /*[out,retval]*/ long * FrameThickness ) = 0;
      virtual HRESULT __stdcall put_FrameThickness (
        /*[in]*/ long FrameThickness ) = 0;
      virtual HRESULT __stdcall get_FrameThicknessCustom (
        /*[out,retval]*/ double * FrameThicknessCustom ) = 0;
      virtual HRESULT __stdcall put_FrameThicknessCustom (
        /*[in]*/ double FrameThicknessCustom ) = 0;
      virtual HRESULT __stdcall get_FrameLineStyle (
        /*[out,retval]*/ long * FrameLineStyle ) = 0;
      virtual HRESULT __stdcall put_FrameLineStyle (
        /*[in]*/ long FrameLineStyle ) = 0;
      virtual HRESULT __stdcall get_UseDocDispLeader (
        /*[out,retval]*/ VARIANT_BOOL * UseDocDispLeader ) = 0;
      virtual HRESULT __stdcall put_UseDocDispLeader (
        /*[in]*/ VARIANT_BOOL UseDocDispLeader ) = 0;
      virtual HRESULT __stdcall get_LeaderThickness (
        /*[out,retval]*/ long * LeaderThickness ) = 0;
      virtual HRESULT __stdcall put_LeaderThickness (
        /*[in]*/ long LeaderThickness ) = 0;
      virtual HRESULT __stdcall get_LeaderThicknessCustom (
        /*[out,retval]*/ double * LeaderThicknessCustom ) = 0;
      virtual HRESULT __stdcall put_LeaderThicknessCustom (
        /*[in]*/ double LeaderThicknessCustom ) = 0;
      virtual HRESULT __stdcall get_LeaderLineStyle (
        /*[out,retval]*/ long * LeaderLineStyle ) = 0;
      virtual HRESULT __stdcall put_LeaderLineStyle (
        /*[in]*/ long LeaderLineStyle ) = 0;
      virtual HRESULT __stdcall IsDangling (
        /*[out,retval]*/ VARIANT_BOOL * Dangling ) = 0;
      virtual HRESULT __stdcall GetStyleName (
        /*[out,retval]*/ BSTR * StyleName ) = 0;
      virtual HRESULT __stdcall SetStyleName (
        /*[in]*/ BSTR StyleName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ApplyDefaultStyleAttributes (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddOrUpdateStyle (
        /*[in]*/ BSTR StyleName,
        /*[in]*/ VARIANT_BOOL BreakLinks,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DeleteStyle (
        /*[in]*/ BSTR StyleName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SaveStyle (
        /*[in]*/ BSTR StyleName,
        /*[in]*/ BSTR PathName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall LoadStyle (
        /*[in]*/ BSTR PathName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("78d7fda3-83d7-4c01-9e54-73ab4827cc4e"))
IAnnotationView : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AnnotationCount (
        /*[out,retval]*/ long * AnnotationCount ) = 0;
      virtual HRESULT __stdcall get_Annotations (
        /*[out,retval]*/ VARIANT * Annotations ) = 0;
      virtual HRESULT __stdcall IGetAnnotations (
        /*[in]*/ long AnnotationCount,
        /*[out,retval]*/ struct IAnnotation * * Annotations ) = 0;
      virtual HRESULT __stdcall get_AngleMadeWithViewHorizontal (
        /*[out,retval]*/ double * AngleMadeWithViewHorizontal ) = 0;
      virtual HRESULT __stdcall Activate (
        /*[out,retval]*/ VARIANT_BOOL * ActivationResult ) = 0;
      virtual HRESULT __stdcall ActivateAndReorient (
        /*[out,retval]*/ VARIANT_BOOL * ActivationResult ) = 0;
      virtual HRESULT __stdcall Show (
        /*[out,retval]*/ VARIANT_BOOL * ShowResult ) = 0;
      virtual HRESULT __stdcall Hide (
        /*[out,retval]*/ VARIANT_BOOL * HideResult ) = 0;
      virtual HRESULT __stdcall MoveAnnotations (
        /*[in]*/ VARIANT AnnotationsToMove,
        /*[out,retval]*/ VARIANT_BOOL * MoveResult ) = 0;
      virtual HRESULT __stdcall Orient (
        /*[out,retval]*/ VARIANT_BOOL * OrientResult ) = 0;
      virtual HRESULT __stdcall GetViewRotation (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetViewRotation (
        /*[out,retval]*/ double * Retval ) = 0;
};

struct __declspec(uuid("01eb5266-6ca9-4f59-b0b4-a040dd1ccfb6"))
IMultiJogLeader : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetNext (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNext (
        /*[out,retval]*/ struct IMultiJogLeader * * Retval ) = 0;
      virtual HRESULT __stdcall GetLineCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetLineAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetLineAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetArrowHeadCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetArrowHeadAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetArrowHeadAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetAnnotation (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetAnnotation (
        /*[out,retval]*/ struct IAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall GetDisplayData (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetDisplayData (
        /*[out,retval]*/ struct IDisplayData * * Retval ) = 0;
};

struct __declspec(uuid("83a33d4a-27c5-11ce-bfd4-00400513bb57"))
IGtol : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall SetFrameValues (
        /*[in]*/ short FrameNumber,
        /*[in]*/ BSTR Tol1,
        /*[in]*/ BSTR Tol2,
        /*[in]*/ BSTR Datum1,
        /*[in]*/ BSTR Datum2,
        /*[in]*/ BSTR Datum3 ) = 0;
      virtual HRESULT __stdcall SetFrameSymbols (
        /*[in]*/ short FrameNumber,
        /*[in]*/ short GCS,
        /*[in]*/ VARIANT_BOOL TolDia1,
        /*[in]*/ short TolMC1,
        /*[in]*/ VARIANT_BOOL TolDia2,
        /*[in]*/ short TolMC2,
        /*[in]*/ short DatumMC1,
        /*[in]*/ short DatumMC2,
        /*[in]*/ short DatumMC3 ) = 0;
      virtual HRESULT __stdcall SetPTZHeight (
        /*[in]*/ BSTR PtzHt,
        /*[in]*/ VARIANT_BOOL DisplayIn ) = 0;
      virtual HRESULT __stdcall SetDatumIdentifier (
        /*[in]*/ BSTR DatumIdentifier ) = 0;
      virtual HRESULT __stdcall GetNextGTOL (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNextGTOL (
        /*[out,retval]*/ struct IGtol * * Retval ) = 0;
      virtual HRESULT __stdcall GetFrameValues (
        /*[in]*/ short FrameNumber,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetFrameSymbols (
        /*[in]*/ short FrameNumber,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetPTZHeight (
        /*[out,retval]*/ BSTR * PtzHt ) = 0;
      virtual HRESULT __stdcall GetDatumIdentifier (
        /*[out,retval]*/ BSTR * DatumIdentifier ) = 0;
      virtual HRESULT __stdcall GetHeight (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetAttachPos (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetFontInfo (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetLeaderInfo (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IsAttached (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall HasExtraLeader (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Dummy1 ( ) = 0;
      virtual HRESULT __stdcall Dummy2 ( ) = 0;
      virtual HRESULT __stdcall GetTextPoint (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetArrowHeadInfo (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetAttachPos (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetFontInfo (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetLeaderInfo (
        /*[out]*/ long * PointCount,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall Dummy3 ( ) = 0;
      virtual HRESULT __stdcall IGetTextPoint (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetArrowHeadInfo (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetSymName (
        /*[in]*/ short SymIdx,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetSymDesc (
        /*[in]*/ short SymIdx,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetSymText (
        /*[in]*/ short SymIdx,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetSymEdgeCounts (
        /*[in]*/ short SymIdx,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetSymLines (
        /*[in]*/ short SymIdx,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetSymArcs (
        /*[in]*/ short SymIdx,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetSymCircles (
        /*[in]*/ short SymIdx,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetSymTextPoints (
        /*[in]*/ short SymIdx,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetSymEdgeCounts (
        /*[in]*/ short SymIdx,
        /*[out,retval]*/ short * Retval ) = 0;
      virtual HRESULT __stdcall IGetSymLines (
        /*[in]*/ short SymIdx,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetSymArcs (
        /*[in]*/ short SymIdx,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetSymCircles (
        /*[in]*/ short SymIdx,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetSymTextPoints (
        /*[in]*/ short SymIdx,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTextCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTextAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetTextHeightAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTextPositionAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTextPositionAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTextAngleAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTextRefPositionAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTextInvertAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetLineCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetLineAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetLineAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetArcCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetArcAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetArcAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetArrowHeadCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetArrowHeadAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetArrowHeadAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTriangleCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTriangleAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTriangleAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetFrameValues (
        /*[in]*/ short FrameNumber,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall IGetFrameSymbols (
        /*[in]*/ short FrameNumber,
        /*[out,retval]*/ short * Retval ) = 0;
      virtual HRESULT __stdcall IGetSymText (
        /*[in]*/ short SymIdx,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetFrameSymbols2 (
        /*[in]*/ short FrameNumber,
        /*[in]*/ BSTR GCS,
        /*[in]*/ VARIANT_BOOL TolDia1,
        /*[in]*/ BSTR TolMC1,
        /*[in]*/ VARIANT_BOOL TolDia2,
        /*[in]*/ BSTR TolMC2,
        /*[in]*/ BSTR DatumMC1,
        /*[in]*/ BSTR DatumMC2,
        /*[in]*/ BSTR DatumMC3 ) = 0;
      virtual HRESULT __stdcall GetTextFont (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetLeaderCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetLeaderAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetLeaderAtIndex (
        /*[in]*/ long Index,
        /*[out]*/ long * PointCount,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall SetPosition (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z ) = 0;
      virtual HRESULT __stdcall GetUseDocTextFormat (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetTextFormat (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetTextFormat (
        /*[out,retval]*/ struct ITextFormat * * Retval ) = 0;
      virtual HRESULT __stdcall SetTextFormat (
        /*[in]*/ long TextFormatType,
        /*[in]*/ IDispatch * TextFormat,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ISetTextFormat (
        /*[in]*/ long TextFormatType,
        /*[in]*/ struct ITextFormat * TextFormat,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetCompositeFrame (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetCompositeFrame (
        /*[in]*/ VARIANT_BOOL Composite ) = 0;
      virtual HRESULT __stdcall GetBetweenTwoPoints (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetBetweenTwoPointsText (
        /*[in]*/ long Index,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetBetweenTwoPoints (
        /*[in]*/ VARIANT_BOOL Between,
        /*[in]*/ BSTR TextFrom,
        /*[in]*/ BSTR TextTo ) = 0;
      virtual HRESULT __stdcall GetAllAround (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetLeaderSide (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetLeader (
        /*[in]*/ VARIANT_BOOL Leader,
        /*[in]*/ long LeaderSide,
        /*[in]*/ VARIANT_BOOL BentLeader,
        /*[in]*/ VARIANT_BOOL AllAround ) = 0;
      virtual HRESULT __stdcall GetAnnotation (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetAnnotation (
        /*[out,retval]*/ struct IAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall GetFrameSymbols2 (
        /*[in]*/ short FrameNumber,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetFrameSymbols2 (
        /*[in]*/ short FrameNumber,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetFrameDiameterSymbols (
        /*[in]*/ short FrameNumber,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetFrameDiameterSymbols (
        /*[in]*/ short FrameNumber,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetFrameCount (
        /*[out,retval]*/ short * Retval ) = 0;
      virtual HRESULT __stdcall GetLeaderAtIndex2 (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetLeaderAtIndex2 (
        /*[in]*/ long Index,
        /*[in,out]*/ long * PointCount,
        /*[out,retval]*/ double * Retval ) = 0;
};

struct __declspec(uuid("83a33d8e-27c5-11ce-bfd4-00400513bb57"))
ISFSymbol : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetNext (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNext (
        /*[out,retval]*/ struct ISFSymbol * * Retval ) = 0;
      virtual HRESULT __stdcall GetTextCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTextAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetTextHeightAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTextPositionAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTextPositionAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTextAngleAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetLineCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetLineAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetLineAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetArcCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetArcAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetArcAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetArrowHeadCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetArrowHeadAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetArrowHeadAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTextRefPositionAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTextInvertAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTextFontAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetTriangleCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTriangleAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTriangleAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IsAttached (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall HasExtraLeader (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetLeaderCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetLeaderAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetLeaderAtIndex (
        /*[in]*/ long Index,
        /*[out]*/ long * PointCount,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetArrowHeadInfo (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetArrowHeadInfo (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetAnnotation (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetAnnotation (
        /*[out,retval]*/ struct IAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall GetSymbolType (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetSymbolType (
        /*[in]*/ long SymbolType,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetDirectionOfLay (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetDirectionOfLay (
        /*[in]*/ long Direction,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetText (
        /*[in]*/ long WhichOne,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetText (
        /*[in]*/ long WhichOne,
        /*[in]*/ BSTR Text,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_Rotated (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_Rotated (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_Grinding (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_Grinding (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall GetAngle (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall SetAngle (
        /*[in]*/ double Angle,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ long * Orientation ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ long Orientation ) = 0;
      virtual HRESULT __stdcall GetSymbol (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetSymbolSurfaceTexture (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetSymbolAllAround (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetSymbol (
        /*[in]*/ long Symbol,
        /*[in]*/ long SurfaceTexture,
        /*[in]*/ VARIANT_BOOL AllAround,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_GOSTNotation (
        /*[out,retval]*/ VARIANT_BOOL * Notation ) = 0;
      virtual HRESULT __stdcall put_GOSTNotation (
        /*[in]*/ VARIANT_BOOL Notation ) = 0;
      virtual HRESULT __stdcall get_GOSTDefaultSymbol (
        /*[out,retval]*/ VARIANT_BOOL * DefaultSym ) = 0;
      virtual HRESULT __stdcall put_GOSTDefaultSymbol (
        /*[in]*/ VARIANT_BOOL DefaultSym ) = 0;
};

struct __declspec(uuid("83a33d90-27c5-11ce-bfd4-00400513bb57"))
IDatumTag : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetNext (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNext (
        /*[out,retval]*/ struct IDatumTag * * Retval ) = 0;
      virtual HRESULT __stdcall GetTextCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTextAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetTextHeightAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTextPositionAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTextPositionAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTextAngleAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTextRefPositionAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTextInvertAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetLineCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetLineAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetLineAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetArcCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetArcAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetArcAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetArrowHeadCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetArrowHeadAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetArrowHeadAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTriangleCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTriangleAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTriangleAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetAnnotation (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetAnnotation (
        /*[out,retval]*/ struct IAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall GetLabel (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetLabel (
        /*[in]*/ BSTR Label,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_FilledTriangle (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_FilledTriangle (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_Shoulder (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_Shoulder (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_ForcedShoulder (
        /*[out,retval]*/ VARIANT_BOOL * Forced ) = 0;
      virtual HRESULT __stdcall get_LeaderOrientation (
        /*[out,retval]*/ long * Orient ) = 0;
      virtual HRESULT __stdcall put_LeaderOrientation (
        /*[in]*/ long Orient ) = 0;
      virtual HRESULT __stdcall GetUseDocDisplayStyle (
        /*[out,retval]*/ VARIANT_BOOL * UseDoc ) = 0;
      virtual HRESULT __stdcall GetDisplayStyle (
        /*[out,retval]*/ long * Style ) = 0;
      virtual HRESULT __stdcall SetDisplayStyle (
        /*[in]*/ VARIANT_BOOL UseDoc,
        /*[in]*/ long Style,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("83a33d92-27c5-11ce-bfd4-00400513bb57"))
IDatumTargetSym : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetNext (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNext (
        /*[out,retval]*/ struct IDatumTargetSym * * Retval ) = 0;
      virtual HRESULT __stdcall GetTextCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTextAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetTextHeightAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTextPositionAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTextPositionAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTextAngleAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTextRefPositionAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTextInvertAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetLineCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetLineAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetLineAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetArcCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetArcAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetArcAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetArrowHeadCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetArrowHeadAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetArrowHeadAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTriangleCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTriangleAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTriangleAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetAnnotation (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetAnnotation (
        /*[out,retval]*/ struct IAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall GetTargetShape (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTargetAreaSize (
        /*[in]*/ long WhichOne,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetTargetArea (
        /*[in]*/ long Shape,
        /*[in]*/ BSTR Size1,
        /*[in]*/ BSTR Size2,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetDisplaySymbol (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetDisplayTargetArea (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetDisplaySizeOutside (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetDisplay (
        /*[in]*/ VARIANT_BOOL Symbol,
        /*[in]*/ VARIANT_BOOL TargetArea,
        /*[in]*/ VARIANT_BOOL SizeOutside,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetDatumReferenceLabel (
        /*[in]*/ long WhichOne,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetDatumReferenceLabel (
        /*[in]*/ long WhichOne,
        /*[in]*/ BSTR Text,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("83a33d94-27c5-11ce-bfd4-00400513bb57"))
IWeldSymbol : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetNext (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNext (
        /*[out,retval]*/ struct IWeldSymbol * * Retval ) = 0;
      virtual HRESULT __stdcall GetTextCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTextAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetTextHeightAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTextPositionAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTextPositionAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTextAngleAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTextRefPositionAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTextInvertAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetLineCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetLineAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetLineAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetArcCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetArcAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetArcAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetArrowHeadCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetArrowHeadAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetArrowHeadAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTriangleCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTriangleAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTriangleAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IsAttached (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall HasExtraLeader (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetLeaderCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetLeaderAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetLeaderAtIndex (
        /*[in]*/ long Index,
        /*[out]*/ long * PointCount,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetArrowHeadInfo (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetArrowHeadInfo (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetAnnotation (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetAnnotation (
        /*[out,retval]*/ struct IAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall GetText (
        /*[in]*/ long WhichText,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetContour (
        /*[in]*/ VARIANT_BOOL Top,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetSymmetric (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetPeripheral (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetFieldWeld (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetProcess (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetProcessReference (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetStagger (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetText (
        /*[in]*/ VARIANT_BOOL Top,
        /*[in]*/ BSTR Left,
        /*[in]*/ BSTR Symbol,
        /*[in]*/ BSTR Right,
        /*[in]*/ BSTR Stagger,
        /*[in]*/ long Contour,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetSymmetric (
        /*[in]*/ long Symmetric,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetPeripheral (
        /*[in]*/ VARIANT_BOOL Peripheral,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetFieldWeld (
        /*[in]*/ long FieldWeld,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetProcess (
        /*[in]*/ VARIANT_BOOL Process,
        /*[in]*/ BSTR Text,
        /*[in]*/ VARIANT_BOOL Reference,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetStagger (
        /*[in]*/ VARIANT_BOOL Stagger,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("83a33d9e-27c5-11ce-bfd4-00400513bb57"))
ICThread : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetNext (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNext (
        /*[out,retval]*/ struct ICThread * * Retval ) = 0;
      virtual HRESULT __stdcall GetDisplayData (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetDisplayData (
        /*[out,retval]*/ struct IDisplayData * * Retval ) = 0;
      virtual HRESULT __stdcall GetAnnotation (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetAnnotation (
        /*[out,retval]*/ struct IAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall get_ThreadCallout (
        /*[out,retval]*/ struct INote * * Retval ) = 0;
      virtual HRESULT __stdcall get_PatternedTransforms (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetPatternedTransformsCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetPatternedTransforms (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IMathTransform * * Retval ) = 0;
};

struct __declspec(uuid("83a33db5-27c5-11ce-bfd4-00400513bb57"))
ICustomSymbol : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetNext (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNext (
        /*[out,retval]*/ struct ICustomSymbol * * Retval ) = 0;
      virtual HRESULT __stdcall GetTextCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTextAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetTextHeightAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTextPositionAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTextPositionAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTextAngleAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTextRefPositionAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTextInvertAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetLineCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetLineAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetLineAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetArcCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetArcAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetArcAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetArrowHeadCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetArrowHeadAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetArrowHeadAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetTriangleCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTriangleAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTriangleAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetSketch (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetSketch (
        /*[out,retval]*/ struct ISketch * * Retval ) = 0;
      virtual HRESULT __stdcall GetSketchPosition (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetSketchPosition (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IsAttached (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall HasExtraLeader (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetLeaderCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetLeaderAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetLeaderAtIndex (
        /*[in]*/ long Index,
        /*[out]*/ long * PointCount,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetArrowHeadInfo (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetArrowHeadInfo (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetAnnotation (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetAnnotation (
        /*[out,retval]*/ struct IAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall get_Angle (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_Angle (
        /*[in]*/ double Retval ) = 0;
      virtual HRESULT __stdcall get_Scale2 (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_Scale2 (
        /*[in]*/ double Retval ) = 0;
      virtual HRESULT __stdcall GetText (
        /*[in]*/ long Index,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetText (
        /*[in]*/ long Index,
        /*[in]*/ BSTR Text,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetTextJustificationAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetTextJustificationAtIndex (
        /*[in]*/ long Index,
        /*[in]*/ long Justification ) = 0;
      virtual HRESULT __stdcall GetTextLineSpacingAtIndex (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_TextVisible (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_TextVisible (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall GetNoteCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetNotes (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetNotes (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct INote * * Retval ) = 0;
};

struct __declspec(uuid("55aacd8b-97c5-11d5-af4b-00c04f603faf"))
IDowelSymbol : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetNext (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNext (
        /*[out,retval]*/ struct IDowelSymbol * * Retval ) = 0;
      virtual HRESULT __stdcall GetAnnotation (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetAnnotation (
        /*[out,retval]*/ struct IAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall get_Flipped (
        /*[out,retval]*/ VARIANT_BOOL * Flipped ) = 0;
      virtual HRESULT __stdcall put_Flipped (
        /*[in]*/ VARIANT_BOOL Flipped ) = 0;
      virtual HRESULT __stdcall GetArcPoints (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetArcPoints (
        /*[out,retval]*/ double * Retval ) = 0;
};

struct __declspec(uuid("6beb0423-eda4-11d5-af64-00c04f603faf"))
ICenterMark : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_RotationAngle (
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall put_RotationAngle (
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall get_UseDocDisplaySettings (
        /*[out,retval]*/ VARIANT_BOOL * UseDoc ) = 0;
      virtual HRESULT __stdcall put_UseDocDisplaySettings (
        /*[in]*/ VARIANT_BOOL UseDoc ) = 0;
      virtual HRESULT __stdcall get_ShowLines (
        /*[out,retval]*/ VARIANT_BOOL * Show ) = 0;
      virtual HRESULT __stdcall put_ShowLines (
        /*[in]*/ VARIANT_BOOL Show ) = 0;
      virtual HRESULT __stdcall get_Size (
        /*[out,retval]*/ double * Size ) = 0;
      virtual HRESULT __stdcall put_Size (
        /*[in]*/ double Size ) = 0;
      virtual HRESULT __stdcall GetNext (
        /*[out,retval]*/ struct ICenterMark * * Retval ) = 0;
      virtual HRESULT __stdcall GetAnnotation (
        /*[out,retval]*/ struct IAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ long * Style ) = 0;
      virtual HRESULT __stdcall get_ConnectionLines (
        /*[out,retval]*/ long * Visible ) = 0;
      virtual HRESULT __stdcall put_ConnectionLines (
        /*[in]*/ long Visible ) = 0;
      virtual HRESULT __stdcall get_CenterLineFont (
        /*[out,retval]*/ VARIANT_BOOL * CenterLine ) = 0;
      virtual HRESULT __stdcall put_CenterLineFont (
        /*[in]*/ VARIANT_BOOL CenterLine ) = 0;
      virtual HRESULT __stdcall get_IsGrouped (
        /*[out,retval]*/ VARIANT_BOOL * IsGrouped ) = 0;
      virtual HRESULT __stdcall get_GroupCount (
        /*[out,retval]*/ long * GroupCount ) = 0;
      virtual HRESULT __stdcall GetExtendedLength (
        /*[in]*/ long GroupID,
        /*[in]*/ long HandleID,
        /*[out,retval]*/ double * ExtendedLength ) = 0;
      virtual HRESULT __stdcall SetExtendedLength (
        /*[in]*/ long GroupID,
        /*[in]*/ long HandleID,
        /*[in]*/ double ExtendedLength,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("90de8cd7-cffc-414b-8380-131c739f9fb5"))
ICenterLine : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetNext (
        /*[out,retval]*/ struct ICenterLine * * Retval ) = 0;
      virtual HRESULT __stdcall GetAnnotation (
        /*[out,retval]*/ struct IAnnotation * * Retval ) = 0;
};

struct __declspec(uuid("66f09b08-8a71-4283-a943-3f905653c859"))
IWeldBead : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetNext (
        /*[out,retval]*/ struct IWeldBead * * Retval ) = 0;
      virtual HRESULT __stdcall GetAnnotation (
        /*[out,retval]*/ struct IAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall get_SolidFill (
        /*[out,retval]*/ VARIANT_BOOL * SolidFill ) = 0;
      virtual HRESULT __stdcall put_SolidFill (
        /*[in]*/ VARIANT_BOOL SolidFill ) = 0;
};

struct __declspec(uuid("83a33da1-27c5-11ce-bfd4-00400513bb57"))
IDisplayDimension : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetNext (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNext (
        /*[out,retval]*/ struct IDisplayDimension * * Retval ) = 0;
      virtual HRESULT __stdcall GetDisplayData (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetDisplayData (
        /*[out,retval]*/ struct IDisplayData * * Retval ) = 0;
      virtual HRESULT __stdcall get_WitnessVisibility (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall put_WitnessVisibility (
        /*[in]*/ long Retval ) = 0;
      virtual HRESULT __stdcall get_LeaderVisibility (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall put_LeaderVisibility (
        /*[in]*/ long Retval ) = 0;
      virtual HRESULT __stdcall get_BrokenLeader (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_BrokenLeader (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_SmartWitness (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_SmartWitness (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_ShowParenthesis (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_ShowParenthesis (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_ArrowSide (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall put_ArrowSide (
        /*[in]*/ long Retval ) = 0;
      virtual HRESULT __stdcall get_ShowDimensionValue (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_ShowDimensionValue (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall GetText (
        /*[in]*/ long WhichText,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetText (
        /*[in]*/ long WhichText,
        /*[in]*/ BSTR Text ) = 0;
      virtual HRESULT __stdcall GetDimension (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetDimension (
        /*[out,retval]*/ struct IDimension * * Retval ) = 0;
      virtual HRESULT __stdcall GetUseDocTextFormat (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetTextFormat (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetTextFormat (
        /*[out,retval]*/ struct ITextFormat * * Retval ) = 0;
      virtual HRESULT __stdcall SetTextFormat (
        /*[in]*/ long TextFormatType,
        /*[in]*/ IDispatch * TextFormat,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ISetTextFormat (
        /*[in]*/ long TextFormatType,
        /*[in]*/ struct ITextFormat * TextFormat,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetAnnotation (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetAnnotation (
        /*[out,retval]*/ struct IAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall get_SolidLeader (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_SolidLeader (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_Diametric (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_Diametric (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_DisplayAsLinear (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_DisplayAsLinear (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall GetUseDocSecondArrow (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetSecondArrow (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetSecondArrow (
        /*[in]*/ VARIANT_BOOL UseDoc,
        /*[in]*/ VARIANT_BOOL SecondArrow ) = 0;
      virtual HRESULT __stdcall get_ShortenedRadius (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_ShortenedRadius (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_DimensionToInside (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_DimensionToInside (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall GetUseDocDual (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetDual (
        /*[in]*/ VARIANT_BOOL UseDoc ) = 0;
      virtual HRESULT __stdcall GetUseDocArrowHeadStyle (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetArrowHeadStyle (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetArrowHeadStyle (
        /*[in]*/ VARIANT_BOOL UseDoc,
        /*[in]*/ long ArrowHeadStyle ) = 0;
      virtual HRESULT __stdcall get_CenterText (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_CenterText (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_Inspection (
        /*[out,retval]*/ VARIANT_BOOL * Inspection ) = 0;
      virtual HRESULT __stdcall put_Inspection (
        /*[in]*/ VARIANT_BOOL Inspection ) = 0;
      virtual HRESULT __stdcall GetUseDocPrecision (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetPrimaryPrecision (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetAlternatePrecision (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetPrimaryTolPrecision (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetAlternateTolPrecision (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetPrecision (
        /*[in]*/ VARIANT_BOOL UseDoc,
        /*[in]*/ long Primary,
        /*[in]*/ long Alternate,
        /*[in]*/ long PrimaryTol,
        /*[in]*/ long AlternateTol,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetAutoArcLengthLeader (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetArcLengthLeader (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetArcLengthLeader (
        /*[in]*/ VARIANT_BOOL AutoLeader,
        /*[in]*/ long LeaderType,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetUseDocUnits (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetUnits (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetFractionBase (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetFractionValue (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetRoundToFraction (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetUnits (
        /*[in]*/ VARIANT_BOOL UseDoc,
        /*[in]*/ long UType,
        /*[in]*/ long FractBase,
        /*[in]*/ long FractDenom,
        /*[in]*/ VARIANT_BOOL RoundToFraction,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetUseDocBrokenLeader (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetBrokenLeader2 (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetBrokenLeader2 (
        /*[in]*/ VARIANT_BOOL UseDoc,
        /*[in]*/ long Broken,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetNext2 (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNext2 (
        /*[out,retval]*/ struct IDisplayDimension * * Retval ) = 0;
      virtual HRESULT __stdcall GetType (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall get_Scale2 (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_Scale2 (
        /*[in]*/ double Retval ) = 0;
      virtual HRESULT __stdcall get_DisplayAsChain (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_DisplayAsChain (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall GetNext3 (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNext3 (
        /*[out,retval]*/ struct IDisplayDimension * * Retval ) = 0;
      virtual HRESULT __stdcall AddDisplayEnt (
        /*[in]*/ int Type,
        /*[in]*/ VARIANT Data,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IAddDisplayEnt (
        /*[in]*/ int Type,
        /*[in]*/ double * Data,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddDisplayText (
        /*[in]*/ BSTR Text,
        /*[in]*/ VARIANT Position,
        /*[in]*/ IDispatch * Format,
        /*[in]*/ int Attachment,
        /*[in]*/ double WidthFactor,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IAddDisplayText (
        /*[in]*/ BSTR Text,
        /*[in]*/ double * Position,
        /*[in]*/ struct ITextFormat * Format,
        /*[in]*/ int Attachment,
        /*[in]*/ double WidthFactor,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_Jogged (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_Jogged (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall AutoJogOrdinate (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_IsLinked (
        /*[out,retval]*/ VARIANT_BOOL * BIsLinked ) = 0;
      virtual HRESULT __stdcall GetNext4 (
        /*[out,retval]*/ struct IDisplayDimension * * Retval ) = 0;
      virtual HRESULT __stdcall get_HorizontalJustification (
        /*[out,retval]*/ long * HorzJustify ) = 0;
      virtual HRESULT __stdcall put_HorizontalJustification (
        /*[in]*/ long HorzJustify ) = 0;
      virtual HRESULT __stdcall get_VerticalJustification (
        /*[out,retval]*/ long * VertJustify ) = 0;
      virtual HRESULT __stdcall put_VerticalJustification (
        /*[in]*/ long VertJustify ) = 0;
      virtual HRESULT __stdcall GetLinkedText (
        /*[out,retval]*/ BSTR * BstrLinkedText ) = 0;
      virtual HRESULT __stdcall SetLinkedText (
        /*[in]*/ BSTR BstrLinkedText,
        /*[out,retval]*/ long * ErrorCodeOut ) = 0;
      virtual HRESULT __stdcall Unlink (
        /*[out,retval]*/ long * ErrorCodeOut ) = 0;
      virtual HRESULT __stdcall get_MarkedForDrawing (
        /*[out,retval]*/ VARIANT_BOOL * Marked ) = 0;
      virtual HRESULT __stdcall put_MarkedForDrawing (
        /*[in]*/ VARIANT_BOOL Marked ) = 0;
      virtual HRESULT __stdcall GetPrimaryPrecision2 (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetAlternatePrecision2 (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetPrimaryTolPrecision2 (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetAlternateTolPrecision2 (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetPrecision2 (
        /*[in]*/ long Primary,
        /*[in]*/ long Dual,
        /*[in]*/ long PrimaryTol,
        /*[in]*/ long DualTol,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall get_Type2 (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetUseDocBentLeaderLength (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetBentLeaderLength (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall SetBentLeaderLength (
        /*[in]*/ VARIANT_BOOL UseDoc,
        /*[in]*/ double Length,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_ShowTolParenthesis (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_ShowTolParenthesis (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall GetDefinitionTransform (
        /*[out,retval]*/ struct IMathTransform * * Xform ) = 0;
      virtual HRESULT __stdcall get_OffsetText (
        /*[out,retval]*/ VARIANT_BOOL * Offset ) = 0;
      virtual HRESULT __stdcall put_OffsetText (
        /*[in]*/ VARIANT_BOOL Offset ) = 0;
      virtual HRESULT __stdcall GetNext5 (
        /*[out,retval]*/ struct IDisplayDimension * * Retval ) = 0;
      virtual HRESULT __stdcall get_MaxWitnessLineLength (
        /*[out,retval]*/ double * MaxWitLen ) = 0;
      virtual HRESULT __stdcall put_MaxWitnessLineLength (
        /*[in]*/ double MaxWitLen ) = 0;
      virtual HRESULT __stdcall get_GridBubble (
        /*[out,retval]*/ VARIANT_BOOL * IsAGridBubble ) = 0;
      virtual HRESULT __stdcall put_GridBubble (
        /*[in]*/ VARIANT_BOOL IsAGridBubble ) = 0;
      virtual HRESULT __stdcall get_Elevation (
        /*[out,retval]*/ VARIANT_BOOL * IsAElevation ) = 0;
      virtual HRESULT __stdcall put_Elevation (
        /*[in]*/ VARIANT_BOOL IsAElevation ) = 0;
      virtual HRESULT __stdcall get_EndSymbol (
        /*[out,retval]*/ long * EndSymbolToUse ) = 0;
      virtual HRESULT __stdcall put_EndSymbol (
        /*[in]*/ long EndSymbolToUse ) = 0;
      virtual HRESULT __stdcall GetOverride (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetOverrideValue (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall SetOverride (
        /*[in]*/ VARIANT_BOOL Override,
        /*[in]*/ double Value,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsHoleCallout (
        /*[out,retval]*/ VARIANT_BOOL * Callout ) = 0;
      virtual HRESULT __stdcall GetArrowHeadStyle2 (
        /*[in,out]*/ long * Style1,
        /*[in,out]*/ long * Style2,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetArrowHeadStyle2 (
        /*[in]*/ VARIANT_BOOL UseDoc,
        /*[in]*/ long Style1,
        /*[in]*/ long Style2,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetDimension2 (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct IDimension * * Retval ) = 0;
      virtual HRESULT __stdcall get_ChamferTextStyle (
        /*[out,retval]*/ long * Style ) = 0;
      virtual HRESULT __stdcall put_ChamferTextStyle (
        /*[in]*/ long Style ) = 0;
      virtual HRESULT __stdcall GetJogParameters (
        /*[in]*/ short WitnessIndex,
        /*[in,out]*/ VARIANT_BOOL * Jogged,
        /*[in,out]*/ double * Offset1,
        /*[in,out]*/ double * Offset2,
        /*[in,out]*/ double * Offset1to2,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetJogParameters (
        /*[in]*/ short WitnessIndex,
        /*[in]*/ VARIANT_BOOL Jogged,
        /*[in]*/ double Offset1,
        /*[in]*/ double Offset2,
        /*[in]*/ double Offset1to2,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetWitnessLineGap (
        /*[in]*/ short WitnessIndex,
        /*[in,out]*/ VARIANT_BOOL * UseDoc,
        /*[in,out]*/ double * Gap,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetWitnessLineGap (
        /*[in]*/ short WitnessIndex,
        /*[in]*/ VARIANT_BOOL UseDoc,
        /*[in]*/ double Gap,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetNameForSelection (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall IsDimXpert (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("83a33dab-27c5-11ce-bfd4-00400513bb57"))
IEnumDisplayDimensions : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Next (
        /*[in]*/ long Celt,
        /*[out]*/ struct IDisplayDimension * * Rgelt,
        /*[in,out]*/ long * PceltFetched ) = 0;
      virtual HRESULT __stdcall Skip (
        /*[in]*/ long Celt ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
      virtual HRESULT __stdcall Clone (
        /*[out]*/ struct IEnumDisplayDimensions * * Ppenum ) = 0;
};

struct __declspec(uuid("83a33d3a-27c5-11ce-bfd4-00400513bb57"))
IDimension : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ double Retval ) = 0;
      virtual HRESULT __stdcall get_SystemValue (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_SystemValue (
        /*[in]*/ double Retval ) = 0;
      virtual HRESULT __stdcall GetUserValueIn (
        /*[in]*/ IDispatch * Doc,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetUserValueIn (
        /*[in]*/ struct IModelDoc * Doc,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall SetUserValueIn (
        /*[in]*/ IDispatch * Doc,
        /*[in]*/ double NewValue ) = 0;
      virtual HRESULT __stdcall ISetUserValueIn (
        /*[in]*/ struct IModelDoc * Doc,
        /*[in]*/ double NewValue ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall GetToleranceType (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetToleranceType (
        /*[in]*/ long NewType,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetToleranceValues (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetToleranceValues (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall SetToleranceValues (
        /*[in]*/ double TolMin,
        /*[in]*/ double TolMax,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetToleranceFontInfo (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetToleranceFontInfo (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall SetToleranceFontInfo (
        /*[in]*/ long UseFontScale,
        /*[in]*/ double TolScale,
        /*[in]*/ double TolHeight,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetToleranceFitValues (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetToleranceFitValues (
        /*[in]*/ BSTR NewLValue,
        /*[in]*/ BSTR NewUValue,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_ReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_ReadOnly (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_FullName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall get_DrivenState (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall put_DrivenState (
        /*[in]*/ long Retval ) = 0;
      virtual HRESULT __stdcall IsReference (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsAppliedToAllConfigurations (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetSystemValue2 (
        /*[in]*/ double NewValue,
        /*[in]*/ long WhichConfigurations,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetValue2 (
        /*[in]*/ double NewValue,
        /*[in]*/ long WhichConfigurations,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetUserValueIn2 (
        /*[in]*/ IDispatch * Doc,
        /*[in]*/ double NewValue,
        /*[in]*/ long WhichConfigurations,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall ISetUserValueIn2 (
        /*[in]*/ struct IModelDoc * Doc,
        /*[in]*/ double NewValue,
        /*[in]*/ long WhichConfigurations,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetArcEndCondition (
        /*[in]*/ long Index,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetArcEndCondition (
        /*[in]*/ long Index,
        /*[in]*/ long Condition,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetValue2 (
        /*[in]*/ BSTR ConfigName,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetSystemValue2 (
        /*[in]*/ BSTR ConfigName,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetUserValueIn2 (
        /*[in]*/ struct IModelDoc2 * Doc,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall ISetUserValueIn3 (
        /*[in]*/ struct IModelDoc2 * Doc,
        /*[in]*/ double NewValue,
        /*[in]*/ long WhichConfigurations,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetType (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall ISetValue3 (
        /*[in]*/ double NewValue,
        /*[in]*/ long WhichConfigurations,
        /*[in]*/ long Config_count,
        /*[in]*/ BSTR * Config_names,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetValue3 (
        /*[in]*/ double NewValue,
        /*[in]*/ long WhichConfigurations,
        /*[in]*/ VARIANT Config_names,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IGetValue3 (
        /*[in]*/ long WhichConfigurations,
        /*[in]*/ long Config_count,
        /*[in]*/ BSTR * Config_names,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetValue3 (
        /*[in]*/ long WhichConfigurations,
        /*[in]*/ VARIANT Config_names,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall get_DimensionLineDirection (
        /*[out,retval]*/ struct IMathVector * * DimDir ) = 0;
      virtual HRESULT __stdcall put_DimensionLineDirection (
        /*[in]*/ struct IMathVector * DimDir ) = 0;
      virtual HRESULT __stdcall get_ExtensionLineDirection (
        /*[out,retval]*/ struct IMathVector * * DimDir ) = 0;
      virtual HRESULT __stdcall put_ExtensionLineDirection (
        /*[in]*/ struct IMathVector * DimDir ) = 0;
      virtual HRESULT __stdcall get_ReferencePoints (
        /*[out,retval]*/ VARIANT * Points ) = 0;
      virtual HRESULT __stdcall put_ReferencePoints (
        /*[in]*/ VARIANT Points ) = 0;
      virtual HRESULT __stdcall GetReferencePointsCount (
        /*[out,retval]*/ long * PointsCount ) = 0;
      virtual HRESULT __stdcall IGetReferencePoints (
        /*[in]*/ long PointsCount,
        /*[out,retval]*/ struct IMathPoint * * RefPoints ) = 0;
      virtual HRESULT __stdcall ISetReferencePoints (
        /*[in]*/ long PointsCount,
        /*[in]*/ struct IMathPoint * * RefPoints ) = 0;
      virtual HRESULT __stdcall SetSystemValue3 (
        /*[in]*/ double NewValue,
        /*[in]*/ long WhichConfigurations,
        /*[in]*/ VARIANT Config_names,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall ISetSystemValue3 (
        /*[in]*/ double NewValue,
        /*[in]*/ long WhichConfigurations,
        /*[in]*/ long Config_count,
        /*[in]*/ BSTR * Config_names,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetSystemValue3 (
        /*[in]*/ long WhichConfigurations,
        /*[in]*/ VARIANT Config_names,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetSystemValue3 (
        /*[in]*/ long WhichConfigurations,
        /*[in]*/ long Config_count,
        /*[in]*/ BSTR * Config_names,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetFeatureOwner (
        /*[out,retval]*/ struct IFeature * * FeatOwner ) = 0;
      virtual HRESULT __stdcall get_Tolerance (
        /*[out,retval]*/ struct IDimensionTolerance * * Retval ) = 0;
      virtual HRESULT __stdcall GetSystemChamferValues (
        /*[in,out]*/ double * Length,
        /*[in,out]*/ double * Angle,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsDesignTableDimension (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetNameForSelection (
        /*[out,retval]*/ BSTR * Retval ) = 0;
};

struct __declspec(uuid("83a33d38-27c5-11ce-bfd4-00400513bb57"))
IFeature : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall Parameter (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IParameter (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct IDimension * * Retval ) = 0;
      virtual HRESULT __stdcall GetNextFeature (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNextFeature (
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall GetTypeName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetSpecificFeature (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetSpecificFeature (
        /*[out,retval]*/ IUnknown * * Retval ) = 0;
      virtual HRESULT __stdcall GetUIState (
        /*[in]*/ long StateType,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetUIState (
        /*[in]*/ long StateType,
        /*[in]*/ VARIANT_BOOL Flag ) = 0;
      virtual HRESULT __stdcall GetMaterialUserName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetMaterialUserName (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetMaterialIdName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetMaterialIdName (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetMaterialPropertyValues (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall SetMaterialPropertyValues (
        /*[in]*/ VARIANT MaterialPropertyValues,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddPropertyExtension (
        /*[in]*/ VARIANT PropertyExtension,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetPropertyExtension (
        /*[in]*/ long ID,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall ResetPropertyExtension ( ) = 0;
      virtual HRESULT __stdcall GetFirstSubFeature (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstSubFeature (
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall GetNextSubFeature (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetNextSubFeature (
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall IGetMaterialPropertyValues (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall ISetMaterialPropertyValues (
        /*[in]*/ double * MaterialPropertyValues,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsSuppressed (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetUpdateStamp (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetBody (
        /*[in]*/ IDispatch * BodyIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ISetBody (
        /*[in]*/ struct IBody * BodyIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetBody (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetBody (
        /*[out,retval]*/ struct IBody * * Retval ) = 0;
      virtual HRESULT __stdcall EnumDisplayDimensions (
        /*[out,retval]*/ struct IEnumDisplayDimensions * * Retval ) = 0;
      virtual HRESULT __stdcall GetDefinition (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetDefinition (
        /*[out,retval]*/ IUnknown * * Retval ) = 0;
      virtual HRESULT __stdcall ModifyDefinition (
        /*[in]*/ IDispatch * Data,
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IModifyDefinition (
        /*[in]*/ IUnknown * Data,
        /*[in]*/ struct IModelDoc * TopDoc,
        /*[in]*/ struct IComponent * Component,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetFaceCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetFaces (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetFaces (
        /*[in,out]*/ long * FaceCount,
        /*[out,retval]*/ struct IFace * * Retval ) = 0;
      virtual HRESULT __stdcall GetFirstDisplayDimension (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall GetNextDisplayDimension (
        /*[in]*/ IDispatch * DispIn,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall GetErrorCode (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IGetChildCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetChildren (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetChildren (
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall IGetParentCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetParents (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetParents (
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall SetBody2 (
        /*[in]*/ IDispatch * BodyIn,
        /*[in]*/ VARIANT_BOOL ApplyUserIds,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ISetBody2 (
        /*[in]*/ struct IBody * BodyIn,
        /*[in]*/ VARIANT_BOOL ApplyUserIds,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetImportedFileName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetImportedFileName (
        /*[in]*/ BSTR ImpName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetSuppression (
        /*[in]*/ long SuppressState,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall RemoveMaterialProperty (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT_BOOL AppendFlag,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SelectByMark (
        /*[in]*/ VARIANT_BOOL AppendFlag,
        /*[in]*/ long Mark,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DeSelect (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetBox (
        /*[in,out]*/ VARIANT * BBox,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IGetBox (
        /*[in,out]*/ double * BBox,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IModifyDefinition2 (
        /*[in]*/ IUnknown * Data,
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IGetFaces2 (
        /*[in,out]*/ long * FaceCount,
        /*[out,retval]*/ struct IFace2 * * Retval ) = 0;
      virtual HRESULT __stdcall IGetBody2 (
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall ISetBody3 (
        /*[in]*/ struct IBody2 * BodyIn,
        /*[in]*/ VARIANT_BOOL ApplyUserIds,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ListExternalFileReferences (
        /*[out]*/ VARIANT * ModelPathName,
        /*[out]*/ VARIANT * ComponentPathName,
        /*[out]*/ VARIANT * Feature,
        /*[out]*/ VARIANT * DataType,
        /*[out]*/ VARIANT * Status,
        /*[out]*/ VARIANT * RefEntity,
        /*[out]*/ VARIANT * FeatCom ) = 0;
      virtual HRESULT __stdcall ListExternalFileReferencesCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IListExternalFileReferences (
        /*[in]*/ long NumRefs,
        /*[out]*/ BSTR * ModelPathName,
        /*[out]*/ BSTR * CompPathName,
        /*[out]*/ BSTR * Feature,
        /*[out]*/ BSTR * DataType,
        /*[out]*/ long * Status,
        /*[out]*/ BSTR * RefEntity,
        /*[out]*/ BSTR * FeatComp ) = 0;
      virtual HRESULT __stdcall Select2 (
        /*[in]*/ VARIANT_BOOL Append,
        /*[in]*/ long Mark,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsRolledBack (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsBase (
        /*[out,retval]*/ VARIANT_BOOL * BBase ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * Description ) = 0;
      virtual HRESULT __stdcall put_Description (
        /*[in]*/ BSTR Description ) = 0;
      virtual HRESULT __stdcall MakeSubFeature (
        /*[in]*/ struct IFeature * SubFeature,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_CreatedBy (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_DateCreated (
        /*[out,retval]*/ BSTR * Date ) = 0;
      virtual HRESULT __stdcall get_DateModified (
        /*[out,retval]*/ BSTR * Date ) = 0;
      virtual HRESULT __stdcall IsBase2 (
        /*[out,retval]*/ VARIANT_BOOL * BBase ) = 0;
      virtual HRESULT __stdcall GetSpecificFeature2 (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall SetMaterialPropertyValues2 (
        /*[in]*/ VARIANT Material_values,
        /*[in]*/ long Config_opt,
        /*[in]*/ VARIANT Config_names ) = 0;
      virtual HRESULT __stdcall ISetMaterialPropertyValues2 (
        /*[in]*/ double * Material_values,
        /*[in]*/ long Config_opt,
        /*[in]*/ long Config_count,
        /*[in]*/ BSTR * Config_names ) = 0;
      virtual HRESULT __stdcall GetMaterialPropertyValues2 (
        /*[in]*/ long Config_opt,
        /*[in]*/ VARIANT Config_names,
        /*[out,retval]*/ VARIANT * Material_values ) = 0;
      virtual HRESULT __stdcall IGetMaterialPropertyValues2 (
        /*[in]*/ long Config_opt,
        /*[in]*/ long Config_count,
        /*[in]*/ BSTR * Config_names,
        /*[out,retval]*/ double * Material_values ) = 0;
      virtual HRESULT __stdcall SetSuppression2 (
        /*[in]*/ long SuppressionState,
        /*[in]*/ long Config_opt,
        /*[in]*/ VARIANT Config_names,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ISetSuppression2 (
        /*[in]*/ long SuppressionState,
        /*[in]*/ long Config_opt,
        /*[in]*/ long Config_count,
        /*[in]*/ BSTR * Config_names,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsSuppressed2 (
        /*[in]*/ long Config_opt,
        /*[in]*/ VARIANT Config_names,
        /*[out,retval]*/ VARIANT * States ) = 0;
      virtual HRESULT __stdcall IIsSuppressed2 (
        /*[in]*/ long Config_opt,
        /*[in]*/ long Config_count,
        /*[in]*/ BSTR * Config_names,
        /*[out,retval]*/ VARIANT_BOOL * States ) = 0;
      virtual HRESULT __stdcall get_CustomPropertyManager (
        /*[out,retval]*/ struct ICustomPropertyManager * * Retval ) = 0;
      virtual HRESULT __stdcall RemoveMaterialProperty2 (
        /*[in]*/ long Config_opt,
        /*[in]*/ VARIANT Config_names,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IRemoveMaterialProperty2 (
        /*[in]*/ long Config_opt,
        /*[in]*/ long Config_count,
        /*[in]*/ BSTR * Config_names,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ListExternalFileReferences2 (
        /*[out]*/ VARIANT * ModelPathName,
        /*[out]*/ VARIANT * ComponentPathName,
        /*[out]*/ VARIANT * Feature,
        /*[out]*/ VARIANT * DataType,
        /*[out]*/ VARIANT * Status,
        /*[out]*/ VARIANT * RefEntity,
        /*[out]*/ VARIANT * FeatCom,
        /*[out]*/ long * ConfigOption,
        /*[out]*/ BSTR * ConfigName ) = 0;
      virtual HRESULT __stdcall IListExternalFileReferences2 (
        /*[in]*/ long NumRefs,
        /*[out]*/ BSTR * ModelPathName,
        /*[out]*/ BSTR * CompPathName,
        /*[out]*/ BSTR * Feature,
        /*[out]*/ BSTR * DataType,
        /*[out]*/ long * Status,
        /*[out]*/ BSTR * RefEntity,
        /*[out]*/ BSTR * FeatComp,
        /*[out]*/ long * ConfigOption,
        /*[out]*/ BSTR * ConfigName ) = 0;
      virtual HRESULT __stdcall UpdateExternalFileReferences (
        /*[in]*/ long ConfigOption,
        /*[in]*/ BSTR ConfigName,
        /*[in]*/ long UpdateStatus ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ long * VisiblityState ) = 0;
      virtual HRESULT __stdcall GetTexture (
        /*[in]*/ BSTR Config_name,
        /*[out,retval]*/ struct ITexture * * Retval ) = 0;
      virtual HRESULT __stdcall SetTexture (
        /*[in]*/ VARIANT_BOOL BAllConfig,
        /*[in]*/ BSTR Config_name,
        /*[in]*/ struct ITexture * TextureIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall RemoveTexture (
        /*[in]*/ VARIANT_BOOL BAllConfig,
        /*[in]*/ BSTR Config_name,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetAffectedFaceCount (
        /*[out,retval]*/ long * NCount ) = 0;
      virtual HRESULT __stdcall GetAffectedFaces (
        /*[out,retval]*/ VARIANT * VFaces ) = 0;
      virtual HRESULT __stdcall IGetAffectedFaces (
        /*[in]*/ long * NCount,
        /*[out,retval]*/ struct IFace2 * * LpFaces ) = 0;
      virtual HRESULT __stdcall GetCreatedVersion (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetModifiedVersion (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall AddComment (
        /*[in]*/ BSTR Text,
        /*[out,retval]*/ struct IComment * * Retval ) = 0;
      virtual HRESULT __stdcall GetOwnerFeature (
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall SetBodiesToKeep (
        /*[in]*/ VARIANT_BOOL AllBodies,
        /*[in]*/ VARIANT BodiesToKeep,
        /*[in]*/ long ConfigOption,
        /*[in]*/ VARIANT ConfigNames ) = 0;
      virtual HRESULT __stdcall GetTypeName2 (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetErrorCode2 (
        /*[out]*/ VARIANT_BOOL * IsWarning,
        /*[out,retval]*/ long * Retval ) = 0;
};

struct __declspec(uuid("4e23a946-7d96-40a2-bda0-fdf9767c438d"))
IComment : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * Text ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR Text ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_FeatureOwner (
        /*[out,retval]*/ struct IFeature * * Owner ) = 0;
};

struct __declspec(uuid("94d89c12-93e7-4da1-9239-5e93830b5635"))
ITableAnchor : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * TableType ) = 0;
      virtual HRESULT __stdcall GetFeature (
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ VARIANT * Position ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ VARIANT Position ) = 0;
      virtual HRESULT __stdcall IGetPosition (
        /*[out,retval]*/ double * Position ) = 0;
      virtual HRESULT __stdcall ISetPosition (
        /*[in]*/ double * Position ) = 0;
};

struct __declspec(uuid("0a002df8-354e-4376-9a08-e31352e61d32"))
ITitleBlock : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetFeature (
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall GetNoteCount (
        /*[out,retval]*/ long * NumberOfNotes ) = 0;
      virtual HRESULT __stdcall GetNotes (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetNotes (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct INote * * Retval ) = 0;
      virtual HRESULT __stdcall GetExtents (
        /*[in,out]*/ double * XUpperLeft,
        /*[in,out]*/ double * YUpperLeft,
        /*[in,out]*/ double * XLowerRight,
        /*[in,out]*/ double * YLowerRight ) = 0;
      virtual HRESULT __stdcall SetExtents (
        /*[in]*/ double XUpperLeft,
        /*[in]*/ double YUpperLeft,
        /*[in]*/ double XLowerRight,
        /*[in]*/ double YLowerRight ) = 0;
};

struct __declspec(uuid("0aba4670-6fbe-4f2e-be80-5c33ea2cf77b"))
ISketchPicture : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetFeature (
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall GetOrigin (
        /*[in,out]*/ double * X,
        /*[in,out]*/ double * Y ) = 0;
      virtual HRESULT __stdcall SetOrigin (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetSize (
        /*[in,out]*/ double * Width,
        /*[in,out]*/ double * Height ) = 0;
      virtual HRESULT __stdcall SetSize (
        /*[in]*/ double Width,
        /*[in]*/ double Height,
        /*[in]*/ VARIANT_BOOL AspectRatioLocked,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_Angle (
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall put_Angle (
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall get_Flipped (
        /*[out,retval]*/ VARIANT_BOOL * Flipped ) = 0;
      virtual HRESULT __stdcall Flip (
        /*[in]*/ VARIANT_BOOL SideToSide,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetTransparency (
        /*[in,out]*/ long * Style,
        /*[in,out]*/ double * Transparency,
        /*[in,out]*/ long * MatchingColor,
        /*[in,out]*/ double * MatchingTolerance ) = 0;
      virtual HRESULT __stdcall SetTransparency (
        /*[in]*/ long Style,
        /*[in]*/ double Transparency,
        /*[in]*/ long MatchingColor,
        /*[in]*/ double MatchingTolerance,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetPixelmapSize (
        /*[in,out]*/ long * Width,
        /*[in,out]*/ long * Height,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetPixelmap (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetPixelmap (
        /*[in]*/ long Count,
        /*[out,retval]*/ short * Retval ) = 0;
      virtual HRESULT __stdcall GetPointOnSketchFromPixel (
        /*[in]*/ long Row,
        /*[in]*/ long Column,
        /*[out,retval]*/ struct IMathPoint * * Retval ) = 0;
};

struct __declspec(uuid("b2a77cec-857c-43be-9e28-106201212b43"))
ISimulation : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetFeature (
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_Duration (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_Frames (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall get_TimeStamp (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall ResetComponents (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsAnimationPlaying (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall PlayAnimation (
        /*[out,retval]*/ struct IAnimation * * Retval ) = 0;
      virtual HRESULT __stdcall get_Animation (
        /*[out,retval]*/ struct IAnimation * * Retval ) = 0;
};

struct __declspec(uuid("83a33d73-27c5-11ce-bfd4-00400513bb57"))
IModeler : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall CreateBodyFromBox (
        /*[in]*/ VARIANT BoxDimArray,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateBodyFromBox (
        /*[in]*/ double * BoxDimArray,
        /*[out,retval]*/ struct IBody * * Retval ) = 0;
      virtual HRESULT __stdcall SetTolerances (
        /*[in]*/ long * ToleranceIDArray,
        /*[in]*/ double * ToleranceValueArray,
        /*[in]*/ long NumTol,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall UnsetTolerances (
        /*[in]*/ long * ToleranceIDArray,
        /*[in]*/ long NumTol,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Restore (
        /*[in]*/ IUnknown * StreamIn,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IRestore (
        /*[in]*/ IUnknown * StreamIn,
        /*[out,retval]*/ struct IBody * * Retval ) = 0;
      virtual HRESULT __stdcall SetInitKnitGapWidth (
        /*[in]*/ double InitGapWidth,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetInitKnitGapWidth (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall CreateBodyFromCyl (
        /*[in]*/ VARIANT CylDimArray,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateBodyFromCyl (
        /*[in]*/ double * CylDimArray,
        /*[out,retval]*/ struct IBody * * Retval ) = 0;
      virtual HRESULT __stdcall CreateBodyFromCone (
        /*[in]*/ VARIANT ConeDimArray,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateBodyFromCone (
        /*[in]*/ double * ConeDimArray,
        /*[out,retval]*/ struct IBody * * Retval ) = 0;
      virtual HRESULT __stdcall CreateBrepBody (
        /*[in]*/ int Type,
        /*[in]*/ int NTopologies,
        /*[in]*/ VARIANT Topologies,
        /*[in]*/ VARIANT EdgeToleranceArray,
        /*[in]*/ VARIANT VertexToleranceArray,
        /*[in]*/ VARIANT PointArray,
        /*[in]*/ VARIANT CurveArray,
        /*[in]*/ VARIANT SurfaceArray,
        /*[in]*/ int NRelations,
        /*[in]*/ VARIANT Parents,
        /*[in]*/ VARIANT Children,
        /*[in]*/ VARIANT Senses,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateBrepBody (
        /*[in]*/ int Type,
        /*[in]*/ int NTopologies,
        /*[in]*/ int * Topologies,
        /*[in]*/ double * EdgeTolArray,
        /*[in]*/ double * VertexTolArray,
        /*[in]*/ double * PointArray,
        /*[in]*/ struct ICurve * * CurveArray,
        /*[in]*/ struct ISurface * * SurfaceArray,
        /*[in]*/ int NRelations,
        /*[in]*/ int * Parents,
        /*[in]*/ int * Children,
        /*[in]*/ int * Senses,
        /*[out,retval]*/ struct IBody * * Retval ) = 0;
      virtual HRESULT __stdcall CreatePlanarSurface (
        /*[in]*/ VARIANT VRootPoint,
        /*[in]*/ VARIANT VNormal,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreatePlanarSurface (
        /*[in]*/ double * RootPoint,
        /*[in]*/ double * Normal,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall CreateExtrusionSurface (
        /*[in]*/ IDispatch * ProfileCurve,
        /*[in]*/ VARIANT AxisDirection,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateExtrusionSurface (
        /*[in]*/ struct ICurve * ProfileCurve,
        /*[in]*/ double * AxisDirection,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall CreateRevolutionSurface (
        /*[in]*/ IDispatch * ProfileCurve,
        /*[in]*/ VARIANT AxisPoint,
        /*[in]*/ VARIANT AxisDirection,
        /*[in]*/ VARIANT ProfileEndPtParams,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateRevolutionSurface (
        /*[in]*/ struct ICurve * ProfileCurve,
        /*[in]*/ double * AxisPoint,
        /*[in]*/ double * AxisDirection,
        /*[in]*/ double * ProfileEndPtParams,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall CreateBsplineSurface (
        /*[in]*/ VARIANT Props,
        /*[in]*/ VARIANT UKnots,
        /*[in]*/ VARIANT VKnots,
        /*[in]*/ VARIANT CtrlPtCoords,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateBsplineSurface (
        /*[in]*/ long * Properties,
        /*[in]*/ double * UKnotArray,
        /*[in]*/ double * VKnotArray,
        /*[in]*/ double * ControlPointCoordArray,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall CreateOffsetSurface (
        /*[in]*/ IDispatch * SurfaceIn,
        /*[in]*/ double Distance,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateOffsetSurface (
        /*[in]*/ struct ISurface * SurfaceIn,
        /*[in]*/ double Distance,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall CreateLine (
        /*[in]*/ VARIANT RootPoint,
        /*[in]*/ VARIANT Direction,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateLine (
        /*[in]*/ double * RootPoint,
        /*[in]*/ double * Direction,
        /*[out,retval]*/ struct ICurve * * Retval ) = 0;
      virtual HRESULT __stdcall CreateArc (
        /*[in]*/ VARIANT Center,
        /*[in]*/ VARIANT Axis,
        /*[in]*/ double Radius,
        /*[in]*/ VARIANT StartPoint,
        /*[in]*/ VARIANT EndPoint,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateArc (
        /*[in]*/ double * Center,
        /*[in]*/ double * Axis,
        /*[in]*/ double Radius,
        /*[in]*/ double * StartPoint,
        /*[in]*/ double * EndPoint,
        /*[out,retval]*/ struct ICurve * * Retval ) = 0;
      virtual HRESULT __stdcall CreateBsplineCurve (
        /*[in]*/ VARIANT Props,
        /*[in]*/ VARIANT Knots,
        /*[in]*/ VARIANT CtrlPtCoords,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateBsplineCurve (
        /*[in]*/ long * Properties,
        /*[in]*/ double * KnotArray,
        /*[in]*/ double * ControlPointCoordArray,
        /*[out,retval]*/ struct ICurve * * Retval ) = 0;
      virtual HRESULT __stdcall CreatePCurve (
        /*[in]*/ IDispatch * Surface,
        /*[in]*/ VARIANT Props,
        /*[in]*/ VARIANT Knots,
        /*[in]*/ VARIANT CtrlPtCoords,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreatePCurve (
        /*[in]*/ struct ISurface * Surface,
        /*[in]*/ long * Props,
        /*[in]*/ double * Knots,
        /*[in]*/ double * CtrlPtCoords,
        /*[out,retval]*/ struct ICurve * * Retval ) = 0;
      virtual HRESULT __stdcall CreateBodiesFromSheets (
        /*[in]*/ VARIANT Sheets,
        /*[in]*/ long Options,
        /*[in,out]*/ long * Error,
        /*[out,retval]*/ VARIANT * Results ) = 0;
      virtual HRESULT __stdcall ICreateBodiesFromSheets (
        /*[in]*/ long NSheets,
        /*[in]*/ IUnknown * * Sheets,
        /*[in]*/ long Options,
        /*[in,out]*/ long * NResults,
        /*[in,out]*/ IUnknown * * Results,
        /*[out,retval]*/ long * Error ) = 0;
      virtual HRESULT __stdcall ICreateBodyFromFaces (
        /*[in]*/ long NumOfFaces,
        /*[in]*/ struct IFace * * Faces,
        /*[in]*/ VARIANT_BOOL DoLocalCheck,
        /*[in]*/ VARIANT_BOOL * LocalCheckResult,
        /*[out,retval]*/ struct IBody * * Result ) = 0;
      virtual HRESULT __stdcall FindTwoEdgeMaxDeviation (
        /*[in]*/ IDispatch * LpEdge1,
        /*[in]*/ IDispatch * LpEdge2,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IFindTwoEdgeMaxDeviation (
        /*[in]*/ struct IEdge * PEdge1,
        /*[in]*/ struct IEdge * PEdge2,
        /*[out,retval]*/ double * Error ) = 0;
      virtual HRESULT __stdcall CreateConicalSurface (
        /*[in]*/ VARIANT Center,
        /*[in]*/ VARIANT Direction,
        /*[in]*/ double Radius,
        /*[in]*/ double SemiAngle,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateConicalSurface (
        /*[in]*/ double * Center,
        /*[in]*/ double * Direction,
        /*[in]*/ double Radius,
        /*[in]*/ double SemiAngle,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall CreateCylindricalSurface (
        /*[in]*/ VARIANT Center,
        /*[in]*/ VARIANT Direction,
        /*[in]*/ double Radius,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateCylindricalSurface (
        /*[in]*/ double * Center,
        /*[in]*/ double * Direction,
        /*[in]*/ double Radius,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall CreateSphericalSurface (
        /*[in]*/ VARIANT Center,
        /*[in]*/ double Radius,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateSphericalSurface (
        /*[in]*/ double * Center,
        /*[in]*/ double Radius,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall CreateToroidalSurface (
        /*[in]*/ VARIANT Center,
        /*[in]*/ VARIANT Axis,
        /*[in]*/ VARIANT RefDirection,
        /*[in]*/ double MajorRadius,
        /*[in]*/ double MinorRadius,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateToroidalSurface (
        /*[in]*/ double * Center,
        /*[in]*/ double * Axis,
        /*[in]*/ double * RefDirection,
        /*[in]*/ double MajorRadius,
        /*[in]*/ double MinorRadius,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall CreateBodyFromFaces2 (
        /*[in]*/ long NumOfFaces,
        /*[in]*/ VARIANT Faces,
        /*[in]*/ long ActionType,
        /*[in]*/ VARIANT_BOOL DoLocalCheck,
        /*[out]*/ VARIANT_BOOL * LocalCheckResult,
        /*[out,retval]*/ IDispatch * * Result ) = 0;
      virtual HRESULT __stdcall ICreateBodyFromFaces2 (
        /*[in]*/ long NumOfFaces,
        /*[in]*/ struct IFace * * Faces,
        /*[in]*/ long ActionType,
        /*[in]*/ VARIANT_BOOL DoLocalCheck,
        /*[out]*/ VARIANT_BOOL * LocalCheckResult,
        /*[out,retval]*/ struct IBody * * Result ) = 0;
      virtual HRESULT __stdcall SetToleranceValue (
        /*[in]*/ long ToleranceID,
        /*[in]*/ double NewToleranceValue,
        /*[out,retval]*/ double * OldToleranceValue ) = 0;
      virtual HRESULT __stdcall GetToleranceValue (
        /*[in]*/ long ToleranceID,
        /*[out,retval]*/ double * ToleranceValue ) = 0;
      virtual HRESULT __stdcall CreateSheetFromSurface (
        /*[in]*/ IDispatch * SurfaceIn,
        /*[in]*/ VARIANT UvRange,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateSheetFromSurface (
        /*[in]*/ struct ISurface * SurfaceIn,
        /*[in]*/ double * UvRange,
        /*[out,retval]*/ struct IBody * * Retval ) = 0;
      virtual HRESULT __stdcall ImprintingFaces (
        /*[in]*/ VARIANT TargetFaceArray,
        /*[in]*/ VARIANT ToolFaceArray,
        /*[in]*/ long Options,
        /*[out]*/ VARIANT * TargetEdges,
        /*[out]*/ VARIANT * ToolEdges,
        /*[out]*/ VARIANT * TargetVertices,
        /*[out]*/ VARIANT * ToolVertices,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IImprintingFaces (
        /*[out]*/ struct IEdge * * TargetEdges,
        /*[out]*/ struct IEdge * * ToolEdges,
        /*[out]*/ struct IVertex * * TargetVertices,
        /*[out]*/ struct IVertex * * ToolVertices ) = 0;
      virtual HRESULT __stdcall IImprintingFacesCount (
        /*[in]*/ long NTargetFaces,
        /*[in]*/ struct IFace * * TargetFaceArray,
        /*[in]*/ long NToolFaces,
        /*[in]*/ struct IFace * * ToolFaceArray,
        /*[in]*/ long Options,
        /*[out]*/ long * NTargetEdges,
        /*[out]*/ long * NtoolEdges,
        /*[out]*/ long * NtargetVertices,
        /*[out]*/ long * ToolVertices,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateSweptSurface (
        /*[in]*/ IDispatch * CurveIn,
        /*[in]*/ VARIANT Dir,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateSweptSurface (
        /*[in]*/ struct ICurve * CurveIn,
        /*[in]*/ double * Dir,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall ReplaceSurfaces (
        /*[in]*/ long NFaces,
        /*[in]*/ VARIANT FaceArray,
        /*[in]*/ VARIANT NewSurfArray,
        /*[in]*/ VARIANT SenseArray,
        /*[in]*/ double Tolerance,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IReplaceSurfaces (
        /*[in]*/ long NFaces,
        /*[in]*/ struct IFace * * FaceArray,
        /*[in]*/ struct ISurface * * NewSurfArray,
        /*[in]*/ int * SenseArray,
        /*[in]*/ double Tolerance,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SplitFaceOnParam (
        /*[in]*/ IDispatch * Facedisp,
        /*[in]*/ long UVFlag,
        /*[in]*/ double Parameter,
        /*[out]*/ VARIANT_BOOL * Status,
        /*[out,retval]*/ VARIANT * NewFaces ) = 0;
      virtual HRESULT __stdcall ISplitFaceOnParamCount (
        /*[in]*/ struct IFace * Facedisp,
        /*[in]*/ long UVFlag,
        /*[in]*/ double Parameter,
        /*[out]*/ VARIANT_BOOL * Status,
        /*[out,retval]*/ long * NewFaceCount ) = 0;
      virtual HRESULT __stdcall ISplitFaceOnParam (
        /*[out,retval]*/ struct IFace * * Retval ) = 0;
      virtual HRESULT __stdcall CheckInterference (
        /*[in]*/ IDispatch * Body1,
        /*[in]*/ IDispatch * Body2,
        /*[in]*/ VARIANT_BOOL CoincidentInterference,
        /*[out]*/ VARIANT * Body1InterferedFaceArray,
        /*[out]*/ VARIANT * Body2InterferedFaceArray,
        /*[out]*/ VARIANT * IntersectedBodyArray,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ICheckInterferenceCount (
        /*[in]*/ struct IBody * Body1,
        /*[in]*/ struct IBody * Body2,
        /*[in]*/ VARIANT_BOOL CoincidentInterference,
        /*[out]*/ long * Body1InterferedFaceCount,
        /*[out]*/ long * Body2InterferedFaceCount,
        /*[out]*/ long * IntersectedBodyCount,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ICheckInterference (
        /*[out]*/ struct IFace * * Body1InterferedFaceArray,
        /*[out]*/ struct IFace * * Body2InterferedFaceArray,
        /*[out]*/ struct IBody * * IntersectedBodyArray ) = 0;
      virtual HRESULT __stdcall CreateRuledSurface (
        /*[in]*/ IDispatch * Curve1In,
        /*[in]*/ IDispatch * Curve2In,
        /*[in]*/ VARIANT Apex,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateRuledSurface (
        /*[in]*/ struct ICurve * Curve1In,
        /*[in]*/ struct ICurve * Curve2In,
        /*[in]*/ double * Apex,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall CreateCylindricalSurface2 (
        /*[in]*/ VARIANT Center,
        /*[in]*/ VARIANT Direction,
        /*[in]*/ VARIANT RefDirection,
        /*[in]*/ double Radius,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateCylindricalSurface2 (
        /*[in]*/ double * Center,
        /*[in]*/ double * Direction,
        /*[in]*/ double * RefDirection,
        /*[in]*/ double Radius,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall CreateSphericalSurface2 (
        /*[in]*/ VARIANT Center,
        /*[in]*/ VARIANT Axis,
        /*[in]*/ VARIANT RefDir,
        /*[in]*/ double Radius,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateSphericalSurface2 (
        /*[in]*/ double * Center,
        /*[in]*/ double * Axis,
        /*[in]*/ double * RefDir,
        /*[in]*/ double Radius,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateBodyFromBox2 (
        /*[in]*/ double * BoxDimArray,
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall IRestore2 (
        /*[in]*/ IUnknown * StreamIn,
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateBodyFromCyl2 (
        /*[in]*/ double * CylDimArray,
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateBodyFromCone2 (
        /*[in]*/ double * ConeDimArray,
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateBrepBody2 (
        /*[in]*/ int Type,
        /*[in]*/ int NTopologies,
        /*[in]*/ int * Topologies,
        /*[in]*/ double * EdgeTolArray,
        /*[in]*/ double * VertexTolArray,
        /*[in]*/ double * PointArray,
        /*[in]*/ struct ICurve * * CurveArray,
        /*[in]*/ struct ISurface * * SurfaceArray,
        /*[in]*/ int NRelations,
        /*[in]*/ int * Parents,
        /*[in]*/ int * Children,
        /*[in]*/ int * Senses,
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateSheetFromSurface2 (
        /*[in]*/ struct ISurface * SurfaceIn,
        /*[in]*/ double * UvRange,
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall ICheckInterferenceCount2 (
        /*[in]*/ struct IBody2 * Body1,
        /*[in]*/ struct IBody2 * Body2,
        /*[in]*/ VARIANT_BOOL CoincidentInterference,
        /*[out]*/ long * Body1InterferedFaceCount,
        /*[out]*/ long * Body2InterferedFaceCount,
        /*[out]*/ long * IntersectedBodyCount,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ICreateBodyFromFaces3 (
        /*[in]*/ long NumOfFaces,
        /*[in]*/ struct IFace2 * * Faces,
        /*[in]*/ long ActionType,
        /*[in]*/ VARIANT_BOOL DoLocalCheck,
        /*[out]*/ VARIANT_BOOL * LocalCheckResult,
        /*[out,retval]*/ struct IBody2 * * Result ) = 0;
      virtual HRESULT __stdcall IImprintingFacesCount2 (
        /*[in]*/ long NTargetFaces,
        /*[in]*/ struct IFace2 * * TargetFaceArray,
        /*[in]*/ long NToolFaces,
        /*[in]*/ struct IFace2 * * ToolFaceArray,
        /*[in]*/ long Options,
        /*[out]*/ long * NTargetEdges,
        /*[out]*/ long * NtoolEdges,
        /*[out]*/ long * NtargetVertices,
        /*[out]*/ long * ToolVertices,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IReplaceSurfaces2 (
        /*[in]*/ long NFaces,
        /*[in]*/ struct IFace2 * * FaceArray,
        /*[in]*/ struct ISurface * * NewSurfArray,
        /*[in]*/ int * SenseArray,
        /*[in]*/ double Tolerance,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ISplitFaceOnParamCount2 (
        /*[in]*/ struct IFace2 * Facedisp,
        /*[in]*/ long UVFlag,
        /*[in]*/ double Parameter,
        /*[out]*/ VARIANT_BOOL * Status,
        /*[out,retval]*/ long * NewFaceCount ) = 0;
      virtual HRESULT __stdcall ISplitFaceOnParam2 (
        /*[out,retval]*/ struct IFace2 * * Retval ) = 0;
      virtual HRESULT __stdcall ICheckInterference2 (
        /*[out]*/ struct IFace2 * * Body1InterferedFaceArray,
        /*[out]*/ struct IFace2 * * Body2InterferedFaceArray,
        /*[out]*/ struct IBody2 * * IntersectedBodyArray ) = 0;
      virtual HRESULT __stdcall CreatePlanarSurface2 (
        /*[in]*/ VARIANT VRootPoint,
        /*[in]*/ VARIANT VNormal,
        /*[in]*/ VARIANT VRef,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreatePlanarSurface2 (
        /*[in]*/ double * RootPoint,
        /*[in]*/ double * Normal,
        /*[in]*/ double * Ref,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall CreateConicalSurface2 (
        /*[in]*/ VARIANT Center,
        /*[in]*/ VARIANT Direction,
        /*[in]*/ VARIANT RefDirection,
        /*[in]*/ double Radius,
        /*[in]*/ double SemiAngle,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateConicalSurface2 (
        /*[in]*/ double * Center,
        /*[in]*/ double * Direction,
        /*[in]*/ double * RefDirection,
        /*[in]*/ double Radius,
        /*[in]*/ double SemiAngle,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall CopyWizardHole (
        /*[in]*/ IDispatch * SourceHole,
        /*[in]*/ IDispatch * DestinationHole,
        /*[in]*/ VARIANT_BOOL RebuildOwner,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall ICopyWizardHole (
        /*[in]*/ struct IFeature * SourceHole,
        /*[in]*/ struct IFeature * DestinationHole,
        /*[in]*/ VARIANT_BOOL RebuildOwner,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall DeleteFacesFromSheetBody (
        /*[in]*/ VARIANT FaceVar,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IDeleteFacesFromSheetBody (
        /*[in]*/ long Count,
        /*[in]*/ struct IFace2 * * FaceVar,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateWireBody (
        /*[in]*/ VARIANT EntVar,
        /*[in]*/ long Option,
        /*[out,retval]*/ struct IBody2 * * BodyOut ) = 0;
      virtual HRESULT __stdcall ICreateWireBody (
        /*[in]*/ long Count,
        /*[in]*/ IDispatch * * EntArr,
        /*[in]*/ long Option,
        /*[out,retval]*/ struct IBody2 * * BodyOut ) = 0;
      virtual HRESULT __stdcall CreateBrepBody3 (
        /*[in]*/ int Type,
        /*[in]*/ int NTopologies,
        /*[in]*/ VARIANT Topologies,
        /*[in]*/ VARIANT EdgeToleranceArray,
        /*[in]*/ VARIANT VertexToleranceArray,
        /*[in]*/ VARIANT PointArray,
        /*[in]*/ VARIANT CurveArray1,
        /*[in]*/ VARIANT CurveSurfaceArray1,
        /*[in]*/ VARIANT CurveArray2,
        /*[in]*/ VARIANT CurveSurfaceArray2,
        /*[in]*/ VARIANT SurfaceArray,
        /*[in]*/ int NRelations,
        /*[in]*/ VARIANT Parents,
        /*[in]*/ VARIANT Children,
        /*[in]*/ VARIANT Senses,
        /*[in]*/ long Option,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateBrepBody3 (
        /*[in]*/ int Type,
        /*[in]*/ int NTopologies,
        /*[in]*/ int * Topologies,
        /*[in]*/ double * EdgeTolArray,
        /*[in]*/ double * VertexTolArray,
        /*[in]*/ double * PointArray,
        /*[in]*/ struct ICurve * * CurveArra1,
        /*[in]*/ struct ISurface * * CurveSurfaceArray1,
        /*[in]*/ struct ICurve * * CurveArray2,
        /*[in]*/ struct ISurface * * CurveSurfaceArray2,
        /*[in]*/ struct ISurface * * SurfaceArray,
        /*[in]*/ int NRelations,
        /*[in]*/ int * Parents,
        /*[in]*/ int * Children,
        /*[in]*/ int * Senses,
        /*[in]*/ long Option,
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall CreateSheetFromFaces (
        /*[in]*/ VARIANT FaceArr,
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateSheetFromFaces (
        /*[in]*/ long FaceCount,
        /*[in]*/ struct IFace2 * * FaceArr,
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall CreateSpring (
        /*[out,retval]*/ struct ISpring * * SpringOut ) = 0;
      virtual HRESULT __stdcall GetBodyOutline (
        /*[in]*/ VARIANT BodyVar,
        /*[in]*/ struct IMathVector * Direction,
        /*[in]*/ double Tolerance,
        /*[out]*/ VARIANT * CurvesOut,
        /*[out]*/ VARIANT * TopolEntities,
        /*[out]*/ VARIANT * Outline,
        /*[out,retval]*/ long * NCurves ) = 0;
      virtual HRESULT __stdcall MergeCurves (
        /*[in]*/ VARIANT CurveVar,
        /*[out,retval]*/ struct ICurve * * MergedCurve ) = 0;
      virtual HRESULT __stdcall IMergeCurves (
        /*[in]*/ long CurveCount,
        /*[in]*/ struct ICurve * * CurveArr,
        /*[out,retval]*/ struct ICurve * * MergedCurve ) = 0;
      virtual HRESULT __stdcall CreateSweptBody (
        /*[in]*/ struct IModelDoc2 * PModDoc,
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ VARIANT_BOOL Alignment,
        /*[in]*/ short TwistCtrlOption,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL BAdvancedSmoothing,
        /*[in]*/ short StartMatchingType,
        /*[in]*/ short EndMatchingType,
        /*[in]*/ VARIANT_BOOL IsThinBody,
        /*[in]*/ double Thickness1,
        /*[in]*/ double Thickness2,
        /*[in]*/ short ThinType,
        /*[in]*/ short PathAlign,
        /*[in]*/ double TwistAngle,
        /*[in]*/ VARIANT_BOOL BMergeSmoothFaces,
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall get_GeneralTopology (
        /*[out,retval]*/ VARIANT_BOOL * BSet ) = 0;
      virtual HRESULT __stdcall put_GeneralTopology (
        /*[in]*/ VARIANT_BOOL BSet ) = 0;
      virtual HRESULT __stdcall GetManifoldBodiesCount (
        /*[in]*/ struct IBody2 * NonManifoldIn,
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall MakeManifoldBodies (
        /*[in]*/ struct IBody2 * NonManifoldIn,
        /*[out,retval]*/ VARIANT * ManifoldOut ) = 0;
      virtual HRESULT __stdcall IMakeManifoldBodies (
        /*[in]*/ struct IBody2 * NonManifoldIn,
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IBody2 * * ManifoldOut ) = 0;
      virtual HRESULT __stdcall CreateCoonsBSurface (
        /*[in]*/ struct ICurve * UCurve0,
        /*[in]*/ struct ICurve * UCurve1,
        /*[in]*/ struct ICurve * VCurve0,
        /*[in]*/ struct ICurve * VCurve1,
        /*[in]*/ VARIANT_BOOL IgnoreClosureReqt,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateLoftSurface (
        /*[in]*/ long NCurves,
        /*[in]*/ struct ICurve * * CurveArray,
        /*[in]*/ VARIANT_BOOL BBlendClosed,
        /*[in]*/ VARIANT_BOOL BForceCubic,
        /*[in]*/ long NGuides,
        /*[in]*/ struct ICurve * * GuideCrvArray,
        /*[in]*/ long StartMatchingType,
        /*[in]*/ long EndMatchingType,
        /*[in]*/ struct IMathVector * NormalAtStartSection,
        /*[in]*/ struct IMathVector * NormalAtEndSection,
        /*[in]*/ long NStartMatchingFaces,
        /*[in]*/ struct IFace2 * * StartMatchingFaceList,
        /*[in]*/ long NEndMatchingFaces,
        /*[in]*/ struct IFace2 * * EndMatchingFaceList,
        /*[in]*/ VARIANT_BOOL DegeneratedStart,
        /*[in]*/ VARIANT_BOOL DegeneratedEnd,
        /*[in]*/ struct IMathPoint * StartPointOfStartSection,
        /*[in]*/ struct IMathPoint * StartPointOfEndSection,
        /*[in]*/ long SectionIndexStart,
        /*[in]*/ long SectionIndexEnd,
        /*[in]*/ long GuideIndexStart,
        /*[in]*/ long GuideIndexEnd,
        /*[out,retval]*/ struct ISurface * * Retval ) = 0;
      virtual HRESULT __stdcall CreateLoftSurface (
        /*[in]*/ VARIANT CurveArray,
        /*[in]*/ VARIANT_BOOL BBlendClosed,
        /*[in]*/ VARIANT_BOOL BForceCubic,
        /*[in]*/ VARIANT GuideCrvArray,
        /*[in]*/ long StartMatchingType,
        /*[in]*/ long EndMatchingType,
        /*[in]*/ IDispatch * NormalAtStartSection,
        /*[in]*/ IDispatch * NormalAtEndSection,
        /*[in]*/ VARIANT StartMatchingFaceList,
        /*[in]*/ VARIANT EndMatchingFaceList,
        /*[in]*/ VARIANT_BOOL DegeneratedStart,
        /*[in]*/ VARIANT_BOOL DegeneratedEnd,
        /*[in]*/ IDispatch * StartPointOfStartSection,
        /*[in]*/ IDispatch * StartPointOfEndSection,
        /*[in]*/ long SectionIndexStart,
        /*[in]*/ long SectionIndexEnd,
        /*[in]*/ long GuideIndexStart,
        /*[in]*/ long GuideIndexEnd,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ProjectCurveOnSurface (
        /*[in]*/ struct ICurve * CurveIn,
        /*[in]*/ struct ISurface * SurfaceIn,
        /*[in]*/ struct IMathVector * ProjDir,
        /*[out,retval]*/ struct ICurve * * ProjCrvOut ) = 0;
      virtual HRESULT __stdcall CreateExtrudedBody (
        /*[in]*/ struct IBody2 * SheetBody,
        /*[in]*/ struct IMathVector * Direction,
        /*[in]*/ double Length,
        /*[out,retval]*/ struct IBody2 * * Body ) = 0;
      virtual HRESULT __stdcall CreateBodiesFromSheets2 (
        /*[in]*/ VARIANT Sheets,
        /*[in]*/ long Options,
        /*[in]*/ double KnittingTolerance,
        /*[in,out]*/ long * Error,
        /*[out,retval]*/ VARIANT * Results ) = 0;
      virtual HRESULT __stdcall ICreateBodiesFromSheets2 (
        /*[in]*/ long NSheets,
        /*[in]*/ struct IBody2 * * Sheets,
        /*[in]*/ long Options,
        /*[in]*/ double KnittingTolerance,
        /*[in,out]*/ long * NResults,
        /*[in,out]*/ struct IBody2 * * Results,
        /*[out,retval]*/ long * Error ) = 0;
      virtual HRESULT __stdcall CreateBodyFromBox3 (
        /*[in]*/ VARIANT BoxDimArray,
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall CreateLoftBody (
        /*[in]*/ struct IModelDoc2 * PModDoc,
        /*[in]*/ VARIANT_BOOL IsBlendClosed,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational,
        /*[in]*/ VARIANT_BOOL IsSolidBody,
        /*[in]*/ double TessTolFactor,
        /*[in]*/ short StartMatchingType,
        /*[in]*/ short EndMatchingType,
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall ThickenSheet (
        /*[in]*/ struct IBody2 * Sheet,
        /*[in]*/ double Thickness,
        /*[in]*/ long Direction,
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall CheckInterference3 (
        /*[in]*/ VARIANT TargetBodies,
        /*[in]*/ VARIANT ToolBodies,
        /*[in]*/ long Options,
        /*[in,out]*/ VARIANT * Body1InterferedFaceArray,
        /*[in,out]*/ VARIANT * Body2InterferedFaceArray,
        /*[in,out]*/ VARIANT * IntersectedBodyArray,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ICheckInterference3 (
        /*[in,out]*/ struct IFace2 * * Body1InterferedFaceArray,
        /*[in,out]*/ struct IFace2 * * Body2InterferedFaceArray,
        /*[in,out]*/ struct IBody2 * * IntersectedBodyArray,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ICheckInterferenceCount3 (
        /*[in]*/ long NumOfTargetBodies,
        /*[in]*/ struct IBody2 * * TargetBodies,
        /*[in]*/ long NumOfToolBodies,
        /*[in]*/ struct IBody2 * * ToolBodies,
        /*[in]*/ long Options,
        /*[in,out]*/ long * NumBody1InterferedFaceArray,
        /*[in,out]*/ long * NumBody2InterferedFaceArray,
        /*[in,out]*/ long * NumIntersectedBodyArray,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateRuledSurfaceFromEdge (
        /*[in]*/ struct IModelDoc2 * ModDoc,
        /*[in]*/ VARIANT Edges,
        /*[in]*/ long Type,
        /*[in]*/ double Length,
        /*[in]*/ VARIANT_BOOL FlipPullDir,
        /*[in]*/ VARIANT_BOOL FlipDir,
        /*[in]*/ VARIANT_BOOL TrimAndSew,
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL CoordInput,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in]*/ VARIANT_BOOL BConnectSurface,
        /*[out]*/ IDispatch * * RuledSurface,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall ICreateRuledSurfaceFromEdge (
        /*[in]*/ struct IModelDoc2 * ModDoc,
        /*[in]*/ long NumOfEdges,
        /*[in]*/ struct IEdge * * Edges,
        /*[in]*/ long Type,
        /*[in]*/ double Length,
        /*[in]*/ VARIANT_BOOL FlipPullDir,
        /*[in]*/ VARIANT_BOOL FlipDir,
        /*[in]*/ VARIANT_BOOL TrimAndSew,
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL CoordInput,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in]*/ VARIANT_BOOL BConnectSurface,
        /*[out]*/ struct IBody2 * * RuledSurface,
        /*[out,retval]*/ long * Retval ) = 0;
};

struct __declspec(uuid("bcb39259-f2aa-47fd-8099-065b095095ad"))
IBodyFolder : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetFeature (
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetBodyCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetBodies (
        /*[out,retval]*/ VARIANT * Bodies ) = 0;
      virtual HRESULT __stdcall IGetBodies (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IBody2 * * Bodies ) = 0;
      virtual HRESULT __stdcall GetAutomaticCutList (
        /*[out,retval]*/ VARIANT_BOOL * CutList ) = 0;
      virtual HRESULT __stdcall SetAutomaticCutList (
        /*[in]*/ VARIANT_BOOL CutList,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall UpdateCutList (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("693e3d8b-3cb9-4d5c-9fcf-e021149bbc38"))
ICommentFolder : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetFeature (
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall GetCommentCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetComments (
        /*[out,retval]*/ VARIANT * Comments ) = 0;
      virtual HRESULT __stdcall IGetComments (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IComment * * Comments ) = 0;
      virtual HRESULT __stdcall AddComment (
        /*[in]*/ BSTR Text,
        /*[out,retval]*/ struct IComment * * Retval ) = 0;
};

struct __declspec(uuid("655d6f2a-5441-45d1-8cba-d35fb26988e4"))
IComponent2 : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetChildren (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetChildren (
        /*[out,retval]*/ struct IComponent2 * * Retval ) = 0;
      virtual HRESULT __stdcall IGetChildrenCount (
        /*[out,retval]*/ int * Retval ) = 0;
      virtual HRESULT __stdcall GetXform (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetXform (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetBody (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetBody (
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall get_MaterialPropertyValues (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall put_MaterialPropertyValues (
        /*[in]*/ VARIANT Retval ) = 0;
      virtual HRESULT __stdcall get_IMaterialPropertyValues (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_IMaterialPropertyValues (
        /*[in]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall AddPropertyExtension (
        /*[in]*/ VARIANT PropertyExtension,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetPropertyExtension (
        /*[in]*/ long ID,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall ResetPropertyExtension ( ) = 0;
      virtual HRESULT __stdcall GetMaterialIdName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetMaterialIdName (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetMaterialUserName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetMaterialUserName (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetSectionedBodies (
        /*[in]*/ IDispatch * ViewIn,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetBox (
        /*[in]*/ VARIANT_BOOL IncludeRefPlanes,
        /*[in]*/ VARIANT_BOOL IncludeSketches,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetBox (
        /*[in]*/ VARIANT_BOOL IncludeRefPlanes,
        /*[in]*/ VARIANT_BOOL IncludeSketches,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall SetXform (
        /*[in]*/ VARIANT XformIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ISetXform (
        /*[in]*/ double * XformIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetModelDoc (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetModelDoc (
        /*[out,retval]*/ struct IModelDoc2 * * Retval ) = 0;
      virtual HRESULT __stdcall IsFixed (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall EnumRelatedBodies (
        /*[out,retval]*/ struct IEnumBodies2 * * Retval ) = 0;
      virtual HRESULT __stdcall IsSuppressed (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall EnumSectionedBodies (
        /*[in]*/ struct IModelView * ViewIn,
        /*[out,retval]*/ struct IEnumBodies2 * * Retval ) = 0;
      virtual HRESULT __stdcall IsHidden (
        /*[in]*/ VARIANT_BOOL ConsiderSuppressed,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_ReferencedConfiguration (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall get_ReferencedConfiguration (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetSuppression (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetSuppression (
        /*[in]*/ long State,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ long Retval ) = 0;
      virtual HRESULT __stdcall GetPathName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetXformAndSolve (
        /*[in]*/ VARIANT XformIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ISetXformAndSolve (
        /*[in]*/ double * XformIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetTessTriangles (
        /*[in]*/ VARIANT_BOOL NoConversion,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTessTriangles (
        /*[in]*/ VARIANT_BOOL NoConversion,
        /*[out,retval]*/ float * Retval ) = 0;
      virtual HRESULT __stdcall IGetTessTriangleCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTessNorms (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTessNorms (
        /*[out,retval]*/ float * Retval ) = 0;
      virtual HRESULT __stdcall GetTessTriStrips (
        /*[in]*/ VARIANT_BOOL NoConversion,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTessTriStrips (
        /*[in]*/ VARIANT_BOOL NoConversion,
        /*[out,retval]*/ float * Retval ) = 0;
      virtual HRESULT __stdcall IGetTessTriStripSize (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTessTriStripNorms (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTessTriStripNorms (
        /*[out,retval]*/ float * Retval ) = 0;
      virtual HRESULT __stdcall GetTessTriStripEdges (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTessTriStripEdges (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IGetTessTriStripEdgeSize (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IsDisplayDataOutOfDate (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetConstrainedStatus (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall RemoveMaterialProperty (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IGetTemporaryBodyID (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall FindAttribute (
        /*[in]*/ IDispatch * AttributeDef,
        /*[in]*/ long WhichOne,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IFindAttribute (
        /*[in]*/ struct IAttributeDef * AttributeDef,
        /*[in]*/ long WhichOne,
        /*[out,retval]*/ struct IAttribute * * Retval ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT_BOOL AppendFlag,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SelectByMark (
        /*[in]*/ VARIANT_BOOL AppendFlag,
        /*[in]*/ long Mark,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DeSelect (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_Name2 (
        /*[out,retval]*/ BSTR * NewName ) = 0;
      virtual HRESULT __stdcall put_Name2 (
        /*[in]*/ BSTR NewName ) = 0;
      virtual HRESULT __stdcall get_Solving (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall ListExternalFileReferences (
        /*[out]*/ VARIANT * ModelPathName,
        /*[out]*/ VARIANT * ComponentPathName,
        /*[out]*/ VARIANT * Feature,
        /*[out]*/ VARIANT * DataType,
        /*[out]*/ VARIANT * Status,
        /*[out]*/ VARIANT * RefEntity,
        /*[out]*/ VARIANT * FeatCom ) = 0;
      virtual HRESULT __stdcall ListExternalFileReferencesCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IListExternalFileReferences (
        /*[in]*/ long NumRefs,
        /*[out]*/ BSTR * ModelPathName,
        /*[out]*/ BSTR * CompPathName,
        /*[out]*/ BSTR * Feature,
        /*[out]*/ BSTR * DataType,
        /*[out]*/ long * Status,
        /*[out]*/ BSTR * RefEntity,
        /*[out]*/ BSTR * FeatComp ) = 0;
      virtual HRESULT __stdcall ReplaceReference (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall Select2 (
        /*[in]*/ VARIANT_BOOL Append,
        /*[in]*/ long Mark,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetCorrespondingEntity (
        /*[in]*/ IDispatch * Entity,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetCorrespondingEntity (
        /*[in]*/ struct IEntity * PEntity,
        /*[out,retval]*/ struct IEntity * * Retval ) = 0;
      virtual HRESULT __stdcall IsEnvelope (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_Transform (
        /*[out,retval]*/ struct IMathTransform * * Xform ) = 0;
      virtual HRESULT __stdcall put_Transform (
        /*[in]*/ struct IMathTransform * Xform ) = 0;
      virtual HRESULT __stdcall SetTransformAndSolve (
        /*[in]*/ struct IMathTransform * XformIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetParent (
        /*[out,retval]*/ struct IComponent2 * * Parent ) = 0;
      virtual HRESULT __stdcall FirstFeature (
        /*[out,retval]*/ struct IFeature * * PFeature ) = 0;
      virtual HRESULT __stdcall get_PresentationTransform (
        /*[out,retval]*/ struct IMathTransform * * Xform ) = 0;
      virtual HRESULT __stdcall put_PresentationTransform (
        /*[in]*/ struct IMathTransform * Xform ) = 0;
      virtual HRESULT __stdcall RemovePresentationTransform ( ) = 0;
      virtual HRESULT __stdcall EnumBodies (
        /*[in]*/ long BodyType,
        /*[out,retval]*/ struct IEnumBodies2 * * EnumBodies ) = 0;
      virtual HRESULT __stdcall GetBodies (
        /*[in]*/ long BodyType,
        /*[out,retval]*/ VARIANT * BodiesVar ) = 0;
      virtual HRESULT __stdcall GetTotalTransform (
        /*[in]*/ VARIANT_BOOL IncludePresentationXform,
        /*[out,retval]*/ struct IMathTransform * * Xform ) = 0;
      virtual HRESULT __stdcall get_Transform2 (
        /*[out,retval]*/ struct IMathTransform * * Xform ) = 0;
      virtual HRESULT __stdcall put_Transform2 (
        /*[in]*/ struct IMathTransform * Xform ) = 0;
      virtual HRESULT __stdcall SetTransformAndSolve2 (
        /*[in]*/ struct IMathTransform * XformIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IGetMaterialPropertyValuesForFace (
        /*[in]*/ IDispatch * FaceIn,
        /*[out,retval]*/ double * Material_values ) = 0;
      virtual HRESULT __stdcall GetDrawingComponent (
        /*[in]*/ struct IView * ViewIn,
        /*[out,retval]*/ struct IDrawingComponent * * Retval ) = 0;
      virtual HRESULT __stdcall SetMaterialPropertyValues2 (
        /*[in]*/ VARIANT Material_values,
        /*[in]*/ long Config_opt,
        /*[in]*/ VARIANT Config_names ) = 0;
      virtual HRESULT __stdcall ISetMaterialPropertyValues2 (
        /*[in]*/ double * Material_values,
        /*[in]*/ long Config_opt,
        /*[in]*/ long Config_count,
        /*[in]*/ BSTR * Config_names ) = 0;
      virtual HRESULT __stdcall GetMaterialPropertyValues2 (
        /*[in]*/ long Config_opt,
        /*[in]*/ VARIANT Config_names,
        /*[out,retval]*/ VARIANT * Material_values ) = 0;
      virtual HRESULT __stdcall IGetMaterialPropertyValues2 (
        /*[in]*/ long Config_opt,
        /*[in]*/ long Config_count,
        /*[in]*/ BSTR * Config_names,
        /*[out,retval]*/ double * Material_values ) = 0;
      virtual HRESULT __stdcall SetVisibility (
        /*[in]*/ long State,
        /*[in]*/ long Config_opt,
        /*[in]*/ VARIANT Config_names ) = 0;
      virtual HRESULT __stdcall ISetVisibility (
        /*[in]*/ long State,
        /*[in]*/ long Config_opt,
        /*[in]*/ long Config_count,
        /*[in]*/ BSTR * Config_names ) = 0;
      virtual HRESULT __stdcall GetVisibility (
        /*[in]*/ long Config_opt,
        /*[in]*/ VARIANT Config_names,
        /*[out,retval]*/ VARIANT * States ) = 0;
      virtual HRESULT __stdcall IGetVisibility (
        /*[in]*/ long Config_opt,
        /*[in]*/ long Config_count,
        /*[in]*/ BSTR * Config_names,
        /*[out,retval]*/ long * States ) = 0;
      virtual HRESULT __stdcall FeatureByName (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall RemoveMaterialProperty2 (
        /*[in]*/ long Config_opt,
        /*[in]*/ VARIANT Config_names,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IRemoveMaterialProperty2 (
        /*[in]*/ long Config_opt,
        /*[in]*/ long Config_count,
        /*[in]*/ BSTR * Config_names,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ListExternalFileReferences2 (
        /*[out]*/ VARIANT * ModelPathName,
        /*[out]*/ VARIANT * ComponentPathName,
        /*[out]*/ VARIANT * Feature,
        /*[out]*/ VARIANT * DataType,
        /*[out]*/ VARIANT * Status,
        /*[out]*/ VARIANT * RefEntity,
        /*[out]*/ VARIANT * FeatCom,
        /*[out]*/ long * ConfigOption,
        /*[out]*/ BSTR * ConfigName ) = 0;
      virtual HRESULT __stdcall IListExternalFileReferences2 (
        /*[in]*/ long NumRefs,
        /*[out]*/ BSTR * ModelPathName,
        /*[out]*/ BSTR * CompPathName,
        /*[out]*/ BSTR * Feature,
        /*[out]*/ BSTR * DataType,
        /*[out]*/ long * Status,
        /*[out]*/ BSTR * RefEntity,
        /*[out]*/ BSTR * FeatComp,
        /*[out]*/ long * ConfigOption,
        /*[out]*/ BSTR * ConfigName ) = 0;
      virtual HRESULT __stdcall UpdateExternalFileReferences (
        /*[in]*/ long ConfigOption,
        /*[in]*/ BSTR ConfigName,
        /*[in]*/ long UpdateStatus ) = 0;
      virtual HRESULT __stdcall SetSuppression2 (
        /*[in]*/ long State,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTexture (
        /*[in]*/ BSTR Config_name,
        /*[out,retval]*/ struct ITexture * * Retval ) = 0;
      virtual HRESULT __stdcall SetTexture (
        /*[in]*/ BSTR Config_name,
        /*[in]*/ struct ITexture * TextureIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall RemoveTexture (
        /*[in]*/ BSTR Config_name,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_ExcludeFromBOM (
        /*[out,retval]*/ VARIANT_BOOL * BExclude ) = 0;
      virtual HRESULT __stdcall put_ExcludeFromBOM (
        /*[in]*/ VARIANT_BOOL BExclude ) = 0;
      virtual HRESULT __stdcall get_UseNamedConfiguration (
        /*[out,retval]*/ VARIANT_BOOL * BUseNamed ) = 0;
      virtual HRESULT __stdcall GetCorresponding (
        /*[in]*/ IDispatch * InputObject,
        /*[out,retval]*/ IDispatch * * OutputObject ) = 0;
      virtual HRESULT __stdcall Select3 (
        /*[in]*/ VARIANT_BOOL Append,
        /*[in]*/ struct ISelectData * Data,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall EnumBodies2 (
        /*[in]*/ long BodyType,
        /*[out,retval]*/ struct IEnumBodies2 * * EnumBodies ) = 0;
      virtual HRESULT __stdcall GetBodies2 (
        /*[in]*/ long BodyType,
        /*[out,retval]*/ VARIANT * BodiesVar ) = 0;
      virtual HRESULT __stdcall GetRemainingDOFs (
        /*[out]*/ long * Rpoint1_status,
        /*[out]*/ struct IMathPoint * * Rpoint1,
        /*[out]*/ long * Rdirection1_status,
        /*[out]*/ struct IMathVector * * Rdirection1,
        /*[out]*/ long * Rpoint2_status,
        /*[out]*/ struct IMathPoint * * Rpoint2,
        /*[out]*/ long * Rdirection2_status,
        /*[out]*/ struct IMathVector * * Rdirection2,
        /*[out]*/ long * Tdirection1_status,
        /*[out]*/ struct IMathVector * * Tdirection1,
        /*[out]*/ long * Tdirection2_status,
        /*[out]*/ struct IMathVector * * Tdirection2,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IsPatternInstance (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetDecalsCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetDecals (
        /*[out,retval]*/ VARIANT * PDecalsVar ) = 0;
      virtual HRESULT __stdcall IGetDecals (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IDecal * * PDecalsArr ) = 0;
      virtual HRESULT __stdcall GetRenderMaterialsCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetRenderMaterials (
        /*[out,retval]*/ VARIANT * PPWMaterialsVar ) = 0;
      virtual HRESULT __stdcall IGetRenderMaterials (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IRenderMaterial * * PDecalsArr ) = 0;
      virtual HRESULT __stdcall IsMirrored (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_IsVirtual (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_IsVirtual (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall HasUnloadedComponents (
        /*[out,retval]*/ VARIANT_BOOL * Status ) = 0;
      virtual HRESULT __stdcall GetUnloadedComponentNames (
        /*[out]*/ VARIANT * UnloadedComponentPathNames,
        /*[out]*/ VARIANT * UnloadedComponentReferencedConfigurationNames,
        /*[out]*/ VARIANT * ReasonForUnloadingComponents,
        /*[out]*/ VARIANT * DocTypes,
        /*[out,retval]*/ VARIANT * UnloadedComponentNames ) = 0;
      virtual HRESULT __stdcall SetCosmosWorksMaterial (
        /*[in]*/ BSTR ConfigName,
        /*[in]*/ long Type,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetHiddenUnloadedChildrenCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall Select4 (
        /*[in]*/ VARIANT_BOOL Append,
        /*[in]*/ struct ISelectData * Data,
        /*[in]*/ VARIANT_BOOL ShowPopup,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsRoot (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetModelDoc2 (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
};

struct __declspec(uuid("f25e6093-1a6f-46d3-9866-860934df611d"))
IDrawingComponent : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_View (
        /*[out,retval]*/ struct IView * * Retval ) = 0;
      virtual HRESULT __stdcall IsRoot (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_Component (
        /*[out,retval]*/ struct IComponent2 * * Retval ) = 0;
      virtual HRESULT __stdcall GetChildrenCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetChildren (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetChildren (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IDrawingComponent * * Retval ) = 0;
      virtual HRESULT __stdcall put_Layer (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall get_Layer (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_LayerOverride (
        /*[in]*/ long Retval ) = 0;
      virtual HRESULT __stdcall get_LayerOverride (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ long Retval ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ long Retval ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT_BOOL Append,
        /*[in]*/ struct ISelectData * Data,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DeSelect (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * PStrComponentName ) = 0;
};

struct __declspec(uuid("f6804d12-b73a-49af-81c6-05babb58b812"))
IEnumComponents2 : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Next (
        /*[in]*/ long Celt,
        /*[out]*/ struct IComponent2 * * Rgelt,
        /*[in,out]*/ long * PceltFetched ) = 0;
      virtual HRESULT __stdcall Skip (
        /*[in]*/ long Celt ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
      virtual HRESULT __stdcall Clone (
        /*[out]*/ struct IEnumComponents2 * * Ppenum ) = 0;
};

struct __declspec(uuid("f183a33f-d4db-11d3-aeb2-00c04f603faf"))
IDrSection : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetView (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetView (
        /*[out,retval]*/ struct IView * * Retval ) = 0;
      virtual HRESULT __stdcall GetSectionView (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetSectionView (
        /*[out,retval]*/ struct IView * * Retval ) = 0;
      virtual HRESULT __stdcall GetLabel (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetLabel (
        /*[in]*/ BSTR Label,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetUseDocTextFormat (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetTextFormat (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetTextFormat (
        /*[out,retval]*/ struct ITextFormat * * Retval ) = 0;
      virtual HRESULT __stdcall SetTextFormat (
        /*[in]*/ VARIANT_BOOL UseDoc,
        /*[in]*/ IDispatch * TextFormat,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ISetTextFormat (
        /*[in]*/ VARIANT_BOOL UseDoc,
        /*[in]*/ struct ITextFormat * TextFormat,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetReversedCutDirection (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetReversedCutDirection (
        /*[in]*/ VARIANT_BOOL Reversed ) = 0;
      virtual HRESULT __stdcall GetScaleWithModelChanges (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetScaleWithModelChanges (
        /*[in]*/ VARIANT_BOOL ScaleWithChanges ) = 0;
      virtual HRESULT __stdcall GetPartialSection (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetPartialSection (
        /*[in]*/ VARIANT_BOOL Partial ) = 0;
      virtual HRESULT __stdcall GetDisplayOnlySurfaceCut (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetDisplayOnlySurfaceCut (
        /*[in]*/ VARIANT_BOOL Display ) = 0;
      virtual HRESULT __stdcall IsAligned (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetTextInfo (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTextInfo (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetArrowInfo (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetArrowInfo (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetExcludedComponents (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall EnumExcludedComponents (
        /*[out,retval]*/ struct IEnumComponents * * Retval ) = 0;
      virtual HRESULT __stdcall GetAutoHatch (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetAutoHatch (
        /*[in]*/ VARIANT_BOOL AutoHatch ) = 0;
      virtual HRESULT __stdcall IGetLineSegmentCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetLineInfo (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetLineInfo (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall EnumExcludedComponents2 (
        /*[out,retval]*/ struct IEnumComponents2 * * Retval ) = 0;
      virtual HRESULT __stdcall get_Layer (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Layer (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall SetLabel2 (
        /*[in]*/ BSTR Label,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetExcludedComponents (
        /*[in]*/ VARIANT VComponents,
        /*[out,retval]*/ VARIANT_BOOL * VbRetval ) = 0;
      virtual HRESULT __stdcall ISetExcludedComponents (
        /*[in]*/ long Number,
        /*[in]*/ struct IComponent * * LpComps,
        /*[out,retval]*/ VARIANT_BOOL * VbRetval ) = 0;
      virtual HRESULT __stdcall GetDontCutAllInstances (
        /*[in]*/ struct IComponent * LpComp,
        /*[out,retval]*/ VARIANT_BOOL * VbRetval ) = 0;
      virtual HRESULT __stdcall SetDontCutAllInstances (
        /*[in]*/ struct IComponent * LpComp,
        /*[in]*/ VARIANT_BOOL VbCut,
        /*[out,retval]*/ VARIANT_BOOL * VbRetval ) = 0;
      virtual HRESULT __stdcall SetLineInfo (
        /*[in]*/ VARIANT VLineInfo,
        /*[out,retval]*/ VARIANT_BOOL * VbRetval ) = 0;
      virtual HRESULT __stdcall ISetLineInfo (
        /*[in]*/ long Count,
        /*[in]*/ double * PLineInfo,
        /*[out,retval]*/ VARIANT_BOOL * VbRetval ) = 0;
      virtual HRESULT __stdcall get_ExcludeFasteners (
        /*[out,retval]*/ VARIANT_BOOL * VbExcludeFasteners ) = 0;
      virtual HRESULT __stdcall put_ExcludeFasteners (
        /*[in]*/ VARIANT_BOOL VbExcludeFasteners ) = 0;
};

struct __declspec(uuid("585a6a15-e95b-11d3-aebc-00c04f603faf"))
IEnumDrSections : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Next (
        /*[in]*/ long Celt,
        /*[out]*/ struct IDrSection * * Rgelt,
        /*[in,out]*/ long * PceltFetched ) = 0;
      virtual HRESULT __stdcall Skip (
        /*[in]*/ long Celt ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
      virtual HRESULT __stdcall Clone (
        /*[out]*/ struct IEnumDrSections * * Ppenum ) = 0;
};

struct __declspec(uuid("83a33d98-27c5-11ce-bfd4-00400513bb57"))
IConfiguration : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetRootComponent (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetRootComponent (
        /*[out,retval]*/ struct IComponent * * Retval ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall get_Comment (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_Comment (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall get_AlternateName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_AlternateName (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall get_UseAlternateNameInBOM (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_UseAlternateNameInBOM (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_SuppressNewFeatures (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_SuppressNewFeatures (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_HideNewComponentModels (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_HideNewComponentModels (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_SuppressNewComponentModels (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_SuppressNewComponentModels (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_ShowChildComponentsInBOM (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_ShowChildComponentsInBOM (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall GetNumberOfExplodeSteps (
        /*[out,retval]*/ int * Retval ) = 0;
      virtual HRESULT __stdcall GetExplodeStep (
        /*[in]*/ long ExplodeStepIndex,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetExplodeStep (
        /*[in]*/ long ExplodeStepIndex,
        /*[out,retval]*/ struct IExplodeStep * * Retval ) = 0;
      virtual HRESULT __stdcall AddExplodeStep (
        /*[in]*/ double ExplDist,
        /*[in]*/ VARIANT_BOOL ReverseDir,
        /*[in]*/ VARIANT_BOOL RigidSubassembly,
        /*[in]*/ VARIANT_BOOL ExplodeRelated,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IAddExplodeStep (
        /*[in]*/ double ExplDist,
        /*[in]*/ VARIANT_BOOL ReverseDir,
        /*[in]*/ VARIANT_BOOL RigidSubassembly,
        /*[in]*/ VARIANT_BOOL ExplodeRelated,
        /*[out,retval]*/ struct IExplodeStep * * Retval ) = 0;
      virtual HRESULT __stdcall DeleteExplodeStep (
        /*[in]*/ BSTR ExplodeStepName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetStreamName (
        /*[out,retval]*/ BSTR * StreamName ) = 0;
      virtual HRESULT __stdcall IGetRootComponent2 (
        /*[out,retval]*/ struct IComponent2 * * Retval ) = 0;
      virtual HRESULT __stdcall GetComponentSuppressionState (
        /*[in]*/ BSTR CompName,
        /*[out,retval]*/ VARIANT_BOOL * Suppressed ) = 0;
      virtual HRESULT __stdcall GetComponentConfigName (
        /*[in]*/ BSTR CompName,
        /*[out,retval]*/ BSTR * ReferencedConfiguration ) = 0;
      virtual HRESULT __stdcall get_Lock (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_Lock (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall GetCustomProperties (
        /*[in,out]*/ VARIANT * PropNames,
        /*[in,out]*/ VARIANT * PropValues,
        /*[in,out]*/ VARIANT * PropTypes,
        /*[out,retval]*/ long * NumProps ) = 0;
      virtual HRESULT __stdcall GetCustomPropertiesCount (
        /*[out,retval]*/ long * NumProps ) = 0;
      virtual HRESULT __stdcall IGetCustomProperties (
        /*[in]*/ long NumProps,
        /*[in,out]*/ BSTR * PropNames,
        /*[in,out]*/ BSTR * PropValues,
        /*[in,out]*/ long * PropTypes ) = 0;
      virtual HRESULT __stdcall SetColor (
        /*[in]*/ long ColorIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_Description (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall IsDerived (
        /*[out,retval]*/ VARIANT_BOOL * Derived ) = 0;
      virtual HRESULT __stdcall GetParent (
        /*[out,retval]*/ struct IConfiguration * * Parent ) = 0;
      virtual HRESULT __stdcall GetChildren (
        /*[out,retval]*/ VARIANT * Children ) = 0;
      virtual HRESULT __stdcall GetChildrenCount (
        /*[out,retval]*/ long * NumChildren ) = 0;
      virtual HRESULT __stdcall IGetChildren (
        /*[in]*/ long NumChildren,
        /*[out,retval]*/ struct IConfiguration * * Children ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT_BOOL AppendFlag,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_BOMPartNoSource (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall put_BOMPartNoSource (
        /*[in]*/ long Retval ) = 0;
      virtual HRESULT __stdcall GetParameterCount (
        /*[out,retval]*/ long * NParamCount ) = 0;
      virtual HRESULT __stdcall GetParameters (
        /*[out]*/ VARIANT * Params,
        /*[out]*/ VARIANT * Values ) = 0;
      virtual HRESULT __stdcall IGetParameters (
        /*[in]*/ long NParamCount,
        /*[out]*/ BSTR * Params,
        /*[out]*/ BSTR * Values ) = 0;
      virtual HRESULT __stdcall SetParameters (
        /*[in]*/ VARIANT * Params,
        /*[in]*/ VARIANT * Values ) = 0;
      virtual HRESULT __stdcall ISetParameters (
        /*[in]*/ long NParamCount,
        /*[in]*/ BSTR * Params,
        /*[in]*/ BSTR * Values ) = 0;
      virtual HRESULT __stdcall Select2 (
        /*[in]*/ VARIANT_BOOL AppendFlag,
        /*[in]*/ struct ISelectData * SelectData,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetDisplayStates (
        /*[out,retval]*/ VARIANT * DisplayStates ) = 0;
      virtual HRESULT __stdcall GetDisplayStatesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetDisplayStates (
        /*[in]*/ long Count,
        /*[out,retval]*/ BSTR * DisplayStateArr ) = 0;
      virtual HRESULT __stdcall CreateDisplayState (
        /*[in]*/ BSTR DisplayStateName,
        /*[out,retval]*/ VARIANT_BOOL * Result ) = 0;
      virtual HRESULT __stdcall ApplyDisplayState (
        /*[in]*/ BSTR DisplayStateName,
        /*[out,retval]*/ VARIANT_BOOL * Result ) = 0;
      virtual HRESULT __stdcall DeleteDisplayState (
        /*[in]*/ BSTR DisplayStateName,
        /*[out,retval]*/ VARIANT_BOOL * Result ) = 0;
      virtual HRESULT __stdcall RenameDisplayState (
        /*[in]*/ BSTR OldDisplayStateName,
        /*[in]*/ BSTR NewDisplayStateName,
        /*[out,retval]*/ VARIANT_BOOL * Result ) = 0;
      virtual HRESULT __stdcall CopyDisplayStateFromConfiguration (
        /*[in]*/ struct IConfiguration * CopyFromConfig,
        /*[in]*/ BSTR DisplayStateNameToCopy,
        /*[out,retval]*/ VARIANT_BOOL * Result ) = 0;
      virtual HRESULT __stdcall get_CustomPropertyManager (
        /*[out,retval]*/ struct ICustomPropertyManager * * Retval ) = 0;
      virtual HRESULT __stdcall IsSpeedPak (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall UpdateSpeedPak (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("8db64337-f36e-47cc-bbbc-b4b979d31505"))
IConfigurationManager : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct IModelDoc2 * * ModelDoc ) = 0;
      virtual HRESULT __stdcall GetConfigurationParams (
        /*[in]*/ BSTR ConfigName,
        /*[out]*/ VARIANT * Params,
        /*[out]*/ VARIANT * Values,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IGetConfigurationParams (
        /*[in]*/ BSTR ConfigName,
        /*[in]*/ long ParamCount,
        /*[out]*/ BSTR * ParamNames,
        /*[out]*/ BSTR * ParamValues,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetConfigurationParamsCount (
        /*[in]*/ BSTR ConfigName,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall AddConfiguration (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR Comment,
        /*[in]*/ BSTR AlternateName,
        /*[in]*/ long Options,
        /*[in]*/ BSTR ParentConfigName,
        /*[in]*/ BSTR Description,
        /*[out,retval]*/ struct IConfiguration * * NewConfig ) = 0;
      virtual HRESULT __stdcall SetConfigurationParams (
        /*[in]*/ BSTR ConfigName,
        /*[in]*/ VARIANT * ParamNames,
        /*[in]*/ VARIANT * ParamValues,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ISetConfigurationParams (
        /*[in]*/ BSTR ConfigName,
        /*[in]*/ long ParamCount,
        /*[in]*/ BSTR * ParamNames,
        /*[in]*/ BSTR * ParamValues,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_ActiveConfiguration (
        /*[out,retval]*/ struct IConfiguration * * PActiveConfig ) = 0;
      virtual HRESULT __stdcall get_EnableConfigurationTree (
        /*[out,retval]*/ VARIANT_BOOL * PState ) = 0;
      virtual HRESULT __stdcall put_EnableConfigurationTree (
        /*[in]*/ VARIANT_BOOL PState ) = 0;
      virtual HRESULT __stdcall AddSpeedPak (
        /*[in]*/ long Type,
        /*[in]*/ double PartThreshold,
        /*[in]*/ double FaceThreshold,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
};

struct __declspec(uuid("e0aace0f-3a47-437e-99b4-9330cd6186ba"))
IDragOperator : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_IsRelaxationEval (
        /*[out,retval]*/ VARIANT_BOOL * Method ) = 0;
      virtual HRESULT __stdcall put_IsRelaxationEval (
        /*[in]*/ VARIANT_BOOL Method ) = 0;
      virtual HRESULT __stdcall get_DragMode (
        /*[out,retval]*/ short * Mode ) = 0;
      virtual HRESULT __stdcall put_DragMode (
        /*[in]*/ short Mode ) = 0;
      virtual HRESULT __stdcall get_IsDragSpecific (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_IsDragSpecific (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall get_TransformType (
        /*[out,retval]*/ short * Type ) = 0;
      virtual HRESULT __stdcall put_TransformType (
        /*[in]*/ short Type ) = 0;
      virtual HRESULT __stdcall get_IsDragByRay (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_IsDragByRay (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall get_CollisionDetectionEnabled (
        /*[out,retval]*/ VARIANT_BOOL * Result ) = 0;
      virtual HRESULT __stdcall put_CollisionDetectionEnabled (
        /*[in]*/ VARIANT_BOOL Result ) = 0;
      virtual HRESULT __stdcall get_HighlightClashes (
        /*[out,retval]*/ VARIANT_BOOL * Result ) = 0;
      virtual HRESULT __stdcall put_HighlightClashes (
        /*[in]*/ VARIANT_BOOL Result ) = 0;
      virtual HRESULT __stdcall get_HearClashes (
        /*[out,retval]*/ VARIANT_BOOL * Result ) = 0;
      virtual HRESULT __stdcall put_HearClashes (
        /*[in]*/ VARIANT_BOOL Result ) = 0;
      virtual HRESULT __stdcall get_ApplyToThisConfiguration (
        /*[out,retval]*/ VARIANT_BOOL * Result ) = 0;
      virtual HRESULT __stdcall put_ApplyToThisConfiguration (
        /*[in]*/ VARIANT_BOOL Result ) = 0;
      virtual HRESULT __stdcall get_IgnoreComplexSurfaces (
        /*[out,retval]*/ VARIANT_BOOL * Result ) = 0;
      virtual HRESULT __stdcall put_IgnoreComplexSurfaces (
        /*[in]*/ VARIANT_BOOL Result ) = 0;
      virtual HRESULT __stdcall get_SmartMating (
        /*[out,retval]*/ VARIANT_BOOL * Result ) = 0;
      virtual HRESULT __stdcall put_SmartMating (
        /*[in]*/ VARIANT_BOOL Result ) = 0;
      virtual HRESULT __stdcall get_DynamicClearanceEnabled (
        /*[out,retval]*/ VARIANT_BOOL * Result ) = 0;
      virtual HRESULT __stdcall put_DynamicClearanceEnabled (
        /*[in]*/ VARIANT_BOOL Result ) = 0;
      virtual HRESULT __stdcall AddComponent (
        /*[in]*/ IDispatch * PDisp,
        /*[in]*/ VARIANT_BOOL AppendFlag,
        /*[out,retval]*/ VARIANT_BOOL * Result ) = 0;
      virtual HRESULT __stdcall IAddComponent (
        /*[in]*/ struct IComponent2 * PComp,
        /*[in]*/ VARIANT_BOOL AppendFlag,
        /*[out,retval]*/ VARIANT_BOOL * Result ) = 0;
      virtual HRESULT __stdcall BeginDrag (
        /*[out,retval]*/ VARIANT_BOOL * Result ) = 0;
      virtual HRESULT __stdcall EndDrag (
        /*[out,retval]*/ VARIANT_BOOL * Result ) = 0;
      virtual HRESULT __stdcall Drag (
        /*[in]*/ IDispatch * PXform,
        /*[out,retval]*/ VARIANT_BOOL * Result ) = 0;
      virtual HRESULT __stdcall IDrag (
        /*[in]*/ struct IMathTransform * PXform,
        /*[out,retval]*/ VARIANT_BOOL * Result ) = 0;
      virtual HRESULT __stdcall AddDynamicClearance (
        /*[in]*/ IDispatch * Comp1,
        /*[in]*/ IDispatch * Comp2,
        /*[in]*/ double Value,
        /*[in]*/ VARIANT_BOOL AppendFlag,
        /*[in]*/ VARIANT_BOOL ShowDim,
        /*[out,retval]*/ long * NIndex ) = 0;
      virtual HRESULT __stdcall IAddDynamicClearance (
        /*[in]*/ struct IComponent2 * Comp1,
        /*[in]*/ struct IComponent2 * Comp2,
        /*[in]*/ double Value,
        /*[in]*/ VARIANT_BOOL AppendFlag,
        /*[in]*/ VARIANT_BOOL ShowDim,
        /*[out,retval]*/ long * NIndex ) = 0;
      virtual HRESULT __stdcall get_Clearance (
        /*[in]*/ long NIndex,
        /*[out,retval]*/ double * Rvalue ) = 0;
      virtual HRESULT __stdcall CollisionDetection (
        /*[in]*/ VARIANT EntityArray,
        /*[in]*/ VARIANT_BOOL PartOnly,
        /*[in]*/ VARIANT_BOOL StopAt,
        /*[out,retval]*/ VARIANT_BOOL * Result ) = 0;
      virtual HRESULT __stdcall ICollisionDetection (
        /*[in]*/ long Count,
        /*[in]*/ struct IComponent2 * * ComponentArray,
        /*[in]*/ VARIANT_BOOL PartOnly,
        /*[in]*/ VARIANT_BOOL StopAt,
        /*[out,retval]*/ VARIANT_BOOL * Result ) = 0;
      virtual HRESULT __stdcall GetDragPoint (
        /*[out]*/ VARIANT * Point,
        /*[out,retval]*/ VARIANT_BOOL * Result ) = 0;
      virtual HRESULT __stdcall SetDragPoint (
        /*[in]*/ VARIANT Point,
        /*[out,retval]*/ VARIANT_BOOL * Result ) = 0;
      virtual HRESULT __stdcall IGetDragPoint (
        /*[out]*/ double * Point,
        /*[out,retval]*/ VARIANT_BOOL * Result ) = 0;
      virtual HRESULT __stdcall ISetDragPoint (
        /*[in]*/ double * Point,
        /*[out,retval]*/ VARIANT_BOOL * Result ) = 0;
      virtual HRESULT __stdcall DragAsUI (
        /*[in]*/ struct IMathTransform * PXform,
        /*[out,retval]*/ VARIANT_BOOL * Result ) = 0;
      virtual HRESULT __stdcall get_DragCorrected (
        /*[out,retval]*/ VARIANT_BOOL * Result ) = 0;
      virtual HRESULT __stdcall get_UseAbsoluteTransform (
        /*[out,retval]*/ VARIANT_BOOL * Result ) = 0;
      virtual HRESULT __stdcall put_UseAbsoluteTransform (
        /*[in]*/ VARIANT_BOOL Result ) = 0;
      virtual HRESULT __stdcall get_GraphicsRedrawEnabled (
        /*[out,retval]*/ VARIANT_BOOL * State ) = 0;
      virtual HRESULT __stdcall put_GraphicsRedrawEnabled (
        /*[in]*/ VARIANT_BOOL State ) = 0;
};

struct __declspec(uuid("ce7fe69d-bcfa-441f-a37d-e740546458a4"))
IMateEntity2 : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetEntityParamsSize (
        /*[out,retval]*/ long * NParamsSize ) = 0;
      virtual HRESULT __stdcall get_EntityParams (
        /*[out,retval]*/ VARIANT * VEntityParams ) = 0;
      virtual HRESULT __stdcall IGetEntityParams (
        /*[in]*/ long NParamsSize,
        /*[out,retval]*/ double * DEntityParams ) = 0;
      virtual HRESULT __stdcall get_Reference (
        /*[out,retval]*/ IDispatch * * LpDisp ) = 0;
      virtual HRESULT __stdcall get_ReferenceType (
        /*[out,retval]*/ long * NReferenceType ) = 0;
      virtual HRESULT __stdcall get_ReferenceComponent (
        /*[out,retval]*/ struct IComponent2 * * LpComponent ) = 0;
      virtual HRESULT __stdcall get_ReferenceType2 (
        /*[out,retval]*/ long * RefType ) = 0;
};

struct __declspec(uuid("f04ec279-edf3-4a8e-bf87-e3237cbccd8c"))
IInterference : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Ignore (
        /*[out,retval]*/ VARIANT_BOOL * ValueOut ) = 0;
      virtual HRESULT __stdcall put_Ignore (
        /*[in]*/ VARIANT_BOOL ValueOut ) = 0;
      virtual HRESULT __stdcall get_Volume (
        /*[out,retval]*/ double * ValueOut ) = 0;
      virtual HRESULT __stdcall get_Components (
        /*[out,retval]*/ VARIANT * VComponents ) = 0;
      virtual HRESULT __stdcall GetComponentCount (
        /*[out,retval]*/ long * ComponentCount ) = 0;
      virtual HRESULT __stdcall IGetComponents (
        /*[in]*/ long ComponentCount,
        /*[out,retval]*/ struct IComponent2 * * Components ) = 0;
      virtual HRESULT __stdcall get_IsPossibleInterference (
        /*[out,retval]*/ VARIANT_BOOL * ValueOut ) = 0;
      virtual HRESULT __stdcall get_IsFastener (
        /*[out,retval]*/ VARIANT_BOOL * ValueOut ) = 0;
      virtual HRESULT __stdcall GetInterferenceBody (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
};

struct __declspec(uuid("eae282bd-588a-4c1b-ad99-5fe6081c4585"))
IInterferenceDetectionMgr : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetInterferences (
        /*[out,retval]*/ VARIANT * VInterfernces ) = 0;
      virtual HRESULT __stdcall GetInterferenceCount (
        /*[out,retval]*/ long * InterfernceCount ) = 0;
      virtual HRESULT __stdcall IGetInterferences (
        /*[in]*/ long InterfernceCount,
        /*[out,retval]*/ struct IInterference * * Interfernces ) = 0;
      virtual HRESULT __stdcall GetInterferenceComponents (
        /*[out,retval]*/ VARIANT * VInterfernceComponents ) = 0;
      virtual HRESULT __stdcall GetInterferenceComponentCount (
        /*[out,retval]*/ long * InterfernceComponentCount ) = 0;
      virtual HRESULT __stdcall IGetInterferenceComponents (
        /*[in]*/ long InterfernceComponentCount,
        /*[out,retval]*/ struct IComponent2 * * InterfernceComponents ) = 0;
      virtual HRESULT __stdcall get_TreatCoincidenceAsInterference (
        /*[out,retval]*/ VARIANT_BOOL * ValueOut ) = 0;
      virtual HRESULT __stdcall put_TreatCoincidenceAsInterference (
        /*[in]*/ VARIANT_BOOL ValueOut ) = 0;
      virtual HRESULT __stdcall get_ShowIgnoredInterferences (
        /*[out,retval]*/ VARIANT_BOOL * ValueOut ) = 0;
      virtual HRESULT __stdcall put_ShowIgnoredInterferences (
        /*[in]*/ VARIANT_BOOL ValueOut ) = 0;
      virtual HRESULT __stdcall get_TreatSubAssembliesAsComponents (
        /*[out,retval]*/ VARIANT_BOOL * ValueOut ) = 0;
      virtual HRESULT __stdcall put_TreatSubAssembliesAsComponents (
        /*[in]*/ VARIANT_BOOL ValueOut ) = 0;
      virtual HRESULT __stdcall get_IncludeMultibodyPartInterferences (
        /*[out,retval]*/ VARIANT_BOOL * ValueOut ) = 0;
      virtual HRESULT __stdcall put_IncludeMultibodyPartInterferences (
        /*[in]*/ VARIANT_BOOL ValueOut ) = 0;
      virtual HRESULT __stdcall get_MakeInterferingPartsTransparent (
        /*[out,retval]*/ VARIANT_BOOL * ValueOut ) = 0;
      virtual HRESULT __stdcall put_MakeInterferingPartsTransparent (
        /*[in]*/ VARIANT_BOOL ValueOut ) = 0;
      virtual HRESULT __stdcall get_CreateFastenersFolder (
        /*[out,retval]*/ VARIANT_BOOL * ValueOut ) = 0;
      virtual HRESULT __stdcall put_CreateFastenersFolder (
        /*[in]*/ VARIANT_BOOL ValueOut ) = 0;
      virtual HRESULT __stdcall get_NonInterferingComponentDisplay (
        /*[out,retval]*/ long * ValueOut ) = 0;
      virtual HRESULT __stdcall put_NonInterferingComponentDisplay (
        /*[in]*/ long ValueOut ) = 0;
      virtual HRESULT __stdcall Done ( ) = 0;
};

struct __declspec(uuid("83a33d8c-27c5-11ce-bfd4-00400513bb57"))
IMateEntity : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetMember (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetMember (
        /*[out,retval]*/ struct IMember * * Retval ) = 0;
      virtual HRESULT __stdcall GetEntityType (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetEntityParams (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetEntityParams (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetComponent (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetComponent (
        /*[out,retval]*/ struct IComponent * * Retval ) = 0;
      virtual HRESULT __stdcall GetComponentName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall IGetComponent2 (
        /*[out,retval]*/ struct IComponent2 * * Retval ) = 0;
};

struct __declspec(uuid("414f4f1e-30ec-11d4-aeeb-00c04f683cba"))
IMirrorPatternFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc * TopDoc,
        /*[in]*/ struct IComponent * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_Plane (
        /*[out,retval]*/ IDispatch * * RefPlane ) = 0;
      virtual HRESULT __stdcall put_Plane (
        /*[in]*/ IDispatch * RefPlane ) = 0;
      virtual HRESULT __stdcall GetMirrorPlaneType (
        /*[out,retval]*/ long * MirrorPlaneType ) = 0;
      virtual HRESULT __stdcall get_PatternFeatureArray (
        /*[out,retval]*/ VARIANT * ArrayOut ) = 0;
      virtual HRESULT __stdcall put_PatternFeatureArray (
        /*[in]*/ VARIANT ArrayOut ) = 0;
      virtual HRESULT __stdcall GetPatternFeatureCount (
        /*[out,retval]*/ long * FeatCount ) = 0;
      virtual HRESULT __stdcall IGetPatternFeatureArray (
        /*[out,retval]*/ IDispatch * * ArrayOut ) = 0;
      virtual HRESULT __stdcall ISetPatternFeatureArray (
        /*[in]*/ long FeatCount,
        /*[in]*/ IDispatch * * ArrayDataIn ) = 0;
      virtual HRESULT __stdcall get_GeometryPattern (
        /*[out,retval]*/ VARIANT_BOOL * Geometry ) = 0;
      virtual HRESULT __stdcall put_GeometryPattern (
        /*[in]*/ VARIANT_BOOL Geometry ) = 0;
      virtual HRESULT __stdcall IAccessSelections2 (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall get_MirrorFaceArray (
        /*[out,retval]*/ VARIANT * ArrayOut ) = 0;
      virtual HRESULT __stdcall put_MirrorFaceArray (
        /*[in]*/ VARIANT ArrayOut ) = 0;
      virtual HRESULT __stdcall GetMirrorFaceCount (
        /*[out,retval]*/ long * FaceCount ) = 0;
      virtual HRESULT __stdcall IGetMirrorFaceArray (
        /*[out,retval]*/ IDispatch * * ArrayOut ) = 0;
      virtual HRESULT __stdcall ISetMirrorFaceArray (
        /*[in]*/ long FaceCount,
        /*[in]*/ IDispatch * * ArrayDataIn ) = 0;
      virtual HRESULT __stdcall get_PropagateVisualProperty (
        /*[out,retval]*/ VARIANT_BOOL * PropVisProp ) = 0;
      virtual HRESULT __stdcall put_PropagateVisualProperty (
        /*[in]*/ VARIANT_BOOL PropVisProp ) = 0;
      virtual HRESULT __stdcall get_FeatureScope (
        /*[out,retval]*/ long * Option ) = 0;
      virtual HRESULT __stdcall put_FeatureScope (
        /*[in]*/ long Option ) = 0;
      virtual HRESULT __stdcall get_FeatureScopeBodies (
        /*[out,retval]*/ VARIANT * BodyVar ) = 0;
      virtual HRESULT __stdcall put_FeatureScopeBodies (
        /*[in]*/ VARIANT BodyVar ) = 0;
      virtual HRESULT __stdcall GetFeatureScopeBodiesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetFeatureScopeBodies (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IBody2 * * BodyArr ) = 0;
      virtual HRESULT __stdcall ISetFeatureScopeBodies (
        /*[in]*/ long Count,
        /*[in]*/ struct IBody2 * * BodyArr ) = 0;
};

struct __declspec(uuid("dbbf39de-7ab5-11d4-aeb6-00c04fa0ac51"))
ICircularPatternFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc * TopDoc,
        /*[in]*/ struct IComponent * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_Axis (
        /*[out,retval]*/ IDispatch * * RefAxis ) = 0;
      virtual HRESULT __stdcall put_Axis (
        /*[in]*/ IDispatch * RefAxis ) = 0;
      virtual HRESULT __stdcall GetAxisType (
        /*[out,retval]*/ long * CircularAxisType ) = 0;
      virtual HRESULT __stdcall get_ReverseDirection (
        /*[out,retval]*/ VARIANT_BOOL * ReverseDirection ) = 0;
      virtual HRESULT __stdcall put_ReverseDirection (
        /*[in]*/ VARIANT_BOOL ReverseDirection ) = 0;
      virtual HRESULT __stdcall get_Spacing (
        /*[out,retval]*/ double * Distance ) = 0;
      virtual HRESULT __stdcall put_Spacing (
        /*[in]*/ double Distance ) = 0;
      virtual HRESULT __stdcall get_TotalInstances (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall put_TotalInstances (
        /*[in]*/ long Count ) = 0;
      virtual HRESULT __stdcall get_EqualSpacing (
        /*[out,retval]*/ VARIANT_BOOL * EqualSpacing ) = 0;
      virtual HRESULT __stdcall put_EqualSpacing (
        /*[in]*/ VARIANT_BOOL EqualSpacing ) = 0;
      virtual HRESULT __stdcall get_VarySketch (
        /*[out,retval]*/ VARIANT_BOOL * VarySketch ) = 0;
      virtual HRESULT __stdcall put_VarySketch (
        /*[in]*/ VARIANT_BOOL VarySketch ) = 0;
      virtual HRESULT __stdcall get_GeometryPattern (
        /*[out,retval]*/ VARIANT_BOOL * Geometry ) = 0;
      virtual HRESULT __stdcall put_GeometryPattern (
        /*[in]*/ VARIANT_BOOL Geometry ) = 0;
      virtual HRESULT __stdcall get_PatternFeatureArray (
        /*[out,retval]*/ VARIANT * ArrayOut ) = 0;
      virtual HRESULT __stdcall put_PatternFeatureArray (
        /*[in]*/ VARIANT ArrayOut ) = 0;
      virtual HRESULT __stdcall GetPatternFeatureCount (
        /*[out,retval]*/ long * FeatCount ) = 0;
      virtual HRESULT __stdcall IGetPatternFeatureArray (
        /*[out,retval]*/ IDispatch * * ArrayOut ) = 0;
      virtual HRESULT __stdcall ISetPatternFeatureArray (
        /*[in]*/ long FeatCount,
        /*[in]*/ IDispatch * * ArrayDataIn ) = 0;
      virtual HRESULT __stdcall get_SkippedItemArray (
        /*[out,retval]*/ VARIANT * ArrayOut ) = 0;
      virtual HRESULT __stdcall put_SkippedItemArray (
        /*[in]*/ VARIANT ArrayOut ) = 0;
      virtual HRESULT __stdcall GetSkippedItemCount (
        /*[out,retval]*/ long * FeatCount ) = 0;
      virtual HRESULT __stdcall IGetSkippedItemArray (
        /*[out,retval]*/ long * ArrayOut ) = 0;
      virtual HRESULT __stdcall ISetSkippedItemArray (
        /*[in]*/ long FeatCount,
        /*[in]*/ long * ArrayDataIn ) = 0;
      virtual HRESULT __stdcall IAccessSelections2 (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall get_PatternFaceArray (
        /*[out,retval]*/ VARIANT * ArrayOut ) = 0;
      virtual HRESULT __stdcall put_PatternFaceArray (
        /*[in]*/ VARIANT ArrayOut ) = 0;
      virtual HRESULT __stdcall GetPatternFaceCount (
        /*[out,retval]*/ long * FaceCount ) = 0;
      virtual HRESULT __stdcall IGetPatternFaceArray (
        /*[out,retval]*/ IDispatch * * ArrayOut ) = 0;
      virtual HRESULT __stdcall ISetPatternFaceArray (
        /*[in]*/ long FaceCount,
        /*[in]*/ IDispatch * * ArrayDataIn ) = 0;
      virtual HRESULT __stdcall get_PatternBodyArray (
        /*[out,retval]*/ VARIANT * ArrayOut ) = 0;
      virtual HRESULT __stdcall put_PatternBodyArray (
        /*[in]*/ VARIANT ArrayOut ) = 0;
      virtual HRESULT __stdcall GetPatternBodyCount (
        /*[out,retval]*/ long * BodyCount ) = 0;
      virtual HRESULT __stdcall IGetPatternBodyArray (
        /*[out,retval]*/ struct IBody2 * * ArrayOut ) = 0;
      virtual HRESULT __stdcall ISetPatternBodyArray (
        /*[in]*/ long BodyCount,
        /*[in]*/ struct IBody2 * * ArrayDataIn ) = 0;
      virtual HRESULT __stdcall get_PropagateVisualProperty (
        /*[out,retval]*/ VARIANT_BOOL * PropVisProp ) = 0;
      virtual HRESULT __stdcall put_PropagateVisualProperty (
        /*[in]*/ VARIANT_BOOL PropVisProp ) = 0;
};

struct __declspec(uuid("f86d1e94-7de8-11d4-aeb7-00c04fa0ac51"))
ILinearPatternFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc * TopDoc,
        /*[in]*/ struct IComponent * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_D1Axis (
        /*[out,retval]*/ IDispatch * * RefAxis ) = 0;
      virtual HRESULT __stdcall put_D1Axis (
        /*[in]*/ IDispatch * RefAxis ) = 0;
      virtual HRESULT __stdcall get_D2Axis (
        /*[out,retval]*/ IDispatch * * RefAxis ) = 0;
      virtual HRESULT __stdcall put_D2Axis (
        /*[in]*/ IDispatch * RefAxis ) = 0;
      virtual HRESULT __stdcall GetD1AxisType (
        /*[out,retval]*/ long * LinearAxisType ) = 0;
      virtual HRESULT __stdcall GetD2AxisType (
        /*[out,retval]*/ long * LinearAxisType ) = 0;
      virtual HRESULT __stdcall get_D1ReverseDirection (
        /*[out,retval]*/ VARIANT_BOOL * ReverseDirection ) = 0;
      virtual HRESULT __stdcall put_D1ReverseDirection (
        /*[in]*/ VARIANT_BOOL ReverseDirection ) = 0;
      virtual HRESULT __stdcall get_D2ReverseDirection (
        /*[out,retval]*/ VARIANT_BOOL * ReverseDirection ) = 0;
      virtual HRESULT __stdcall put_D2ReverseDirection (
        /*[in]*/ VARIANT_BOOL ReverseDirection ) = 0;
      virtual HRESULT __stdcall get_D1Spacing (
        /*[out,retval]*/ double * Distance ) = 0;
      virtual HRESULT __stdcall put_D1Spacing (
        /*[in]*/ double Distance ) = 0;
      virtual HRESULT __stdcall get_D2Spacing (
        /*[out,retval]*/ double * Distance ) = 0;
      virtual HRESULT __stdcall put_D2Spacing (
        /*[in]*/ double Distance ) = 0;
      virtual HRESULT __stdcall get_D1TotalInstances (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall put_D1TotalInstances (
        /*[in]*/ long Count ) = 0;
      virtual HRESULT __stdcall get_D2TotalInstances (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall put_D2TotalInstances (
        /*[in]*/ long Count ) = 0;
      virtual HRESULT __stdcall get_VarySketch (
        /*[out,retval]*/ VARIANT_BOOL * VarySketch ) = 0;
      virtual HRESULT __stdcall put_VarySketch (
        /*[in]*/ VARIANT_BOOL VarySketch ) = 0;
      virtual HRESULT __stdcall get_GeometryPattern (
        /*[out,retval]*/ VARIANT_BOOL * Geometry ) = 0;
      virtual HRESULT __stdcall put_GeometryPattern (
        /*[in]*/ VARIANT_BOOL Geometry ) = 0;
      virtual HRESULT __stdcall get_PatternFeatureArray (
        /*[out,retval]*/ VARIANT * ArrayOut ) = 0;
      virtual HRESULT __stdcall put_PatternFeatureArray (
        /*[in]*/ VARIANT ArrayOut ) = 0;
      virtual HRESULT __stdcall GetPatternFeatureCount (
        /*[out,retval]*/ long * FeatCount ) = 0;
      virtual HRESULT __stdcall IGetPatternFeatureArray (
        /*[out,retval]*/ IDispatch * * ArrayOut ) = 0;
      virtual HRESULT __stdcall ISetPatternFeatureArray (
        /*[in]*/ long FeatCount,
        /*[in]*/ IDispatch * * ArrayDataIn ) = 0;
      virtual HRESULT __stdcall get_SkippedItemArray (
        /*[out,retval]*/ VARIANT * ArrayOut ) = 0;
      virtual HRESULT __stdcall put_SkippedItemArray (
        /*[in]*/ VARIANT ArrayOut ) = 0;
      virtual HRESULT __stdcall GetSkippedItemCount (
        /*[out,retval]*/ long * FeatCount ) = 0;
      virtual HRESULT __stdcall IGetSkippedItemArray (
        /*[out,retval]*/ long * ArrayOut ) = 0;
      virtual HRESULT __stdcall ISetSkippedItemArray (
        /*[in]*/ long FeatCount,
        /*[in]*/ long * ArrayDataIn ) = 0;
      virtual HRESULT __stdcall IAccessSelections2 (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall get_PatternFaceArray (
        /*[out,retval]*/ VARIANT * ArrayOut ) = 0;
      virtual HRESULT __stdcall put_PatternFaceArray (
        /*[in]*/ VARIANT ArrayOut ) = 0;
      virtual HRESULT __stdcall GetPatternFaceCount (
        /*[out,retval]*/ long * FaceCount ) = 0;
      virtual HRESULT __stdcall IGetPatternFaceArray (
        /*[out,retval]*/ IDispatch * * ArrayOut ) = 0;
      virtual HRESULT __stdcall ISetPatternFaceArray (
        /*[in]*/ long FaceCount,
        /*[in]*/ IDispatch * * ArrayDataIn ) = 0;
      virtual HRESULT __stdcall get_D2PatternSeedOnly (
        /*[out,retval]*/ VARIANT_BOOL * SeedOnly ) = 0;
      virtual HRESULT __stdcall put_D2PatternSeedOnly (
        /*[in]*/ VARIANT_BOOL SeedOnly ) = 0;
      virtual HRESULT __stdcall IsDirection2Specified (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_PatternBodyArray (
        /*[out,retval]*/ VARIANT * ArrayOut ) = 0;
      virtual HRESULT __stdcall put_PatternBodyArray (
        /*[in]*/ VARIANT ArrayOut ) = 0;
      virtual HRESULT __stdcall GetPatternBodyCount (
        /*[out,retval]*/ long * BodyCount ) = 0;
      virtual HRESULT __stdcall IGetPatternBodyArray (
        /*[out,retval]*/ struct IBody2 * * ArrayOut ) = 0;
      virtual HRESULT __stdcall ISetPatternBodyArray (
        /*[in]*/ long BodyCount,
        /*[in]*/ struct IBody2 * * ArrayDataIn ) = 0;
      virtual HRESULT __stdcall get_PropagateVisualProperty (
        /*[out,retval]*/ VARIANT_BOOL * PropVisProp ) = 0;
      virtual HRESULT __stdcall put_PropagateVisualProperty (
        /*[in]*/ VARIANT_BOOL PropVisProp ) = 0;
};

struct __declspec(uuid("e5d1af7c-7f5d-11d4-aeb7-00c04fa0ac51"))
ITablePatternFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc * TopDoc,
        /*[in]*/ struct IComponent * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_CoordinateSystem (
        /*[out,retval]*/ IDispatch * * RefCoord ) = 0;
      virtual HRESULT __stdcall put_CoordinateSystem (
        /*[in]*/ IDispatch * RefCoord ) = 0;
      virtual HRESULT __stdcall get_ReferencePoint (
        /*[out,retval]*/ IDispatch * * RefPoint ) = 0;
      virtual HRESULT __stdcall put_ReferencePoint (
        /*[in]*/ IDispatch * RefPoint ) = 0;
      virtual HRESULT __stdcall GetReferencePointType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall get_UseCentroid (
        /*[out,retval]*/ VARIANT_BOOL * UseCentroid ) = 0;
      virtual HRESULT __stdcall put_UseCentroid (
        /*[in]*/ VARIANT_BOOL UseCentroid ) = 0;
      virtual HRESULT __stdcall SavePointsToFile (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall LoadPointsFromFile (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetBasePoint (
        /*[out,retval]*/ VARIANT * Point ) = 0;
      virtual HRESULT __stdcall IGetBasePoint (
        /*[out,retval]*/ double * Point ) = 0;
      virtual HRESULT __stdcall get_GeometryPattern (
        /*[out,retval]*/ VARIANT_BOOL * Geometry ) = 0;
      virtual HRESULT __stdcall put_GeometryPattern (
        /*[in]*/ VARIANT_BOOL Geometry ) = 0;
      virtual HRESULT __stdcall get_PatternFeatureArray (
        /*[out,retval]*/ VARIANT * ArrayOut ) = 0;
      virtual HRESULT __stdcall put_PatternFeatureArray (
        /*[in]*/ VARIANT ArrayOut ) = 0;
      virtual HRESULT __stdcall GetPatternFeatureCount (
        /*[out,retval]*/ long * FeatCount ) = 0;
      virtual HRESULT __stdcall IGetPatternFeatureArray (
        /*[out,retval]*/ IDispatch * * ArrayOut ) = 0;
      virtual HRESULT __stdcall ISetPatternFeatureArray (
        /*[in]*/ long FeatCount,
        /*[in]*/ IDispatch * * ArrayDataIn ) = 0;
      virtual HRESULT __stdcall get_PointArray (
        /*[out,retval]*/ VARIANT * ArrayOut ) = 0;
      virtual HRESULT __stdcall put_PointArray (
        /*[in]*/ VARIANT ArrayOut ) = 0;
      virtual HRESULT __stdcall GetPointCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetPointArray (
        /*[out,retval]*/ double * ArrayOut ) = 0;
      virtual HRESULT __stdcall ISetPointArray (
        /*[in]*/ long FeatCount,
        /*[in]*/ double * ArrayDataIn ) = 0;
      virtual HRESULT __stdcall IAccessSelections2 (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall get_PatternFaceArray (
        /*[out,retval]*/ VARIANT * ArrayOut ) = 0;
      virtual HRESULT __stdcall put_PatternFaceArray (
        /*[in]*/ VARIANT ArrayOut ) = 0;
      virtual HRESULT __stdcall GetPatternFaceCount (
        /*[out,retval]*/ long * FaceCount ) = 0;
      virtual HRESULT __stdcall IGetPatternFaceArray (
        /*[out,retval]*/ IDispatch * * ArrayOut ) = 0;
      virtual HRESULT __stdcall ISetPatternFaceArray (
        /*[in]*/ long FaceCount,
        /*[in]*/ IDispatch * * ArrayDataIn ) = 0;
      virtual HRESULT __stdcall get_PatternBodyArray (
        /*[out,retval]*/ VARIANT * ArrayOut ) = 0;
      virtual HRESULT __stdcall put_PatternBodyArray (
        /*[in]*/ VARIANT ArrayOut ) = 0;
      virtual HRESULT __stdcall GetPatternBodyCount (
        /*[out,retval]*/ long * BodyCount ) = 0;
      virtual HRESULT __stdcall IGetPatternBodyArray (
        /*[out,retval]*/ struct IBody2 * * ArrayOut ) = 0;
      virtual HRESULT __stdcall ISetPatternBodyArray (
        /*[in]*/ long BodyCount,
        /*[in]*/ struct IBody2 * * ArrayDataIn ) = 0;
      virtual HRESULT __stdcall get_SkippedItemArray (
        /*[out,retval]*/ VARIANT * ArrayOut ) = 0;
      virtual HRESULT __stdcall put_SkippedItemArray (
        /*[in]*/ VARIANT ArrayOut ) = 0;
      virtual HRESULT __stdcall GetSkippedItemCount (
        /*[out,retval]*/ long * FeatCount ) = 0;
      virtual HRESULT __stdcall IGetSkippedItemArray (
        /*[in]*/ long Count,
        /*[out,retval]*/ long * ArrayOut ) = 0;
      virtual HRESULT __stdcall ISetSkippedItemArray (
        /*[in]*/ long Count,
        /*[in]*/ long * ArrayDataIn ) = 0;
      virtual HRESULT __stdcall get_PropagateVisualProperty (
        /*[out,retval]*/ VARIANT_BOOL * PropVisProp ) = 0;
      virtual HRESULT __stdcall put_PropagateVisualProperty (
        /*[in]*/ VARIANT_BOOL PropVisProp ) = 0;
};

struct __declspec(uuid("ae998464-8050-11d4-aeb7-00c04fa0ac51"))
ISketchPatternFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc * TopDoc,
        /*[in]*/ struct IComponent * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_Sketch (
        /*[out,retval]*/ IDispatch * * Sketch ) = 0;
      virtual HRESULT __stdcall put_Sketch (
        /*[in]*/ IDispatch * Sketch ) = 0;
      virtual HRESULT __stdcall get_ReferencePoint (
        /*[out,retval]*/ IDispatch * * RefPoint ) = 0;
      virtual HRESULT __stdcall put_ReferencePoint (
        /*[in]*/ IDispatch * RefPoint ) = 0;
      virtual HRESULT __stdcall GetReferencePointType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall get_UseCentroid (
        /*[out,retval]*/ VARIANT_BOOL * UseCentroid ) = 0;
      virtual HRESULT __stdcall put_UseCentroid (
        /*[in]*/ VARIANT_BOOL UseCentroid ) = 0;
      virtual HRESULT __stdcall GetBasePoint (
        /*[out,retval]*/ VARIANT * Point ) = 0;
      virtual HRESULT __stdcall IGetBasePoint (
        /*[out,retval]*/ double * Point ) = 0;
      virtual HRESULT __stdcall get_GeometryPattern (
        /*[out,retval]*/ VARIANT_BOOL * Geometry ) = 0;
      virtual HRESULT __stdcall put_GeometryPattern (
        /*[in]*/ VARIANT_BOOL Geometry ) = 0;
      virtual HRESULT __stdcall get_PatternFeatureArray (
        /*[out,retval]*/ VARIANT * ArrayOut ) = 0;
      virtual HRESULT __stdcall put_PatternFeatureArray (
        /*[in]*/ VARIANT ArrayOut ) = 0;
      virtual HRESULT __stdcall GetPatternFeatureCount (
        /*[out,retval]*/ long * FeatCount ) = 0;
      virtual HRESULT __stdcall IGetPatternFeatureArray (
        /*[out,retval]*/ IDispatch * * ArrayOut ) = 0;
      virtual HRESULT __stdcall ISetPatternFeatureArray (
        /*[in]*/ long FeatCount,
        /*[in]*/ IDispatch * * ArrayDataIn ) = 0;
      virtual HRESULT __stdcall IAccessSelections2 (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall get_PatternFaceArray (
        /*[out,retval]*/ VARIANT * ArrayOut ) = 0;
      virtual HRESULT __stdcall put_PatternFaceArray (
        /*[in]*/ VARIANT ArrayOut ) = 0;
      virtual HRESULT __stdcall GetPatternFaceCount (
        /*[out,retval]*/ long * FaceCount ) = 0;
      virtual HRESULT __stdcall IGetPatternFaceArray (
        /*[out,retval]*/ IDispatch * * ArrayOut ) = 0;
      virtual HRESULT __stdcall ISetPatternFaceArray (
        /*[in]*/ long FaceCount,
        /*[in]*/ IDispatch * * ArrayDataIn ) = 0;
      virtual HRESULT __stdcall get_PatternBodyArray (
        /*[out,retval]*/ VARIANT * ArrayOut ) = 0;
      virtual HRESULT __stdcall put_PatternBodyArray (
        /*[in]*/ VARIANT ArrayOut ) = 0;
      virtual HRESULT __stdcall GetPatternBodyCount (
        /*[out,retval]*/ long * BodyCount ) = 0;
      virtual HRESULT __stdcall IGetPatternBodyArray (
        /*[out,retval]*/ struct IBody2 * * ArrayOut ) = 0;
      virtual HRESULT __stdcall ISetPatternBodyArray (
        /*[in]*/ long BodyCount,
        /*[in]*/ struct IBody2 * * ArrayDataIn ) = 0;
      virtual HRESULT __stdcall get_PropagateVisualProperty (
        /*[out,retval]*/ VARIANT_BOOL * PropVisProp ) = 0;
      virtual HRESULT __stdcall put_PropagateVisualProperty (
        /*[in]*/ VARIANT_BOOL PropVisProp ) = 0;
};

struct __declspec(uuid("e9172718-836b-11d4-aeb7-00c04fa0ac51"))
IMirrorSolidFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc * TopDoc,
        /*[in]*/ struct IComponent * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_Face (
        /*[out,retval]*/ IDispatch * * RefFace ) = 0;
      virtual HRESULT __stdcall put_Face (
        /*[in]*/ IDispatch * RefFace ) = 0;
      virtual HRESULT __stdcall IAccessSelections2 (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall get_PatternBodyArray (
        /*[out,retval]*/ VARIANT * ArrayOut ) = 0;
      virtual HRESULT __stdcall put_PatternBodyArray (
        /*[in]*/ VARIANT ArrayOut ) = 0;
      virtual HRESULT __stdcall GetPatternBodyCount (
        /*[out,retval]*/ long * BodyCount ) = 0;
      virtual HRESULT __stdcall IGetPatternBodyArray (
        /*[out,retval]*/ struct IBody2 * * ArrayOut ) = 0;
      virtual HRESULT __stdcall ISetPatternBodyArray (
        /*[in]*/ long BodyCount,
        /*[in]*/ struct IBody2 * * ArrayDataIn ) = 0;
      virtual HRESULT __stdcall get_Merge (
        /*[out,retval]*/ VARIANT_BOOL * BMerge ) = 0;
      virtual HRESULT __stdcall put_Merge (
        /*[in]*/ VARIANT_BOOL BMerge ) = 0;
      virtual HRESULT __stdcall get_KnitSurface (
        /*[out,retval]*/ VARIANT_BOOL * BKnit ) = 0;
      virtual HRESULT __stdcall put_KnitSurface (
        /*[in]*/ VARIANT_BOOL BKnit ) = 0;
      virtual HRESULT __stdcall get_PropagateVisualProperty (
        /*[out,retval]*/ VARIANT_BOOL * PropVisProp ) = 0;
      virtual HRESULT __stdcall put_PropagateVisualProperty (
        /*[in]*/ VARIANT_BOOL PropVisProp ) = 0;
};

struct __declspec(uuid("2f6c1e88-f2d6-11d4-aed5-00c04fa0ac51"))
ISheetMetalFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc * TopDoc,
        /*[in]*/ struct IComponent * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_BendRadius (
        /*[out,retval]*/ double * Radius ) = 0;
      virtual HRESULT __stdcall put_BendRadius (
        /*[in]*/ double Radius ) = 0;
      virtual HRESULT __stdcall get_Thickness (
        /*[out,retval]*/ double * Thickness ) = 0;
      virtual HRESULT __stdcall put_Thickness (
        /*[in]*/ double Thickness ) = 0;
      virtual HRESULT __stdcall get_FixedReference (
        /*[out,retval]*/ IDispatch * * FixedReference ) = 0;
      virtual HRESULT __stdcall put_FixedReference (
        /*[in]*/ IDispatch * FixedReference ) = 0;
      virtual HRESULT __stdcall get_BendAllowanceType (
        /*[out,retval]*/ long * BendAllowanceType ) = 0;
      virtual HRESULT __stdcall put_BendAllowanceType (
        /*[in]*/ long BendAllowanceType ) = 0;
      virtual HRESULT __stdcall get_BendTableFile (
        /*[out,retval]*/ BSTR * BendTableFile ) = 0;
      virtual HRESULT __stdcall put_BendTableFile (
        /*[in]*/ BSTR BendTableFile ) = 0;
      virtual HRESULT __stdcall get_KFactor (
        /*[out,retval]*/ double * KFactor ) = 0;
      virtual HRESULT __stdcall put_KFactor (
        /*[in]*/ double KFactor ) = 0;
      virtual HRESULT __stdcall get_BendAllowance (
        /*[out,retval]*/ double * BendAllowance ) = 0;
      virtual HRESULT __stdcall put_BendAllowance (
        /*[in]*/ double BendAllowance ) = 0;
      virtual HRESULT __stdcall get_UseAutoRelief (
        /*[out,retval]*/ VARIANT_BOOL * AutoRelief ) = 0;
      virtual HRESULT __stdcall put_UseAutoRelief (
        /*[in]*/ VARIANT_BOOL AutoRelief ) = 0;
      virtual HRESULT __stdcall get_AutoReliefType (
        /*[out,retval]*/ long * AutoReliefType ) = 0;
      virtual HRESULT __stdcall put_AutoReliefType (
        /*[in]*/ long AutoReliefType ) = 0;
      virtual HRESULT __stdcall get_ReliefRatio (
        /*[out,retval]*/ double * ReliefRatio ) = 0;
      virtual HRESULT __stdcall put_ReliefRatio (
        /*[in]*/ double ReliefRatio ) = 0;
      virtual HRESULT __stdcall IAccessSelections2 (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall GetCustomBendAllowance (
        /*[out,retval]*/ struct ICustomBendAllowance * * PBendData ) = 0;
      virtual HRESULT __stdcall SetCustomBendAllowance (
        /*[in]*/ struct ICustomBendAllowance * PBendData ) = 0;
};

struct __declspec(uuid("f3bdb64e-f7c6-11d4-aed6-00c04fa0ac51"))
IBendsFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc * TopDoc,
        /*[in]*/ struct IComponent * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_BendRadius (
        /*[out,retval]*/ double * Radius ) = 0;
      virtual HRESULT __stdcall put_BendRadius (
        /*[in]*/ double Radius ) = 0;
      virtual HRESULT __stdcall get_BendAllowanceType (
        /*[out,retval]*/ long * BendAllowanceType ) = 0;
      virtual HRESULT __stdcall put_BendAllowanceType (
        /*[in]*/ long BendAllowanceType ) = 0;
      virtual HRESULT __stdcall get_BendTableFile (
        /*[out,retval]*/ BSTR * BendTableFile ) = 0;
      virtual HRESULT __stdcall put_BendTableFile (
        /*[in]*/ BSTR BendTableFile ) = 0;
      virtual HRESULT __stdcall get_KFactor (
        /*[out,retval]*/ double * KFactor ) = 0;
      virtual HRESULT __stdcall put_KFactor (
        /*[in]*/ double KFactor ) = 0;
      virtual HRESULT __stdcall get_BendAllowance (
        /*[out,retval]*/ double * BendAllowance ) = 0;
      virtual HRESULT __stdcall put_BendAllowance (
        /*[in]*/ double BendAllowance ) = 0;
      virtual HRESULT __stdcall get_UseDefaultBendRadius (
        /*[out,retval]*/ VARIANT_BOOL * UseDefaultBendRadius ) = 0;
      virtual HRESULT __stdcall put_UseDefaultBendRadius (
        /*[in]*/ VARIANT_BOOL UseDefaultBendRadius ) = 0;
      virtual HRESULT __stdcall get_UseDefaultBendAllowance (
        /*[out,retval]*/ VARIANT_BOOL * UseDefaultBendAllowance ) = 0;
      virtual HRESULT __stdcall put_UseDefaultBendAllowance (
        /*[in]*/ VARIANT_BOOL UseDefaultBendAllowance ) = 0;
      virtual HRESULT __stdcall IAccessSelections2 (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall GetCustomBendAllowance (
        /*[out,retval]*/ struct ICustomBendAllowance * * PBendData ) = 0;
      virtual HRESULT __stdcall SetCustomBendAllowance (
        /*[in]*/ struct ICustomBendAllowance * PBendData ) = 0;
};

struct __declspec(uuid("c61e9dd6-0813-11d5-aedd-00c04fa0ac51"))
IBaseFlangeFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc * TopDoc,
        /*[in]*/ struct IComponent * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_OffsetDirections (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall put_OffsetDirections (
        /*[in]*/ long Count ) = 0;
      virtual HRESULT __stdcall get_D1OffsetType (
        /*[out,retval]*/ long * OffsetType ) = 0;
      virtual HRESULT __stdcall put_D1OffsetType (
        /*[in]*/ long OffsetType ) = 0;
      virtual HRESULT __stdcall get_D2OffsetType (
        /*[out,retval]*/ long * OffsetType ) = 0;
      virtual HRESULT __stdcall put_D2OffsetType (
        /*[in]*/ long OffsetType ) = 0;
      virtual HRESULT __stdcall GetD1OffsetReferenceType (
        /*[out,retval]*/ long * ReferenceType ) = 0;
      virtual HRESULT __stdcall GetD2OffsetReferenceType (
        /*[out,retval]*/ long * ReferenceType ) = 0;
      virtual HRESULT __stdcall get_D1OffsetReference (
        /*[out,retval]*/ IDispatch * * OffsetReference ) = 0;
      virtual HRESULT __stdcall put_D1OffsetReference (
        /*[in]*/ IDispatch * OffsetReference ) = 0;
      virtual HRESULT __stdcall get_D2OffsetReference (
        /*[out,retval]*/ IDispatch * * OffsetReference ) = 0;
      virtual HRESULT __stdcall put_D2OffsetReference (
        /*[in]*/ IDispatch * OffsetReference ) = 0;
      virtual HRESULT __stdcall get_D1OffsetDistance (
        /*[out,retval]*/ double * OffsetDistance ) = 0;
      virtual HRESULT __stdcall put_D1OffsetDistance (
        /*[in]*/ double OffsetDistance ) = 0;
      virtual HRESULT __stdcall get_D2OffsetDistance (
        /*[out,retval]*/ double * OffsetDistance ) = 0;
      virtual HRESULT __stdcall put_D2OffsetDistance (
        /*[in]*/ double OffsetDistance ) = 0;
      virtual HRESULT __stdcall get_Thickness (
        /*[out,retval]*/ double * Thickness ) = 0;
      virtual HRESULT __stdcall put_Thickness (
        /*[in]*/ double Thickness ) = 0;
      virtual HRESULT __stdcall get_ReverseThickness (
        /*[out,retval]*/ VARIANT_BOOL * ReverseThickness ) = 0;
      virtual HRESULT __stdcall put_ReverseThickness (
        /*[in]*/ VARIANT_BOOL ReverseThickness ) = 0;
      virtual HRESULT __stdcall get_BendRadius (
        /*[out,retval]*/ double * Radius ) = 0;
      virtual HRESULT __stdcall put_BendRadius (
        /*[in]*/ double Radius ) = 0;
      virtual HRESULT __stdcall get_ReverseDirection (
        /*[out,retval]*/ VARIANT_BOOL * ReverseDirection ) = 0;
      virtual HRESULT __stdcall put_ReverseDirection (
        /*[in]*/ VARIANT_BOOL ReverseDirection ) = 0;
      virtual HRESULT __stdcall IAccessSelections2 (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall get_D1ReverseOffset (
        /*[out,retval]*/ VARIANT_BOOL * RevOffset ) = 0;
      virtual HRESULT __stdcall put_D1ReverseOffset (
        /*[in]*/ VARIANT_BOOL RevOffset ) = 0;
      virtual HRESULT __stdcall get_D2ReverseOffset (
        /*[out,retval]*/ VARIANT_BOOL * RevOffset ) = 0;
      virtual HRESULT __stdcall put_D2ReverseOffset (
        /*[in]*/ VARIANT_BOOL RevOffset ) = 0;
      virtual HRESULT __stdcall get_UseGaugeTable (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_UseGaugeTable (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_GaugeTablePath (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall put_GaugeTablePath (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_ThicknessTableName (
        /*[out,retval]*/ BSTR * TableName ) = 0;
      virtual HRESULT __stdcall put_ThicknessTableName (
        /*[in]*/ BSTR TableName ) = 0;
      virtual HRESULT __stdcall get_TableThickness (
        /*[out,retval]*/ double * Thickness ) = 0;
      virtual HRESULT __stdcall put_TableThickness (
        /*[in]*/ double Thickness ) = 0;
      virtual HRESULT __stdcall get_OverrideThickness (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_OverrideThickness (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_TableRadius (
        /*[out,retval]*/ double * Radius ) = 0;
      virtual HRESULT __stdcall put_TableRadius (
        /*[in]*/ double Radius ) = 0;
      virtual HRESULT __stdcall get_OverrideRadius (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_OverrideRadius (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_KFactor (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_KFactor (
        /*[in]*/ double Retval ) = 0;
      virtual HRESULT __stdcall get_OverrideKFactor (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_OverrideKFactor (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall GetTableThicknessesCount (
        /*[out,retval]*/ long * NCount ) = 0;
      virtual HRESULT __stdcall GetTableThicknesses (
        /*[out,retval]*/ VARIANT * TableThicknessesName ) = 0;
      virtual HRESULT __stdcall IGetTableThicknesses (
        /*[in]*/ long NCount,
        /*[out,retval]*/ BSTR * TableThicknessesName ) = 0;
      virtual HRESULT __stdcall GetTableRadiiCount (
        /*[in]*/ BSTR ThicknessTableName,
        /*[out,retval]*/ long * NCount ) = 0;
      virtual HRESULT __stdcall GetTableRadii (
        /*[in]*/ BSTR ThicknessTableName,
        /*[out,retval]*/ VARIANT * TableRadii ) = 0;
      virtual HRESULT __stdcall IGetTableRadii (
        /*[in]*/ BSTR ThicknessTableName,
        /*[in]*/ long NCount,
        /*[out,retval]*/ double * TableRadii ) = 0;
      virtual HRESULT __stdcall get_TableKFactor (
        /*[out,retval]*/ double * Retval ) = 0;
};

struct __declspec(uuid("b58e432a-09c8-11d5-aedd-00c04fa0ac51"))
IEdgeFlangeFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc * TopDoc,
        /*[in]*/ struct IComponent * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_Edge (
        /*[out,retval]*/ IDispatch * * Edge ) = 0;
      virtual HRESULT __stdcall put_Edge (
        /*[in]*/ IDispatch * Edge ) = 0;
      virtual HRESULT __stdcall get_UseDefaultBendRadius (
        /*[out,retval]*/ VARIANT_BOOL * UseDefaultBendRadius ) = 0;
      virtual HRESULT __stdcall put_UseDefaultBendRadius (
        /*[in]*/ VARIANT_BOOL UseDefaultBendRadius ) = 0;
      virtual HRESULT __stdcall get_BendRadius (
        /*[out,retval]*/ double * Radius ) = 0;
      virtual HRESULT __stdcall put_BendRadius (
        /*[in]*/ double Radius ) = 0;
      virtual HRESULT __stdcall get_BendAngle (
        /*[out,retval]*/ double * BendAngle ) = 0;
      virtual HRESULT __stdcall put_BendAngle (
        /*[in]*/ double BendAngle ) = 0;
      virtual HRESULT __stdcall get_OffsetType (
        /*[out,retval]*/ long * OffsetType ) = 0;
      virtual HRESULT __stdcall put_OffsetType (
        /*[in]*/ long OffsetType ) = 0;
      virtual HRESULT __stdcall get_OffsetReference (
        /*[out,retval]*/ IDispatch * * OffsetReference ) = 0;
      virtual HRESULT __stdcall put_OffsetReference (
        /*[in]*/ IDispatch * OffsetReference ) = 0;
      virtual HRESULT __stdcall get_ReverseOffset (
        /*[out,retval]*/ VARIANT_BOOL * Reverse ) = 0;
      virtual HRESULT __stdcall put_ReverseOffset (
        /*[in]*/ VARIANT_BOOL Reverse ) = 0;
      virtual HRESULT __stdcall get_OffsetDistance (
        /*[out,retval]*/ double * OffsetDistance ) = 0;
      virtual HRESULT __stdcall put_OffsetDistance (
        /*[in]*/ double OffsetDistance ) = 0;
      virtual HRESULT __stdcall get_OffsetDimType (
        /*[out,retval]*/ long * OffsetDimType ) = 0;
      virtual HRESULT __stdcall put_OffsetDimType (
        /*[in]*/ long OffsetDimType ) = 0;
      virtual HRESULT __stdcall get_PositionType (
        /*[out,retval]*/ long * PositionType ) = 0;
      virtual HRESULT __stdcall put_PositionType (
        /*[in]*/ long PositionType ) = 0;
      virtual HRESULT __stdcall get_UsePositionTrimSideBends (
        /*[out,retval]*/ VARIANT_BOOL * TrimSideBends ) = 0;
      virtual HRESULT __stdcall put_UsePositionTrimSideBends (
        /*[in]*/ VARIANT_BOOL TrimSideBends ) = 0;
      virtual HRESULT __stdcall get_UsePositionOffset (
        /*[out,retval]*/ VARIANT_BOOL * PositionOffset ) = 0;
      virtual HRESULT __stdcall put_UsePositionOffset (
        /*[in]*/ VARIANT_BOOL PositionOffset ) = 0;
      virtual HRESULT __stdcall get_PositionOffsetType (
        /*[out,retval]*/ long * OffsetType ) = 0;
      virtual HRESULT __stdcall put_PositionOffsetType (
        /*[in]*/ long OffsetType ) = 0;
      virtual HRESULT __stdcall GetPositionReferenceType (
        /*[out,retval]*/ long * ReferenceType ) = 0;
      virtual HRESULT __stdcall get_PositionOffsetReference (
        /*[out,retval]*/ IDispatch * * OffsetReference ) = 0;
      virtual HRESULT __stdcall put_PositionOffsetReference (
        /*[in]*/ IDispatch * OffsetReference ) = 0;
      virtual HRESULT __stdcall get_PositionOffsetDistance (
        /*[out,retval]*/ double * OffsetDistance ) = 0;
      virtual HRESULT __stdcall put_PositionOffsetDistance (
        /*[in]*/ double OffsetDistance ) = 0;
      virtual HRESULT __stdcall get_ReversePositionOffset (
        /*[out,retval]*/ VARIANT_BOOL * Reverse ) = 0;
      virtual HRESULT __stdcall put_ReversePositionOffset (
        /*[in]*/ VARIANT_BOOL Reverse ) = 0;
      virtual HRESULT __stdcall get_AutoReliefType (
        /*[out,retval]*/ long * AutoReliefType ) = 0;
      virtual HRESULT __stdcall put_AutoReliefType (
        /*[in]*/ long AutoReliefType ) = 0;
      virtual HRESULT __stdcall get_UseReliefRatio (
        /*[out,retval]*/ VARIANT_BOOL * UseReliefRatio ) = 0;
      virtual HRESULT __stdcall put_UseReliefRatio (
        /*[in]*/ VARIANT_BOOL UseReliefRatio ) = 0;
      virtual HRESULT __stdcall get_ReliefRatio (
        /*[out,retval]*/ double * ReliefRatio ) = 0;
      virtual HRESULT __stdcall put_ReliefRatio (
        /*[in]*/ double ReliefRatio ) = 0;
      virtual HRESULT __stdcall get_ReliefWidth (
        /*[out,retval]*/ double * ReliefWidth ) = 0;
      virtual HRESULT __stdcall put_ReliefWidth (
        /*[in]*/ double ReliefWidth ) = 0;
      virtual HRESULT __stdcall get_ReliefDepth (
        /*[out,retval]*/ double * ReliefDepth ) = 0;
      virtual HRESULT __stdcall put_ReliefDepth (
        /*[in]*/ double ReliefDepth ) = 0;
      virtual HRESULT __stdcall get_ReliefTearType (
        /*[out,retval]*/ long * ReliefTearType ) = 0;
      virtual HRESULT __stdcall put_ReliefTearType (
        /*[in]*/ long ReliefTearType ) = 0;
      virtual HRESULT __stdcall IAccessSelections2 (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall GetCustomBendAllowance (
        /*[out,retval]*/ struct ICustomBendAllowance * * PBendData ) = 0;
      virtual HRESULT __stdcall SetCustomBendAllowance (
        /*[in]*/ struct ICustomBendAllowance * PBendData ) = 0;
      virtual HRESULT __stdcall get_UseDefaultBendAllowance (
        /*[out,retval]*/ VARIANT_BOOL * UseDefaultBendAllowance ) = 0;
      virtual HRESULT __stdcall put_UseDefaultBendAllowance (
        /*[in]*/ VARIANT_BOOL UseDefaultBendAllowance ) = 0;
      virtual HRESULT __stdcall get_UseDefaultBendRelief (
        /*[out,retval]*/ VARIANT_BOOL * UseDefaultBendRelief ) = 0;
      virtual HRESULT __stdcall put_UseDefaultBendRelief (
        /*[in]*/ VARIANT_BOOL UseDefaultBendRelief ) = 0;
      virtual HRESULT __stdcall get_Edges (
        /*[out,retval]*/ VARIANT * EdgeArray ) = 0;
      virtual HRESULT __stdcall put_Edges (
        /*[in]*/ VARIANT EdgeArray ) = 0;
      virtual HRESULT __stdcall GetEdgeCount (
        /*[out,retval]*/ long * EdgeCount ) = 0;
      virtual HRESULT __stdcall IGetEdges (
        /*[in]*/ long EdgeCount,
        /*[out,retval]*/ IDispatch * * EdgeArray ) = 0;
      virtual HRESULT __stdcall ISetEdges (
        /*[in]*/ long EdgeCount,
        /*[in]*/ IDispatch * * EdgeArray ) = 0;
      virtual HRESULT __stdcall get_GapDistance (
        /*[out,retval]*/ double * GapDistance ) = 0;
      virtual HRESULT __stdcall put_GapDistance (
        /*[in]*/ double GapDistance ) = 0;
};

struct __declspec(uuid("e6194f72-0cec-11d5-aedd-00c04fa0ac51"))
IMiterFlangeFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc * TopDoc,
        /*[in]*/ struct IComponent * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_Edges (
        /*[out,retval]*/ VARIANT * EdgeArray ) = 0;
      virtual HRESULT __stdcall put_Edges (
        /*[in]*/ VARIANT EdgeArray ) = 0;
      virtual HRESULT __stdcall IGetEdgesCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IGetEdges (
        /*[out,retval]*/ IDispatch * * EdgeArray ) = 0;
      virtual HRESULT __stdcall ISetEdges (
        /*[in]*/ long EdgeCount,
        /*[in]*/ IDispatch * * EdgeArray ) = 0;
      virtual HRESULT __stdcall get_UseDefaultBendRadius (
        /*[out,retval]*/ VARIANT_BOOL * UseDefaultBendRadius ) = 0;
      virtual HRESULT __stdcall put_UseDefaultBendRadius (
        /*[in]*/ VARIANT_BOOL UseDefaultBendRadius ) = 0;
      virtual HRESULT __stdcall get_BendRadius (
        /*[out,retval]*/ double * Radius ) = 0;
      virtual HRESULT __stdcall put_BendRadius (
        /*[in]*/ double Radius ) = 0;
      virtual HRESULT __stdcall get_PositionType (
        /*[out,retval]*/ long * PositionType ) = 0;
      virtual HRESULT __stdcall put_PositionType (
        /*[in]*/ long PositionType ) = 0;
      virtual HRESULT __stdcall get_UsePositionTrimSideBends (
        /*[out,retval]*/ VARIANT_BOOL * TrimSideBends ) = 0;
      virtual HRESULT __stdcall put_UsePositionTrimSideBends (
        /*[in]*/ VARIANT_BOOL TrimSideBends ) = 0;
      virtual HRESULT __stdcall get_GapDistance (
        /*[out,retval]*/ double * GapDistance ) = 0;
      virtual HRESULT __stdcall put_GapDistance (
        /*[in]*/ double GapDistance ) = 0;
      virtual HRESULT __stdcall IAccessSelections2 (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall get_StartOffset (
        /*[out,retval]*/ double * Offset ) = 0;
      virtual HRESULT __stdcall put_StartOffset (
        /*[in]*/ double Offset ) = 0;
      virtual HRESULT __stdcall get_EndOffset (
        /*[out,retval]*/ double * Offset ) = 0;
      virtual HRESULT __stdcall put_EndOffset (
        /*[in]*/ double Offset ) = 0;
      virtual HRESULT __stdcall get_ReliefType (
        /*[out,retval]*/ long * ReliefType ) = 0;
      virtual HRESULT __stdcall put_ReliefType (
        /*[in]*/ long ReliefType ) = 0;
      virtual HRESULT __stdcall get_UseReliefRatio (
        /*[out,retval]*/ VARIANT_BOOL * UseReliefRatio ) = 0;
      virtual HRESULT __stdcall put_UseReliefRatio (
        /*[in]*/ VARIANT_BOOL UseReliefRatio ) = 0;
      virtual HRESULT __stdcall get_ReliefRatio (
        /*[out,retval]*/ double * Ratio ) = 0;
      virtual HRESULT __stdcall put_ReliefRatio (
        /*[in]*/ double Ratio ) = 0;
      virtual HRESULT __stdcall get_ReliefWidth (
        /*[out,retval]*/ double * Width ) = 0;
      virtual HRESULT __stdcall put_ReliefWidth (
        /*[in]*/ double Width ) = 0;
      virtual HRESULT __stdcall get_ReliefDepth (
        /*[out,retval]*/ double * Depth ) = 0;
      virtual HRESULT __stdcall put_ReliefDepth (
        /*[in]*/ double Depth ) = 0;
      virtual HRESULT __stdcall GetCustomBendAllowance (
        /*[out,retval]*/ struct ICustomBendAllowance * * PBendData ) = 0;
      virtual HRESULT __stdcall SetCustomBendAllowance (
        /*[in]*/ struct ICustomBendAllowance * PBendData ) = 0;
      virtual HRESULT __stdcall get_UseDefaultBendAllowance (
        /*[out,retval]*/ VARIANT_BOOL * UseDefaultBendAllowance ) = 0;
      virtual HRESULT __stdcall put_UseDefaultBendAllowance (
        /*[in]*/ VARIANT_BOOL UseDefaultBendAllowance ) = 0;
      virtual HRESULT __stdcall get_UseDefaultBendRelief (
        /*[out,retval]*/ VARIANT_BOOL * UseDefaultBendRelief ) = 0;
      virtual HRESULT __stdcall put_UseDefaultBendRelief (
        /*[in]*/ VARIANT_BOOL UseDefaultBendRelief ) = 0;
};

struct __declspec(uuid("a4d90a70-0da5-11d5-aedd-00c04fa0ac51"))
ISketchedBendFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc * TopDoc,
        /*[in]*/ struct IComponent * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall GetFixedFace (
        /*[out]*/ double * X,
        /*[out]*/ double * Y,
        /*[out]*/ double * Z,
        /*[out,retval]*/ IDispatch * * EdgeArray ) = 0;
      virtual HRESULT __stdcall SetFixedFace (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in]*/ IDispatch * EdgeArray ) = 0;
      virtual HRESULT __stdcall get_PositionType (
        /*[out,retval]*/ long * PositionType ) = 0;
      virtual HRESULT __stdcall put_PositionType (
        /*[in]*/ long PositionType ) = 0;
      virtual HRESULT __stdcall get_ReverseDirection (
        /*[out,retval]*/ VARIANT_BOOL * ReverseDirection ) = 0;
      virtual HRESULT __stdcall put_ReverseDirection (
        /*[in]*/ VARIANT_BOOL ReverseDirection ) = 0;
      virtual HRESULT __stdcall get_BendAngle (
        /*[out,retval]*/ double * BendAngle ) = 0;
      virtual HRESULT __stdcall put_BendAngle (
        /*[in]*/ double BendAngle ) = 0;
      virtual HRESULT __stdcall get_UseDefaultBendRadius (
        /*[out,retval]*/ VARIANT_BOOL * UseDefaultBendRadius ) = 0;
      virtual HRESULT __stdcall put_UseDefaultBendRadius (
        /*[in]*/ VARIANT_BOOL UseDefaultBendRadius ) = 0;
      virtual HRESULT __stdcall get_BendRadius (
        /*[out,retval]*/ double * Radius ) = 0;
      virtual HRESULT __stdcall put_BendRadius (
        /*[in]*/ double Radius ) = 0;
      virtual HRESULT __stdcall IAccessSelections2 (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall GetCustomBendAllowance (
        /*[out,retval]*/ struct ICustomBendAllowance * * PBendData ) = 0;
      virtual HRESULT __stdcall SetCustomBendAllowance (
        /*[in]*/ struct ICustomBendAllowance * PBendData ) = 0;
      virtual HRESULT __stdcall get_UseDefaultBendAllowance (
        /*[out,retval]*/ VARIANT_BOOL * UseDefaultBendAllowance ) = 0;
      virtual HRESULT __stdcall put_UseDefaultBendAllowance (
        /*[in]*/ VARIANT_BOOL UseDefaultBendAllowance ) = 0;
};

struct __declspec(uuid("2134cbfc-0dda-11d5-aedd-00c04fa0ac51"))
IClosedCornerFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc * TopDoc,
        /*[in]*/ struct IComponent * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_Faces (
        /*[out,retval]*/ VARIANT * FaceArray ) = 0;
      virtual HRESULT __stdcall put_Faces (
        /*[in]*/ VARIANT FaceArray ) = 0;
      virtual HRESULT __stdcall IGetFacesCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IGetFaces (
        /*[out,retval]*/ IDispatch * * FaceArray ) = 0;
      virtual HRESULT __stdcall ISetFaces (
        /*[in]*/ long FaceCount,
        /*[in]*/ IDispatch * * FaceArray ) = 0;
      virtual HRESULT __stdcall get_CornerType (
        /*[out,retval]*/ long * CornerType ) = 0;
      virtual HRESULT __stdcall put_CornerType (
        /*[in]*/ long CornerType ) = 0;
      virtual HRESULT __stdcall IAccessSelections2 (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall get_GapDistance (
        /*[out,retval]*/ double * GapDistance ) = 0;
      virtual HRESULT __stdcall put_GapDistance (
        /*[in]*/ double GapDistance ) = 0;
      virtual HRESULT __stdcall get_OverlapUnderlapRatio (
        /*[out,retval]*/ double * Ratio ) = 0;
      virtual HRESULT __stdcall put_OverlapUnderlapRatio (
        /*[in]*/ double Ratio ) = 0;
      virtual HRESULT __stdcall get_OpenBendRegion (
        /*[out,retval]*/ VARIANT_BOOL * OpenBendRegion ) = 0;
      virtual HRESULT __stdcall put_OpenBendRegion (
        /*[in]*/ VARIANT_BOOL OpenBendRegion ) = 0;
};

struct __declspec(uuid("32700a62-0e5c-11d5-aedd-00c04fa0ac51"))
IFoldsFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc * TopDoc,
        /*[in]*/ struct IComponent * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_FixedFace (
        /*[out,retval]*/ IDispatch * * OffsetReference ) = 0;
      virtual HRESULT __stdcall put_FixedFace (
        /*[in]*/ IDispatch * OffsetReference ) = 0;
      virtual HRESULT __stdcall get_Bends (
        /*[out,retval]*/ VARIANT * FaceArray ) = 0;
      virtual HRESULT __stdcall put_Bends (
        /*[in]*/ VARIANT FaceArray ) = 0;
      virtual HRESULT __stdcall IGetBendsCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IGetBends (
        /*[out,retval]*/ IDispatch * * FaceArray ) = 0;
      virtual HRESULT __stdcall ISetBends (
        /*[in]*/ long FaceCount,
        /*[in]*/ IDispatch * * FaceArray ) = 0;
      virtual HRESULT __stdcall IAccessSelections2 (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
};

struct __declspec(uuid("00644208-0e6c-11d5-aedd-00c04fa0ac51"))
IFlatPatternFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc * TopDoc,
        /*[in]*/ struct IComponent * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_FixedFace (
        /*[out,retval]*/ IDispatch * * OffsetReference ) = 0;
      virtual HRESULT __stdcall put_FixedFace (
        /*[in]*/ IDispatch * OffsetReference ) = 0;
      virtual HRESULT __stdcall get_MergeFace (
        /*[out,retval]*/ VARIANT_BOOL * MergeFace ) = 0;
      virtual HRESULT __stdcall put_MergeFace (
        /*[in]*/ VARIANT_BOOL MergeFace ) = 0;
      virtual HRESULT __stdcall IAccessSelections2 (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall get_CornerTreatment (
        /*[out,retval]*/ VARIANT_BOOL * BCT ) = 0;
      virtual HRESULT __stdcall put_CornerTreatment (
        /*[in]*/ VARIANT_BOOL BCT ) = 0;
      virtual HRESULT __stdcall get_CornerTrimReliefType (
        /*[out,retval]*/ long * ReliefType ) = 0;
      virtual HRESULT __stdcall put_CornerTrimReliefType (
        /*[in]*/ long ReliefType ) = 0;
      virtual HRESULT __stdcall get_CornerTrimReliefDistance (
        /*[out,retval]*/ double * ReliefDistance ) = 0;
      virtual HRESULT __stdcall put_CornerTrimReliefDistance (
        /*[in]*/ double ReliefDistance ) = 0;
      virtual HRESULT __stdcall get_BreakCornerType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_BreakCornerType (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall get_BreakCornerRadius (
        /*[out,retval]*/ double * Rad ) = 0;
      virtual HRESULT __stdcall put_BreakCornerRadius (
        /*[in]*/ double Rad ) = 0;
      virtual HRESULT __stdcall GetAddCornerTrim (
        /*[out]*/ struct IFeature * * PFeat,
        /*[out,retval]*/ VARIANT_BOOL * BCT ) = 0;
      virtual HRESULT __stdcall SetAddCornerTrim (
        /*[in]*/ VARIANT_BOOL BCT ) = 0;
      virtual HRESULT __stdcall GetBreakCorners (
        /*[out]*/ struct IFeature * * PFeat,
        /*[out,retval]*/ VARIANT_BOOL * BBreakCorner ) = 0;
      virtual HRESULT __stdcall SetBreakCorners (
        /*[in]*/ VARIANT_BOOL BBreakCorner ) = 0;
      virtual HRESULT __stdcall get_CornerTrimRatioToThickness (
        /*[out,retval]*/ double * Ratio ) = 0;
      virtual HRESULT __stdcall put_CornerTrimRatioToThickness (
        /*[in]*/ double Ratio ) = 0;
      virtual HRESULT __stdcall get_UseRatioToThickness (
        /*[out,retval]*/ VARIANT_BOOL * Ratio ) = 0;
      virtual HRESULT __stdcall put_UseRatioToThickness (
        /*[in]*/ VARIANT_BOOL Ratio ) = 0;
      virtual HRESULT __stdcall get_SimplifyBends (
        /*[out,retval]*/ VARIANT_BOOL * BSimplify ) = 0;
      virtual HRESULT __stdcall put_SimplifyBends (
        /*[in]*/ VARIANT_BOOL BSimplify ) = 0;
};

struct __declspec(uuid("9890c04c-1196-11d5-aede-00c04fa0ac51"))
ILocalLinearPatternFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc * TopDoc,
        /*[in]*/ struct IComponent * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_D1Axis (
        /*[out,retval]*/ IDispatch * * RefAxis ) = 0;
      virtual HRESULT __stdcall put_D1Axis (
        /*[in]*/ IDispatch * RefAxis ) = 0;
      virtual HRESULT __stdcall get_D2Axis (
        /*[out,retval]*/ IDispatch * * RefAxis ) = 0;
      virtual HRESULT __stdcall put_D2Axis (
        /*[in]*/ IDispatch * RefAxis ) = 0;
      virtual HRESULT __stdcall GetD1AxisType (
        /*[out,retval]*/ long * LinearAxisType ) = 0;
      virtual HRESULT __stdcall GetD2AxisType (
        /*[out,retval]*/ long * LinearAxisType ) = 0;
      virtual HRESULT __stdcall get_D1ReverseDirection (
        /*[out,retval]*/ VARIANT_BOOL * ReverseDirection ) = 0;
      virtual HRESULT __stdcall put_D1ReverseDirection (
        /*[in]*/ VARIANT_BOOL ReverseDirection ) = 0;
      virtual HRESULT __stdcall get_D2ReverseDirection (
        /*[out,retval]*/ VARIANT_BOOL * ReverseDirection ) = 0;
      virtual HRESULT __stdcall put_D2ReverseDirection (
        /*[in]*/ VARIANT_BOOL ReverseDirection ) = 0;
      virtual HRESULT __stdcall get_D1Spacing (
        /*[out,retval]*/ double * Distance ) = 0;
      virtual HRESULT __stdcall put_D1Spacing (
        /*[in]*/ double Distance ) = 0;
      virtual HRESULT __stdcall get_D2Spacing (
        /*[out,retval]*/ double * Distance ) = 0;
      virtual HRESULT __stdcall put_D2Spacing (
        /*[in]*/ double Distance ) = 0;
      virtual HRESULT __stdcall get_D1TotalInstances (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall put_D1TotalInstances (
        /*[in]*/ long Count ) = 0;
      virtual HRESULT __stdcall get_D2TotalInstances (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall put_D2TotalInstances (
        /*[in]*/ long Count ) = 0;
      virtual HRESULT __stdcall get_SeedComponentArray (
        /*[out,retval]*/ VARIANT * ArrayOut ) = 0;
      virtual HRESULT __stdcall put_SeedComponentArray (
        /*[in]*/ VARIANT ArrayOut ) = 0;
      virtual HRESULT __stdcall GetSeedComponentCount (
        /*[out,retval]*/ long * FeatCount ) = 0;
      virtual HRESULT __stdcall IGetSeedComponentArray (
        /*[out,retval]*/ IDispatch * * ArrayOut ) = 0;
      virtual HRESULT __stdcall ISetSeedComponentArray (
        /*[in]*/ long FeatCount,
        /*[in]*/ IDispatch * * ArrayDataIn ) = 0;
      virtual HRESULT __stdcall get_SkippedItemArray (
        /*[out,retval]*/ VARIANT * ArrayOut ) = 0;
      virtual HRESULT __stdcall put_SkippedItemArray (
        /*[in]*/ VARIANT ArrayOut ) = 0;
      virtual HRESULT __stdcall GetSkippedItemCount (
        /*[out,retval]*/ long * FeatCount ) = 0;
      virtual HRESULT __stdcall IGetSkippedItemArray (
        /*[out,retval]*/ long * ArrayOut ) = 0;
      virtual HRESULT __stdcall ISetSkippedItemArray (
        /*[in]*/ long FeatCount,
        /*[in]*/ long * ArrayDataIn ) = 0;
      virtual HRESULT __stdcall IAccessSelections2 (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
};

struct __declspec(uuid("f2e81434-13fb-11d5-aede-00c04fa0ac51"))
ILocalCircularPatternFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc * TopDoc,
        /*[in]*/ struct IComponent * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_Axis (
        /*[out,retval]*/ IDispatch * * RefAxis ) = 0;
      virtual HRESULT __stdcall put_Axis (
        /*[in]*/ IDispatch * RefAxis ) = 0;
      virtual HRESULT __stdcall GetAxisType (
        /*[out,retval]*/ long * CircularAxisType ) = 0;
      virtual HRESULT __stdcall get_ReverseDirection (
        /*[out,retval]*/ VARIANT_BOOL * ReverseDirection ) = 0;
      virtual HRESULT __stdcall put_ReverseDirection (
        /*[in]*/ VARIANT_BOOL ReverseDirection ) = 0;
      virtual HRESULT __stdcall get_Spacing (
        /*[out,retval]*/ double * Distance ) = 0;
      virtual HRESULT __stdcall put_Spacing (
        /*[in]*/ double Distance ) = 0;
      virtual HRESULT __stdcall get_TotalInstances (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall put_TotalInstances (
        /*[in]*/ long Count ) = 0;
      virtual HRESULT __stdcall get_SeedComponentArray (
        /*[out,retval]*/ VARIANT * ArrayOut ) = 0;
      virtual HRESULT __stdcall put_SeedComponentArray (
        /*[in]*/ VARIANT ArrayOut ) = 0;
      virtual HRESULT __stdcall GetSeedComponentCount (
        /*[out,retval]*/ long * FeatCount ) = 0;
      virtual HRESULT __stdcall IGetSeedComponentArray (
        /*[out,retval]*/ IDispatch * * ArrayOut ) = 0;
      virtual HRESULT __stdcall ISetSeedComponentArray (
        /*[in]*/ long FeatCount,
        /*[in]*/ IDispatch * * ArrayDataIn ) = 0;
      virtual HRESULT __stdcall get_SkippedItemArray (
        /*[out,retval]*/ VARIANT * ArrayOut ) = 0;
      virtual HRESULT __stdcall put_SkippedItemArray (
        /*[in]*/ VARIANT ArrayOut ) = 0;
      virtual HRESULT __stdcall GetSkippedItemCount (
        /*[out,retval]*/ long * FeatCount ) = 0;
      virtual HRESULT __stdcall IGetSkippedItemArray (
        /*[out,retval]*/ long * ArrayOut ) = 0;
      virtual HRESULT __stdcall ISetSkippedItemArray (
        /*[in]*/ long FeatCount,
        /*[in]*/ long * ArrayDataIn ) = 0;
      virtual HRESULT __stdcall IAccessSelections2 (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
};

struct __declspec(uuid("98eadb32-141a-11d5-aede-00c04fa0ac51"))
IDerivedPatternFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc * TopDoc,
        /*[in]*/ struct IComponent * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_PatternFeature (
        /*[out,retval]*/ IDispatch * * Feature ) = 0;
      virtual HRESULT __stdcall put_PatternFeature (
        /*[in]*/ IDispatch * Feature ) = 0;
      virtual HRESULT __stdcall get_SeedComponentArray (
        /*[out,retval]*/ VARIANT * ArrayOut ) = 0;
      virtual HRESULT __stdcall put_SeedComponentArray (
        /*[in]*/ VARIANT ArrayOut ) = 0;
      virtual HRESULT __stdcall GetSeedComponentCount (
        /*[out,retval]*/ long * FeatCount ) = 0;
      virtual HRESULT __stdcall IGetSeedComponentArray (
        /*[out,retval]*/ IDispatch * * ArrayOut ) = 0;
      virtual HRESULT __stdcall ISetSeedComponentArray (
        /*[in]*/ long FeatCount,
        /*[in]*/ IDispatch * * ArrayDataIn ) = 0;
      virtual HRESULT __stdcall get_SkippedItemArray (
        /*[out,retval]*/ VARIANT * ArrayOut ) = 0;
      virtual HRESULT __stdcall put_SkippedItemArray (
        /*[in]*/ VARIANT ArrayOut ) = 0;
      virtual HRESULT __stdcall GetSkippedItemCount (
        /*[out,retval]*/ long * FeatCount ) = 0;
      virtual HRESULT __stdcall IGetSkippedItemArray (
        /*[out,retval]*/ long * ArrayOut ) = 0;
      virtual HRESULT __stdcall ISetSkippedItemArray (
        /*[in]*/ long FeatCount,
        /*[in]*/ long * ArrayDataIn ) = 0;
      virtual HRESULT __stdcall IAccessSelections2 (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
};

struct __declspec(uuid("459f4b5c-7f8c-4a7e-8aa0-fcfb6ed2d286"))
IProjectionCurveFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc * TopDoc,
        /*[in]*/ struct IComponent * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_Reverse (
        /*[out,retval]*/ VARIANT_BOOL * RevDir ) = 0;
      virtual HRESULT __stdcall put_Reverse (
        /*[in]*/ VARIANT_BOOL RevDir ) = 0;
      virtual HRESULT __stdcall get_FaceArray (
        /*[out,retval]*/ VARIANT * ArrayData ) = 0;
      virtual HRESULT __stdcall put_FaceArray (
        /*[in]*/ VARIANT ArrayData ) = 0;
      virtual HRESULT __stdcall GetFaceArrayCount (
        /*[out,retval]*/ long * FaceCount ) = 0;
      virtual HRESULT __stdcall IGetFaceArray (
        /*[in]*/ long FaceCount,
        /*[out,retval]*/ IDispatch * * ArrayOut ) = 0;
      virtual HRESULT __stdcall ISetFaceArray (
        /*[in]*/ long FaceCount,
        /*[in]*/ IDispatch * * ArrayDataIn ) = 0;
      virtual HRESULT __stdcall get_Sketch (
        /*[out,retval]*/ IDispatch * * Sketch ) = 0;
      virtual HRESULT __stdcall put_Sketch (
        /*[in]*/ IDispatch * Sketch ) = 0;
      virtual HRESULT __stdcall IAccessSelections2 (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
};

struct __declspec(uuid("e7631115-f299-4852-9d37-fc9508a00bc1"))
IScaleFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetScale (
        /*[out]*/ double * X,
        /*[out]*/ double * Y,
        /*[out]*/ double * Z,
        /*[out]*/ VARIANT_BOOL * Uniform ) = 0;
      virtual HRESULT __stdcall SetScale (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in]*/ VARIANT_BOOL Uniform ) = 0;
      virtual HRESULT __stdcall get_ScaleX (
        /*[out,retval]*/ double * ScaleX ) = 0;
      virtual HRESULT __stdcall put_ScaleX (
        /*[in]*/ double ScaleX ) = 0;
      virtual HRESULT __stdcall get_ScaleY (
        /*[out,retval]*/ double * ScaleY ) = 0;
      virtual HRESULT __stdcall put_ScaleY (
        /*[in]*/ double ScaleY ) = 0;
      virtual HRESULT __stdcall get_ScaleZ (
        /*[out,retval]*/ double * ScaleZ ) = 0;
      virtual HRESULT __stdcall put_ScaleZ (
        /*[in]*/ double ScaleZ ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall get_IsUniform (
        /*[out,retval]*/ VARIANT_BOOL * IsUnif ) = 0;
      virtual HRESULT __stdcall put_IsUniform (
        /*[in]*/ VARIANT_BOOL IsUnif ) = 0;
      virtual HRESULT __stdcall get_CoordinateSystem (
        /*[out,retval]*/ IDispatch * * RefCoord ) = 0;
      virtual HRESULT __stdcall put_CoordinateSystem (
        /*[in]*/ IDispatch * RefCoord ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall GetBodiesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Bodies (
        /*[out,retval]*/ VARIANT * BodyVar ) = 0;
      virtual HRESULT __stdcall put_Bodies (
        /*[in]*/ VARIANT BodyVar ) = 0;
      virtual HRESULT __stdcall IGetBodies (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IBody2 * * BodyArr ) = 0;
      virtual HRESULT __stdcall ISetBodies (
        /*[in]*/ long Count,
        /*[in]*/ struct IBody2 * * BodyArr ) = 0;
      virtual HRESULT __stdcall get_ScaleUniform (
        /*[out,retval]*/ double * Scale ) = 0;
      virtual HRESULT __stdcall put_ScaleUniform (
        /*[in]*/ double Scale ) = 0;
};

struct __declspec(uuid("58252a5a-82af-49ef-a2fe-e8c995132f84"))
IShellFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_Thickness (
        /*[out,retval]*/ double * Thickness ) = 0;
      virtual HRESULT __stdcall put_Thickness (
        /*[in]*/ double Thickness ) = 0;
      virtual HRESULT __stdcall get_Direction (
        /*[out,retval]*/ long * Direction ) = 0;
      virtual HRESULT __stdcall put_Direction (
        /*[in]*/ long Direction ) = 0;
      virtual HRESULT __stdcall get_FacesRemovedCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetFacesRemoved (
        /*[in]*/ int Count,
        /*[out,retval]*/ IDispatch * * FaceArray ) = 0;
      virtual HRESULT __stdcall ISetFacesRemoved (
        /*[in]*/ long Count,
        /*[in]*/ IDispatch * * FaceArray ) = 0;
      virtual HRESULT __stdcall get_FacesRemoved (
        /*[out,retval]*/ VARIANT * FaceArray ) = 0;
      virtual HRESULT __stdcall put_FacesRemoved (
        /*[in]*/ VARIANT FaceArray ) = 0;
      virtual HRESULT __stdcall GetMultipleThicknessFacesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetMultipleThicknessFaces (
        /*[in]*/ int Count,
        /*[out,retval]*/ IDispatch * * FaceArray ) = 0;
      virtual HRESULT __stdcall ISetMultipleThicknessFaces (
        /*[in]*/ long Count,
        /*[in]*/ IDispatch * * FaceArray ) = 0;
      virtual HRESULT __stdcall get_MultipleThicknessFaces (
        /*[out,retval]*/ VARIANT * FaceArray ) = 0;
      virtual HRESULT __stdcall put_MultipleThicknessFaces (
        /*[in]*/ VARIANT FaceArray ) = 0;
      virtual HRESULT __stdcall GetMultipleThicknessAtIndex (
        /*[in]*/ int Index,
        /*[out,retval]*/ double * Thickness ) = 0;
      virtual HRESULT __stdcall SetMultipleThicknessAtIndex (
        /*[in]*/ int Index,
        /*[in]*/ double Thickness ) = 0;
};

struct __declspec(uuid("07799f9d-7e4f-40de-87ae-aebaaba6a3bc"))
ISweepFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_Profile (
        /*[out,retval]*/ IDispatch * * PDisp ) = 0;
      virtual HRESULT __stdcall put_Profile (
        /*[in]*/ IDispatch * PDisp ) = 0;
      virtual HRESULT __stdcall get_Path (
        /*[out,retval]*/ IDispatch * * PDisp ) = 0;
      virtual HRESULT __stdcall put_Path (
        /*[in]*/ IDispatch * PDisp ) = 0;
      virtual HRESULT __stdcall get_TwistControlType (
        /*[out,retval]*/ short * TwistType ) = 0;
      virtual HRESULT __stdcall put_TwistControlType (
        /*[in]*/ short TwistType ) = 0;
      virtual HRESULT __stdcall get_MaintainTangency (
        /*[out,retval]*/ VARIANT_BOOL * Tangency ) = 0;
      virtual HRESULT __stdcall put_MaintainTangency (
        /*[in]*/ VARIANT_BOOL Tangency ) = 0;
      virtual HRESULT __stdcall get_AdvancedSmoothing (
        /*[out,retval]*/ VARIANT_BOOL * Smoothing ) = 0;
      virtual HRESULT __stdcall put_AdvancedSmoothing (
        /*[in]*/ VARIANT_BOOL Smoothing ) = 0;
      virtual HRESULT __stdcall get_AlignWithEndFaces (
        /*[out,retval]*/ VARIANT_BOOL * AlignEndFaces ) = 0;
      virtual HRESULT __stdcall put_AlignWithEndFaces (
        /*[in]*/ VARIANT_BOOL AlignEndFaces ) = 0;
      virtual HRESULT __stdcall IGetGuideCurves (
        /*[in]*/ short Count,
        /*[out,retval]*/ IDispatch * * PDisp ) = 0;
      virtual HRESULT __stdcall ISetGuideCurves (
        /*[in]*/ short Count,
        /*[in]*/ IDispatch * * PDisp ) = 0;
      virtual HRESULT __stdcall get_GuideCurves (
        /*[out,retval]*/ VARIANT * ArrayIn ) = 0;
      virtual HRESULT __stdcall put_GuideCurves (
        /*[in]*/ VARIANT ArrayIn ) = 0;
      virtual HRESULT __stdcall get_StartTangencyType (
        /*[out,retval]*/ short * TangencyType ) = 0;
      virtual HRESULT __stdcall put_StartTangencyType (
        /*[in]*/ short TangencyType ) = 0;
      virtual HRESULT __stdcall get_EndTangencyType (
        /*[out,retval]*/ short * TangencyType ) = 0;
      virtual HRESULT __stdcall put_EndTangencyType (
        /*[in]*/ short TangencyType ) = 0;
      virtual HRESULT __stdcall IsThinFeature (
        /*[out,retval]*/ VARIANT_BOOL * Thin ) = 0;
      virtual HRESULT __stdcall get_ThinWallType (
        /*[out,retval]*/ short * ThinType ) = 0;
      virtual HRESULT __stdcall put_ThinWallType (
        /*[in]*/ short ThinType ) = 0;
      virtual HRESULT __stdcall GetWallThickness (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[out,retval]*/ double * WallThickness ) = 0;
      virtual HRESULT __stdcall SetWallThickness (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[in]*/ double WallThickness ) = 0;
      virtual HRESULT __stdcall GetGuideCurvesCount (
        /*[out,retval]*/ short * Count ) = 0;
      virtual HRESULT __stdcall IsBossFeature (
        /*[out,retval]*/ VARIANT_BOOL * IsBossFeature ) = 0;
      virtual HRESULT __stdcall get_StartDirectionVector (
        /*[out,retval]*/ IDispatch * * PDisp ) = 0;
      virtual HRESULT __stdcall put_StartDirectionVector (
        /*[in]*/ IDispatch * PDisp ) = 0;
      virtual HRESULT __stdcall get_EndDirectionVector (
        /*[out,retval]*/ IDispatch * * PDisp ) = 0;
      virtual HRESULT __stdcall put_EndDirectionVector (
        /*[in]*/ IDispatch * PDisp ) = 0;
      virtual HRESULT __stdcall get_TangentPropagation (
        /*[out,retval]*/ VARIANT_BOOL * TangentPropagation ) = 0;
      virtual HRESULT __stdcall put_TangentPropagation (
        /*[in]*/ VARIANT_BOOL TangentPropagation ) = 0;
      virtual HRESULT __stdcall GetPathType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall GetGuideCurvesType (
        /*[out,retval]*/ VARIANT * TypeArr ) = 0;
      virtual HRESULT __stdcall IGetGuideCurvesType (
        /*[in]*/ long Count,
        /*[out,retval]*/ long * TypeArr ) = 0;
      virtual HRESULT __stdcall get_Merge (
        /*[out,retval]*/ VARIANT_BOOL * Merge ) = 0;
      virtual HRESULT __stdcall put_Merge (
        /*[in]*/ VARIANT_BOOL Merge ) = 0;
      virtual HRESULT __stdcall get_FeatureScope (
        /*[out,retval]*/ VARIANT_BOOL * FeatScope ) = 0;
      virtual HRESULT __stdcall put_FeatureScope (
        /*[in]*/ VARIANT_BOOL FeatScope ) = 0;
      virtual HRESULT __stdcall get_AutoSelect (
        /*[out,retval]*/ VARIANT_BOOL * AutoSel ) = 0;
      virtual HRESULT __stdcall put_AutoSelect (
        /*[in]*/ VARIANT_BOOL AutoSel ) = 0;
      virtual HRESULT __stdcall get_FeatureScopeBodies (
        /*[out,retval]*/ VARIANT * BodyVar ) = 0;
      virtual HRESULT __stdcall put_FeatureScopeBodies (
        /*[in]*/ VARIANT BodyVar ) = 0;
      virtual HRESULT __stdcall GetFeatureScopeBodiesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetFeatureScopeBodies (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IBody2 * * BodyArr ) = 0;
      virtual HRESULT __stdcall ISetFeatureScopeBodies (
        /*[in]*/ long Count,
        /*[in]*/ struct IBody2 * * BodyArr ) = 0;
      virtual HRESULT __stdcall get_MergeSmoothFaces (
        /*[out,retval]*/ VARIANT_BOOL * BMerge ) = 0;
      virtual HRESULT __stdcall put_MergeSmoothFaces (
        /*[in]*/ VARIANT_BOOL BMerge ) = 0;
      virtual HRESULT __stdcall GetTwistAngle (
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall SetTwistAngle (
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall get_PathAlignmentType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_PathAlignmentType (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall GetPathAlignmentDirectionVector (
        /*[out]*/ long * Type,
        /*[out,retval]*/ IDispatch * * Dir ) = 0;
      virtual HRESULT __stdcall SetPathAlignmentDirectionVector (
        /*[in]*/ IDispatch * Dir ) = 0;
};

struct __declspec(uuid("ee8d87fe-5202-45e9-8e5c-91084c134168"))
ILoftFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall GetProfileCount (
        /*[out,retval]*/ short * Count ) = 0;
      virtual HRESULT __stdcall IGetProfiles (
        /*[in]*/ short Count,
        /*[out,retval]*/ IDispatch * * PDisp ) = 0;
      virtual HRESULT __stdcall ISetProfiles (
        /*[in]*/ short Count,
        /*[in]*/ IDispatch * * PDisp ) = 0;
      virtual HRESULT __stdcall get_Profiles (
        /*[out,retval]*/ VARIANT * PDisp ) = 0;
      virtual HRESULT __stdcall put_Profiles (
        /*[in]*/ VARIANT PDisp ) = 0;
      virtual HRESULT __stdcall GetGuideTangencyType (
        /*[in]*/ short GuideIndex,
        /*[out,retval]*/ short * TangType ) = 0;
      virtual HRESULT __stdcall SetGuideTangencyType (
        /*[in]*/ short GuideIndex,
        /*[in]*/ short TangType ) = 0;
      virtual HRESULT __stdcall get_MaintainTangency (
        /*[out,retval]*/ VARIANT_BOOL * Tangency ) = 0;
      virtual HRESULT __stdcall put_MaintainTangency (
        /*[in]*/ VARIANT_BOOL Tangency ) = 0;
      virtual HRESULT __stdcall get_AdvancedSmoothing (
        /*[out,retval]*/ VARIANT_BOOL * Smoothing ) = 0;
      virtual HRESULT __stdcall put_AdvancedSmoothing (
        /*[in]*/ VARIANT_BOOL Smoothing ) = 0;
      virtual HRESULT __stdcall get_Close (
        /*[out,retval]*/ VARIANT_BOOL * IsClosed ) = 0;
      virtual HRESULT __stdcall put_Close (
        /*[in]*/ VARIANT_BOOL IsClosed ) = 0;
      virtual HRESULT __stdcall GetGuideCurvesCount (
        /*[out,retval]*/ short * Count ) = 0;
      virtual HRESULT __stdcall IGetGuideCurves (
        /*[in]*/ short Count,
        /*[out,retval]*/ IDispatch * * PDisp ) = 0;
      virtual HRESULT __stdcall ISetGuideCurves (
        /*[in]*/ short Count,
        /*[in]*/ IDispatch * * PDisp ) = 0;
      virtual HRESULT __stdcall get_GuideCurves (
        /*[out,retval]*/ VARIANT * ArrayIn ) = 0;
      virtual HRESULT __stdcall put_GuideCurves (
        /*[in]*/ VARIANT ArrayIn ) = 0;
      virtual HRESULT __stdcall get_StartTangencyType (
        /*[out,retval]*/ short * TangencyType ) = 0;
      virtual HRESULT __stdcall put_StartTangencyType (
        /*[in]*/ short TangencyType ) = 0;
      virtual HRESULT __stdcall get_EndTangencyType (
        /*[out,retval]*/ short * TangencyType ) = 0;
      virtual HRESULT __stdcall put_EndTangencyType (
        /*[in]*/ short TangencyType ) = 0;
      virtual HRESULT __stdcall IsThinFeature (
        /*[out,retval]*/ VARIANT_BOOL * Thin ) = 0;
      virtual HRESULT __stdcall get_ThinWallType (
        /*[out,retval]*/ short * ThinType ) = 0;
      virtual HRESULT __stdcall put_ThinWallType (
        /*[in]*/ short ThinType ) = 0;
      virtual HRESULT __stdcall GetWallThickness (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[out,retval]*/ double * WallThickness ) = 0;
      virtual HRESULT __stdcall SetWallThickness (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[in]*/ double WallThickness ) = 0;
      virtual HRESULT __stdcall IsBossFeature (
        /*[out,retval]*/ VARIANT_BOOL * IsBossFeature ) = 0;
      virtual HRESULT __stdcall get_StartDirectionVector (
        /*[out,retval]*/ IDispatch * * PDisp ) = 0;
      virtual HRESULT __stdcall put_StartDirectionVector (
        /*[in]*/ IDispatch * PDisp ) = 0;
      virtual HRESULT __stdcall get_StartTangentLength (
        /*[out,retval]*/ double * Length ) = 0;
      virtual HRESULT __stdcall put_StartTangentLength (
        /*[in]*/ double Length ) = 0;
      virtual HRESULT __stdcall get_ReverseStartTangentDirection (
        /*[out,retval]*/ VARIANT_BOOL * Direction ) = 0;
      virtual HRESULT __stdcall put_ReverseStartTangentDirection (
        /*[in]*/ VARIANT_BOOL Direction ) = 0;
      virtual HRESULT __stdcall get_EndDirectionVector (
        /*[out,retval]*/ IDispatch * * PDisp ) = 0;
      virtual HRESULT __stdcall put_EndDirectionVector (
        /*[in]*/ IDispatch * PDisp ) = 0;
      virtual HRESULT __stdcall get_EndTangentLength (
        /*[out,retval]*/ double * Length ) = 0;
      virtual HRESULT __stdcall put_EndTangentLength (
        /*[in]*/ double Length ) = 0;
      virtual HRESULT __stdcall get_ReverseEndTangentDirection (
        /*[out,retval]*/ VARIANT_BOOL * Direction ) = 0;
      virtual HRESULT __stdcall put_ReverseEndTangentDirection (
        /*[in]*/ VARIANT_BOOL Direction ) = 0;
      virtual HRESULT __stdcall get_CenterLine (
        /*[out,retval]*/ IDispatch * * PDisp ) = 0;
      virtual HRESULT __stdcall put_CenterLine (
        /*[in]*/ IDispatch * PDisp ) = 0;
      virtual HRESULT __stdcall GetGuideCurvesType (
        /*[out,retval]*/ VARIANT * TypeArr ) = 0;
      virtual HRESULT __stdcall IGetGuideCurvesType (
        /*[in]*/ long Count,
        /*[out,retval]*/ long * TypeArr ) = 0;
      virtual HRESULT __stdcall get_Merge (
        /*[out,retval]*/ VARIANT_BOOL * IsMerge ) = 0;
      virtual HRESULT __stdcall put_Merge (
        /*[in]*/ VARIANT_BOOL IsMerge ) = 0;
      virtual HRESULT __stdcall get_FeatureScope (
        /*[out,retval]*/ VARIANT_BOOL * FeatScope ) = 0;
      virtual HRESULT __stdcall put_FeatureScope (
        /*[in]*/ VARIANT_BOOL FeatScope ) = 0;
      virtual HRESULT __stdcall get_AutoSelect (
        /*[out,retval]*/ VARIANT_BOOL * AutoSel ) = 0;
      virtual HRESULT __stdcall put_AutoSelect (
        /*[in]*/ VARIANT_BOOL AutoSel ) = 0;
      virtual HRESULT __stdcall get_FeatureScopeBodies (
        /*[out,retval]*/ VARIANT * BodyVar ) = 0;
      virtual HRESULT __stdcall put_FeatureScopeBodies (
        /*[in]*/ VARIANT BodyVar ) = 0;
      virtual HRESULT __stdcall GetFeatureScopeBodiesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetFeatureScopeBodies (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IBody2 * * BodyArr ) = 0;
      virtual HRESULT __stdcall ISetFeatureScopeBodies (
        /*[in]*/ long Count,
        /*[in]*/ struct IBody2 * * BodyArr ) = 0;
      virtual HRESULT __stdcall get_NumberOfSections (
        /*[out,retval]*/ double * Num ) = 0;
      virtual HRESULT __stdcall put_NumberOfSections (
        /*[in]*/ double Num ) = 0;
      virtual HRESULT __stdcall get_StartConstraintApplyToAll (
        /*[out,retval]*/ VARIANT_BOOL * BApplyAll ) = 0;
      virtual HRESULT __stdcall put_StartConstraintApplyToAll (
        /*[in]*/ VARIANT_BOOL BApplyAll ) = 0;
      virtual HRESULT __stdcall get_EndConstraintApplyToAll (
        /*[out,retval]*/ VARIANT_BOOL * BApplyAll ) = 0;
      virtual HRESULT __stdcall put_EndConstraintApplyToAll (
        /*[in]*/ VARIANT_BOOL BApplyAll ) = 0;
      virtual HRESULT __stdcall get_GuideCurveInfluence (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_GuideCurveInfluence (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall get_StartConstraintDraftAngle (
        /*[out,retval]*/ double * DraftAngle ) = 0;
      virtual HRESULT __stdcall put_StartConstraintDraftAngle (
        /*[in]*/ double DraftAngle ) = 0;
      virtual HRESULT __stdcall get_StartConstraintDraftAngleDirection (
        /*[out,retval]*/ VARIANT_BOOL * BReverse ) = 0;
      virtual HRESULT __stdcall put_StartConstraintDraftAngleDirection (
        /*[in]*/ VARIANT_BOOL BReverse ) = 0;
      virtual HRESULT __stdcall get_EndConstraintDraftAngle (
        /*[out,retval]*/ double * DraftAngle ) = 0;
      virtual HRESULT __stdcall put_EndConstraintDraftAngle (
        /*[in]*/ double DraftAngle ) = 0;
      virtual HRESULT __stdcall get_EndConstraintDraftAngleDirection (
        /*[out,retval]*/ VARIANT_BOOL * BReverse ) = 0;
      virtual HRESULT __stdcall put_EndConstraintDraftAngleDirection (
        /*[in]*/ VARIANT_BOOL BReverse ) = 0;
};

struct __declspec(uuid("85f4dd78-9430-4937-8504-55d24f2cee41"))
IThickenFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_Surface (
        /*[out,retval]*/ IDispatch * * PDispSurf ) = 0;
      virtual HRESULT __stdcall put_Surface (
        /*[in]*/ IDispatch * PDispSurf ) = 0;
      virtual HRESULT __stdcall get_Thickness (
        /*[out,retval]*/ double * Thickness ) = 0;
      virtual HRESULT __stdcall put_Thickness (
        /*[in]*/ double Thickness ) = 0;
      virtual HRESULT __stdcall get_ThicknessSide (
        /*[out,retval]*/ short * Side ) = 0;
      virtual HRESULT __stdcall put_ThicknessSide (
        /*[in]*/ short Side ) = 0;
      virtual HRESULT __stdcall get_FillVolume (
        /*[out,retval]*/ VARIANT_BOOL * IsFill ) = 0;
      virtual HRESULT __stdcall put_FillVolume (
        /*[in]*/ VARIANT_BOOL IsFill ) = 0;
      virtual HRESULT __stdcall get_Merge (
        /*[out,retval]*/ VARIANT_BOOL * IsMerge ) = 0;
      virtual HRESULT __stdcall put_Merge (
        /*[in]*/ VARIANT_BOOL IsMerge ) = 0;
      virtual HRESULT __stdcall get_FeatureScope (
        /*[out,retval]*/ VARIANT_BOOL * FeatScope ) = 0;
      virtual HRESULT __stdcall put_FeatureScope (
        /*[in]*/ VARIANT_BOOL FeatScope ) = 0;
      virtual HRESULT __stdcall get_AutoSelect (
        /*[out,retval]*/ VARIANT_BOOL * AutoSel ) = 0;
      virtual HRESULT __stdcall put_AutoSelect (
        /*[in]*/ VARIANT_BOOL AutoSel ) = 0;
      virtual HRESULT __stdcall get_FeatureScopeBodies (
        /*[out,retval]*/ VARIANT * BodyVar ) = 0;
      virtual HRESULT __stdcall put_FeatureScopeBodies (
        /*[in]*/ VARIANT BodyVar ) = 0;
      virtual HRESULT __stdcall GetFeatureScopeBodiesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetFeatureScopeBodies (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IBody2 * * BodyArr ) = 0;
      virtual HRESULT __stdcall ISetFeatureScopeBodies (
        /*[in]*/ long Count,
        /*[in]*/ struct IBody2 * * BodyArr ) = 0;
      virtual HRESULT __stdcall IsBossFeature (
        /*[out,retval]*/ VARIANT_BOOL * IsBoss ) = 0;
};

struct __declspec(uuid("dfb6c63b-287c-4141-a610-08d94cece976"))
ISurfaceCutFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_SurfaceForCut (
        /*[out,retval]*/ IDispatch * * SurfDisp ) = 0;
      virtual HRESULT __stdcall put_SurfaceForCut (
        /*[in]*/ IDispatch * SurfDisp ) = 0;
      virtual HRESULT __stdcall get_Flip (
        /*[out,retval]*/ VARIANT_BOOL * Flip ) = 0;
      virtual HRESULT __stdcall put_Flip (
        /*[in]*/ VARIANT_BOOL Flip ) = 0;
      virtual HRESULT __stdcall GetBodyIndexKept (
        /*[out,retval]*/ short * Index ) = 0;
};

struct __declspec(uuid("d7792e79-5983-45c7-ae7d-966fcb6604d8"))
IReplaceFaceFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall GetReplacementSurfacesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetReplacementSurfaces (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IFeature * * SurfDisp ) = 0;
      virtual HRESULT __stdcall ISetReplacementSurfaces (
        /*[in]*/ long Count,
        /*[in]*/ struct IFeature * * SurfDisp ) = 0;
      virtual HRESULT __stdcall get_ReplacementSurfaces (
        /*[out,retval]*/ VARIANT * SurfDisp ) = 0;
      virtual HRESULT __stdcall put_ReplacementSurfaces (
        /*[in]*/ VARIANT SurfDisp ) = 0;
      virtual HRESULT __stdcall GetFacesForReplacementCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetFacesForReplacement (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IFace2 * * SurfDisp ) = 0;
      virtual HRESULT __stdcall ISetFacesForReplacement (
        /*[in]*/ long Count,
        /*[in]*/ struct IFace2 * * SurfDisp ) = 0;
      virtual HRESULT __stdcall get_FacesForReplacement (
        /*[out,retval]*/ VARIANT * SurfDisp ) = 0;
      virtual HRESULT __stdcall put_FacesForReplacement (
        /*[in]*/ VARIANT SurfDisp ) = 0;
};

struct __declspec(uuid("739ac7ce-9017-11d5-af07-0002b34143e5"))
IMacroFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_MacroFileName (
        /*[out,retval]*/ BSTR * FileName ) = 0;
      virtual HRESULT __stdcall put_MacroFileName (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall get_ModuleName (
        /*[out,retval]*/ BSTR * ModuleName ) = 0;
      virtual HRESULT __stdcall put_ModuleName (
        /*[in]*/ BSTR ModuleName ) = 0;
      virtual HRESULT __stdcall get_ProcedureName (
        /*[out,retval]*/ BSTR * ProcedureName ) = 0;
      virtual HRESULT __stdcall put_ProcedureName (
        /*[in]*/ BSTR ProcedureName ) = 0;
      virtual HRESULT __stdcall GetModuleNames (
        /*[out,retval]*/ VARIANT * ModuleNames ) = 0;
      virtual HRESULT __stdcall GetModuleCount (
        /*[out,retval]*/ long * ModuleCount ) = 0;
      virtual HRESULT __stdcall IGetModuleNames (
        /*[in]*/ long ModuleCount,
        /*[out]*/ BSTR * ModuleNames ) = 0;
      virtual HRESULT __stdcall GetProcedureNames (
        /*[in]*/ BSTR ModuleName,
        /*[out,retval]*/ VARIANT * ProcedureNames ) = 0;
      virtual HRESULT __stdcall GetProcedureCount (
        /*[in]*/ BSTR ModuleName,
        /*[out,retval]*/ long * ProcedureCount ) = 0;
      virtual HRESULT __stdcall IGetProcedureNames (
        /*[in]*/ BSTR ModuleName,
        /*[in]*/ long ProcedureCount,
        /*[out]*/ BSTR * ProcedureNames ) = 0;
      virtual HRESULT __stdcall get_PropertyManagerHandleMacroFileName (
        /*[out,retval]*/ BSTR * FileName ) = 0;
      virtual HRESULT __stdcall put_PropertyManagerHandleMacroFileName (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall get_PropertyManagerHandleModuleName (
        /*[out,retval]*/ BSTR * ModuleName ) = 0;
      virtual HRESULT __stdcall put_PropertyManagerHandleModuleName (
        /*[in]*/ BSTR ModuleName ) = 0;
      virtual HRESULT __stdcall get_PropertyManagerHandleProcedureName (
        /*[out,retval]*/ BSTR * ProcedureName ) = 0;
      virtual HRESULT __stdcall put_PropertyManagerHandleProcedureName (
        /*[in]*/ BSTR ProcedureName ) = 0;
      virtual HRESULT __stdcall GetPropertyManagerHandleModuleNames (
        /*[out,retval]*/ VARIANT * ModuleNames ) = 0;
      virtual HRESULT __stdcall GetPropertyManagerHandleModuleCount (
        /*[out,retval]*/ long * ModuleCount ) = 0;
      virtual HRESULT __stdcall IGetPropertyManagerHandleModuleNames (
        /*[in]*/ long ModuleCount,
        /*[out]*/ BSTR * ModuleNames ) = 0;
      virtual HRESULT __stdcall GetPropertyManagerHandleProcedureNames (
        /*[in]*/ BSTR ModuleName,
        /*[out,retval]*/ VARIANT * ProcedureNames ) = 0;
      virtual HRESULT __stdcall GetPropertyManagerHandleProcedureCount (
        /*[in]*/ BSTR ModuleName,
        /*[out,retval]*/ long * ProcedureCount ) = 0;
      virtual HRESULT __stdcall IGetPropertyManagerHandleProcedureNames (
        /*[in]*/ BSTR ModuleName,
        /*[in]*/ long ProcedureCount,
        /*[out]*/ BSTR * ProcedureNames ) = 0;
      virtual HRESULT __stdcall GetSelections (
        /*[out]*/ VARIANT * Objects,
        /*[out]*/ VARIANT * ObjectTypes,
        /*[out]*/ VARIANT * SelMarks ) = 0;
      virtual HRESULT __stdcall SetSelections (
        /*[in]*/ VARIANT Objects,
        /*[in]*/ VARIANT SelMarks ) = 0;
      virtual HRESULT __stdcall GetSelectionCount (
        /*[out,retval]*/ long * SelCount ) = 0;
      virtual HRESULT __stdcall IGetSelections (
        /*[in]*/ long SelCount,
        /*[out]*/ IDispatch * * Objects,
        /*[out]*/ long * ObjectTypes,
        /*[out]*/ long * SelMarks ) = 0;
      virtual HRESULT __stdcall ISetSelections (
        /*[in]*/ long SelCount,
        /*[in]*/ IDispatch * * Objects,
        /*[in]*/ long * SelMarks ) = 0;
      virtual HRESULT __stdcall GetParameters (
        /*[out]*/ VARIANT * ParamNames,
        /*[out]*/ VARIANT * ParamTypes,
        /*[out]*/ VARIANT * ParamValues ) = 0;
      virtual HRESULT __stdcall SetParameters (
        /*[in]*/ VARIANT ParamNames,
        /*[in]*/ VARIANT ParamTypes,
        /*[in]*/ VARIANT ParamValues ) = 0;
      virtual HRESULT __stdcall GetParameterCount (
        /*[out,retval]*/ long * ParamCount ) = 0;
      virtual HRESULT __stdcall IGetParameters (
        /*[in]*/ long ParamCount,
        /*[out]*/ BSTR * ParamNames,
        /*[out]*/ long * ParamTypes,
        /*[out]*/ BSTR * ParamValues ) = 0;
      virtual HRESULT __stdcall ISetParameters (
        /*[in]*/ long ParamCount,
        /*[in]*/ BSTR * ParamNames,
        /*[in]*/ long * ParamTypes,
        /*[in]*/ BSTR * ParamValues ) = 0;
      virtual HRESULT __stdcall GetIntegerByName (
        /*[in]*/ BSTR ParamName,
        /*[out]*/ long * ParamValue ) = 0;
      virtual HRESULT __stdcall SetIntegerByName (
        /*[in]*/ BSTR ParamName,
        /*[in]*/ long ParamValue ) = 0;
      virtual HRESULT __stdcall GetDoubleByName (
        /*[in]*/ BSTR ParamName,
        /*[out]*/ double * ParamValue ) = 0;
      virtual HRESULT __stdcall SetDoubleByName (
        /*[in]*/ BSTR ParamName,
        /*[in]*/ double ParamValue ) = 0;
      virtual HRESULT __stdcall GetStringByName (
        /*[in]*/ BSTR ParamName,
        /*[out]*/ BSTR * ParamValue ) = 0;
      virtual HRESULT __stdcall SetStringByName (
        /*[in]*/ BSTR ParamName,
        /*[in]*/ BSTR ParamValue ) = 0;
      virtual HRESULT __stdcall get_EditBody (
        /*[out,retval]*/ struct IBody2 * * EditBody ) = 0;
      virtual HRESULT __stdcall put_EditBody (
        /*[in]*/ struct IBody2 * EditBody ) = 0;
      virtual HRESULT __stdcall GetFaceUserId (
        /*[in]*/ struct IFace2 * Face,
        /*[out]*/ long * Id1,
        /*[out]*/ long * Id2,
        /*[out,retval]*/ VARIANT_BOOL * IsValid ) = 0;
      virtual HRESULT __stdcall SetFaceUserId (
        /*[in]*/ struct IFace2 * Face,
        /*[in]*/ long Id1,
        /*[in]*/ long Id2,
        /*[out,retval]*/ VARIANT_BOOL * IsValid ) = 0;
      virtual HRESULT __stdcall GetEdgeUserId (
        /*[in]*/ struct IEdge * Edge,
        /*[out]*/ long * Id1,
        /*[out]*/ long * Id2,
        /*[out,retval]*/ VARIANT_BOOL * IsValid ) = 0;
      virtual HRESULT __stdcall SetEdgeUserId (
        /*[in]*/ struct IEdge * Edge,
        /*[in]*/ long Id1,
        /*[in]*/ long Id2,
        /*[out,retval]*/ VARIANT_BOOL * IsValid ) = 0;
      virtual HRESULT __stdcall GetSelections2 (
        /*[out]*/ VARIANT * Objects,
        /*[out]*/ VARIANT * ObjectTypes,
        /*[out]*/ VARIANT * SelMarks,
        /*[out]*/ VARIANT * DrViews ) = 0;
      virtual HRESULT __stdcall SetSelections2 (
        /*[in]*/ VARIANT Objects,
        /*[in]*/ VARIANT SelMarks,
        /*[in]*/ VARIANT DrViews ) = 0;
      virtual HRESULT __stdcall IGetSelections2 (
        /*[in]*/ long SelCount,
        /*[out]*/ IDispatch * * Objects,
        /*[out]*/ long * ObjectTypes,
        /*[out]*/ long * SelMarks,
        /*[out]*/ struct IView * * DrViews ) = 0;
      virtual HRESULT __stdcall ISetSelections2 (
        /*[in]*/ long SelCount,
        /*[in]*/ IDispatch * * Objects,
        /*[in]*/ long * SelMarks,
        /*[in]*/ struct IView * * DrViews ) = 0;
      virtual HRESULT __stdcall GetFaceIdType (
        /*[in]*/ struct IFace2 * Face,
        /*[out,retval]*/ long * IdType ) = 0;
      virtual HRESULT __stdcall GetEdgeIdType (
        /*[in]*/ struct IEdge * Edge,
        /*[out,retval]*/ long * IdType ) = 0;
      virtual HRESULT __stdcall GetEntitiesNeedUserId (
        /*[in]*/ IDispatch * Body,
        /*[out]*/ VARIANT * Faces,
        /*[out]*/ VARIANT * Edges ) = 0;
      virtual HRESULT __stdcall GetEntitiesNeedUserIdCount (
        /*[in]*/ struct IBody2 * Body,
        /*[out]*/ long * FaceCount,
        /*[out]*/ long * EdgeCount ) = 0;
      virtual HRESULT __stdcall IGetEntitiesNeedUserId (
        /*[in]*/ struct IBody2 * Body,
        /*[in]*/ long FaceCount,
        /*[out]*/ struct IFace2 * * Faces,
        /*[in]*/ long EdgeCount,
        /*[out]*/ struct IEdge * * Edges ) = 0;
      virtual HRESULT __stdcall IsCOMFeature (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetProgId (
        /*[out,retval]*/ BSTR * ProgId ) = 0;
      virtual HRESULT __stdcall get_SecurityHandleMacroFileName (
        /*[out,retval]*/ BSTR * FileName ) = 0;
      virtual HRESULT __stdcall put_SecurityHandleMacroFileName (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall get_SecurityHandleModuleName (
        /*[out,retval]*/ BSTR * ModuleName ) = 0;
      virtual HRESULT __stdcall put_SecurityHandleModuleName (
        /*[in]*/ BSTR ModuleName ) = 0;
      virtual HRESULT __stdcall get_SecurityHandleProcedureName (
        /*[out,retval]*/ BSTR * ProcedureName ) = 0;
      virtual HRESULT __stdcall put_SecurityHandleProcedureName (
        /*[in]*/ BSTR ProcedureName ) = 0;
      virtual HRESULT __stdcall GetBaseName (
        /*[out,retval]*/ BSTR * BaseName ) = 0;
      virtual HRESULT __stdcall GetDisplayDimensions (
        /*[out,retval]*/ VARIANT * Objects ) = 0;
      virtual HRESULT __stdcall GetDisplayDimensionCount (
        /*[out,retval]*/ long * DimCount ) = 0;
      virtual HRESULT __stdcall IGetDisplayDimensions (
        long DimCount,
        /*[out]*/ struct IDisplayDimension * * Dims ) = 0;
      virtual HRESULT __stdcall get_IconFiles (
        /*[out,retval]*/ VARIANT * IconFiles ) = 0;
      virtual HRESULT __stdcall put_IconFiles (
        /*[in]*/ VARIANT IconFiles ) = 0;
      virtual HRESULT __stdcall GetIconFileCount (
        /*[out,retval]*/ long * IconCount ) = 0;
      virtual HRESULT __stdcall IGetIconFiles (
        /*[in]*/ long IconCount,
        /*[out]*/ BSTR * IconFiles ) = 0;
      virtual HRESULT __stdcall ISetIconFiles (
        /*[in]*/ long IconCount,
        /*[in]*/ BSTR * IconFiles ) = 0;
      virtual HRESULT __stdcall get_PatternTransform (
        /*[out,retval]*/ struct IMathTransform * * Xform ) = 0;
      virtual HRESULT __stdcall GetSelections3 (
        /*[out]*/ VARIANT * Objects,
        /*[out]*/ VARIANT * ObjectTypes,
        /*[out]*/ VARIANT * SelMarks,
        /*[out]*/ VARIANT * DrViews,
        /*[out]*/ VARIANT * ComponentXForms ) = 0;
      virtual HRESULT __stdcall IGetSelections3 (
        /*[in]*/ long SelCount,
        /*[out]*/ IDispatch * * Objects,
        /*[out]*/ long * ObjectTypes,
        /*[out]*/ long * SelMarks,
        /*[out]*/ struct IView * * DrViews,
        /*[out]*/ struct IMathTransform * * ComponentXForms ) = 0;
      virtual HRESULT __stdcall GetEditTargetTransform (
        /*[out,retval]*/ struct IMathTransform * * Xform ) = 0;
      virtual HRESULT __stdcall get_FeatureTransform (
        /*[out,retval]*/ struct IMathTransform * * Xform ) = 0;
      virtual HRESULT __stdcall put_FeatureTransform (
        /*[in]*/ struct IMathTransform * Xform ) = 0;
      virtual HRESULT __stdcall get_Parents (
        /*[out,retval]*/ VARIANT * PFeatures ) = 0;
      virtual HRESULT __stdcall put_Parents (
        /*[in]*/ VARIANT PFeatures ) = 0;
      virtual HRESULT __stdcall GetParentsCount (
        /*[out,retval]*/ long * ParentCount ) = 0;
      virtual HRESULT __stdcall IGetParents (
        /*[in]*/ long ParentCount,
        /*[out]*/ struct IFeature * * PFeatures ) = 0;
      virtual HRESULT __stdcall ISetParents (
        /*[in]*/ long ParentCount,
        /*[in]*/ struct IFeature * * PFeatures ) = 0;
      virtual HRESULT __stdcall get_CurrentConfiguration (
        /*[out,retval]*/ struct IConfiguration * * Config ) = 0;
      virtual HRESULT __stdcall SetProgId (
        /*[in]*/ BSTR ProgId ) = 0;
      virtual HRESULT __stdcall get_MacroFileEmbedded (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall EmbedMacroFile (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_EditBodies (
        /*[out,retval]*/ VARIANT * PBodies ) = 0;
      virtual HRESULT __stdcall put_EditBodies (
        /*[in]*/ VARIANT PBodies ) = 0;
      virtual HRESULT __stdcall GetEditBodiesCount (
        /*[out,retval]*/ long * BodiesCount ) = 0;
      virtual HRESULT __stdcall IGetEditBodies (
        /*[in]*/ long BodiesCount,
        /*[out]*/ struct IBody2 * * PBodies ) = 0;
      virtual HRESULT __stdcall ISetEditBodies (
        /*[in]*/ long BodiesCount,
        /*[in]*/ struct IBody2 * * PBodies ) = 0;
};

struct __declspec(uuid("496a6d86-2180-46d8-a973-7885554efaf3"))
ICurveDrivenPatternFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_D1Direction (
        /*[out,retval]*/ IDispatch * * Dir ) = 0;
      virtual HRESULT __stdcall put_D1Direction (
        /*[in]*/ IDispatch * Dir ) = 0;
      virtual HRESULT __stdcall get_D2Direction (
        /*[out,retval]*/ IDispatch * * Dir ) = 0;
      virtual HRESULT __stdcall put_D2Direction (
        /*[in]*/ IDispatch * Dir ) = 0;
      virtual HRESULT __stdcall get_D1ReverseDirection (
        /*[out,retval]*/ VARIANT_BOOL * IsRev ) = 0;
      virtual HRESULT __stdcall put_D1ReverseDirection (
        /*[in]*/ VARIANT_BOOL IsRev ) = 0;
      virtual HRESULT __stdcall get_D2ReverseDirection (
        /*[out,retval]*/ VARIANT_BOOL * IsRev ) = 0;
      virtual HRESULT __stdcall put_D2ReverseDirection (
        /*[in]*/ VARIANT_BOOL IsRev ) = 0;
      virtual HRESULT __stdcall get_D1InstanceCount (
        /*[out,retval]*/ long * InstCount ) = 0;
      virtual HRESULT __stdcall put_D1InstanceCount (
        /*[in]*/ long InstCount ) = 0;
      virtual HRESULT __stdcall get_D2InstanceCount (
        /*[out,retval]*/ long * InstCount ) = 0;
      virtual HRESULT __stdcall put_D2InstanceCount (
        /*[in]*/ long InstCount ) = 0;
      virtual HRESULT __stdcall get_D1IsEqualSpaced (
        /*[out,retval]*/ VARIANT_BOOL * IsEq ) = 0;
      virtual HRESULT __stdcall put_D1IsEqualSpaced (
        /*[in]*/ VARIANT_BOOL IsEq ) = 0;
      virtual HRESULT __stdcall get_D2IsEqualSpaced (
        /*[out,retval]*/ VARIANT_BOOL * IsEq ) = 0;
      virtual HRESULT __stdcall put_D2IsEqualSpaced (
        /*[in]*/ VARIANT_BOOL IsEq ) = 0;
      virtual HRESULT __stdcall get_D1Spacing (
        /*[out,retval]*/ double * Spacing ) = 0;
      virtual HRESULT __stdcall put_D1Spacing (
        /*[in]*/ double Spacing ) = 0;
      virtual HRESULT __stdcall get_D2Spacing (
        /*[out,retval]*/ double * Spacing ) = 0;
      virtual HRESULT __stdcall put_D2Spacing (
        /*[in]*/ double Spacing ) = 0;
      virtual HRESULT __stdcall get_Dir2Specified (
        /*[out,retval]*/ VARIANT_BOOL * Is2Dir ) = 0;
      virtual HRESULT __stdcall put_Dir2Specified (
        /*[in]*/ VARIANT_BOOL Is2Dir ) = 0;
      virtual HRESULT __stdcall get_D2PatternSeedOnly (
        /*[out,retval]*/ VARIANT_BOOL * SeedOnly ) = 0;
      virtual HRESULT __stdcall put_D2PatternSeedOnly (
        /*[in]*/ VARIANT_BOOL SeedOnly ) = 0;
      virtual HRESULT __stdcall get_D1CurveMethod (
        /*[out,retval]*/ long * CurveMethod ) = 0;
      virtual HRESULT __stdcall put_D1CurveMethod (
        /*[in]*/ long CurveMethod ) = 0;
      virtual HRESULT __stdcall get_D1AlignmentMethod (
        /*[out,retval]*/ long * AlignMethod ) = 0;
      virtual HRESULT __stdcall put_D1AlignmentMethod (
        /*[in]*/ long AlignMethod ) = 0;
      virtual HRESULT __stdcall get_SkippedItemArray (
        /*[out,retval]*/ VARIANT * ArrayOut ) = 0;
      virtual HRESULT __stdcall put_SkippedItemArray (
        /*[in]*/ VARIANT ArrayOut ) = 0;
      virtual HRESULT __stdcall GetSkippedItemCount (
        /*[out,retval]*/ long * FeatCount ) = 0;
      virtual HRESULT __stdcall IGetSkippedItemArray (
        /*[out,retval]*/ long * ArrayOut ) = 0;
      virtual HRESULT __stdcall ISetSkippedItemArray (
        /*[in]*/ long FeatCount,
        /*[in]*/ long * ArrayDataIn ) = 0;
      virtual HRESULT __stdcall get_PatternFeatureArray (
        /*[out,retval]*/ VARIANT * ArrayOut ) = 0;
      virtual HRESULT __stdcall put_PatternFeatureArray (
        /*[in]*/ VARIANT ArrayOut ) = 0;
      virtual HRESULT __stdcall GetPatternFeatureCount (
        /*[out,retval]*/ long * FeatCount ) = 0;
      virtual HRESULT __stdcall IGetPatternFeatureArray (
        /*[out,retval]*/ IDispatch * * ArrayOut ) = 0;
      virtual HRESULT __stdcall ISetPatternFeatureArray (
        /*[in]*/ long FeatCount,
        /*[in]*/ IDispatch * * ArrayDataIn ) = 0;
      virtual HRESULT __stdcall get_GeometryPattern (
        /*[out,retval]*/ VARIANT_BOOL * Geometry ) = 0;
      virtual HRESULT __stdcall put_GeometryPattern (
        /*[in]*/ VARIANT_BOOL Geometry ) = 0;
      virtual HRESULT __stdcall get_VarySketch (
        /*[out,retval]*/ VARIANT_BOOL * VarySketch ) = 0;
      virtual HRESULT __stdcall put_VarySketch (
        /*[in]*/ VARIANT_BOOL VarySketch ) = 0;
      virtual HRESULT __stdcall get_PatternFaceArray (
        /*[out,retval]*/ VARIANT * ArrayOut ) = 0;
      virtual HRESULT __stdcall put_PatternFaceArray (
        /*[in]*/ VARIANT ArrayOut ) = 0;
      virtual HRESULT __stdcall GetPatternFaceCount (
        /*[out,retval]*/ long * FaceCount ) = 0;
      virtual HRESULT __stdcall IGetPatternFaceArray (
        /*[out,retval]*/ IDispatch * * ArrayOut ) = 0;
      virtual HRESULT __stdcall ISetPatternFaceArray (
        /*[in]*/ long FaceCount,
        /*[in]*/ IDispatch * * ArrayDataIn ) = 0;
      virtual HRESULT __stdcall get_PatternBodyArray (
        /*[out,retval]*/ VARIANT * ArrayOut ) = 0;
      virtual HRESULT __stdcall put_PatternBodyArray (
        /*[in]*/ VARIANT ArrayOut ) = 0;
      virtual HRESULT __stdcall GetPatternBodyCount (
        /*[out,retval]*/ long * BodyCount ) = 0;
      virtual HRESULT __stdcall IGetPatternBodyArray (
        /*[out,retval]*/ struct IBody2 * * ArrayOut ) = 0;
      virtual HRESULT __stdcall ISetPatternBodyArray (
        /*[in]*/ long BodyCount,
        /*[in]*/ struct IBody2 * * ArrayDataIn ) = 0;
      virtual HRESULT __stdcall get_PropagateVisualProperty (
        /*[out,retval]*/ VARIANT_BOOL * PropVisProp ) = 0;
      virtual HRESULT __stdcall put_PropagateVisualProperty (
        /*[in]*/ VARIANT_BOOL PropVisProp ) = 0;
};

struct __declspec(uuid("d3352f26-3333-455e-910b-e0f3a44e76fd"))
IRipFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall GetEdgesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Edges (
        /*[out,retval]*/ VARIANT * EdgeArr ) = 0;
      virtual HRESULT __stdcall put_Edges (
        /*[in]*/ VARIANT EdgeArr ) = 0;
      virtual HRESULT __stdcall IGetEdges (
        /*[in]*/ long EdgeCount,
        /*[out,retval]*/ IDispatch * * EdgeArr ) = 0;
      virtual HRESULT __stdcall ISetEdges (
        /*[in]*/ long EdgeCount,
        /*[in]*/ IDispatch * * EdgeArr ) = 0;
      virtual HRESULT __stdcall get_Gap (
        /*[out,retval]*/ double * Gap ) = 0;
      virtual HRESULT __stdcall put_Gap (
        /*[in]*/ double Gap ) = 0;
      virtual HRESULT __stdcall GetDirection (
        /*[in]*/ IDispatch * Edge,
        /*[out,retval]*/ long * Dir ) = 0;
      virtual HRESULT __stdcall SetDirection (
        /*[in]*/ IDispatch * Edge,
        /*[in]*/ long Dir ) = 0;
};

struct __declspec(uuid("d1e54427-2421-413f-9eb3-f568a6bf826d"))
IHemFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall GetEdgesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Edges (
        /*[out,retval]*/ VARIANT * EdgeArr ) = 0;
      virtual HRESULT __stdcall put_Edges (
        /*[in]*/ VARIANT EdgeArr ) = 0;
      virtual HRESULT __stdcall IGetEdges (
        /*[in]*/ long EdgeCount,
        /*[out,retval]*/ IDispatch * * EdgeArr ) = 0;
      virtual HRESULT __stdcall ISetEdges (
        /*[in]*/ long EdgeCount,
        /*[in]*/ IDispatch * * EdgeArr ) = 0;
      virtual HRESULT __stdcall get_MiterGap (
        /*[out,retval]*/ double * Gap ) = 0;
      virtual HRESULT __stdcall put_MiterGap (
        /*[in]*/ double Gap ) = 0;
      virtual HRESULT __stdcall get_ReverseDirection (
        /*[out,retval]*/ VARIANT_BOOL * Rev ) = 0;
      virtual HRESULT __stdcall put_ReverseDirection (
        /*[in]*/ VARIANT_BOOL Rev ) = 0;
      virtual HRESULT __stdcall get_BendPosition (
        /*[out,retval]*/ long * Pos ) = 0;
      virtual HRESULT __stdcall put_BendPosition (
        /*[in]*/ long Pos ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall get_Length (
        /*[out,retval]*/ double * Len ) = 0;
      virtual HRESULT __stdcall put_Length (
        /*[in]*/ double Len ) = 0;
      virtual HRESULT __stdcall get_GapDistance (
        /*[out,retval]*/ double * Dist ) = 0;
      virtual HRESULT __stdcall put_GapDistance (
        /*[in]*/ double Dist ) = 0;
      virtual HRESULT __stdcall get_Angle (
        /*[out,retval]*/ double * Ang ) = 0;
      virtual HRESULT __stdcall put_Angle (
        /*[in]*/ double Ang ) = 0;
      virtual HRESULT __stdcall get_Radius (
        /*[out,retval]*/ double * Rad ) = 0;
      virtual HRESULT __stdcall put_Radius (
        /*[in]*/ double Rad ) = 0;
      virtual HRESULT __stdcall GetCustomBendAllowance (
        /*[out,retval]*/ struct ICustomBendAllowance * * PBendData ) = 0;
      virtual HRESULT __stdcall SetCustomBendAllowance (
        /*[in]*/ struct ICustomBendAllowance * PBendData ) = 0;
      virtual HRESULT __stdcall get_UseDefaultBendAllowance (
        /*[out,retval]*/ VARIANT_BOOL * UseDefaultBendAllowance ) = 0;
      virtual HRESULT __stdcall put_UseDefaultBendAllowance (
        /*[in]*/ VARIANT_BOOL UseDefaultBendAllowance ) = 0;
};

struct __declspec(uuid("df91cd7f-f4d5-471a-831b-e201b2c02090"))
IBreakCornerFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_Entities (
        /*[out,retval]*/ VARIANT * EntArray ) = 0;
      virtual HRESULT __stdcall put_Entities (
        /*[in]*/ VARIANT EntArray ) = 0;
      virtual HRESULT __stdcall GetEntitiesCount (
        /*[out,retval]*/ long * Ret ) = 0;
      virtual HRESULT __stdcall IGetEntities (
        /*[in]*/ long Count,
        /*[out,retval]*/ IDispatch * * EntArray ) = 0;
      virtual HRESULT __stdcall ISetEntities (
        /*[in]*/ long EntCount,
        /*[in]*/ IDispatch * * EntArray ) = 0;
      virtual HRESULT __stdcall get_BreakType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_BreakType (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall get_Distance (
        /*[out,retval]*/ double * Dist ) = 0;
      virtual HRESULT __stdcall put_Distance (
        /*[in]*/ double Dist ) = 0;
      virtual HRESULT __stdcall get_CenteredOnBendLines (
        /*[out,retval]*/ VARIANT_BOOL * CenteredOnBendLines ) = 0;
      virtual HRESULT __stdcall put_CenteredOnBendLines (
        /*[in]*/ VARIANT_BOOL CenteredOnBendLines ) = 0;
      virtual HRESULT __stdcall get_InternalCornersOnly (
        /*[out,retval]*/ VARIANT_BOOL * InternalCornersOnly ) = 0;
      virtual HRESULT __stdcall put_InternalCornersOnly (
        /*[in]*/ VARIANT_BOOL InternalCornersOnly ) = 0;
};

struct __declspec(uuid("c75ca537-4aba-44f3-ac3b-73d5dcd0c834"))
IJogFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_FixedFace (
        /*[out,retval]*/ IDispatch * * Face ) = 0;
      virtual HRESULT __stdcall put_FixedFace (
        /*[in]*/ IDispatch * Face ) = 0;
      virtual HRESULT __stdcall get_UseDefaultBendRadius (
        /*[out,retval]*/ VARIANT_BOOL * UseDefaultBendRadius ) = 0;
      virtual HRESULT __stdcall put_UseDefaultBendRadius (
        /*[in]*/ VARIANT_BOOL UseDefaultBendRadius ) = 0;
      virtual HRESULT __stdcall get_BendRadius (
        /*[out,retval]*/ double * Radius ) = 0;
      virtual HRESULT __stdcall put_BendRadius (
        /*[in]*/ double Radius ) = 0;
      virtual HRESULT __stdcall get_JogAngle (
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall put_JogAngle (
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall get_OffsetType (
        /*[out,retval]*/ long * OffsetType ) = 0;
      virtual HRESULT __stdcall put_OffsetType (
        /*[in]*/ long OffsetType ) = 0;
      virtual HRESULT __stdcall get_OffsetReference (
        /*[out,retval]*/ IDispatch * * OffsetReference ) = 0;
      virtual HRESULT __stdcall put_OffsetReference (
        /*[in]*/ IDispatch * OffsetReference ) = 0;
      virtual HRESULT __stdcall get_ReverseOffset (
        /*[out,retval]*/ VARIANT_BOOL * Reverse ) = 0;
      virtual HRESULT __stdcall put_ReverseOffset (
        /*[in]*/ VARIANT_BOOL Reverse ) = 0;
      virtual HRESULT __stdcall get_ReverseDirection (
        /*[out,retval]*/ VARIANT_BOOL * Reverse ) = 0;
      virtual HRESULT __stdcall put_ReverseDirection (
        /*[in]*/ VARIANT_BOOL Reverse ) = 0;
      virtual HRESULT __stdcall get_OffsetDistance (
        /*[out,retval]*/ double * OffsetDistance ) = 0;
      virtual HRESULT __stdcall put_OffsetDistance (
        /*[in]*/ double OffsetDistance ) = 0;
      virtual HRESULT __stdcall get_DimensionPositionType (
        /*[out,retval]*/ long * PositionType ) = 0;
      virtual HRESULT __stdcall put_DimensionPositionType (
        /*[in]*/ long PositionType ) = 0;
      virtual HRESULT __stdcall get_FixProjectedLength (
        /*[out,retval]*/ VARIANT_BOOL * Fix ) = 0;
      virtual HRESULT __stdcall put_FixProjectedLength (
        /*[in]*/ VARIANT_BOOL Fix ) = 0;
      virtual HRESULT __stdcall get_JogPositionType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_JogPositionType (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall get_FixedPoint (
        /*[out,retval]*/ VARIANT * Point ) = 0;
      virtual HRESULT __stdcall put_FixedPoint (
        /*[in]*/ VARIANT Point ) = 0;
      virtual HRESULT __stdcall IGetFixedPoint (
        /*[out,retval]*/ double * Point ) = 0;
      virtual HRESULT __stdcall ISetFixedPoint (
        /*[in]*/ double * Point ) = 0;
      virtual HRESULT __stdcall GetOffsetReferenceType (
        /*[out,retval]*/ long * ReferenceType ) = 0;
      virtual HRESULT __stdcall GetCustomBendAllowance (
        /*[out,retval]*/ struct ICustomBendAllowance * * PBendData ) = 0;
      virtual HRESULT __stdcall SetCustomBendAllowance (
        /*[in]*/ struct ICustomBendAllowance * PBendData ) = 0;
      virtual HRESULT __stdcall get_UseDefaultBendAllowance (
        /*[out,retval]*/ VARIANT_BOOL * UseDefaultBendAllowance ) = 0;
      virtual HRESULT __stdcall put_UseDefaultBendAllowance (
        /*[in]*/ VARIANT_BOOL UseDefaultBendAllowance ) = 0;
};

struct __declspec(uuid("157ce6b0-16bc-49a3-b207-95159b02306c"))
ISurfExtrudeFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall GetEndCondition (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[out,retval]*/ int * EndCondition ) = 0;
      virtual HRESULT __stdcall SetEndCondition (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[in]*/ int EndCondition ) = 0;
      virtual HRESULT __stdcall GetDepth (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[out,retval]*/ double * Depth ) = 0;
      virtual HRESULT __stdcall SetDepth (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[in]*/ double Depth ) = 0;
      virtual HRESULT __stdcall GetFace (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[out,retval]*/ IDispatch * * Face ) = 0;
      virtual HRESULT __stdcall SetFace (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[in]*/ IDispatch * Face ) = 0;
      virtual HRESULT __stdcall IGetFace (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[out,retval]*/ struct IFace2 * * Face ) = 0;
      virtual HRESULT __stdcall ISetFace (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[in]*/ struct IFace2 * Face ) = 0;
      virtual HRESULT __stdcall GetVertex (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[out,retval]*/ IDispatch * * Vtx ) = 0;
      virtual HRESULT __stdcall SetVertex (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[in]*/ IDispatch * Vtx ) = 0;
      virtual HRESULT __stdcall IGetVertex (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[out,retval]*/ struct IVertex * * Vtx ) = 0;
      virtual HRESULT __stdcall ISetVertex (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[in]*/ struct IVertex * Vtx ) = 0;
      virtual HRESULT __stdcall get_ReverseDirection (
        /*[out,retval]*/ VARIANT_BOOL * ReverseDirection ) = 0;
      virtual HRESULT __stdcall put_ReverseDirection (
        /*[in]*/ VARIANT_BOOL ReverseDirection ) = 0;
      virtual HRESULT __stdcall get_BothDirections (
        /*[out,retval]*/ VARIANT_BOOL * BothDirections ) = 0;
      virtual HRESULT __stdcall put_BothDirections (
        /*[in]*/ VARIANT_BOOL BothDirections ) = 0;
      virtual HRESULT __stdcall GetReverseOffset (
        /*[in]*/ VARIANT_BOOL Fwd,
        /*[out,retval]*/ VARIANT_BOOL * RevOffset ) = 0;
      virtual HRESULT __stdcall SetReverseOffset (
        /*[in]*/ VARIANT_BOOL Fwd,
        /*[in]*/ VARIANT_BOOL RevOffset ) = 0;
      virtual HRESULT __stdcall GetTranslateSurface (
        /*[in]*/ VARIANT_BOOL Fwd,
        /*[out,retval]*/ VARIANT_BOOL * Trans ) = 0;
      virtual HRESULT __stdcall SetTranslateSurface (
        /*[in]*/ VARIANT_BOOL Fwd,
        /*[in]*/ VARIANT_BOOL Trans ) = 0;
};

struct __declspec(uuid("38d7f138-4403-4eb0-8e9e-7daf6ba385cf"))
ISurfRevolveFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetRevolutionAngle (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall SetRevolutionAngle (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ int * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ int Type ) = 0;
      virtual HRESULT __stdcall get_ReverseDirection (
        /*[out,retval]*/ VARIANT_BOOL * ReverseDirection ) = 0;
      virtual HRESULT __stdcall put_ReverseDirection (
        /*[in]*/ VARIANT_BOOL ReverseDirection ) = 0;
      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
};

struct __declspec(uuid("214152e2-2f73-42e3-ab88-690c2ed9910d"))
ISurfaceOffsetFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Faces (
        /*[out,retval]*/ VARIANT * FaceArray ) = 0;
      virtual HRESULT __stdcall put_Faces (
        /*[in]*/ VARIANT FaceArray ) = 0;
      virtual HRESULT __stdcall GetFacesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetFaces (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IFace2 * * FaceArr ) = 0;
      virtual HRESULT __stdcall ISetFaces (
        /*[in]*/ long Count,
        /*[in]*/ struct IFace2 * * FaceArr ) = 0;
      virtual HRESULT __stdcall get_Distance (
        /*[out,retval]*/ double * Dist ) = 0;
      virtual HRESULT __stdcall put_Distance (
        /*[in]*/ double Dist ) = 0;
      virtual HRESULT __stdcall get_Flip (
        /*[out,retval]*/ VARIANT_BOOL * Flip ) = 0;
      virtual HRESULT __stdcall put_Flip (
        /*[in]*/ VARIANT_BOOL Flip ) = 0;
      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
};

struct __declspec(uuid("6ce5bd99-0769-4daf-8206-07513b6c0005"))
ISurfaceKnitFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall GetEntitiesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Entities (
        /*[out,retval]*/ VARIANT * OutArr ) = 0;
      virtual HRESULT __stdcall put_Entities (
        /*[in]*/ VARIANT OutArr ) = 0;
      virtual HRESULT __stdcall IGetEntities (
        /*[in]*/ long Count,
        /*[out,retval]*/ IDispatch * * FaceArr ) = 0;
      virtual HRESULT __stdcall ISetEntities (
        /*[in]*/ long Count,
        /*[in]*/ IDispatch * * FaceArr ) = 0;
      virtual HRESULT __stdcall get_SeedFace (
        /*[out,retval]*/ IDispatch * * SeedFace ) = 0;
      virtual HRESULT __stdcall put_SeedFace (
        /*[in]*/ IDispatch * SeedFace ) = 0;
};

struct __declspec(uuid("72249e3d-b571-416d-9034-de3be1d9937c"))
ISurfaceExtendFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetItemsCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Items (
        /*[out,retval]*/ VARIANT * OutArr ) = 0;
      virtual HRESULT __stdcall put_Items (
        /*[in]*/ VARIANT OutArr ) = 0;
      virtual HRESULT __stdcall IGetItems (
        /*[in]*/ long Count,
        /*[out,retval]*/ IDispatch * * ItemArr ) = 0;
      virtual HRESULT __stdcall ISetItems (
        /*[in]*/ long Count,
        /*[in]*/ IDispatch * * ItemArr ) = 0;
      virtual HRESULT __stdcall get_EndCondition (
        /*[out,retval]*/ long * EndCond ) = 0;
      virtual HRESULT __stdcall put_EndCondition (
        /*[in]*/ long EndCond ) = 0;
      virtual HRESULT __stdcall get_Face (
        /*[out,retval]*/ IDispatch * * Face ) = 0;
      virtual HRESULT __stdcall put_Face (
        /*[in]*/ IDispatch * Face ) = 0;
      virtual HRESULT __stdcall get_IFace (
        /*[out,retval]*/ struct IFace2 * * Face ) = 0;
      virtual HRESULT __stdcall put_IFace (
        /*[in]*/ struct IFace2 * Face ) = 0;
      virtual HRESULT __stdcall get_Vertex (
        /*[out,retval]*/ IDispatch * * Vtx ) = 0;
      virtual HRESULT __stdcall put_Vertex (
        /*[in]*/ IDispatch * Vtx ) = 0;
      virtual HRESULT __stdcall get_IVertex (
        /*[out,retval]*/ struct IVertex * * Vtx ) = 0;
      virtual HRESULT __stdcall put_IVertex (
        /*[in]*/ struct IVertex * Vtx ) = 0;
      virtual HRESULT __stdcall get_Distance (
        /*[out,retval]*/ double * Dist ) = 0;
      virtual HRESULT __stdcall put_Distance (
        /*[in]*/ double Dist ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall GetPropagatingEdgesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_PropagatingEdges (
        /*[out,retval]*/ VARIANT * OutArr ) = 0;
      virtual HRESULT __stdcall put_PropagatingEdges (
        /*[in]*/ VARIANT OutArr ) = 0;
      virtual HRESULT __stdcall IGetPropagatingEdges (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IEdge * * EdgeArr ) = 0;
      virtual HRESULT __stdcall ISetPropagatingEdges (
        /*[in]*/ long Count,
        /*[in]*/ struct IEdge * * EdgeArr ) = 0;
};

struct __declspec(uuid("6a0860dc-bc79-4dfd-8a06-252efccfcd37"))
ISurfacePlanarFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall GetBoundingEntitiesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetBoundingEntities (
        /*[in]*/ long Count,
        /*[out,retval]*/ IDispatch * * DispArr ) = 0;
      virtual HRESULT __stdcall ISetBoundingEntities (
        /*[in]*/ long Count,
        /*[out,retval]*/ IDispatch * * DispArr ) = 0;
      virtual HRESULT __stdcall get_BoundingEntities (
        /*[out,retval]*/ VARIANT * EntVar ) = 0;
      virtual HRESULT __stdcall put_BoundingEntities (
        /*[in]*/ VARIANT EntVar ) = 0;
};

struct __declspec(uuid("c9943dee-40de-4eb9-a3c5-7d5cabee3e85"))
ISurfaceTrimFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall GetType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall GetTrimToolsCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetTrimTools (
        /*[in]*/ long Count,
        /*[out,retval]*/ IDispatch * * DispArr ) = 0;
      virtual HRESULT __stdcall ISetTrimTools (
        /*[in]*/ long Count,
        /*[in]*/ IDispatch * * DispArr ) = 0;
      virtual HRESULT __stdcall get_TrimTools (
        /*[out,retval]*/ VARIANT * ToolVar ) = 0;
      virtual HRESULT __stdcall put_TrimTools (
        /*[in]*/ VARIANT ToolVar ) = 0;
      virtual HRESULT __stdcall GetPiecesToKeepCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetPiecesToKeep (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IBody2 * * BodyArr ) = 0;
      virtual HRESULT __stdcall ISetPiecesToKeep (
        /*[in]*/ long Count,
        /*[in]*/ struct IBody2 * * BodyArr ) = 0;
      virtual HRESULT __stdcall get_PiecesToKeep (
        /*[out,retval]*/ VARIANT * ToolVar ) = 0;
      virtual HRESULT __stdcall put_PiecesToKeep (
        /*[in]*/ VARIANT ToolVar ) = 0;
};

struct __declspec(uuid("82f0509d-402b-4d79-ab6b-aa2888fc1e81"))
ISurfaceRadiateFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_DirectionReference (
        /*[out,retval]*/ IDispatch * * Disp ) = 0;
      virtual HRESULT __stdcall put_DirectionReference (
        /*[in]*/ IDispatch * Disp ) = 0;
      virtual HRESULT __stdcall get_Flip (
        /*[out,retval]*/ VARIANT_BOOL * Flip ) = 0;
      virtual HRESULT __stdcall put_Flip (
        /*[in]*/ VARIANT_BOOL Flip ) = 0;
      virtual HRESULT __stdcall get_PropagateToTangentFaces (
        /*[out,retval]*/ VARIANT_BOOL * Prop ) = 0;
      virtual HRESULT __stdcall put_PropagateToTangentFaces (
        /*[in]*/ VARIANT_BOOL Prop ) = 0;
      virtual HRESULT __stdcall get_Distance (
        /*[out,retval]*/ double * Dist ) = 0;
      virtual HRESULT __stdcall put_Distance (
        /*[in]*/ double Dist ) = 0;
      virtual HRESULT __stdcall GetRadiatedEntitiesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetRadiatedEntities (
        /*[in]*/ long Count,
        /*[out,retval]*/ IDispatch * * DispArr ) = 0;
      virtual HRESULT __stdcall ISetRadiatedEntities (
        /*[in]*/ long Count,
        /*[in]*/ IDispatch * * DispArr ) = 0;
      virtual HRESULT __stdcall get_RadiatedEntities (
        /*[out,retval]*/ VARIANT * EntVar ) = 0;
      virtual HRESULT __stdcall put_RadiatedEntities (
        /*[in]*/ VARIANT EntVar ) = 0;
};

struct __declspec(uuid("02b5cbf8-5104-41f7-901d-a4dcba547029"))
IRefPlaneFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall get_AutoSize (
        /*[out,retval]*/ VARIANT_BOOL * AutoSize ) = 0;
      virtual HRESULT __stdcall put_AutoSize (
        /*[in]*/ VARIANT_BOOL AutoSize ) = 0;
      virtual HRESULT __stdcall get_Angle (
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall put_Angle (
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall get_Distance (
        /*[out,retval]*/ double * Dist ) = 0;
      virtual HRESULT __stdcall put_Distance (
        /*[in]*/ double Dist ) = 0;
      virtual HRESULT __stdcall get_ReverseDirection (
        /*[out,retval]*/ VARIANT_BOOL * Flip ) = 0;
      virtual HRESULT __stdcall put_ReverseDirection (
        /*[in]*/ VARIANT_BOOL Flip ) = 0;
      virtual HRESULT __stdcall get_OriginOnCurve (
        /*[out,retval]*/ VARIANT_BOOL * Dist ) = 0;
      virtual HRESULT __stdcall put_OriginOnCurve (
        /*[in]*/ VARIANT_BOOL Dist ) = 0;
      virtual HRESULT __stdcall get_Selections (
        /*[out,retval]*/ VARIANT * Entities ) = 0;
      virtual HRESULT __stdcall put_Selections (
        /*[in]*/ VARIANT Entities ) = 0;
      virtual HRESULT __stdcall GetSelectionsCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetSelections (
        /*[in]*/ long Count,
        /*[out,retval]*/ IDispatch * * Entities ) = 0;
      virtual HRESULT __stdcall ISetSelections (
        /*[in]*/ long Count,
        /*[in]*/ IDispatch * * Entities ) = 0;
      virtual HRESULT __stdcall get_ProjectionType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_ProjectionType (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall get_UseNormalPlane (
        /*[out,retval]*/ VARIANT_BOOL * NormalPlane ) = 0;
      virtual HRESULT __stdcall put_UseNormalPlane (
        /*[in]*/ VARIANT_BOOL NormalPlane ) = 0;
      virtual HRESULT __stdcall get_SolutionIndex (
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall put_SolutionIndex (
        /*[in]*/ long Index ) = 0;
};

struct __declspec(uuid("887a2421-50f5-443f-acd9-62e9832ab519"))
IRefPointFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall get_AlongCurveOption (
        /*[out,retval]*/ long * Option ) = 0;
      virtual HRESULT __stdcall put_AlongCurveOption (
        /*[in]*/ long Option ) = 0;
      virtual HRESULT __stdcall get_Distance (
        /*[out,retval]*/ double * Dist ) = 0;
      virtual HRESULT __stdcall put_Distance (
        /*[in]*/ double Dist ) = 0;
      virtual HRESULT __stdcall get_Selections (
        /*[out,retval]*/ VARIANT * Entities ) = 0;
      virtual HRESULT __stdcall put_Selections (
        /*[in]*/ VARIANT Entities ) = 0;
      virtual HRESULT __stdcall GetSelectionsCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetSelections (
        /*[in]*/ long Count,
        /*[out,retval]*/ IDispatch * * Entities ) = 0;
      virtual HRESULT __stdcall ISetSelections (
        /*[in]*/ long Count,
        /*[in]*/ IDispatch * * Entities ) = 0;
};

struct __declspec(uuid("4010a7f4-b516-4e35-b9b9-6e871355db9e"))
IRuledSurfaceFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall get_Distance (
        /*[out,retval]*/ double * Dist ) = 0;
      virtual HRESULT __stdcall put_Distance (
        /*[in]*/ double Dist ) = 0;
      virtual HRESULT __stdcall GetDirectionReference (
        /*[out]*/ IDispatch * * Ref1,
        /*[out]*/ long * Type1,
        /*[out]*/ IDispatch * * Ref2,
        /*[out]*/ long * Type2,
        /*[out,retval]*/ long * RefCount ) = 0;
      virtual HRESULT __stdcall SetDirectionReference (
        /*[in]*/ IDispatch * Ref1,
        /*[in]*/ IDispatch * Ref2 ) = 0;
      virtual HRESULT __stdcall get_Angle (
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall put_Angle (
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall get_UseVector (
        /*[out,retval]*/ VARIANT_BOOL * UseVector ) = 0;
      virtual HRESULT __stdcall put_UseVector (
        /*[in]*/ VARIANT_BOOL UseVector ) = 0;
      virtual HRESULT __stdcall GetEdges (
        /*[out]*/ VARIANT * Edges,
        /*[out]*/ VARIANT * SideFlags ) = 0;
      virtual HRESULT __stdcall SetEdges (
        /*[in]*/ VARIANT Edges,
        /*[in]*/ VARIANT SideFlags ) = 0;
      virtual HRESULT __stdcall GetEdgesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetEdges (
        /*[in]*/ long Count,
        /*[out]*/ IDispatch * * Entities,
        /*[out]*/ long * SideFlags ) = 0;
      virtual HRESULT __stdcall ISetEdges (
        /*[in]*/ long Count,
        /*[in]*/ IDispatch * * Entities,
        /*[in]*/ long * SideFlags ) = 0;
      virtual HRESULT __stdcall get_TrimAndKnit (
        /*[out,retval]*/ VARIANT_BOOL * TrimAndKnit ) = 0;
      virtual HRESULT __stdcall put_TrimAndKnit (
        /*[in]*/ VARIANT_BOOL TrimAndKnit ) = 0;
      virtual HRESULT __stdcall get_Connect (
        /*[out,retval]*/ VARIANT_BOOL * Connect ) = 0;
      virtual HRESULT __stdcall put_Connect (
        /*[in]*/ VARIANT_BOOL Connect ) = 0;
      virtual HRESULT __stdcall get_DirectionVector (
        /*[out,retval]*/ struct IMathVector * * LpVectorObjOut ) = 0;
      virtual HRESULT __stdcall put_DirectionVector (
        /*[in]*/ struct IMathVector * LpVectorObjOut ) = 0;
};

struct __declspec(uuid("a72beb28-2c74-4bcf-880c-6496ac9005fa"))
ICavityFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_ScaleType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_ScaleType (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall get_UniformScale (
        /*[out,retval]*/ double * Scale ) = 0;
      virtual HRESULT __stdcall put_UniformScale (
        /*[in]*/ double Scale ) = 0;
      virtual HRESULT __stdcall get_UseUniformScale (
        /*[out,retval]*/ VARIANT_BOOL * Scale ) = 0;
      virtual HRESULT __stdcall put_UseUniformScale (
        /*[in]*/ VARIANT_BOOL Scale ) = 0;
      virtual HRESULT __stdcall GetScale (
        /*[out]*/ double * Xscale,
        /*[out]*/ double * YScale,
        /*[out]*/ double * ZScale ) = 0;
      virtual HRESULT __stdcall SetScale (
        /*[in]*/ double Xscale,
        /*[in]*/ double YScale,
        /*[in]*/ double ZScale ) = 0;
      virtual HRESULT __stdcall get_Components (
        /*[out,retval]*/ VARIANT * Components ) = 0;
      virtual HRESULT __stdcall put_Components (
        /*[in]*/ VARIANT Components ) = 0;
      virtual HRESULT __stdcall GetComponentsCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetComponents (
        /*[in]*/ long Count,
        /*[out]*/ struct IComponent2 * * Comps ) = 0;
      virtual HRESULT __stdcall ISetComponents (
        /*[in]*/ long Count,
        /*[in]*/ struct IComponent2 * * Comps ) = 0;
};

struct __declspec(uuid("619dee3d-3398-48fe-8818-edd4169fddb8"))
ILoftedBendsFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall GetProfileCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetProfiles (
        /*[in]*/ long Count,
        /*[out,retval]*/ IDispatch * * PDisp ) = 0;
      virtual HRESULT __stdcall ISetProfiles (
        /*[in]*/ long Count,
        /*[in]*/ IDispatch * * PDisp ) = 0;
      virtual HRESULT __stdcall get_Profiles (
        /*[out,retval]*/ VARIANT * PDisp ) = 0;
      virtual HRESULT __stdcall put_Profiles (
        /*[in]*/ VARIANT PDisp ) = 0;
      virtual HRESULT __stdcall get_Thickness (
        /*[out,retval]*/ double * Thickness ) = 0;
      virtual HRESULT __stdcall put_Thickness (
        /*[in]*/ double Thickness ) = 0;
      virtual HRESULT __stdcall get_Direction (
        /*[out,retval]*/ VARIANT_BOOL * Direction ) = 0;
      virtual HRESULT __stdcall put_Direction (
        /*[in]*/ VARIANT_BOOL Direction ) = 0;
      virtual HRESULT __stdcall get_BendLineControlOption (
        /*[out,retval]*/ long * Option ) = 0;
      virtual HRESULT __stdcall put_BendLineControlOption (
        /*[in]*/ long Option ) = 0;
      virtual HRESULT __stdcall get_NumberOfBendLines (
        /*[out,retval]*/ long * BendLines ) = 0;
      virtual HRESULT __stdcall put_NumberOfBendLines (
        /*[in]*/ long BendLines ) = 0;
      virtual HRESULT __stdcall get_MaximumDeviation (
        /*[out,retval]*/ double * Deviation ) = 0;
      virtual HRESULT __stdcall put_MaximumDeviation (
        /*[in]*/ double Deviation ) = 0;
      virtual HRESULT __stdcall CanCreateBendLines (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("8066432c-1376-4d6b-aa64-46b2d3cc5d60"))
IReferencePointCurveFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_ClosedCurve (
        /*[out,retval]*/ VARIANT_BOOL * Ret ) = 0;
      virtual HRESULT __stdcall put_ClosedCurve (
        /*[in]*/ VARIANT_BOOL Ret ) = 0;
      virtual HRESULT __stdcall GetThroughPointCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetThroughPoints (
        /*[out]*/ VARIANT * Type,
        /*[out,retval]*/ VARIANT * Pts ) = 0;
      virtual HRESULT __stdcall SetThroughPoints (
        /*[in]*/ VARIANT Pts ) = 0;
      virtual HRESULT __stdcall IGetThroughPoints (
        /*[in]*/ long Count,
        /*[out]*/ long * Type,
        /*[out,retval]*/ IDispatch * * Pts ) = 0;
      virtual HRESULT __stdcall ISetThroughPoints (
        /*[in]*/ long Count,
        /*[in]*/ IDispatch * * Pts ) = 0;
};

struct __declspec(uuid("8d5cfab8-a9f9-4b7f-9275-27e2062c324e"))
ICompositeCurveFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall GetEntitiesToJoinCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetEntitiesToJoin (
        /*[out]*/ VARIANT * Type,
        /*[out,retval]*/ VARIANT * EntVar ) = 0;
      virtual HRESULT __stdcall SetEntitiesToJoin (
        /*[in]*/ VARIANT EntVar ) = 0;
      virtual HRESULT __stdcall IGetEntitiesToJoin (
        /*[in]*/ long Count,
        /*[out]*/ long * Type,
        /*[out,retval]*/ IDispatch * * Ents ) = 0;
      virtual HRESULT __stdcall ISetEntitiesToJoin (
        /*[in]*/ long Count,
        /*[in]*/ IDispatch * * Ents ) = 0;
};

struct __declspec(uuid("dae93be3-b9dc-4748-ad03-94ca1d644e59"))
ICosmeticThreadFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_ApplyThread (
        /*[out,retval]*/ long * Apply ) = 0;
      virtual HRESULT __stdcall put_ApplyThread (
        /*[in]*/ long Apply ) = 0;
      virtual HRESULT __stdcall get_BlindDepth (
        /*[out,retval]*/ double * Depth ) = 0;
      virtual HRESULT __stdcall put_BlindDepth (
        /*[in]*/ double Depth ) = 0;
      virtual HRESULT __stdcall get_Diameter (
        /*[out,retval]*/ double * Diameter ) = 0;
      virtual HRESULT __stdcall put_Diameter (
        /*[in]*/ double Diameter ) = 0;
      virtual HRESULT __stdcall get_DiameterType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall get_ThreadCallout (
        /*[out,retval]*/ BSTR * Callout ) = 0;
      virtual HRESULT __stdcall put_ThreadCallout (
        /*[in]*/ BSTR Callout ) = 0;
      virtual HRESULT __stdcall get_Edge (
        /*[out,retval]*/ struct IEdge * * Edge ) = 0;
      virtual HRESULT __stdcall put_Edge (
        /*[in]*/ struct IEdge * Edge ) = 0;
      virtual HRESULT __stdcall get_PatternedTransforms (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetPatternedTransformsCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetPatternedTransforms (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IMathTransform * * Retval ) = 0;
};

struct __declspec(uuid("1c4bc27b-4b76-4390-ae66-4a21a96c0c9c"))
IMateInPlace : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetMateEntityCount (
        /*[out,retval]*/ long * NMateEntityCount ) = 0;
      virtual HRESULT __stdcall get_MateEntity (
        /*[in]*/ long NIndex,
        /*[out,retval]*/ IDispatch * * LpMateEntityDisp ) = 0;
      virtual HRESULT __stdcall get_MateEntityType (
        /*[in]*/ long NIndex,
        /*[out,retval]*/ long * NMateEntityType ) = 0;
      virtual HRESULT __stdcall get_MateComponentName (
        /*[in]*/ long NIndex,
        /*[out,retval]*/ BSTR * BstrMateEntityName ) = 0;
      virtual HRESULT __stdcall get_Component (
        /*[out,retval]*/ struct IComponent2 * * LpComponenet2 ) = 0;
};

struct __declspec(uuid("3adb2157-cf50-46ad-b1f6-0e8db36c29b0"))
IRefAxisFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall GetSelections (
        /*[out]*/ VARIANT * EntitiesTypeVar,
        /*[out,retval]*/ VARIANT * EntitiesVar ) = 0;
      virtual HRESULT __stdcall SetSelections (
        /*[in]*/ VARIANT EntitiesVar,
        /*[out,retval]*/ VARIANT_BOOL * Res ) = 0;
      virtual HRESULT __stdcall GetSelectionsCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetSelections (
        /*[in]*/ long Count,
        /*[out]*/ long * TypeArr,
        /*[out,retval]*/ IDispatch * * EntArr ) = 0;
      virtual HRESULT __stdcall ISetSelections (
        /*[in]*/ long Count,
        /*[in]*/ IDispatch * * EntArr,
        /*[out,retval]*/ VARIANT_BOOL * BRet ) = 0;
};

struct __declspec(uuid("76c0e8b6-0f1b-4da1-9812-c46c0e6ad9c0"))
IPartingLineFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_PullDirectionBase (
        /*[out,retval]*/ IDispatch * * PEnt ) = 0;
      virtual HRESULT __stdcall put_PullDirectionBase (
        /*[in]*/ IDispatch * PEnt ) = 0;
      virtual HRESULT __stdcall get_PullDirectionType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall get_PullDirection (
        /*[out,retval]*/ VARIANT_BOOL * BRev ) = 0;
      virtual HRESULT __stdcall put_PullDirection (
        /*[in]*/ VARIANT_BOOL BRev ) = 0;
      virtual HRESULT __stdcall get_PartingLines (
        /*[out,retval]*/ VARIANT * PVar ) = 0;
      virtual HRESULT __stdcall put_PartingLines (
        /*[in]*/ VARIANT PVar ) = 0;
      virtual HRESULT __stdcall GetPartingLinesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetPartingLines (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IEdge * * EntOut ) = 0;
      virtual HRESULT __stdcall ISetPartingLines (
        /*[in]*/ long Count,
        /*[in]*/ struct IEdge * * EntIn ) = 0;
      virtual HRESULT __stdcall DraftAnalysis (
        /*[in]*/ double Angle,
        /*[out,retval]*/ VARIANT_BOOL * BRet ) = 0;
      virtual HRESULT __stdcall GetFacesByTypeCount (
        /*[in]*/ long Type,
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetFacesByType (
        /*[in]*/ long Type,
        /*[out,retval]*/ VARIANT * EntArr ) = 0;
      virtual HRESULT __stdcall IGetFacesByType (
        /*[in]*/ long Type,
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IFace2 * * EntArr ) = 0;
      virtual HRESULT __stdcall Status (
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall get_Angle (
        /*[out,retval]*/ double * PVar ) = 0;
      virtual HRESULT __stdcall put_Angle (
        /*[in]*/ double PVar ) = 0;
      virtual HRESULT __stdcall get_SplitFaces (
        /*[out,retval]*/ VARIANT_BOOL * BSplitFaces ) = 0;
      virtual HRESULT __stdcall put_SplitFaces (
        /*[in]*/ VARIANT_BOOL BSplitFaces ) = 0;
      virtual HRESULT __stdcall GetEntitiesToSplit (
        /*[out]*/ VARIANT * TypeArr,
        /*[out,retval]*/ VARIANT * PVar ) = 0;
      virtual HRESULT __stdcall SetEntitiesToSplit (
        /*[in]*/ VARIANT PVar ) = 0;
      virtual HRESULT __stdcall GetEntitiesToSplitCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetEntitiesToSplit (
        /*[in]*/ long Count,
        /*[out]*/ long * TypeArr,
        /*[out,retval]*/ IDispatch * * EntOut ) = 0;
      virtual HRESULT __stdcall ISetEntitiesToSplit (
        /*[in]*/ long Count,
        /*[in]*/ IDispatch * * EntIn ) = 0;
      virtual HRESULT __stdcall get_CoreCavitySplit (
        /*[out,retval]*/ VARIANT_BOOL * BCoreCavitySplit ) = 0;
      virtual HRESULT __stdcall put_CoreCavitySplit (
        /*[in]*/ VARIANT_BOOL BCoreCavitySplit ) = 0;
      virtual HRESULT __stdcall get_SplitFacesOption (
        /*[out,retval]*/ long * SplitOption ) = 0;
      virtual HRESULT __stdcall put_SplitFacesOption (
        /*[in]*/ long SplitOption ) = 0;
};

struct __declspec(uuid("243d4c1d-6a24-4ff9-83b7-d409ec6b5185"))
IPartingSurfaceFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_PullDirectionBase (
        /*[out,retval]*/ IDispatch * * PEnt ) = 0;
      virtual HRESULT __stdcall put_PullDirectionBase (
        /*[in]*/ IDispatch * PEnt ) = 0;
      virtual HRESULT __stdcall get_PullDirectionType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall get_ReverseAlignment (
        /*[out,retval]*/ VARIANT_BOOL * BRev ) = 0;
      virtual HRESULT __stdcall put_ReverseAlignment (
        /*[in]*/ VARIANT_BOOL BRev ) = 0;
      virtual HRESULT __stdcall get_PartingLines (
        /*[out,retval]*/ VARIANT * PVar ) = 0;
      virtual HRESULT __stdcall put_PartingLines (
        /*[in]*/ VARIANT PVar ) = 0;
      virtual HRESULT __stdcall GetPartingLinesType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall GetPartingLinesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetPartingLines (
        /*[in]*/ long Count,
        /*[out,retval]*/ IDispatch * * EntOut ) = 0;
      virtual HRESULT __stdcall ISetPartingLines (
        /*[in]*/ long Count,
        /*[in]*/ IDispatch * * EntIn ) = 0;
      virtual HRESULT __stdcall get_PartingType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_PartingType (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall get_OffsetDistance (
        /*[out,retval]*/ double * Dist ) = 0;
      virtual HRESULT __stdcall put_OffsetDistance (
        /*[in]*/ double Dist ) = 0;
      virtual HRESULT __stdcall get_ReverseOffsetDirection (
        /*[out,retval]*/ VARIANT_BOOL * Dir ) = 0;
      virtual HRESULT __stdcall put_ReverseOffsetDirection (
        /*[in]*/ VARIANT_BOOL Dir ) = 0;
      virtual HRESULT __stdcall get_OffsetAngle (
        /*[out,retval]*/ double * Dist ) = 0;
      virtual HRESULT __stdcall put_OffsetAngle (
        /*[in]*/ double Dist ) = 0;
      virtual HRESULT __stdcall get_TransitionType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_TransitionType (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall get_TransitionDistance (
        /*[out,retval]*/ double * Dist ) = 0;
      virtual HRESULT __stdcall put_TransitionDistance (
        /*[in]*/ double Dist ) = 0;
      virtual HRESULT __stdcall get_Knit (
        /*[out,retval]*/ VARIANT_BOOL * BKnitAll ) = 0;
      virtual HRESULT __stdcall put_Knit (
        /*[in]*/ VARIANT_BOOL BKnitAll ) = 0;
};

struct __declspec(uuid("5f20a7b3-ed48-4103-8d00-4ca38b1a7c73"))
IDeleteBodyFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall GetBodiesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Bodies (
        /*[out,retval]*/ VARIANT * EntVar ) = 0;
      virtual HRESULT __stdcall put_Bodies (
        /*[in]*/ VARIANT EntVar ) = 0;
      virtual HRESULT __stdcall IGetBodies (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IBody2 * * Bodies ) = 0;
      virtual HRESULT __stdcall ISetBodies (
        /*[in]*/ long Count,
        /*[in]*/ struct IBody2 * * Bodies ) = 0;
};

struct __declspec(uuid("dbe5bcc6-faf5-441a-abe5-53bf2bba90d0"))
IShutOffSurfaceFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_Edges (
        /*[out,retval]*/ VARIANT * EdgeVar ) = 0;
      virtual HRESULT __stdcall put_Edges (
        /*[in]*/ VARIANT EdgeVar ) = 0;
      virtual HRESULT __stdcall GetEdgeCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetEdges (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IEdge * * EdgeArr ) = 0;
      virtual HRESULT __stdcall ISetEdges (
        /*[in]*/ long Count,
        /*[in]*/ struct IEdge * * EdgeArr ) = 0;
      virtual HRESULT __stdcall GetLoopCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_LoopEdges (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * EdgeVar ) = 0;
      virtual HRESULT __stdcall GetLoopEdgeCount (
        /*[in]*/ long Index,
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetLoopEdges (
        /*[in]*/ long Index,
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IEdge * * EdgeArr ) = 0;
      virtual HRESULT __stdcall get_LoopPatchType (
        /*[in]*/ long Index,
        /*[out,retval]*/ long * PatchType ) = 0;
      virtual HRESULT __stdcall put_LoopPatchType (
        /*[in]*/ long Index,
        /*[in]*/ long PatchType ) = 0;
      virtual HRESULT __stdcall GetFaceTangentTo (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct IFace2 * * FaceOut ) = 0;
      virtual HRESULT __stdcall FlipFaceTangentTo (
        /*[in]*/ long Index ) = 0;
      virtual HRESULT __stdcall Status (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetAllPatchTypes (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall get_Knit (
        /*[out,retval]*/ VARIANT_BOOL * BKnit ) = 0;
      virtual HRESULT __stdcall put_Knit (
        /*[in]*/ VARIANT_BOOL BKnit ) = 0;
};

struct __declspec(uuid("e6fa7aee-8f47-4187-9c15-75549645016f"))
IToolingSplitFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_Depth (
        /*[in]*/ long Dir,
        /*[out,retval]*/ double * Depth ) = 0;
      virtual HRESULT __stdcall put_Depth (
        /*[in]*/ long Dir,
        /*[in]*/ double Depth ) = 0;
      virtual HRESULT __stdcall get_InterlockSurface (
        /*[out,retval]*/ VARIANT_BOOL * BInterLock ) = 0;
      virtual HRESULT __stdcall put_InterlockSurface (
        /*[in]*/ VARIANT_BOOL BInterLock ) = 0;
      virtual HRESULT __stdcall get_Angle (
        /*[out,retval]*/ double * Ang ) = 0;
      virtual HRESULT __stdcall put_Angle (
        /*[in]*/ double Ang ) = 0;
      virtual HRESULT __stdcall get_CoreSurfaces (
        /*[out,retval]*/ VARIANT * SurfVar ) = 0;
      virtual HRESULT __stdcall put_CoreSurfaces (
        /*[in]*/ VARIANT SurfVar ) = 0;
      virtual HRESULT __stdcall get_CavitySurfaces (
        /*[out,retval]*/ VARIANT * SurfVar ) = 0;
      virtual HRESULT __stdcall put_CavitySurfaces (
        /*[in]*/ VARIANT SurfVar ) = 0;
      virtual HRESULT __stdcall get_PartingSurfaces (
        /*[out,retval]*/ VARIANT * SurfVar ) = 0;
      virtual HRESULT __stdcall put_PartingSurfaces (
        /*[in]*/ VARIANT SurfVar ) = 0;
      virtual HRESULT __stdcall GetCoreSurfacesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetCoreSurfaces (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IBody2 * * BodyArr ) = 0;
      virtual HRESULT __stdcall ISetCoreSurfaces (
        /*[in]*/ long Count,
        /*[in]*/ struct IBody2 * * BodyArr ) = 0;
      virtual HRESULT __stdcall GetCavitySurfacesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetCavitySurfaces (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IBody2 * * BodyArr ) = 0;
      virtual HRESULT __stdcall ISetCavitySurfaces (
        /*[in]*/ long Count,
        /*[in]*/ struct IBody2 * * BodyArr ) = 0;
      virtual HRESULT __stdcall GetPartingSurfacesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetPartingSurfaces (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IBody2 * * BodyArr ) = 0;
      virtual HRESULT __stdcall ISetPartingSurfaces (
        /*[in]*/ long Count,
        /*[in]*/ struct IBody2 * * BodyArr ) = 0;
};

struct __declspec(uuid("4afd6ad9-af35-44eb-8e9b-e15007fbda62"))
ISplitBodyFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_TrimTools (
        /*[out,retval]*/ VARIANT * ToolVar ) = 0;
      virtual HRESULT __stdcall put_TrimTools (
        /*[in]*/ VARIANT ToolVar ) = 0;
      virtual HRESULT __stdcall GetTrimToolsCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetTrimTools (
        /*[in]*/ long Count,
        /*[out,retval]*/ IDispatch * * DispArr ) = 0;
      virtual HRESULT __stdcall ISetTrimTools (
        /*[in]*/ long Count,
        /*[in]*/ IDispatch * * DispArr ) = 0;
      virtual HRESULT __stdcall GetSplitBodies (
        /*[out]*/ VARIANT * BodyVar,
        /*[out]*/ VARIANT * PathVar,
        /*[out]*/ VARIANT * FlagVar ) = 0;
      virtual HRESULT __stdcall SetSplitBodies (
        /*[in]*/ VARIANT PathVar,
        /*[in]*/ VARIANT FlagVar ) = 0;
      virtual HRESULT __stdcall GetSplitBodiesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetSplitBodies (
        /*[in]*/ long Count,
        /*[out]*/ struct IBody2 * * BodyArr,
        /*[out]*/ BSTR * PathArr,
        /*[out]*/ VARIANT_BOOL * FlagArr ) = 0;
      virtual HRESULT __stdcall ISetSplitBodies (
        /*[in]*/ long Count,
        /*[in]*/ BSTR * PathArr,
        /*[in]*/ VARIANT_BOOL * FlagArr ) = 0;
      virtual HRESULT __stdcall get_State (
        /*[out,retval]*/ long * State ) = 0;
      virtual HRESULT __stdcall put_State (
        /*[in]*/ long State ) = 0;
      virtual HRESULT __stdcall get_Consume (
        /*[out,retval]*/ VARIANT_BOOL * BConsume ) = 0;
      virtual HRESULT __stdcall put_Consume (
        /*[in]*/ VARIANT_BOOL BConsume ) = 0;
};

struct __declspec(uuid("a8f7e532-ff58-4ea2-9b61-9963dfb78ff7"))
ISaveBodyFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall GetSaveBodiesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetSaveBodies (
        /*[out]*/ VARIANT * Bodies,
        /*[out]*/ VARIANT * FilePaths,
        /*[out]*/ VARIANT * Flags ) = 0;
      virtual HRESULT __stdcall get_ConsumeBody (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_ConsumeBody (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall AddSaveBodies (
        /*[in]*/ VARIANT Bodies,
        /*[in]*/ VARIANT FilePaths,
        /*[out,retval]*/ VARIANT_BOOL * Status ) = 0;
      virtual HRESULT __stdcall get_CopyCustomProperties (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_CopyCustomProperties (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_AssemblyPath (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall put_AssemblyPath (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall RemoveSaveBodies (
        /*[in]*/ VARIANT Bodies,
        /*[out,retval]*/ VARIANT_BOOL * Status ) = 0;
};

struct __declspec(uuid("a4e370f5-9bfb-4e7d-880c-94da7ea2440d"))
IJoinFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall GetJoinedPartsCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_JoinedParts (
        /*[out,retval]*/ VARIANT * VParts ) = 0;
      virtual HRESULT __stdcall put_JoinedParts (
        /*[in]*/ VARIANT VParts ) = 0;
      virtual HRESULT __stdcall IGetJoinedParts (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IComponent2 * * Parts ) = 0;
      virtual HRESULT __stdcall ISetJoinedParts (
        /*[in]*/ long Count,
        /*[in]*/ struct IComponent2 * * Parts ) = 0;
      virtual HRESULT __stdcall get_HideParts (
        /*[out,retval]*/ VARIANT_BOOL * VbHide ) = 0;
      virtual HRESULT __stdcall put_HideParts (
        /*[in]*/ VARIANT_BOOL VbHide ) = 0;
      virtual HRESULT __stdcall get_ForceSurfaceContact (
        /*[out,retval]*/ VARIANT_BOOL * VbForce ) = 0;
      virtual HRESULT __stdcall put_ForceSurfaceContact (
        /*[in]*/ VARIANT_BOOL VbForce ) = 0;
};

struct __declspec(uuid("57eb6a78-6e88-4ce9-baab-897ccc74a899"))
IFillSurfaceFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetPatchBoundary (
        /*[out]*/ VARIANT * EntType,
        /*[out,retval]*/ VARIANT * PatchVar ) = 0;
      virtual HRESULT __stdcall SetPatchBoundary (
        /*[in]*/ VARIANT PatchVar,
        /*[out,retval]*/ VARIANT_BOOL * BRet ) = 0;
      virtual HRESULT __stdcall GetPatchBoundaryCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetPatchBoundary (
        /*[in]*/ long Count,
        /*[out]*/ long * EntType,
        /*[out,retval]*/ IDispatch * * PatchArr ) = 0;
      virtual HRESULT __stdcall ISetPatchBoundary (
        /*[in]*/ long Count,
        /*[in]*/ IDispatch * * DispArr,
        /*[out,retval]*/ VARIANT_BOOL * BRet ) = 0;
      virtual HRESULT __stdcall GetAlternateFace (
        /*[out,retval]*/ struct IFace2 * * PFace ) = 0;
      virtual HRESULT __stdcall ToggleAlternateFace (
        /*[out,retval]*/ struct IFace2 * * PFace ) = 0;
      virtual HRESULT __stdcall GetCurvatureControl (
        /*[in]*/ IDispatch * EntityIn,
        /*[out,retval]*/ long * ControlType ) = 0;
      virtual HRESULT __stdcall SetCurvatureControl (
        /*[in]*/ IDispatch * EntityIn,
        /*[in]*/ long ControlType,
        /*[in]*/ VARIANT_BOOL BAll,
        /*[out,retval]*/ VARIANT_BOOL * BRet ) = 0;
      virtual HRESULT __stdcall get_ReverseSurface (
        /*[out,retval]*/ VARIANT_BOOL * BRev ) = 0;
      virtual HRESULT __stdcall put_ReverseSurface (
        /*[in]*/ VARIANT_BOOL BRev ) = 0;
      virtual HRESULT __stdcall get_OptimizeSurface (
        /*[out,retval]*/ VARIANT_BOOL * BOpt ) = 0;
      virtual HRESULT __stdcall put_OptimizeSurface (
        /*[in]*/ VARIANT_BOOL BOpt ) = 0;
      virtual HRESULT __stdcall GetConstraintCurves (
        /*[out]*/ VARIANT * TypeArr,
        /*[out,retval]*/ VARIANT * ConstraintVar ) = 0;
      virtual HRESULT __stdcall SetConstraintCurves (
        /*[in]*/ VARIANT ConstraintVar ) = 0;
      virtual HRESULT __stdcall GetConstraintCurvesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetConstraintCurves (
        /*[in]*/ long Count,
        /*[out]*/ long * TypeArr,
        /*[out,retval]*/ IDispatch * * DispArr ) = 0;
      virtual HRESULT __stdcall ISetConstraintCurves (
        /*[in]*/ long Count,
        /*[in]*/ IDispatch * * DispArr ) = 0;
      virtual HRESULT __stdcall get_ResolutionControl (
        /*[out,retval]*/ long * Val ) = 0;
      virtual HRESULT __stdcall put_ResolutionControl (
        /*[in]*/ long Val ) = 0;
      virtual HRESULT __stdcall get_Merge (
        /*[out,retval]*/ VARIANT_BOOL * BMerge ) = 0;
      virtual HRESULT __stdcall put_Merge (
        /*[in]*/ VARIANT_BOOL BMerge ) = 0;
      virtual HRESULT __stdcall get_TryToFormSolid (
        /*[out,retval]*/ VARIANT_BOOL * BFormSolid ) = 0;
      virtual HRESULT __stdcall put_TryToFormSolid (
        /*[in]*/ VARIANT_BOOL BFormSolid ) = 0;
      virtual HRESULT __stdcall get_ReverseDirection (
        /*[out,retval]*/ VARIANT_BOOL * BRev ) = 0;
      virtual HRESULT __stdcall put_ReverseDirection (
        /*[in]*/ VARIANT_BOOL BRev ) = 0;
      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
};

struct __declspec(uuid("215b0bec-ddcd-4ece-bd49-b22c8aed9e7d"))
ISplitLineFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall GetType (
        /*[out,retval]*/ long * SplitType ) = 0;
      virtual HRESULT __stdcall get_PullDirectionBase (
        /*[out,retval]*/ IDispatch * * PEnt ) = 0;
      virtual HRESULT __stdcall put_PullDirectionBase (
        /*[in]*/ IDispatch * PEnt ) = 0;
      virtual HRESULT __stdcall get_PullDirectionType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall get_ReverseDirection (
        /*[out,retval]*/ VARIANT_BOOL * BRev ) = 0;
      virtual HRESULT __stdcall put_ReverseDirection (
        /*[in]*/ VARIANT_BOOL BRev ) = 0;
      virtual HRESULT __stdcall get_SingleDirection (
        /*[out,retval]*/ VARIANT_BOOL * BRev ) = 0;
      virtual HRESULT __stdcall put_SingleDirection (
        /*[in]*/ VARIANT_BOOL BRev ) = 0;
      virtual HRESULT __stdcall get_Faces (
        /*[out,retval]*/ VARIANT * PVar ) = 0;
      virtual HRESULT __stdcall put_Faces (
        /*[in]*/ VARIANT PVar ) = 0;
      virtual HRESULT __stdcall GetFacesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetFaces (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IFace2 * * EntOut ) = 0;
      virtual HRESULT __stdcall ISetFaces (
        /*[in]*/ long Count,
        /*[in]*/ struct IFace2 * * EntIn ) = 0;
      virtual HRESULT __stdcall get_Sketch (
        /*[out,retval]*/ struct ISketch * * Sketch ) = 0;
      virtual HRESULT __stdcall put_Sketch (
        /*[in]*/ struct ISketch * Sketch ) = 0;
      virtual HRESULT __stdcall get_Contours (
        /*[out,retval]*/ VARIANT * Contours ) = 0;
      virtual HRESULT __stdcall put_Contours (
        /*[in]*/ VARIANT Contours ) = 0;
      virtual HRESULT __stdcall GetContoursCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetContours (
        /*[in]*/ long Count,
        /*[out,retval]*/ IDispatch * * Contours ) = 0;
      virtual HRESULT __stdcall ISetContours (
        /*[in]*/ long Count,
        /*[in]*/ IDispatch * * Contours ) = 0;
      virtual HRESULT __stdcall get_Angle (
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall put_Angle (
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall get_SplitTools (
        /*[out,retval]*/ VARIANT * ToolVar ) = 0;
      virtual HRESULT __stdcall put_SplitTools (
        /*[in]*/ VARIANT ToolVar ) = 0;
      virtual HRESULT __stdcall GetSplitToolsCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetSplitTools (
        /*[in]*/ long Count,
        /*[out,retval]*/ IDispatch * * DispArr ) = 0;
      virtual HRESULT __stdcall ISetSplitTools (
        /*[in]*/ long Count,
        /*[in]*/ IDispatch * * DispArr ) = 0;
      virtual HRESULT __stdcall get_SplitAll (
        /*[out,retval]*/ VARIANT_BOOL * Option ) = 0;
      virtual HRESULT __stdcall put_SplitAll (
        /*[in]*/ VARIANT_BOOL Option ) = 0;
      virtual HRESULT __stdcall get_SplitType (
        /*[out,retval]*/ long * SplitType ) = 0;
      virtual HRESULT __stdcall put_SplitType (
        /*[in]*/ long SplitType ) = 0;
      virtual HRESULT __stdcall get_SplitTargets (
        /*[out,retval]*/ VARIANT * ToolVar ) = 0;
      virtual HRESULT __stdcall put_SplitTargets (
        /*[in]*/ VARIANT ToolVar ) = 0;
      virtual HRESULT __stdcall GetSplitTargetsCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetSplitTargets (
        /*[in]*/ long Count,
        /*[out,retval]*/ IDispatch * * DispArr ) = 0;
      virtual HRESULT __stdcall ISetSplitTargets (
        /*[in]*/ long Count,
        /*[in]*/ IDispatch * * DispArr ) = 0;
};

struct __declspec(uuid("ed645449-bd48-47e6-9a7f-a8782e849b09"))
IWrapSketchFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall get_Face (
        /*[out,retval]*/ struct IFace2 * * LpFace ) = 0;
      virtual HRESULT __stdcall put_Face (
        /*[in]*/ struct IFace2 * LpFace ) = 0;
      virtual HRESULT __stdcall get_Thickness (
        /*[out,retval]*/ double * Thickness ) = 0;
      virtual HRESULT __stdcall put_Thickness (
        /*[in]*/ double Thickness ) = 0;
      virtual HRESULT __stdcall get_ReverseDirection (
        /*[out,retval]*/ VARIANT_BOOL * VbReverseDir ) = 0;
      virtual HRESULT __stdcall put_ReverseDirection (
        /*[in]*/ VARIANT_BOOL VbReverseDir ) = 0;
      virtual HRESULT __stdcall get_PullDirection (
        /*[out,retval]*/ IDispatch * * LpPullDir ) = 0;
      virtual HRESULT __stdcall put_PullDirection (
        /*[in]*/ IDispatch * LpPullDir ) = 0;
      virtual HRESULT __stdcall get_SourceSketch (
        /*[out,retval]*/ struct ISketch * * LpSketch ) = 0;
      virtual HRESULT __stdcall put_SourceSketch (
        /*[in]*/ struct ISketch * LpSketch ) = 0;
};

struct __declspec(uuid("9db80806-edb1-4463-b0f3-d3f3beae465e"))
IEndCapFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_Face (
        /*[out,retval]*/ struct IFace2 * * PFace ) = 0;
      virtual HRESULT __stdcall put_Face (
        /*[in]*/ struct IFace2 * PFace ) = 0;
      virtual HRESULT __stdcall get_Thickness (
        /*[out,retval]*/ double * Thickness ) = 0;
      virtual HRESULT __stdcall put_Thickness (
        /*[in]*/ double Thickness ) = 0;
      virtual HRESULT __stdcall get_UseThicknessRatioForOffset (
        /*[out,retval]*/ VARIANT_BOOL * UseRatio ) = 0;
      virtual HRESULT __stdcall put_UseThicknessRatioForOffset (
        /*[in]*/ VARIANT_BOOL UseRatio ) = 0;
      virtual HRESULT __stdcall get_ThicknessRatioForOffset (
        /*[out,retval]*/ double * Ratio ) = 0;
      virtual HRESULT __stdcall put_ThicknessRatioForOffset (
        /*[in]*/ double Ratio ) = 0;
      virtual HRESULT __stdcall get_OffsetDistance (
        /*[out,retval]*/ double * Dist ) = 0;
      virtual HRESULT __stdcall put_OffsetDistance (
        /*[in]*/ double Dist ) = 0;
      virtual HRESULT __stdcall get_UseChamferCorners (
        /*[out,retval]*/ VARIANT_BOOL * BUse ) = 0;
      virtual HRESULT __stdcall put_UseChamferCorners (
        /*[in]*/ VARIANT_BOOL BUse ) = 0;
      virtual HRESULT __stdcall get_ChamferDistance (
        /*[out,retval]*/ double * Dist ) = 0;
      virtual HRESULT __stdcall put_ChamferDistance (
        /*[in]*/ double Dist ) = 0;
};

struct __declspec(uuid("ae327ce4-caee-42c6-9820-121001113e06"))
IGussetFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall GetSupportingFaces (
        /*[out]*/ struct IFace2 * * PFace1,
        /*[out]*/ struct IFace2 * * PFace2,
        /*[out,retval]*/ VARIANT_BOOL * BRet ) = 0;
      virtual HRESULT __stdcall SetSupportingFaces (
        /*[in]*/ struct IFace2 * PFace1,
        /*[in]*/ struct IFace2 * PFace2,
        /*[out,retval]*/ VARIANT_BOOL * BRet ) = 0;
      virtual HRESULT __stdcall get_FlipProfileDistanceParameters (
        /*[out,retval]*/ VARIANT_BOOL * BRet ) = 0;
      virtual HRESULT __stdcall put_FlipProfileDistanceParameters (
        /*[in]*/ VARIANT_BOOL BRet ) = 0;
      virtual HRESULT __stdcall get_ProfileType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_ProfileType (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall get_ProfileDistance1 (
        /*[out,retval]*/ double * Dist ) = 0;
      virtual HRESULT __stdcall put_ProfileDistance1 (
        /*[in]*/ double Dist ) = 0;
      virtual HRESULT __stdcall get_ProfileDistance2 (
        /*[out,retval]*/ double * Dist ) = 0;
      virtual HRESULT __stdcall put_ProfileDistance2 (
        /*[in]*/ double Dist ) = 0;
      virtual HRESULT __stdcall get_ProfileDistance3 (
        /*[out,retval]*/ double * Dist ) = 0;
      virtual HRESULT __stdcall put_ProfileDistance3 (
        /*[in]*/ double Dist ) = 0;
      virtual HRESULT __stdcall get_ProfileDistance4 (
        /*[out,retval]*/ double * Dist ) = 0;
      virtual HRESULT __stdcall put_ProfileDistance4 (
        /*[in]*/ double Dist ) = 0;
      virtual HRESULT __stdcall get_ProfileAngle (
        /*[out,retval]*/ double * Ang ) = 0;
      virtual HRESULT __stdcall put_ProfileAngle (
        /*[in]*/ double Ang ) = 0;
      virtual HRESULT __stdcall get_ThicknessType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_ThicknessType (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall get_Thickness (
        /*[out,retval]*/ double * Thickness ) = 0;
      virtual HRESULT __stdcall put_Thickness (
        /*[in]*/ double Thickness ) = 0;
      virtual HRESULT __stdcall get_ProfileLocation (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_ProfileLocation (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall get_OffsetUsed (
        /*[out,retval]*/ VARIANT_BOOL * BUsed ) = 0;
      virtual HRESULT __stdcall put_OffsetUsed (
        /*[in]*/ VARIANT_BOOL BUsed ) = 0;
      virtual HRESULT __stdcall get_ProfileOffsetDistance (
        /*[out,retval]*/ double * Dist ) = 0;
      virtual HRESULT __stdcall put_ProfileOffsetDistance (
        /*[in]*/ double Dist ) = 0;
      virtual HRESULT __stdcall get_FlipOffsetDirection (
        /*[out,retval]*/ VARIANT_BOOL * BRet ) = 0;
      virtual HRESULT __stdcall put_FlipOffsetDirection (
        /*[in]*/ VARIANT_BOOL BRet ) = 0;
      virtual HRESULT __stdcall get_UseAngle (
        /*[out,retval]*/ VARIANT_BOOL * BUsed ) = 0;
      virtual HRESULT __stdcall put_UseAngle (
        /*[in]*/ VARIANT_BOOL BUsed ) = 0;
};

struct __declspec(uuid("526d5a18-6855-411a-9003-7345dd56e5e3"))
ICombineBodiesFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ struct IModelDoc2 * PTopDoc,
        /*[in]*/ struct IComponent2 * PComponent,
        /*[out,retval]*/ VARIANT_BOOL * VbAccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_MainBody (
        /*[out,retval]*/ struct IBody2 * * MainBody ) = 0;
      virtual HRESULT __stdcall put_MainBody (
        /*[in]*/ struct IBody2 * MainBody ) = 0;
      virtual HRESULT __stdcall GetBodiesToCombineCount (
        /*[out,retval]*/ long * NCount ) = 0;
      virtual HRESULT __stdcall get_BodiesToCombine (
        /*[out,retval]*/ VARIANT * VBodiesToCombine ) = 0;
      virtual HRESULT __stdcall put_BodiesToCombine (
        /*[in]*/ VARIANT VBodiesToCombine ) = 0;
      virtual HRESULT __stdcall IGetBodiesToCombine (
        /*[in]*/ long NCount,
        /*[out,retval]*/ struct IBody2 * * PBodiesToCombine ) = 0;
      virtual HRESULT __stdcall ISetBodiesToCombine (
        /*[in]*/ long NCount,
        /*[in]*/ struct IBody2 * * PBodiesToCombine ) = 0;
      virtual HRESULT __stdcall get_OperationType (
        /*[out,retval]*/ long * NOperationType ) = 0;
      virtual HRESULT __stdcall put_OperationType (
        /*[in]*/ long NOperationType ) = 0;
};

struct __declspec(uuid("ac44bc75-60b1-44b5-ba39-32cc6ed6729e"))
ILibraryFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ struct IModelDoc2 * PTopDoc,
        /*[in]*/ struct IComponent2 * PComponent,
        /*[out,retval]*/ VARIANT_BOOL * VbAccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall GetPlacementPlane (
        /*[out]*/ long * Type,
        /*[out,retval]*/ IDispatch * * PDispOut ) = 0;
      virtual HRESULT __stdcall SetPlacementPlane (
        /*[in]*/ IDispatch * PDispIn ) = 0;
      virtual HRESULT __stdcall get_ConfigurationName (
        /*[out,retval]*/ BSTR * NameOut ) = 0;
      virtual HRESULT __stdcall put_ConfigurationName (
        /*[in]*/ BSTR NameOut ) = 0;
      virtual HRESULT __stdcall get_LinkToLibraryPart (
        /*[out,retval]*/ VARIANT_BOOL * BLink ) = 0;
      virtual HRESULT __stdcall put_LinkToLibraryPart (
        /*[in]*/ VARIANT_BOOL BLink ) = 0;
      virtual HRESULT __stdcall get_OverrideDimension (
        /*[out,retval]*/ VARIANT_BOOL * BOverride ) = 0;
      virtual HRESULT __stdcall put_OverrideDimension (
        /*[in]*/ VARIANT_BOOL BOverride ) = 0;
      virtual HRESULT __stdcall GetReferences (
        /*[out]*/ VARIANT * RefType,
        /*[out,retval]*/ VARIANT * RefVar ) = 0;
      virtual HRESULT __stdcall SetReferences (
        /*[in]*/ VARIANT RefVar ) = 0;
      virtual HRESULT __stdcall GetReferencesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetReferences (
        /*[in]*/ long Count,
        /*[out]*/ long * RefType,
        /*[out,retval]*/ IDispatch * * RefVar ) = 0;
      virtual HRESULT __stdcall ISetReferences (
        /*[in]*/ long Count,
        /*[in]*/ IDispatch * * RefVar ) = 0;
      virtual HRESULT __stdcall GetDimensions (
        /*[in]*/ long Type,
        /*[out]*/ VARIANT * DimName,
        /*[out,retval]*/ VARIANT * DimVal ) = 0;
      virtual HRESULT __stdcall SetDimension (
        /*[in]*/ long Type,
        /*[in]*/ BSTR DimName,
        /*[in]*/ double DimVal,
        /*[out,retval]*/ VARIANT_BOOL * BRet ) = 0;
      virtual HRESULT __stdcall GetDimensionsCount (
        /*[in]*/ long Type,
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetDimensions (
        /*[in]*/ long Type,
        /*[in]*/ long Count,
        /*[out]*/ BSTR * DimName,
        /*[out,retval]*/ double * DimVal ) = 0;
      virtual HRESULT __stdcall GetConfigurationCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetAllConfigurationNames (
        /*[out,retval]*/ VARIANT * ConfigNames ) = 0;
      virtual HRESULT __stdcall IGetAllConfigurationNames (
        /*[in]*/ long Count,
        /*[out,retval]*/ BSTR * ConfigNames ) = 0;
      virtual HRESULT __stdcall get_LibraryPart (
        /*[out,retval]*/ BSTR * NameOut ) = 0;
      virtual HRESULT __stdcall Initialize (
        /*[in]*/ BSTR FileNameIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("d06c413a-fa92-4147-85c5-47fe67c5879d"))
ISimulationMotorFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DirectionReference (
        /*[out,retval]*/ IDispatch * * PDirDisp ) = 0;
      virtual HRESULT __stdcall put_DirectionReference (
        /*[in]*/ IDispatch * PDirDisp ) = 0;
      virtual HRESULT __stdcall get_ReverseDirection (
        /*[out,retval]*/ VARIANT_BOOL * BRev ) = 0;
      virtual HRESULT __stdcall put_ReverseDirection (
        /*[in]*/ VARIANT_BOOL BRev ) = 0;
      virtual HRESULT __stdcall get_Velocity (
        /*[out,retval]*/ double * Strength ) = 0;
      virtual HRESULT __stdcall put_Velocity (
        /*[in]*/ double Strength ) = 0;
      virtual HRESULT __stdcall get_MotorType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall get_ExternalState (
        /*[out,retval]*/ VARIANT_BOOL * BRev ) = 0;
      virtual HRESULT __stdcall put_ExternalState (
        /*[in]*/ VARIANT_BOOL BRev ) = 0;
      virtual HRESULT __stdcall get_MotionType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_MotionType (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall get_DriveType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_DriveType (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall get_SplineData (
        /*[out,retval]*/ VARIANT * SPData ) = 0;
      virtual HRESULT __stdcall put_SplineData (
        /*[in]*/ VARIANT SPData ) = 0;
      virtual HRESULT __stdcall get_Expression (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_Expression (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall ConstantSpeedMotor (
        /*[in]*/ double Speed ) = 0;
      virtual HRESULT __stdcall OscillatingMotor (
        /*[in]*/ double Displacement,
        /*[in]*/ double Frequency ) = 0;
      virtual HRESULT __stdcall DistanceMotor (
        /*[in]*/ double Displacement,
        /*[in]*/ double StartTime,
        /*[in]*/ double Duration ) = 0;
      virtual HRESULT __stdcall InterpolatedMotor (
        /*[in]*/ long DriveType,
        /*[in]*/ long InterpolationScheme ) = 0;
      virtual HRESULT __stdcall LoadSplineData (
        /*[in]*/ BSTR Value,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_InterpolationScheme (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_InterpolationScheme (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall get_LoadReferences (
        /*[out,retval]*/ VARIANT * References ) = 0;
      virtual HRESULT __stdcall put_LoadReferences (
        /*[in]*/ VARIANT References ) = 0;
      virtual HRESULT __stdcall get_RelativeComponent (
        /*[out,retval]*/ struct IComponent2 * * PRelativeComponent ) = 0;
      virtual HRESULT __stdcall put_RelativeComponent (
        /*[in]*/ struct IComponent2 * PRelativeComponent ) = 0;
      virtual HRESULT __stdcall get_Location (
        /*[out,retval]*/ IDispatch * * PDirDisp ) = 0;
      virtual HRESULT __stdcall put_Location (
        /*[in]*/ IDispatch * PDirDisp ) = 0;
      virtual HRESULT __stdcall GetInterpolatedValue (
        /*[in]*/ double Time,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_Magnitude (
        /*[out,retval]*/ double * Strength ) = 0;
      virtual HRESULT __stdcall put_Magnitude (
        /*[in]*/ double Strength ) = 0;
};

struct __declspec(uuid("c4799cd9-d4ce-4452-be95-64fc26016dd0"))
ISimulationSpringFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetEndPoints (
        /*[out]*/ IDispatch * * PDirDisp1,
        /*[out]*/ IDispatch * * PDirDisp2,
        /*[out]*/ long * Type1,
        /*[out]*/ long * Type2,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetEndPoints (
        /*[in]*/ IDispatch * PDirDisp1,
        /*[in]*/ IDispatch * PDirDisp2,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_FreeLength (
        /*[out,retval]*/ double * Len ) = 0;
      virtual HRESULT __stdcall put_FreeLength (
        /*[in]*/ double Len ) = 0;
      virtual HRESULT __stdcall get_SpringConstant (
        /*[out,retval]*/ double * Constant ) = 0;
      virtual HRESULT __stdcall put_SpringConstant (
        /*[in]*/ double Constant ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall get_ExponentOfSpringForceExpression (
        /*[out,retval]*/ long * Exponent ) = 0;
      virtual HRESULT __stdcall put_ExponentOfSpringForceExpression (
        /*[in]*/ long Exponent ) = 0;
      virtual HRESULT __stdcall get_UpdateToModelChanges (
        /*[out,retval]*/ VARIANT_BOOL * Update ) = 0;
      virtual HRESULT __stdcall put_UpdateToModelChanges (
        /*[in]*/ VARIANT_BOOL Update ) = 0;
      virtual HRESULT __stdcall get_HasDamper (
        /*[out,retval]*/ VARIANT_BOOL * BValue ) = 0;
      virtual HRESULT __stdcall put_HasDamper (
        /*[in]*/ VARIANT_BOOL BValue ) = 0;
      virtual HRESULT __stdcall get_DampingConstant (
        /*[out,retval]*/ double * Constant ) = 0;
      virtual HRESULT __stdcall put_DampingConstant (
        /*[in]*/ double Constant ) = 0;
      virtual HRESULT __stdcall get_ExponentOfDamperForceExpression (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_ExponentOfDamperForceExpression (
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall get_CoilDiameter (
        /*[out,retval]*/ double * Diameter ) = 0;
      virtual HRESULT __stdcall put_CoilDiameter (
        /*[in]*/ double Diameter ) = 0;
      virtual HRESULT __stdcall get_NumberOfCoils (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall put_NumberOfCoils (
        /*[in]*/ long Count ) = 0;
      virtual HRESULT __stdcall get_WireDiameter (
        /*[out,retval]*/ double * Diameter ) = 0;
      virtual HRESULT __stdcall put_WireDiameter (
        /*[in]*/ double Diameter ) = 0;
      virtual HRESULT __stdcall get_BaseComponent (
        /*[out,retval]*/ struct IComponent2 * * Component ) = 0;
      virtual HRESULT __stdcall put_BaseComponent (
        /*[in]*/ struct IComponent2 * Component ) = 0;
      virtual HRESULT __stdcall get_ReverseDirection (
        /*[out,retval]*/ VARIANT_BOOL * BValue ) = 0;
      virtual HRESULT __stdcall put_ReverseDirection (
        /*[in]*/ VARIANT_BOOL BValue ) = 0;
      virtual HRESULT __stdcall get_LoadReferences (
        /*[out,retval]*/ VARIANT * References ) = 0;
      virtual HRESULT __stdcall put_LoadReferences (
        /*[in]*/ VARIANT References ) = 0;
      virtual HRESULT __stdcall get_FreeAngle (
        /*[out,retval]*/ double * Ang ) = 0;
      virtual HRESULT __stdcall put_FreeAngle (
        /*[in]*/ double Ang ) = 0;
};

struct __declspec(uuid("d1d31986-c631-4726-9988-a45f592cfab2"))
IWeldmentTrimExtendFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ struct IModelDoc2 * PTopDoc,
        /*[in]*/ struct IComponent2 * PComponent,
        /*[out,retval]*/ VARIANT_BOOL * VbAccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_CornerType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_CornerType (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall GetBodiesToBeTrimmedCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_BodiesToBeTrimmed (
        /*[out,retval]*/ VARIANT * BodiesOut ) = 0;
      virtual HRESULT __stdcall put_BodiesToBeTrimmed (
        /*[in]*/ VARIANT BodiesOut ) = 0;
      virtual HRESULT __stdcall IGetBodiesToBeTrimmed (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IBody2 * * BodiesOut ) = 0;
      virtual HRESULT __stdcall ISetBodiesToBeTrimmed (
        /*[in]*/ long Count,
        /*[in]*/ struct IBody2 * * BodiesIn ) = 0;
      virtual HRESULT __stdcall GetTrimmingBoundaryCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetTrimmingBoundary (
        /*[out]*/ long * Type,
        /*[out,retval]*/ VARIANT * TrimBoundVar ) = 0;
      virtual HRESULT __stdcall SetTrimmingBoundary (
        /*[in]*/ VARIANT TrimBoundVar ) = 0;
      virtual HRESULT __stdcall IGetTrimmingBoundary (
        /*[in]*/ long Count,
        /*[out]*/ long * Type,
        /*[out,retval]*/ IDispatch * * TrimBoundArr ) = 0;
      virtual HRESULT __stdcall ISetTrimmingBoundary (
        /*[in]*/ long Count,
        /*[in]*/ IDispatch * * TrimBoundArr ) = 0;
};

struct __declspec(uuid("93f2e4d8-ad2d-41b6-a5f7-6e7e628ccfab"))
IWeldmentBeadFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ struct IModelDoc2 * PTopDoc,
        /*[in]*/ struct IComponent2 * PComponent,
        /*[out,retval]*/ VARIANT_BOOL * VbAccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_BeadType (
        /*[in]*/ long Side,
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_BeadType (
        /*[in]*/ long Side,
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall get_BeadSize (
        /*[in]*/ long Side,
        /*[out,retval]*/ double * Size ) = 0;
      virtual HRESULT __stdcall put_BeadSize (
        /*[in]*/ long Side,
        /*[in]*/ double Size ) = 0;
      virtual HRESULT __stdcall get_BeadLength (
        /*[in]*/ long Side,
        /*[out,retval]*/ double * Len ) = 0;
      virtual HRESULT __stdcall put_BeadLength (
        /*[in]*/ long Side,
        /*[in]*/ double Len ) = 0;
      virtual HRESULT __stdcall get_BeadPitch (
        /*[in]*/ long Side,
        /*[out,retval]*/ double * Pitch ) = 0;
      virtual HRESULT __stdcall put_BeadPitch (
        /*[in]*/ long Side,
        /*[in]*/ double Pitch ) = 0;
      virtual HRESULT __stdcall get_TangentPropagation (
        /*[out,retval]*/ VARIANT_BOOL * Prop ) = 0;
      virtual HRESULT __stdcall put_TangentPropagation (
        /*[in]*/ VARIANT_BOOL Prop ) = 0;
      virtual HRESULT __stdcall GetFaces (
        /*[in]*/ long Side,
        /*[out]*/ VARIANT * FaceSet1,
        /*[out]*/ VARIANT * FaceSet2 ) = 0;
      virtual HRESULT __stdcall SetFaces (
        /*[in]*/ long Side,
        /*[in]*/ VARIANT FaceSet1,
        /*[in]*/ VARIANT FaceSet2,
        /*[out,retval]*/ VARIANT_BOOL * BRet ) = 0;
      virtual HRESULT __stdcall GetFacesCount (
        /*[in]*/ long Side,
        /*[out]*/ long * FaceSet1Count,
        /*[out]*/ long * FaceSet2Count ) = 0;
      virtual HRESULT __stdcall IGetFaces (
        /*[in]*/ long Side,
        /*[in]*/ long Count1,
        /*[out]*/ struct IFace2 * * FaceSet1,
        /*[in]*/ long Count2,
        /*[out]*/ struct IFace2 * * FaceSet2 ) = 0;
      virtual HRESULT __stdcall ISetFaces (
        /*[in]*/ long Side,
        /*[in]*/ long Count1,
        /*[in]*/ struct IFace2 * * FaceSet1,
        /*[in]*/ long Count2,
        /*[in]*/ struct IFace2 * * FaceSet2,
        /*[out,retval]*/ VARIANT_BOOL * BRet ) = 0;
      virtual HRESULT __stdcall GetVirtualEdgesCount (
        /*[in]*/ VARIANT_BOOL FromFeature,
        /*[in]*/ long Side,
        /*[out,retval]*/ long * EdgeCount ) = 0;
      virtual HRESULT __stdcall GetVirtualEdges (
        /*[in]*/ VARIANT_BOOL FromFeature,
        /*[in]*/ long Side,
        /*[out,retval]*/ VARIANT * EdgesOut ) = 0;
      virtual HRESULT __stdcall SetVirtualEdges (
        /*[in]*/ long Side,
        /*[in]*/ VARIANT EdgesIn ) = 0;
      virtual HRESULT __stdcall IGetVirtualEdges (
        /*[in]*/ VARIANT_BOOL FromFeature,
        /*[in]*/ long Side,
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IEdge * * EdgesOut ) = 0;
      virtual HRESULT __stdcall ISetVirtualEdges (
        /*[in]*/ long Side,
        /*[in]*/ long Count,
        /*[in]*/ struct IEdge * * EdgesIn ) = 0;
      virtual HRESULT __stdcall get_UseOtherSide (
        /*[out,retval]*/ VARIANT_BOOL * BUse ) = 0;
      virtual HRESULT __stdcall put_UseOtherSide (
        /*[in]*/ VARIANT_BOOL BUse ) = 0;
};

struct __declspec(uuid("900b5953-3bd3-43ab-b190-67eacd25a69a"))
ICoreFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ struct IModelDoc2 * PTopDoc,
        /*[in]*/ struct IComponent2 * PComponent,
        /*[out,retval]*/ VARIANT_BOOL * VbAccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_BoundingSketch (
        /*[out,retval]*/ struct IFeature * * PFeat ) = 0;
      virtual HRESULT __stdcall put_BoundingSketch (
        /*[in]*/ struct IFeature * PFeat ) = 0;
      virtual HRESULT __stdcall get_ReverseDirection (
        /*[out,retval]*/ VARIANT_BOOL * BRev ) = 0;
      virtual HRESULT __stdcall put_ReverseDirection (
        /*[in]*/ VARIANT_BOOL BRev ) = 0;
      virtual HRESULT __stdcall GetExtractionDirection (
        /*[out]*/ long * Type1,
        /*[out]*/ IDispatch * * PDir1,
        /*[out]*/ long * Type2,
        /*[out]*/ IDispatch * * PDir2,
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall SetExtractionDirection (
        /*[in]*/ IDispatch * PDir1,
        /*[in]*/ IDispatch * PDir2,
        /*[out,retval]*/ VARIANT_BOOL * BRet ) = 0;
      virtual HRESULT __stdcall get_TargetBody (
        /*[out,retval]*/ struct IBody2 * * PBody ) = 0;
      virtual HRESULT __stdcall put_TargetBody (
        /*[in]*/ struct IBody2 * PBody ) = 0;
      virtual HRESULT __stdcall get_UseDraft (
        /*[out,retval]*/ VARIANT_BOOL * BUse ) = 0;
      virtual HRESULT __stdcall put_UseDraft (
        /*[in]*/ VARIANT_BOOL BUse ) = 0;
      virtual HRESULT __stdcall get_DraftAngle (
        /*[out,retval]*/ double * Ang ) = 0;
      virtual HRESULT __stdcall put_DraftAngle (
        /*[in]*/ double Ang ) = 0;
      virtual HRESULT __stdcall get_DraftOutward (
        /*[out,retval]*/ VARIANT_BOOL * BOutward ) = 0;
      virtual HRESULT __stdcall put_DraftOutward (
        /*[in]*/ VARIANT_BOOL BOutward ) = 0;
      virtual HRESULT __stdcall get_EndCondition (
        /*[in]*/ long Index,
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_EndCondition (
        /*[in]*/ long Index,
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall get_Depth (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_Depth (
        /*[in]*/ long Index,
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_CapEnds (
        /*[out,retval]*/ VARIANT_BOOL * BCap ) = 0;
      virtual HRESULT __stdcall put_CapEnds (
        /*[in]*/ VARIANT_BOOL BCap ) = 0;
};

struct __declspec(uuid("bc300b17-346f-4511-8d31-969c580bb16b"))
IMoveFaceFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_MoveType (
        /*[out,retval]*/ long * LMoveType ) = 0;
      virtual HRESULT __stdcall put_MoveType (
        /*[in]*/ long LMoveType ) = 0;
      virtual HRESULT __stdcall get_ReverseDirection (
        /*[out,retval]*/ VARIANT_BOOL * VBReverseDirection ) = 0;
      virtual HRESULT __stdcall put_ReverseDirection (
        /*[in]*/ VARIANT_BOOL VBReverseDirection ) = 0;
      virtual HRESULT __stdcall get_Angle (
        /*[out,retval]*/ double * DAngle ) = 0;
      virtual HRESULT __stdcall put_Angle (
        /*[in]*/ double DAngle ) = 0;
      virtual HRESULT __stdcall get_Distance (
        /*[out,retval]*/ double * DDistance ) = 0;
      virtual HRESULT __stdcall put_Distance (
        /*[in]*/ double DDistance ) = 0;
      virtual HRESULT __stdcall get_Faces (
        /*[out,retval]*/ VARIANT * PVar ) = 0;
      virtual HRESULT __stdcall put_Faces (
        /*[in]*/ VARIANT PVar ) = 0;
      virtual HRESULT __stdcall GetFacesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetFaces (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IFace2 * * EntOut ) = 0;
      virtual HRESULT __stdcall ISetFaces (
        /*[in]*/ long Count,
        /*[in]*/ struct IFace2 * * EntIn ) = 0;
      virtual HRESULT __stdcall GetDirectionReference (
        /*[out]*/ long * DirRefType,
        /*[out,retval]*/ IDispatch * * LpDispatch ) = 0;
      virtual HRESULT __stdcall SetDirectionReference (
        /*[in]*/ IDispatch * LpDispatch,
        /*[out,retval]*/ VARIANT_BOOL * VbRetval ) = 0;
};

struct __declspec(uuid("cfbd8d35-9c42-44f5-af20-a27988f95fd9"))
IHealEdgesFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_Faces (
        /*[out,retval]*/ VARIANT * PVar ) = 0;
      virtual HRESULT __stdcall put_Faces (
        /*[in]*/ VARIANT PVar ) = 0;
      virtual HRESULT __stdcall GetFacesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetFaces (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IFace2 * * EntOut ) = 0;
      virtual HRESULT __stdcall ISetFaces (
        /*[in]*/ long Count,
        /*[in]*/ struct IFace2 * * EntIn ) = 0;
      virtual HRESULT __stdcall get_AngularTolerance (
        /*[out,retval]*/ double * DAngle ) = 0;
      virtual HRESULT __stdcall put_AngularTolerance (
        /*[in]*/ double DAngle ) = 0;
      virtual HRESULT __stdcall get_EdgeLengthTolerance (
        /*[out,retval]*/ double * DDistance ) = 0;
      virtual HRESULT __stdcall put_EdgeLengthTolerance (
        /*[in]*/ double DDistance ) = 0;
      virtual HRESULT __stdcall HealEdges ( ) = 0;
      virtual HRESULT __stdcall GetEdgeInformation (
        /*[out]*/ long * EdgeCountBefore,
        /*[out]*/ long * EdgeCountAfter ) = 0;
};

struct __declspec(uuid("a1672af7-e65f-46e8-800c-7cbf4da6e80f"))
IDerivedPartFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ImportPlane (
        /*[out,retval]*/ VARIANT_BOOL * ImportPlane ) = 0;
      virtual HRESULT __stdcall put_ImportPlane (
        /*[in]*/ VARIANT_BOOL ImportPlane ) = 0;
      virtual HRESULT __stdcall get_ImportAxis (
        /*[out,retval]*/ VARIANT_BOOL * ImportAxis ) = 0;
      virtual HRESULT __stdcall put_ImportAxis (
        /*[in]*/ VARIANT_BOOL ImportAxis ) = 0;
      virtual HRESULT __stdcall get_ImportCThread (
        /*[out,retval]*/ VARIANT_BOOL * ImportCThread ) = 0;
      virtual HRESULT __stdcall put_ImportCThread (
        /*[in]*/ VARIANT_BOOL ImportCThread ) = 0;
      virtual HRESULT __stdcall get_ImportSurf (
        /*[out,retval]*/ VARIANT_BOOL * ImportSurf ) = 0;
      virtual HRESULT __stdcall put_ImportSurf (
        /*[in]*/ VARIANT_BOOL ImportSurf ) = 0;
      virtual HRESULT __stdcall get_ImportAbsorbedSketches (
        /*[out,retval]*/ VARIANT_BOOL * ImportAbsorbedSketches ) = 0;
      virtual HRESULT __stdcall put_ImportAbsorbedSketches (
        /*[in]*/ VARIANT_BOOL ImportAbsorbedSketches ) = 0;
      virtual HRESULT __stdcall get_ImportUnAbsorbedSketches (
        /*[out,retval]*/ VARIANT_BOOL * ImportUnAbsorbedSketches ) = 0;
      virtual HRESULT __stdcall put_ImportUnAbsorbedSketches (
        /*[in]*/ VARIANT_BOOL ImportUnAbsorbedSketches ) = 0;
      virtual HRESULT __stdcall get_PathName (
        /*[out,retval]*/ BSTR * PathName ) = 0;
      virtual HRESULT __stdcall put_PathName (
        /*[in]*/ BSTR PathName ) = 0;
      virtual HRESULT __stdcall GetMoveFeature (
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall GetModelDoc (
        /*[out,retval]*/ struct IModelDoc2 * * Retval ) = 0;
};

struct __declspec(uuid("0d637236-51bb-4559-9fdc-866321c599cb"))
ISimulationDamperFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetEndPoints (
        /*[out]*/ IDispatch * * PDirDisp1,
        /*[out]*/ IDispatch * * PDirDisp2,
        /*[out]*/ long * Type1,
        /*[out]*/ long * Type2,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetEndPoints (
        /*[in]*/ IDispatch * PDirDisp1,
        /*[in]*/ IDispatch * PDirDisp2,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall get_DampingConstant (
        /*[out,retval]*/ double * Constant ) = 0;
      virtual HRESULT __stdcall put_DampingConstant (
        /*[in]*/ double Constant ) = 0;
      virtual HRESULT __stdcall get_ExponentOfDamperForceExpression (
        /*[out,retval]*/ long * Exponent ) = 0;
      virtual HRESULT __stdcall put_ExponentOfDamperForceExpression (
        /*[in]*/ long Exponent ) = 0;
      virtual HRESULT __stdcall get_BaseComponent (
        /*[out,retval]*/ struct IComponent2 * * Component ) = 0;
      virtual HRESULT __stdcall put_BaseComponent (
        /*[in]*/ struct IComponent2 * Component ) = 0;
      virtual HRESULT __stdcall get_LoadReferences (
        /*[out,retval]*/ VARIANT * References ) = 0;
      virtual HRESULT __stdcall put_LoadReferences (
        /*[in]*/ VARIANT References ) = 0;
};

struct __declspec(uuid("131a6028-590b-4790-a36c-56cc84f5af26"))
ISimulationForceFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ForceType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall get_ActionType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_ActionType (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall get_ForceFunctionType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_ForceFunctionType (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall get_FunctionConstantValue (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_FunctionConstantValue (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall GetFunctionStepValues (
        /*[out]*/ double * F1InitialValue,
        /*[out]*/ double * T1StartStepTime,
        /*[out]*/ double * F2InitialValue,
        /*[out]*/ double * T2EndStepTime,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetFunctionStepValues (
        /*[in]*/ double F1InitialValue,
        /*[in]*/ double T1StartStepTime,
        /*[in]*/ double F2InitialValue,
        /*[in]*/ double T2EndStepTime,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetFunctionHarmonicValues (
        /*[out]*/ double * Amplitude,
        /*[out]*/ double * Frequency,
        /*[out]*/ double * Average,
        /*[out]*/ double * PhaseShift,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetFunctionHarmonicValues (
        /*[in]*/ double Amplitude,
        /*[in]*/ double Frequency,
        /*[in]*/ double Average,
        /*[in]*/ double PhaseShift,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_FunctionInterpolatedValues (
        /*[out,retval]*/ VARIANT * SPData ) = 0;
      virtual HRESULT __stdcall put_FunctionInterpolatedValues (
        /*[in]*/ VARIANT SPData ) = 0;
      virtual HRESULT __stdcall get_FunctionExpression (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_FunctionExpression (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall get_ReferenceComponent (
        /*[out,retval]*/ struct IComponent2 * * Component ) = 0;
      virtual HRESULT __stdcall put_ReferenceComponent (
        /*[in]*/ struct IComponent2 * Component ) = 0;
      virtual HRESULT __stdcall get_ReverseDirection (
        /*[out,retval]*/ VARIANT_BOOL * BValue ) = 0;
      virtual HRESULT __stdcall put_ReverseDirection (
        /*[in]*/ VARIANT_BOOL BValue ) = 0;
      virtual HRESULT __stdcall get_LoadReferences (
        /*[out,retval]*/ VARIANT * References ) = 0;
      virtual HRESULT __stdcall put_LoadReferences (
        /*[in]*/ VARIANT References ) = 0;
      virtual HRESULT __stdcall GetEndPoints (
        /*[out]*/ IDispatch * * PDirDisp1,
        /*[out]*/ IDispatch * * PDirDisp2,
        /*[out]*/ long * Type1,
        /*[out]*/ long * Type2,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetEndPoints (
        /*[in]*/ IDispatch * PDirDisp1,
        /*[in]*/ IDispatch * PDirDisp2,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_ExternalState (
        /*[out,retval]*/ VARIANT_BOOL * BRev ) = 0;
      virtual HRESULT __stdcall put_ExternalState (
        /*[in]*/ VARIANT_BOOL BRev ) = 0;
      virtual HRESULT __stdcall get_ActionLocation (
        /*[out,retval]*/ IDispatch * * PDirDisp ) = 0;
      virtual HRESULT __stdcall put_ActionLocation (
        /*[in]*/ IDispatch * PDirDisp ) = 0;
      virtual HRESULT __stdcall get_ActionDirection (
        /*[out,retval]*/ IDispatch * * PDirDisp ) = 0;
      virtual HRESULT __stdcall put_ActionDirection (
        /*[in]*/ IDispatch * PDirDisp ) = 0;
      virtual HRESULT __stdcall get_ReactionLocation (
        /*[out,retval]*/ IDispatch * * PDirDisp ) = 0;
      virtual HRESULT __stdcall put_ReactionLocation (
        /*[in]*/ IDispatch * PDirDisp ) = 0;
      virtual HRESULT __stdcall LoadSplineData (
        /*[in]*/ BSTR Value,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_InterpolationScheme (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_InterpolationScheme (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall GetInterpolatedValue (
        /*[in]*/ double Time,
        /*[out,retval]*/ double * Retval ) = 0;
};

struct __declspec(uuid("9a543f7e-b9e9-49f4-b18a-bc310c8f079b"))
ICoordinateSystemFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_XFlipped (
        /*[out,retval]*/ VARIANT_BOOL * XFlipped ) = 0;
      virtual HRESULT __stdcall put_XFlipped (
        /*[in]*/ VARIANT_BOOL XFlipped ) = 0;
      virtual HRESULT __stdcall get_YFlipped (
        /*[out,retval]*/ VARIANT_BOOL * YFlipped ) = 0;
      virtual HRESULT __stdcall put_YFlipped (
        /*[in]*/ VARIANT_BOOL YFlipped ) = 0;
      virtual HRESULT __stdcall get_ZFlipped (
        /*[out,retval]*/ VARIANT_BOOL * ZFlipped ) = 0;
      virtual HRESULT __stdcall put_ZFlipped (
        /*[in]*/ VARIANT_BOOL ZFlipped ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_OriginEntity (
        /*[out,retval]*/ IDispatch * * Ent ) = 0;
      virtual HRESULT __stdcall put_OriginEntity (
        /*[in]*/ IDispatch * Ent ) = 0;
      virtual HRESULT __stdcall get_XAxisEntities (
        /*[out,retval]*/ VARIANT * EntArray ) = 0;
      virtual HRESULT __stdcall put_XAxisEntities (
        /*[in]*/ VARIANT EntArray ) = 0;
      virtual HRESULT __stdcall get_YAxisEntities (
        /*[out,retval]*/ VARIANT * EntArray ) = 0;
      virtual HRESULT __stdcall put_YAxisEntities (
        /*[in]*/ VARIANT EntArray ) = 0;
      virtual HRESULT __stdcall get_ZAxisEntities (
        /*[out,retval]*/ VARIANT * EntArray ) = 0;
      virtual HRESULT __stdcall put_ZAxisEntities (
        /*[in]*/ VARIANT EntArray ) = 0;
      virtual HRESULT __stdcall GetXAxisEntitiesCount (
        /*[out,retval]*/ long * Ret ) = 0;
      virtual HRESULT __stdcall GetYAxisEntitiesCount (
        /*[out,retval]*/ long * Ret ) = 0;
      virtual HRESULT __stdcall GetZAxisEntitiesCount (
        /*[out,retval]*/ long * Ret ) = 0;
      virtual HRESULT __stdcall IGetOriginEntity (
        /*[out,retval]*/ IDispatch * * Ent ) = 0;
      virtual HRESULT __stdcall IGetXAxisEntities (
        /*[in]*/ long Count,
        /*[out,retval]*/ IDispatch * * EntArray ) = 0;
      virtual HRESULT __stdcall IGetYAxisEntities (
        /*[in]*/ long Count,
        /*[out,retval]*/ IDispatch * * EntArray ) = 0;
      virtual HRESULT __stdcall IGetZAxisEntities (
        /*[in]*/ long Count,
        /*[out,retval]*/ IDispatch * * EntArray ) = 0;
      virtual HRESULT __stdcall ISetOriginEntity (
        /*[in]*/ IDispatch * Ent ) = 0;
      virtual HRESULT __stdcall ISetXAxisEntities (
        /*[in]*/ long Count,
        /*[in]*/ IDispatch * * EntArray ) = 0;
      virtual HRESULT __stdcall ISetYAxisEntities (
        /*[in]*/ long Count,
        /*[in]*/ IDispatch * * EntArray ) = 0;
      virtual HRESULT __stdcall ISetZAxisEntities (
        /*[in]*/ long Count,
        /*[in]*/ IDispatch * * EntArray ) = 0;
      virtual HRESULT __stdcall get_Transform (
        /*[out,retval]*/ struct IMathTransform * * Retval ) = 0;
      virtual HRESULT __stdcall GetOriginEntityType (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetXAxisEntitiesTypes (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetYAxisEntitiesTypes (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetZAxisEntitiesTypes (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetOriginEntityType (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IGetXAxisEntitiesTypes (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IGetYAxisEntitiesTypes (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IGetZAxisEntitiesTypes (
        /*[out,retval]*/ long * Retval ) = 0;
};

struct __declspec(uuid("efe4958e-b373-4849-a93c-01bfdebc830d"))
IRibFeatureData2 : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_IsTwoSided (
        /*[out,retval]*/ VARIANT_BOOL * TwoSided ) = 0;
      virtual HRESULT __stdcall put_IsTwoSided (
        /*[in]*/ VARIANT_BOOL TwoSided ) = 0;
      virtual HRESULT __stdcall get_ReverseThicknessDir (
        /*[out,retval]*/ VARIANT_BOOL * Reverse ) = 0;
      virtual HRESULT __stdcall put_ReverseThicknessDir (
        /*[in]*/ VARIANT_BOOL Reverse ) = 0;
      virtual HRESULT __stdcall get_Thickness (
        /*[out,retval]*/ double * Thickness ) = 0;
      virtual HRESULT __stdcall put_Thickness (
        /*[in]*/ double Thickness ) = 0;
      virtual HRESULT __stdcall get_RefSketchIndex (
        /*[out,retval]*/ int * Index ) = 0;
      virtual HRESULT __stdcall put_RefSketchIndex (
        /*[in]*/ int Index ) = 0;
      virtual HRESULT __stdcall NextReference (
        /*[out,retval]*/ int * Index ) = 0;
      virtual HRESULT __stdcall get_FlipSide (
        /*[out,retval]*/ VARIANT_BOOL * FlipSide ) = 0;
      virtual HRESULT __stdcall put_FlipSide (
        /*[in]*/ VARIANT_BOOL FlipSide ) = 0;
      virtual HRESULT __stdcall get_EnableDraft (
        /*[out,retval]*/ VARIANT_BOOL * EnableDraft ) = 0;
      virtual HRESULT __stdcall put_EnableDraft (
        /*[in]*/ VARIANT_BOOL EnableDraft ) = 0;
      virtual HRESULT __stdcall get_DraftOutward (
        /*[out,retval]*/ VARIANT_BOOL * DraftOutward ) = 0;
      virtual HRESULT __stdcall put_DraftOutward (
        /*[in]*/ VARIANT_BOOL DraftOutward ) = 0;
      virtual HRESULT __stdcall get_DraftAngle (
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall put_DraftAngle (
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall get_ExtrusionDirection (
        /*[out,retval]*/ long * Dir ) = 0;
      virtual HRESULT __stdcall put_ExtrusionDirection (
        /*[in]*/ long Dir ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * Typ ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ long Typ ) = 0;
      virtual HRESULT __stdcall get_Body (
        /*[out,retval]*/ struct IBody2 * * PBody ) = 0;
      virtual HRESULT __stdcall put_Body (
        /*[in]*/ struct IBody2 * PBody ) = 0;
      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_DraftFromWall (
        /*[out,retval]*/ VARIANT_BOOL * FromWall ) = 0;
      virtual HRESULT __stdcall put_DraftFromWall (
        /*[in]*/ VARIANT_BOOL FromWall ) = 0;
};

struct __declspec(uuid("6e8fab36-9e1c-4a84-a160-1e68b703431c"))
IDomeFeatureData2 : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * Height ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double Height ) = 0;
      virtual HRESULT __stdcall get_ReverseDir (
        /*[out,retval]*/ VARIANT_BOOL * Reverse ) = 0;
      virtual HRESULT __stdcall put_ReverseDir (
        /*[in]*/ VARIANT_BOOL Reverse ) = 0;
      virtual HRESULT __stdcall get_Elliptical (
        /*[out,retval]*/ VARIANT_BOOL * Elliptical ) = 0;
      virtual HRESULT __stdcall put_Elliptical (
        /*[in]*/ VARIANT_BOOL Elliptical ) = 0;
      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_Face (
        /*[out,retval]*/ IDispatch * * Face ) = 0;
      virtual HRESULT __stdcall put_Face (
        /*[in]*/ IDispatch * Face ) = 0;
      virtual HRESULT __stdcall get_IFace (
        /*[out,retval]*/ struct IFace2 * * Face ) = 0;
      virtual HRESULT __stdcall put_IFace (
        /*[in]*/ struct IFace2 * Face ) = 0;
      virtual HRESULT __stdcall get_ConstraintPointOrSketch (
        /*[out,retval]*/ IDispatch * * LpConstraintPoint_Or_Sketch ) = 0;
      virtual HRESULT __stdcall put_ConstraintPointOrSketch (
        /*[in]*/ IDispatch * LpConstraintPoint_Or_Sketch ) = 0;
      virtual HRESULT __stdcall get_Direction (
        /*[out,retval]*/ IDispatch * * LpDirection ) = 0;
      virtual HRESULT __stdcall put_Direction (
        /*[in]*/ IDispatch * LpDirection ) = 0;
      virtual HRESULT __stdcall GetFaceCount (
        /*[out,retval]*/ long * FaceCount ) = 0;
      virtual HRESULT __stdcall get_Faces (
        /*[out,retval]*/ VARIANT * FaceList ) = 0;
      virtual HRESULT __stdcall put_Faces (
        /*[in]*/ VARIANT FaceList ) = 0;
      virtual HRESULT __stdcall IGetFaces (
        /*[in]*/ long FaceCount,
        /*[out,retval]*/ struct IFace2 * * FaceList ) = 0;
      virtual HRESULT __stdcall ISetFaces (
        /*[in]*/ long FaceCount,
        /*[in]*/ struct IFace2 * * FaceList ) = 0;
};

struct __declspec(uuid("d98e9f26-73db-4bd2-a967-31bf7ef35b5b"))
ISimpleHoleFeatureData2 : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_ReverseDirection (
        /*[out,retval]*/ VARIANT_BOOL * ReverseDirection ) = 0;
      virtual HRESULT __stdcall put_ReverseDirection (
        /*[in]*/ VARIANT_BOOL ReverseDirection ) = 0;
      virtual HRESULT __stdcall get_DraftWhileExtruding (
        /*[out,retval]*/ VARIANT_BOOL * DraftWhileExtrude ) = 0;
      virtual HRESULT __stdcall put_DraftWhileExtruding (
        /*[in]*/ VARIANT_BOOL DraftWhileExtrude ) = 0;
      virtual HRESULT __stdcall get_DraftOutward (
        /*[out,retval]*/ VARIANT_BOOL * DraftOutward ) = 0;
      virtual HRESULT __stdcall put_DraftOutward (
        /*[in]*/ VARIANT_BOOL DraftOutward ) = 0;
      virtual HRESULT __stdcall get_ReverseOffset (
        /*[out,retval]*/ VARIANT_BOOL * DraftOutward ) = 0;
      virtual HRESULT __stdcall put_ReverseOffset (
        /*[in]*/ VARIANT_BOOL DraftOutward ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ int * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ int Type ) = 0;
      virtual HRESULT __stdcall get_Diameter (
        /*[out,retval]*/ double * Diameter ) = 0;
      virtual HRESULT __stdcall put_Diameter (
        /*[in]*/ double Diameter ) = 0;
      virtual HRESULT __stdcall get_Depth (
        /*[out,retval]*/ double * Depth ) = 0;
      virtual HRESULT __stdcall put_Depth (
        /*[in]*/ double Depth ) = 0;
      virtual HRESULT __stdcall get_DraftAngle (
        /*[out,retval]*/ double * DraftAngle ) = 0;
      virtual HRESULT __stdcall put_DraftAngle (
        /*[in]*/ double DraftAngle ) = 0;
      virtual HRESULT __stdcall get_SurfaceOffset (
        /*[out,retval]*/ double * SurfaceOffset ) = 0;
      virtual HRESULT __stdcall put_SurfaceOffset (
        /*[in]*/ double SurfaceOffset ) = 0;
      virtual HRESULT __stdcall get_Face (
        /*[out,retval]*/ IDispatch * * Face ) = 0;
      virtual HRESULT __stdcall put_Face (
        /*[in]*/ IDispatch * Face ) = 0;
      virtual HRESULT __stdcall get_IFace (
        /*[out,retval]*/ struct IFace2 * * Face ) = 0;
      virtual HRESULT __stdcall put_IFace (
        /*[in]*/ struct IFace2 * Face ) = 0;
      virtual HRESULT __stdcall get_Vertex (
        /*[out,retval]*/ IDispatch * * Vertex ) = 0;
      virtual HRESULT __stdcall put_Vertex (
        /*[in]*/ IDispatch * Vertex ) = 0;
      virtual HRESULT __stdcall get_IVertex (
        /*[out,retval]*/ struct IVertex * * Vertex ) = 0;
      virtual HRESULT __stdcall put_IVertex (
        /*[in]*/ struct IVertex * Vertex ) = 0;
      virtual HRESULT __stdcall GetEndConditionReference (
        /*[out]*/ long * ReferenceType,
        /*[out,retval]*/ IDispatch * * PDisp ) = 0;
      virtual HRESULT __stdcall SetEndConditionReference (
        /*[in]*/ IDispatch * PDisp ) = 0;
      virtual HRESULT __stdcall get_FeatureScope (
        /*[out,retval]*/ VARIANT_BOOL * FeatScope ) = 0;
      virtual HRESULT __stdcall put_FeatureScope (
        /*[in]*/ VARIANT_BOOL FeatScope ) = 0;
      virtual HRESULT __stdcall get_AutoSelect (
        /*[out,retval]*/ VARIANT_BOOL * AutoSel ) = 0;
      virtual HRESULT __stdcall put_AutoSelect (
        /*[in]*/ VARIANT_BOOL AutoSel ) = 0;
      virtual HRESULT __stdcall get_FeatureScopeBodies (
        /*[out,retval]*/ VARIANT * BodyVar ) = 0;
      virtual HRESULT __stdcall put_FeatureScopeBodies (
        /*[in]*/ VARIANT BodyVar ) = 0;
      virtual HRESULT __stdcall GetFeatureScopeBodiesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetFeatureScopeBodies (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IBody2 * * BodyArr ) = 0;
      virtual HRESULT __stdcall ISetFeatureScopeBodies (
        /*[in]*/ long Count,
        /*[in]*/ struct IBody2 * * BodyArr ) = 0;
      virtual HRESULT __stdcall GetDirectionReference (
        /*[out]*/ IDispatch * * Ref1,
        /*[out]*/ long * Type1,
        /*[out]*/ IDispatch * * Ref2,
        /*[out]*/ long * Type2,
        /*[out,retval]*/ long * RefCount ) = 0;
      virtual HRESULT __stdcall SetDirectionReference (
        /*[in]*/ IDispatch * Ref1,
        /*[in]*/ IDispatch * Ref2,
        /*[out,retval]*/ VARIANT_BOOL * BRet ) = 0;
      virtual HRESULT __stdcall get_TranslateSurface (
        /*[out,retval]*/ VARIANT_BOOL * ValOut ) = 0;
      virtual HRESULT __stdcall put_TranslateSurface (
        /*[in]*/ VARIANT_BOOL ValOut ) = 0;
      virtual HRESULT __stdcall get_AssemblyFeatureScope (
        /*[out,retval]*/ VARIANT_BOOL * AssemblyFeatureScope ) = 0;
      virtual HRESULT __stdcall put_AssemblyFeatureScope (
        /*[in]*/ VARIANT_BOOL AssemblyFeatureScope ) = 0;
      virtual HRESULT __stdcall get_AutoSelectComponents (
        /*[out,retval]*/ VARIANT_BOOL * AutoSelComp ) = 0;
      virtual HRESULT __stdcall put_AutoSelectComponents (
        /*[in]*/ VARIANT_BOOL AutoSelComp ) = 0;
      virtual HRESULT __stdcall get_PropagateFeatureToParts (
        /*[out,retval]*/ VARIANT_BOOL * PropagateFeature ) = 0;
      virtual HRESULT __stdcall put_PropagateFeatureToParts (
        /*[in]*/ VARIANT_BOOL PropagateFeature ) = 0;
};

struct __declspec(uuid("7a472c09-437c-4c4b-b34c-a144d0e2546c"))
IWizardHoleFeatureData2 : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ int * Hole_type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ int Hole_type ) = 0;
      virtual HRESULT __stdcall get_Diameter (
        /*[out,retval]*/ double * Diameter ) = 0;
      virtual HRESULT __stdcall put_Diameter (
        /*[in]*/ double Diameter ) = 0;
      virtual HRESULT __stdcall get_CounterBoreDiameter (
        /*[out,retval]*/ double * Cbore_dia ) = 0;
      virtual HRESULT __stdcall put_CounterBoreDiameter (
        /*[in]*/ double Cbore_dia ) = 0;
      virtual HRESULT __stdcall get_CounterDrillDiameter (
        /*[out,retval]*/ double * Cdrill_dia ) = 0;
      virtual HRESULT __stdcall put_CounterDrillDiameter (
        /*[in]*/ double Cdrill_dia ) = 0;
      virtual HRESULT __stdcall get_CounterSinkDiameter (
        /*[out,retval]*/ double * Csunk_dia ) = 0;
      virtual HRESULT __stdcall put_CounterSinkDiameter (
        /*[in]*/ double Csunk_dia ) = 0;
      virtual HRESULT __stdcall get_MinorDiameter (
        /*[out,retval]*/ double * Minor_dia ) = 0;
      virtual HRESULT __stdcall put_MinorDiameter (
        /*[in]*/ double Minor_dia ) = 0;
      virtual HRESULT __stdcall get_MajorDiameter (
        /*[out,retval]*/ double * Major_dia ) = 0;
      virtual HRESULT __stdcall put_MajorDiameter (
        /*[in]*/ double Major_dia ) = 0;
      virtual HRESULT __stdcall get_HoleDiameter (
        /*[out,retval]*/ double * Diameter ) = 0;
      virtual HRESULT __stdcall put_HoleDiameter (
        /*[in]*/ double Diameter ) = 0;
      virtual HRESULT __stdcall get_ThruHoleDiameter (
        /*[out,retval]*/ double * Diameter ) = 0;
      virtual HRESULT __stdcall put_ThruHoleDiameter (
        /*[in]*/ double Diameter ) = 0;
      virtual HRESULT __stdcall get_TapDrillDiameter (
        /*[out,retval]*/ double * Diameter ) = 0;
      virtual HRESULT __stdcall put_TapDrillDiameter (
        /*[in]*/ double Diameter ) = 0;
      virtual HRESULT __stdcall get_ThruTapDrillDiameter (
        /*[out,retval]*/ double * Diameter ) = 0;
      virtual HRESULT __stdcall put_ThruTapDrillDiameter (
        /*[in]*/ double Diameter ) = 0;
      virtual HRESULT __stdcall get_NearCounterSinkDiameter (
        /*[out,retval]*/ double * Diameter ) = 0;
      virtual HRESULT __stdcall put_NearCounterSinkDiameter (
        /*[in]*/ double Diameter ) = 0;
      virtual HRESULT __stdcall get_MidCounterSinkDiameter (
        /*[out,retval]*/ double * Diameter ) = 0;
      virtual HRESULT __stdcall put_MidCounterSinkDiameter (
        /*[in]*/ double Diameter ) = 0;
      virtual HRESULT __stdcall get_FarCounterSinkDiameter (
        /*[out,retval]*/ double * Diameter ) = 0;
      virtual HRESULT __stdcall put_FarCounterSinkDiameter (
        /*[in]*/ double Diameter ) = 0;
      virtual HRESULT __stdcall get_ThreadDiameter (
        /*[out,retval]*/ double * Diameter ) = 0;
      virtual HRESULT __stdcall put_ThreadDiameter (
        /*[in]*/ double Diameter ) = 0;
      virtual HRESULT __stdcall get_Depth (
        /*[out,retval]*/ double * Depth ) = 0;
      virtual HRESULT __stdcall put_Depth (
        /*[in]*/ double Depth ) = 0;
      virtual HRESULT __stdcall get_CounterBoreDepth (
        /*[out,retval]*/ double * Cbore_depth ) = 0;
      virtual HRESULT __stdcall put_CounterBoreDepth (
        /*[in]*/ double Cbore_depth ) = 0;
      virtual HRESULT __stdcall get_CounterDrillDepth (
        /*[out,retval]*/ double * Cdrill_depth ) = 0;
      virtual HRESULT __stdcall put_CounterDrillDepth (
        /*[in]*/ double Cdrill_depth ) = 0;
      virtual HRESULT __stdcall get_HoleDepth (
        /*[out,retval]*/ double * Depth ) = 0;
      virtual HRESULT __stdcall put_HoleDepth (
        /*[in]*/ double Depth ) = 0;
      virtual HRESULT __stdcall get_ThruHoleDepth (
        /*[out,retval]*/ double * Depth ) = 0;
      virtual HRESULT __stdcall put_ThruHoleDepth (
        /*[in]*/ double Depth ) = 0;
      virtual HRESULT __stdcall get_TapDrillDepth (
        /*[out,retval]*/ double * Depth ) = 0;
      virtual HRESULT __stdcall put_TapDrillDepth (
        /*[in]*/ double Depth ) = 0;
      virtual HRESULT __stdcall get_ThruTapDrillDepth (
        /*[out,retval]*/ double * Depth ) = 0;
      virtual HRESULT __stdcall put_ThruTapDrillDepth (
        /*[in]*/ double Depth ) = 0;
      virtual HRESULT __stdcall get_ThreadDepth (
        /*[out,retval]*/ double * Depth ) = 0;
      virtual HRESULT __stdcall put_ThreadDepth (
        /*[in]*/ double Depth ) = 0;
      virtual HRESULT __stdcall get_CounterDrillAngle (
        /*[out,retval]*/ double * Cdrill_angle ) = 0;
      virtual HRESULT __stdcall put_CounterDrillAngle (
        /*[in]*/ double Cdrill_angle ) = 0;
      virtual HRESULT __stdcall get_CounterSinkAngle (
        /*[out,retval]*/ double * Csunk_angle ) = 0;
      virtual HRESULT __stdcall put_CounterSinkAngle (
        /*[in]*/ double Csunk_angle ) = 0;
      virtual HRESULT __stdcall get_DrillAngle (
        /*[out,retval]*/ double * Drill_angle ) = 0;
      virtual HRESULT __stdcall put_DrillAngle (
        /*[in]*/ double Drill_angle ) = 0;
      virtual HRESULT __stdcall get_NearCounterSinkAngle (
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall put_NearCounterSinkAngle (
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall get_MidCounterSinkAngle (
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall put_MidCounterSinkAngle (
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall get_FarCounterSinkAngle (
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall put_FarCounterSinkAngle (
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall get_ThreadAngle (
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall put_ThreadAngle (
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall get_HeadClearance (
        /*[out,retval]*/ double * HeadClearance ) = 0;
      virtual HRESULT __stdcall put_HeadClearance (
        /*[in]*/ double HeadClearance ) = 0;
      virtual HRESULT __stdcall get_Face (
        /*[out,retval]*/ IDispatch * * Face ) = 0;
      virtual HRESULT __stdcall put_Face (
        /*[in]*/ IDispatch * Face ) = 0;
      virtual HRESULT __stdcall get_IFace (
        /*[out,retval]*/ struct IFace2 * * Face ) = 0;
      virtual HRESULT __stdcall put_IFace (
        /*[in]*/ struct IFace2 * Face ) = 0;
      virtual HRESULT __stdcall get_Vertex (
        /*[out,retval]*/ IDispatch * * Vertex ) = 0;
      virtual HRESULT __stdcall put_Vertex (
        /*[in]*/ IDispatch * Vertex ) = 0;
      virtual HRESULT __stdcall get_IVertex (
        /*[out,retval]*/ struct IVertex * * Vertex ) = 0;
      virtual HRESULT __stdcall put_IVertex (
        /*[in]*/ struct IVertex * Vertex ) = 0;
      virtual HRESULT __stdcall get_EndCondition (
        /*[out,retval]*/ int * EndCondition ) = 0;
      virtual HRESULT __stdcall put_EndCondition (
        /*[in]*/ int EndCondition ) = 0;
      virtual HRESULT __stdcall get_Standard (
        /*[out,retval]*/ BSTR * Standard ) = 0;
      virtual HRESULT __stdcall put_Standard (
        /*[in]*/ BSTR Standard ) = 0;
      virtual HRESULT __stdcall get_FastenerType (
        /*[out,retval]*/ BSTR * FastenerType ) = 0;
      virtual HRESULT __stdcall put_FastenerType (
        /*[in]*/ BSTR FastenerType ) = 0;
      virtual HRESULT __stdcall get_FastenerSize (
        /*[out,retval]*/ BSTR * FastenerSize ) = 0;
      virtual HRESULT __stdcall put_FastenerSize (
        /*[in]*/ BSTR FastenerSize ) = 0;
      virtual HRESULT __stdcall get_HeadClearanceType (
        /*[out,retval]*/ long * HcType ) = 0;
      virtual HRESULT __stdcall put_HeadClearanceType (
        /*[in]*/ long HcType ) = 0;
      virtual HRESULT __stdcall get_CosmeticThreadType (
        /*[out,retval]*/ long * CtType ) = 0;
      virtual HRESULT __stdcall put_CosmeticThreadType (
        /*[in]*/ long CtType ) = 0;
      virtual HRESULT __stdcall GetEndConditionReference (
        /*[out]*/ long * ReferenceType,
        /*[out,retval]*/ IDispatch * * PDisp ) = 0;
      virtual HRESULT __stdcall SetEndConditionReference (
        /*[in]*/ IDispatch * PDisp ) = 0;
      virtual HRESULT __stdcall GetSketchPointCount (
        /*[out,retval]*/ long * NCount ) = 0;
      virtual HRESULT __stdcall GetSketchPoints (
        /*[out,retval]*/ VARIANT * VSketchPoints ) = 0;
      virtual HRESULT __stdcall IGetSketchPoints (
        /*[in]*/ long NCount,
        /*[out,retval]*/ struct ISketchPoint * * LpSketchPoints ) = 0;
      virtual HRESULT __stdcall get_HoleFit (
        /*[out,retval]*/ long * Fit ) = 0;
      virtual HRESULT __stdcall put_HoleFit (
        /*[in]*/ long Fit ) = 0;
      virtual HRESULT __stdcall ChangeStandard (
        /*[in]*/ long Standard,
        /*[in]*/ long FastenerType,
        /*[in]*/ BSTR SSize,
        /*[out,retval]*/ VARIANT_BOOL * BRet ) = 0;
      virtual HRESULT __stdcall get_OffsetDistance (
        /*[out,retval]*/ double * Dist ) = 0;
      virtual HRESULT __stdcall put_OffsetDistance (
        /*[in]*/ double Dist ) = 0;
      virtual HRESULT __stdcall get_ThreadEndCondition (
        /*[out,retval]*/ long * EndCond ) = 0;
      virtual HRESULT __stdcall put_ThreadEndCondition (
        /*[in]*/ long EndCond ) = 0;
      virtual HRESULT __stdcall get_TapType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_TapType (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall InitializeHole (
        /*[in]*/ long GenericHoleType,
        /*[in]*/ long StdIndex,
        /*[in]*/ long FastnerType,
        /*[in]*/ BSTR SSize,
        /*[in]*/ long EndType ) = 0;
      virtual HRESULT __stdcall get_ReverseDirection (
        /*[out,retval]*/ VARIANT_BOOL * RevDir ) = 0;
      virtual HRESULT __stdcall put_ReverseDirection (
        /*[in]*/ VARIANT_BOOL RevDir ) = 0;
      virtual HRESULT __stdcall get_ThreadClass (
        /*[out,retval]*/ BSTR * ThreadCl ) = 0;
      virtual HRESULT __stdcall put_ThreadClass (
        /*[in]*/ BSTR ThreadCl ) = 0;
      virtual HRESULT __stdcall get_FeatureScope (
        /*[out,retval]*/ VARIANT_BOOL * FeatScope ) = 0;
      virtual HRESULT __stdcall put_FeatureScope (
        /*[in]*/ VARIANT_BOOL FeatScope ) = 0;
      virtual HRESULT __stdcall get_AutoSelect (
        /*[out,retval]*/ VARIANT_BOOL * AutoSel ) = 0;
      virtual HRESULT __stdcall put_AutoSelect (
        /*[in]*/ VARIANT_BOOL AutoSel ) = 0;
      virtual HRESULT __stdcall get_FeatureScopeBodies (
        /*[out,retval]*/ VARIANT * BodyVar ) = 0;
      virtual HRESULT __stdcall put_FeatureScopeBodies (
        /*[in]*/ VARIANT BodyVar ) = 0;
      virtual HRESULT __stdcall GetFeatureScopeBodiesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetFeatureScopeBodies (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IBody2 * * BodyArr ) = 0;
      virtual HRESULT __stdcall ISetFeatureScopeBodies (
        /*[in]*/ long Count,
        /*[in]*/ struct IBody2 * * BodyArr ) = 0;
      virtual HRESULT __stdcall get_Standard2 (
        /*[out,retval]*/ long * Standard ) = 0;
      virtual HRESULT __stdcall put_Standard2 (
        /*[in]*/ long Standard ) = 0;
      virtual HRESULT __stdcall get_FastenerType2 (
        /*[out,retval]*/ long * FastenerType ) = 0;
      virtual HRESULT __stdcall put_FastenerType2 (
        /*[in]*/ long FastenerType ) = 0;
      virtual HRESULT __stdcall get_AssemblyFeatureScope (
        /*[out,retval]*/ VARIANT_BOOL * AssemblyFeatureScope ) = 0;
      virtual HRESULT __stdcall put_AssemblyFeatureScope (
        /*[in]*/ VARIANT_BOOL AssemblyFeatureScope ) = 0;
      virtual HRESULT __stdcall get_AutoSelectComponents (
        /*[out,retval]*/ VARIANT_BOOL * AutoSelComp ) = 0;
      virtual HRESULT __stdcall put_AutoSelectComponents (
        /*[in]*/ VARIANT_BOOL AutoSelComp ) = 0;
      virtual HRESULT __stdcall get_PropagateFeatureToParts (
        /*[out,retval]*/ VARIANT_BOOL * PropagateFeature ) = 0;
      virtual HRESULT __stdcall put_PropagateFeatureToParts (
        /*[in]*/ VARIANT_BOOL PropagateFeature ) = 0;
};

struct __declspec(uuid("8427d092-a1fc-49c9-b1ed-ec52d2389e9a"))
IChamferFeatureData2 : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetEdgeChamferDistance (
        /*[in]*/ int Side,
        /*[out,retval]*/ double * Distance ) = 0;
      virtual HRESULT __stdcall SetEdgeChamferDistance (
        /*[in]*/ int Side,
        /*[in]*/ double Distance ) = 0;
      virtual HRESULT __stdcall GetVertexChamferDistance (
        /*[in]*/ int Side,
        /*[out,retval]*/ double * Distance ) = 0;
      virtual HRESULT __stdcall SetVertexChamferDistance (
        /*[in]*/ int Side,
        /*[in]*/ double Distance ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ int * Chamfer_type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ int Chamfer_type ) = 0;
      virtual HRESULT __stdcall get_EdgeChamferAngle (
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall put_EdgeChamferAngle (
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall GetFaceCount (
        /*[out,retval]*/ long * Num ) = 0;
      virtual HRESULT __stdcall IGetFaces (
        /*[in]*/ long FaceCount,
        /*[out,retval]*/ struct IFace2 * * FaceList ) = 0;
      virtual HRESULT __stdcall ISetFaces (
        /*[in]*/ long Count,
        /*[in]*/ struct IFace2 * * FaceList ) = 0;
      virtual HRESULT __stdcall get_Faces (
        /*[out,retval]*/ VARIANT * FaceList ) = 0;
      virtual HRESULT __stdcall put_Faces (
        /*[in]*/ VARIANT FaceList ) = 0;
      virtual HRESULT __stdcall GetEdgeCount (
        /*[out,retval]*/ long * Num ) = 0;
      virtual HRESULT __stdcall IGetEdges (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IEdge * * EdgeList ) = 0;
      virtual HRESULT __stdcall ISetEdges (
        /*[in]*/ long Count,
        /*[in]*/ struct IEdge * * EdgeList ) = 0;
      virtual HRESULT __stdcall get_Edges (
        /*[out,retval]*/ VARIANT * EdgeList ) = 0;
      virtual HRESULT __stdcall put_Edges (
        /*[in]*/ VARIANT EdgeList ) = 0;
      virtual HRESULT __stdcall get_Vertex (
        /*[out,retval]*/ IDispatch * * Vertex ) = 0;
      virtual HRESULT __stdcall put_Vertex (
        /*[in]*/ IDispatch * Vertex ) = 0;
      virtual HRESULT __stdcall get_LoopCount (
        /*[out,retval]*/ long * Num ) = 0;
      virtual HRESULT __stdcall IGetLoops (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct ILoop * * LoopList ) = 0;
      virtual HRESULT __stdcall ISetLoops (
        /*[in]*/ long Count,
        /*[in]*/ struct ILoop * * LoopList ) = 0;
      virtual HRESULT __stdcall get_Loops (
        /*[out,retval]*/ VARIANT * LoopList ) = 0;
      virtual HRESULT __stdcall put_Loops (
        /*[in]*/ VARIANT LoopList ) = 0;
      virtual HRESULT __stdcall get_EqualDistance (
        /*[out,retval]*/ VARIANT_BOOL * ReverseDirection ) = 0;
      virtual HRESULT __stdcall put_EqualDistance (
        /*[in]*/ VARIANT_BOOL ReverseDirection ) = 0;
      virtual HRESULT __stdcall get_IVertex (
        /*[out,retval]*/ struct IVertex * * Vertex ) = 0;
      virtual HRESULT __stdcall put_IVertex (
        /*[in]*/ struct IVertex * Vertex ) = 0;
      virtual HRESULT __stdcall get_KeepFeatures (
        /*[out,retval]*/ VARIANT_BOOL * Keep ) = 0;
      virtual HRESULT __stdcall put_KeepFeatures (
        /*[in]*/ VARIANT_BOOL Keep ) = 0;
      virtual HRESULT __stdcall GetIsFlipped (
        /*[in]*/ IDispatch * Entity,
        /*[out,retval]*/ VARIANT_BOOL * Flip ) = 0;
      virtual HRESULT __stdcall SetIsFlipped (
        /*[in]*/ IDispatch * Entity,
        /*[in]*/ VARIANT_BOOL Flip ) = 0;
      virtual HRESULT __stdcall get_TangentPropagation (
        /*[out,retval]*/ VARIANT_BOOL * TangentPropagation ) = 0;
      virtual HRESULT __stdcall put_TangentPropagation (
        /*[in]*/ VARIANT_BOOL TangentPropagation ) = 0;
};

struct __declspec(uuid("9fe7c8db-8a4c-41bb-8e3b-7600692dbc92"))
ISimpleFilletFeatureData2 : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ int * Type ) = 0;
      virtual HRESULT __stdcall get_DefaultRadius (
        /*[out,retval]*/ double * Radius ) = 0;
      virtual HRESULT __stdcall put_DefaultRadius (
        /*[in]*/ double Radius ) = 0;
      virtual HRESULT __stdcall get_OverflowType (
        /*[out,retval]*/ int * Overflow_type ) = 0;
      virtual HRESULT __stdcall put_OverflowType (
        /*[in]*/ int Overflow_type ) = 0;
      virtual HRESULT __stdcall get_IsMultipleRadius (
        /*[out,retval]*/ VARIANT_BOOL * IsMultipleRadius ) = 0;
      virtual HRESULT __stdcall put_IsMultipleRadius (
        /*[in]*/ VARIANT_BOOL IsMultipleRadius ) = 0;
      virtual HRESULT __stdcall get_RoundCorners (
        /*[out,retval]*/ VARIANT_BOOL * RoundCorners ) = 0;
      virtual HRESULT __stdcall put_RoundCorners (
        /*[in]*/ VARIANT_BOOL RoundCorners ) = 0;
      virtual HRESULT __stdcall get_PropagateToTangentFaces (
        /*[out,retval]*/ VARIANT_BOOL * PropTgtFaces ) = 0;
      virtual HRESULT __stdcall put_PropagateToTangentFaces (
        /*[in]*/ VARIANT_BOOL PropTgtFaces ) = 0;
      virtual HRESULT __stdcall get_FilletItemsCount (
        /*[out,retval]*/ int * Count ) = 0;
      virtual HRESULT __stdcall GetFilletItemAtIndex (
        /*[in]*/ int Index,
        /*[out,retval]*/ IDispatch * * PFilletItem ) = 0;
      virtual HRESULT __stdcall IGetFilletItemAtIndex (
        /*[in]*/ int Index,
        /*[out,retval]*/ IUnknown * * PFilletItem ) = 0;
      virtual HRESULT __stdcall GetRadius (
        /*[in]*/ IDispatch * PFilletItem,
        /*[out,retval]*/ double * Radius ) = 0;
      virtual HRESULT __stdcall IGetRadius (
        /*[in]*/ IUnknown * PFilletItem,
        /*[out,retval]*/ double * Radius ) = 0;
      virtual HRESULT __stdcall SetRadius (
        /*[in]*/ IDispatch * PFilletItem,
        /*[in]*/ double Radius ) = 0;
      virtual HRESULT __stdcall ISetRadius (
        /*[in]*/ IUnknown * PFilletItem,
        /*[in]*/ double Radius ) = 0;
      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_KeepFeatures (
        /*[out,retval]*/ VARIANT_BOOL * Keep ) = 0;
      virtual HRESULT __stdcall put_KeepFeatures (
        /*[in]*/ VARIANT_BOOL Keep ) = 0;
      virtual HRESULT __stdcall GetEdgeCount (
        /*[out,retval]*/ long * Num ) = 0;
      virtual HRESULT __stdcall IGetEdges (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IEdge * * EdgeList ) = 0;
      virtual HRESULT __stdcall ISetEdges (
        /*[in]*/ long Count,
        /*[in]*/ struct IEdge * * EdgeList ) = 0;
      virtual HRESULT __stdcall get_Edges (
        /*[out,retval]*/ VARIANT * EdgeList ) = 0;
      virtual HRESULT __stdcall put_Edges (
        /*[in]*/ VARIANT EdgeList ) = 0;
      virtual HRESULT __stdcall GetFaceCount (
        /*[in]*/ long WhichFaceList,
        /*[out,retval]*/ long * Num ) = 0;
      virtual HRESULT __stdcall IGetFaces (
        /*[in]*/ long WhichFaceList,
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IFace2 * * FaceList ) = 0;
      virtual HRESULT __stdcall ISetFaces (
        /*[in]*/ long WhichFaceList,
        /*[in]*/ long Count,
        /*[in]*/ struct IFace2 * * FaceList ) = 0;
      virtual HRESULT __stdcall GetFaces (
        /*[in]*/ long WhichFaceList,
        /*[out,retval]*/ VARIANT * FaceList ) = 0;
      virtual HRESULT __stdcall SetFaces (
        /*[in]*/ long WhichFaceList,
        /*[in]*/ VARIANT FaceList ) = 0;
      virtual HRESULT __stdcall GetLoopCount (
        /*[out,retval]*/ long * Num ) = 0;
      virtual HRESULT __stdcall IGetLoops (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct ILoop2 * * LoopList ) = 0;
      virtual HRESULT __stdcall ISetLoops (
        /*[in]*/ long Count,
        /*[in]*/ struct ILoop2 * * LoopList ) = 0;
      virtual HRESULT __stdcall get_Loops (
        /*[out,retval]*/ VARIANT * LoopList ) = 0;
      virtual HRESULT __stdcall put_Loops (
        /*[in]*/ VARIANT LoopList ) = 0;
      virtual HRESULT __stdcall GetFeatureCount (
        /*[out,retval]*/ long * Num ) = 0;
      virtual HRESULT __stdcall IGetFeatures (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IFeature * * FeatList ) = 0;
      virtual HRESULT __stdcall ISetFeatures (
        /*[in]*/ long Count,
        /*[in]*/ struct IFeature * * FeatList ) = 0;
      virtual HRESULT __stdcall get_Features (
        /*[out,retval]*/ VARIANT * FeatList ) = 0;
      virtual HRESULT __stdcall put_Features (
        /*[in]*/ VARIANT FeatList ) = 0;
      virtual HRESULT __stdcall GetHoldLineCount (
        /*[out,retval]*/ long * Num ) = 0;
      virtual HRESULT __stdcall IGetHoldLines (
        /*[in]*/ long Count,
        /*[out,retval]*/ IDispatch * * PList ) = 0;
      virtual HRESULT __stdcall ISetHoldLines (
        /*[in]*/ long Count,
        /*[in]*/ IDispatch * * PList ) = 0;
      virtual HRESULT __stdcall get_HoldLines (
        /*[out,retval]*/ VARIANT * PVar ) = 0;
      virtual HRESULT __stdcall put_HoldLines (
        /*[in]*/ VARIANT PVar ) = 0;
      virtual HRESULT __stdcall get_CurvatureContinuous (
        /*[out,retval]*/ VARIANT_BOOL * CurveCont ) = 0;
      virtual HRESULT __stdcall put_CurvatureContinuous (
        /*[in]*/ VARIANT_BOOL CurveCont ) = 0;
      virtual HRESULT __stdcall get_HelpPoint (
        /*[out,retval]*/ IDispatch * * PDisp ) = 0;
      virtual HRESULT __stdcall put_HelpPoint (
        /*[in]*/ IDispatch * PDisp ) = 0;
      virtual HRESULT __stdcall get_OmitAttachedEdges (
        /*[out,retval]*/ VARIANT_BOOL * BOmit ) = 0;
      virtual HRESULT __stdcall put_OmitAttachedEdges (
        /*[in]*/ VARIANT_BOOL BOmit ) = 0;
      virtual HRESULT __stdcall GetSetbackVertices (
        /*[out,retval]*/ VARIANT * VertVar ) = 0;
      virtual HRESULT __stdcall GetSetbackVertexDistance (
        /*[in]*/ IDispatch * Vtx,
        /*[out]*/ VARIANT * EdgeVar,
        /*[out,retval]*/ VARIANT * DistVar ) = 0;
      virtual HRESULT __stdcall SetSetbackVertices (
        /*[in]*/ VARIANT VertVar,
        /*[out,retval]*/ VARIANT_BOOL * BRet ) = 0;
      virtual HRESULT __stdcall SetSetbackVertexDistance (
        /*[in]*/ IDispatch * Vtx,
        /*[in]*/ VARIANT EdgeVar,
        /*[in]*/ VARIANT DistVar,
        /*[out,retval]*/ VARIANT_BOOL * BRet ) = 0;
      virtual HRESULT __stdcall GetSetbackVerticesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetSetbackVertices (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IVertex * * VertArr ) = 0;
      virtual HRESULT __stdcall GetSetbackDistanceCount (
        /*[in]*/ struct IVertex * Vtx,
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetSetbackVertexDistance (
        /*[in]*/ long Count,
        /*[in]*/ struct IVertex * Vtx,
        /*[out]*/ struct IEdge * * EdgeArr,
        /*[out,retval]*/ double * DistArr ) = 0;
      virtual HRESULT __stdcall ISetSetbackVertices (
        /*[in]*/ long Count,
        /*[in]*/ struct IVertex * * VertArr,
        /*[out,retval]*/ VARIANT_BOOL * BRet ) = 0;
      virtual HRESULT __stdcall ISetSetbackVertexDistance (
        /*[in]*/ long Count,
        /*[in]*/ struct IVertex * Vtx,
        /*[in]*/ struct IEdge * * EdgeArr,
        /*[in]*/ double * DistArr,
        /*[out,retval]*/ VARIANT_BOOL * BRet ) = 0;
      virtual HRESULT __stdcall get_ConstantWidth (
        /*[out,retval]*/ VARIANT_BOOL * ConstantWidth ) = 0;
      virtual HRESULT __stdcall put_ConstantWidth (
        /*[in]*/ VARIANT_BOOL ConstantWidth ) = 0;
      virtual HRESULT __stdcall get_ReverseFaceNormal (
        /*[in]*/ long WhichFaceList,
        /*[out,retval]*/ VARIANT_BOOL * BReverseFaceNormal ) = 0;
      virtual HRESULT __stdcall put_ReverseFaceNormal (
        /*[in]*/ long WhichFaceList,
        /*[in]*/ VARIANT_BOOL BReverseFaceNormal ) = 0;
      virtual HRESULT __stdcall get_TrimAndAttachSurfaces (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall put_TrimAndAttachSurfaces (
        /*[in]*/ long Retval ) = 0;
};

struct __declspec(uuid("ffcdc95c-1ba9-423a-877e-cb7aa60de9b4"))
IVariableFilletFeatureData2 : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DefaultRadius (
        /*[out,retval]*/ double * Radius ) = 0;
      virtual HRESULT __stdcall put_DefaultRadius (
        /*[in]*/ double Radius ) = 0;
      virtual HRESULT __stdcall get_OverflowType (
        /*[out,retval]*/ int * Overflow_type ) = 0;
      virtual HRESULT __stdcall put_OverflowType (
        /*[in]*/ int Overflow_type ) = 0;
      virtual HRESULT __stdcall get_TransitionType (
        /*[out,retval]*/ int * Transition_type ) = 0;
      virtual HRESULT __stdcall put_TransitionType (
        /*[in]*/ int Transition_type ) = 0;
      virtual HRESULT __stdcall get_PropagateToTangentFaces (
        /*[out,retval]*/ VARIANT_BOOL * PropTgtFaces ) = 0;
      virtual HRESULT __stdcall put_PropagateToTangentFaces (
        /*[in]*/ VARIANT_BOOL PropTgtFaces ) = 0;
      virtual HRESULT __stdcall get_FilletEdgeCount (
        /*[out,retval]*/ int * Count ) = 0;
      virtual HRESULT __stdcall GetFilletEdgeAtIndex (
        /*[in]*/ int Index,
        /*[out,retval]*/ IDispatch * * PFilletItem ) = 0;
      virtual HRESULT __stdcall IGetFilletEdgeAtIndex (
        /*[in]*/ int Index,
        /*[out,retval]*/ struct IEdge * * PFilletItem ) = 0;
      virtual HRESULT __stdcall GetRadius (
        /*[in]*/ IDispatch * PFilletItem,
        /*[out,retval]*/ double * Radius ) = 0;
      virtual HRESULT __stdcall IGetRadius (
        /*[in]*/ struct IVertex * PFilletItem,
        /*[out,retval]*/ double * Radius ) = 0;
      virtual HRESULT __stdcall SetRadius (
        /*[in]*/ IDispatch * PFilletItem,
        /*[in]*/ double Radius ) = 0;
      virtual HRESULT __stdcall ISetRadius (
        /*[in]*/ struct IVertex * PFilletItem,
        /*[in]*/ double Radius ) = 0;
      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall GetRadius2 (
        /*[in]*/ struct IVertex * PFilletItem,
        /*[out]*/ VARIANT_BOOL * IsAssigned,
        /*[out,retval]*/ double * Radius ) = 0;
      virtual HRESULT __stdcall GetControlPointsCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetControlPointRadiusAtIndex (
        /*[in]*/ long Index,
        /*[out]*/ double * Location,
        /*[out]*/ struct IEdge * * PEdge,
        /*[out,retval]*/ double * Radius ) = 0;
      virtual HRESULT __stdcall SetControlPointRadiusAtIndex (
        /*[in]*/ long Index,
        /*[in]*/ double Location,
        /*[in]*/ double Radius ) = 0;
      virtual HRESULT __stdcall GetSetbackVertices (
        /*[out,retval]*/ VARIANT * VertVar ) = 0;
      virtual HRESULT __stdcall GetSetbackVertexDistance (
        /*[in]*/ IDispatch * Vtx,
        /*[out]*/ VARIANT * EdgeVar,
        /*[out,retval]*/ VARIANT * DistVar ) = 0;
      virtual HRESULT __stdcall SetSetbackVertices (
        /*[in]*/ VARIANT VertVar,
        /*[out,retval]*/ VARIANT_BOOL * BRet ) = 0;
      virtual HRESULT __stdcall SetSetbackVertexDistance (
        /*[in]*/ IDispatch * Vtx,
        /*[in]*/ VARIANT EdgeVar,
        /*[in]*/ VARIANT DistVar,
        /*[out,retval]*/ VARIANT_BOOL * BRet ) = 0;
      virtual HRESULT __stdcall GetSetbackVerticesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetSetbackVertices (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IVertex * * VertArr ) = 0;
      virtual HRESULT __stdcall GetSetbackDistanceCount (
        /*[in]*/ struct IVertex * Vtx,
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetSetbackVertexDistance (
        /*[in]*/ long Count,
        /*[in]*/ struct IVertex * Vtx,
        /*[out]*/ struct IEdge * * EdgeArr,
        /*[out,retval]*/ double * DistArr ) = 0;
      virtual HRESULT __stdcall ISetSetbackVertices (
        /*[in]*/ long Count,
        /*[in]*/ struct IVertex * * VertArr,
        /*[out,retval]*/ VARIANT_BOOL * BRet ) = 0;
      virtual HRESULT __stdcall ISetSetbackVertexDistance (
        /*[in]*/ long Count,
        /*[in]*/ struct IVertex * Vtx,
        /*[in]*/ struct IEdge * * EdgeArr,
        /*[in]*/ double * DistArr,
        /*[out,retval]*/ VARIANT_BOOL * BRet ) = 0;
};

struct __declspec(uuid("931e939e-2fde-49a8-8472-abcf79e9f5cc"))
IExtrudeFeatureData2 : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetEndCondition (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[out,retval]*/ int * EndCondition ) = 0;
      virtual HRESULT __stdcall SetEndCondition (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[in]*/ int EndCondition ) = 0;
      virtual HRESULT __stdcall GetDepth (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[out,retval]*/ double * Depth ) = 0;
      virtual HRESULT __stdcall SetDepth (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[in]*/ double Depth ) = 0;
      virtual HRESULT __stdcall GetWallThickness (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[out,retval]*/ double * WallThickness ) = 0;
      virtual HRESULT __stdcall SetWallThickness (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[in]*/ double WallThickness ) = 0;
      virtual HRESULT __stdcall GetDraftWhileExtruding (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[out,retval]*/ VARIANT_BOOL * DraftWhileExtrude ) = 0;
      virtual HRESULT __stdcall SetDraftWhileExtruding (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[in]*/ VARIANT_BOOL DraftWhileExtrude ) = 0;
      virtual HRESULT __stdcall GetDraftOutward (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[out,retval]*/ VARIANT_BOOL * DraftOutward ) = 0;
      virtual HRESULT __stdcall SetDraftOutward (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[in]*/ VARIANT_BOOL DraftOutward ) = 0;
      virtual HRESULT __stdcall GetDraftAngle (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[out,retval]*/ double * DraftAngle ) = 0;
      virtual HRESULT __stdcall SetDraftAngle (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[in]*/ double DraftAngle ) = 0;
      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall GetFace (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[out,retval]*/ IDispatch * * Face ) = 0;
      virtual HRESULT __stdcall SetFace (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[in]*/ IDispatch * Face ) = 0;
      virtual HRESULT __stdcall IGetFace (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[out,retval]*/ struct IFace2 * * Face ) = 0;
      virtual HRESULT __stdcall ISetFace (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[in]*/ struct IFace2 * Face ) = 0;
      virtual HRESULT __stdcall GetVertex (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[out,retval]*/ IDispatch * * Face ) = 0;
      virtual HRESULT __stdcall SetVertex (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[in]*/ IDispatch * Face ) = 0;
      virtual HRESULT __stdcall IGetVertex (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[out,retval]*/ struct IVertex * * Face ) = 0;
      virtual HRESULT __stdcall ISetVertex (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[in]*/ struct IVertex * Face ) = 0;
      virtual HRESULT __stdcall get_ReverseDirection (
        /*[out,retval]*/ VARIANT_BOOL * ReverseDirection ) = 0;
      virtual HRESULT __stdcall put_ReverseDirection (
        /*[in]*/ VARIANT_BOOL ReverseDirection ) = 0;
      virtual HRESULT __stdcall get_BothDirections (
        /*[out,retval]*/ VARIANT_BOOL * BothDirections ) = 0;
      virtual HRESULT __stdcall put_BothDirections (
        /*[in]*/ VARIANT_BOOL BothDirections ) = 0;
      virtual HRESULT __stdcall get_FlipSideToCut (
        /*[out,retval]*/ VARIANT_BOOL * Flip ) = 0;
      virtual HRESULT __stdcall put_FlipSideToCut (
        /*[in]*/ VARIANT_BOOL Flip ) = 0;
      virtual HRESULT __stdcall IsBossFeature (
        /*[out,retval]*/ VARIANT_BOOL * IsBossFeature ) = 0;
      virtual HRESULT __stdcall IsThinFeature (
        /*[out,retval]*/ VARIANT_BOOL * IsThinFeature ) = 0;
      virtual HRESULT __stdcall IsBaseExtrude (
        /*[out,retval]*/ VARIANT_BOOL * IsBaseExtrude ) = 0;
      virtual HRESULT __stdcall get_ThinWallType (
        /*[out,retval]*/ int * ThinWallType ) = 0;
      virtual HRESULT __stdcall put_ThinWallType (
        /*[in]*/ int ThinWallType ) = 0;
      virtual HRESULT __stdcall get_CapEnds (
        /*[out,retval]*/ VARIANT_BOOL * CapEnds ) = 0;
      virtual HRESULT __stdcall put_CapEnds (
        /*[in]*/ VARIANT_BOOL CapEnds ) = 0;
      virtual HRESULT __stdcall get_CapThickness (
        /*[out,retval]*/ double * CapThickness ) = 0;
      virtual HRESULT __stdcall put_CapThickness (
        /*[in]*/ double CapThickness ) = 0;
      virtual HRESULT __stdcall get_Merge (
        /*[out,retval]*/ VARIANT_BOOL * Merge ) = 0;
      virtual HRESULT __stdcall put_Merge (
        /*[in]*/ VARIANT_BOOL Merge ) = 0;
      virtual HRESULT __stdcall get_FeatureScope (
        /*[out,retval]*/ VARIANT_BOOL * FeatScope ) = 0;
      virtual HRESULT __stdcall put_FeatureScope (
        /*[in]*/ VARIANT_BOOL FeatScope ) = 0;
      virtual HRESULT __stdcall get_AutoSelect (
        /*[out,retval]*/ VARIANT_BOOL * AutoSel ) = 0;
      virtual HRESULT __stdcall put_AutoSelect (
        /*[in]*/ VARIANT_BOOL AutoSel ) = 0;
      virtual HRESULT __stdcall get_FeatureScopeBodies (
        /*[out,retval]*/ VARIANT * BodyVar ) = 0;
      virtual HRESULT __stdcall put_FeatureScopeBodies (
        /*[in]*/ VARIANT BodyVar ) = 0;
      virtual HRESULT __stdcall GetFeatureScopeBodiesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetFeatureScopeBodies (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IBody2 * * BodyArr ) = 0;
      virtual HRESULT __stdcall ISetFeatureScopeBodies (
        /*[in]*/ long Count,
        /*[in]*/ struct IBody2 * * BodyArr ) = 0;
      virtual HRESULT __stdcall GetReverseOffset (
        /*[in]*/ VARIANT_BOOL Fwd,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetReverseOffset (
        /*[in]*/ VARIANT_BOOL Fwd,
        /*[in]*/ VARIANT_BOOL ValIn ) = 0;
      virtual HRESULT __stdcall GetTranslateSurface (
        /*[in]*/ VARIANT_BOOL Fwd,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetTranslateSurface (
        /*[in]*/ VARIANT_BOOL Fwd,
        /*[in]*/ VARIANT_BOOL ValIn ) = 0;
      virtual HRESULT __stdcall GetEndConditionReference (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[out]*/ long * ReferenceType,
        /*[out,retval]*/ IDispatch * * PDisp ) = 0;
      virtual HRESULT __stdcall SetEndConditionReference (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[in]*/ IDispatch * PDisp ) = 0;
      virtual HRESULT __stdcall get_Contours (
        /*[out,retval]*/ VARIANT * Contours ) = 0;
      virtual HRESULT __stdcall put_Contours (
        /*[in]*/ VARIANT Contours ) = 0;
      virtual HRESULT __stdcall GetContoursCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetContours (
        /*[in]*/ long Count,
        /*[out,retval]*/ IDispatch * * Contours ) = 0;
      virtual HRESULT __stdcall ISetContours (
        /*[in]*/ long Count,
        /*[in]*/ IDispatch * * Contours ) = 0;
      virtual HRESULT __stdcall GetDirectionReference (
        /*[out]*/ IDispatch * * Ref1,
        /*[out]*/ long * Type1,
        /*[out]*/ IDispatch * * Ref2,
        /*[out]*/ long * Type2,
        /*[out,retval]*/ long * RefCount ) = 0;
      virtual HRESULT __stdcall SetDirectionReference (
        /*[in]*/ IDispatch * Ref1,
        /*[in]*/ IDispatch * Ref2 ) = 0;
      virtual HRESULT __stdcall GetAutoFilletCorners (
        /*[out,retval]*/ VARIANT_BOOL * AutoFillet ) = 0;
      virtual HRESULT __stdcall GetAutoFilletRadius (
        /*[out,retval]*/ double * Radius ) = 0;
      virtual HRESULT __stdcall SetAutoFillet (
        /*[in]*/ VARIANT_BOOL AutoFillet,
        /*[in]*/ double Radius,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_FromType (
        /*[out,retval]*/ long * FromType ) = 0;
      virtual HRESULT __stdcall put_FromType (
        /*[in]*/ long FromType ) = 0;
      virtual HRESULT __stdcall GetFromEntity (
        /*[out]*/ IDispatch * * FromEntity,
        /*[out]*/ long * Type ) = 0;
      virtual HRESULT __stdcall SetFromEntity (
        /*[in]*/ IDispatch * FromEntity ) = 0;
      virtual HRESULT __stdcall get_FromOffsetDistance (
        /*[out,retval]*/ double * FromOffsetDistance ) = 0;
      virtual HRESULT __stdcall put_FromOffsetDistance (
        /*[in]*/ double FromOffsetDistance ) = 0;
      virtual HRESULT __stdcall get_FromOffsetReverse (
        /*[out,retval]*/ VARIANT_BOOL * FromOffsetReverse ) = 0;
      virtual HRESULT __stdcall put_FromOffsetReverse (
        /*[in]*/ VARIANT_BOOL FromOffsetReverse ) = 0;
      virtual HRESULT __stdcall get_LinkToThickness (
        /*[out,retval]*/ VARIANT_BOOL * LinkToThickness ) = 0;
      virtual HRESULT __stdcall put_LinkToThickness (
        /*[in]*/ VARIANT_BOOL LinkToThickness ) = 0;
      virtual HRESULT __stdcall get_AssemblyFeatureScope (
        /*[out,retval]*/ VARIANT_BOOL * AssemblyFeatureScope ) = 0;
      virtual HRESULT __stdcall put_AssemblyFeatureScope (
        /*[in]*/ VARIANT_BOOL AssemblyFeatureScope ) = 0;
      virtual HRESULT __stdcall get_AutoSelectComponents (
        /*[out,retval]*/ VARIANT_BOOL * AutoSelComp ) = 0;
      virtual HRESULT __stdcall put_AutoSelectComponents (
        /*[in]*/ VARIANT_BOOL AutoSelComp ) = 0;
      virtual HRESULT __stdcall get_PropagateFeatureToParts (
        /*[out,retval]*/ VARIANT_BOOL * PropagateFeature ) = 0;
      virtual HRESULT __stdcall put_PropagateFeatureToParts (
        /*[in]*/ VARIANT_BOOL PropagateFeature ) = 0;
      virtual HRESULT __stdcall SetChangeToConfigurations (
        /*[in]*/ long Config_opt,
        /*[in]*/ VARIANT Config_names,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ISetChangeToConfigurations (
        /*[in]*/ long Config_opt,
        /*[in]*/ long Config_count,
        /*[in]*/ BSTR * Config_names,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("e055f0ed-db3e-4528-a982-d66d289190a0"))
IRevolveFeatureData2 : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetRevolutionAngle (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall SetRevolutionAngle (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall GetWallThickness (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[out,retval]*/ double * WallThickness ) = 0;
      virtual HRESULT __stdcall SetWallThickness (
        /*[in]*/ VARIANT_BOOL Forward,
        /*[in]*/ double WallThickness ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ int * RevolveCut_type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ int RevolveCut_type ) = 0;
      virtual HRESULT __stdcall get_ReverseDirection (
        /*[out,retval]*/ VARIANT_BOOL * ReverseDirection ) = 0;
      virtual HRESULT __stdcall put_ReverseDirection (
        /*[in]*/ VARIANT_BOOL ReverseDirection ) = 0;
      virtual HRESULT __stdcall IsBossFeature (
        /*[out,retval]*/ VARIANT_BOOL * IsBossFeature ) = 0;
      virtual HRESULT __stdcall IsThinFeature (
        /*[out,retval]*/ VARIANT_BOOL * IsThinFeature ) = 0;
      virtual HRESULT __stdcall get_ThinWallType (
        /*[out,retval]*/ long * ThinWallType ) = 0;
      virtual HRESULT __stdcall put_ThinWallType (
        /*[in]*/ long ThinWallType ) = 0;
      virtual HRESULT __stdcall get_Merge (
        /*[out,retval]*/ VARIANT_BOOL * Merge ) = 0;
      virtual HRESULT __stdcall put_Merge (
        /*[in]*/ VARIANT_BOOL Merge ) = 0;
      virtual HRESULT __stdcall get_FeatureScope (
        /*[out,retval]*/ VARIANT_BOOL * FeatScope ) = 0;
      virtual HRESULT __stdcall put_FeatureScope (
        /*[in]*/ VARIANT_BOOL FeatScope ) = 0;
      virtual HRESULT __stdcall get_AutoSelect (
        /*[out,retval]*/ VARIANT_BOOL * AutoSel ) = 0;
      virtual HRESULT __stdcall put_AutoSelect (
        /*[in]*/ VARIANT_BOOL AutoSel ) = 0;
      virtual HRESULT __stdcall get_FeatureScopeBodies (
        /*[out,retval]*/ VARIANT * BodyVar ) = 0;
      virtual HRESULT __stdcall put_FeatureScopeBodies (
        /*[in]*/ VARIANT BodyVar ) = 0;
      virtual HRESULT __stdcall GetFeatureScopeBodiesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetFeatureScopeBodies (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IBody2 * * BodyArr ) = 0;
      virtual HRESULT __stdcall ISetFeatureScopeBodies (
        /*[in]*/ long Count,
        /*[in]*/ struct IBody2 * * BodyArr ) = 0;
      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_Contours (
        /*[out,retval]*/ VARIANT * Contours ) = 0;
      virtual HRESULT __stdcall put_Contours (
        /*[in]*/ VARIANT Contours ) = 0;
      virtual HRESULT __stdcall GetContoursCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetContours (
        /*[in]*/ long Count,
        /*[out,retval]*/ IDispatch * * Contours ) = 0;
      virtual HRESULT __stdcall ISetContours (
        /*[in]*/ long Count,
        /*[in]*/ IDispatch * * Contours ) = 0;
      virtual HRESULT __stdcall get_Axis (
        /*[out,retval]*/ IDispatch * * Axis ) = 0;
      virtual HRESULT __stdcall put_Axis (
        /*[in]*/ IDispatch * Axis ) = 0;
      virtual HRESULT __stdcall GetAxisType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall get_AssemblyFeatureScope (
        /*[out,retval]*/ VARIANT_BOOL * AssemblyFeatureScope ) = 0;
      virtual HRESULT __stdcall put_AssemblyFeatureScope (
        /*[in]*/ VARIANT_BOOL AssemblyFeatureScope ) = 0;
      virtual HRESULT __stdcall get_AutoSelectComponents (
        /*[out,retval]*/ VARIANT_BOOL * AutoSelComp ) = 0;
      virtual HRESULT __stdcall put_AutoSelectComponents (
        /*[in]*/ VARIANT_BOOL AutoSelComp ) = 0;
      virtual HRESULT __stdcall get_PropagateFeatureToParts (
        /*[out,retval]*/ VARIANT_BOOL * PropagateFeature ) = 0;
      virtual HRESULT __stdcall put_PropagateFeatureToParts (
        /*[in]*/ VARIANT_BOOL PropagateFeature ) = 0;
};

struct __declspec(uuid("83a33d67-27c5-11ce-bfd4-00400513bb57"))
IAttributeDef : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall CreateInstance (
        /*[in]*/ IDispatch * OwnerDoc,
        /*[in]*/ IDispatch * OwnerEntity,
        /*[in]*/ BSTR NameIn,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateInstance (
        /*[in]*/ struct IModelDoc * OwnerDoc,
        /*[in]*/ struct IEntity * OwnerEntity,
        /*[in]*/ BSTR NameIn,
        /*[out,retval]*/ struct IAttribute * * Retval ) = 0;
      virtual HRESULT __stdcall AddParameter (
        /*[in]*/ BSTR NameIn,
        /*[in]*/ long Type,
        /*[in]*/ double DefaultValue,
        /*[in]*/ long Options,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetOption (
        /*[in]*/ long WhichOption,
        /*[in]*/ long OptionValue,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetOption (
        /*[in]*/ long WhichOption,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall AddCallback (
        /*[in]*/ long WhichCallback,
        /*[in]*/ BSTR CallbackFcnAndModule,
        /*[in]*/ long WhichOption,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Register (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateInstance2 (
        /*[in]*/ IDispatch * OwnerDoc,
        /*[in]*/ IDispatch * OwnerEntity,
        /*[in]*/ BSTR NameIn,
        /*[in]*/ long Options,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateInstance2 (
        /*[in]*/ struct IModelDoc * OwnerDoc,
        /*[in]*/ struct IEntity * OwnerEntity,
        /*[in]*/ BSTR NameIn,
        /*[in]*/ long Options,
        /*[out,retval]*/ struct IAttribute * * Retval ) = 0;
      virtual HRESULT __stdcall CreateInstance3 (
        /*[in]*/ IDispatch * OwnerDoc,
        /*[in]*/ IDispatch * OwnerComp,
        /*[in]*/ IDispatch * OwnerEntity,
        /*[in]*/ BSTR NameIn,
        /*[in]*/ long Options,
        /*[in]*/ long ConfigurationOption,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateInstance3 (
        /*[in]*/ struct IModelDoc * OwnerDoc,
        /*[in]*/ struct IComponent * OwnerComp,
        /*[in]*/ struct IEntity * OwnerEntity,
        /*[in]*/ BSTR NameIn,
        /*[in]*/ long Options,
        /*[in]*/ long ConfigurationOption,
        /*[out,retval]*/ struct IAttribute * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateInstance4 (
        /*[in]*/ struct IModelDoc2 * OwnerDoc,
        /*[in]*/ struct IComponent2 * OwnerComp,
        /*[in]*/ struct IEntity * OwnerEntity,
        /*[in]*/ BSTR NameIn,
        /*[in]*/ long Options,
        /*[in]*/ long ConfigurationOption,
        /*[out,retval]*/ struct IAttribute * * Retval ) = 0;
      virtual HRESULT __stdcall CreateInstance4 (
        /*[in]*/ struct IModelDoc2 * OwnerDoc,
        /*[in]*/ IDispatch * OwnerObj,
        /*[in]*/ BSTR NameIn,
        /*[in]*/ long Options,
        /*[in]*/ long ConfigurationOption,
        /*[out,retval]*/ struct IAttribute * * Retval ) = 0;
      virtual HRESULT __stdcall CreateInstance5 (
        /*[in]*/ struct IModelDoc2 * OwnerDoc,
        /*[in]*/ IDispatch * OwnerObj,
        /*[in]*/ BSTR NameIn,
        /*[in]*/ long Options,
        /*[in]*/ long ConfigurationOption,
        /*[out,retval]*/ struct IAttribute * * Retval ) = 0;
};

struct __declspec(uuid("83a33d65-27c5-11ce-bfd4-00400513bb57"))
IEntity : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall CreateStringAttributeDefinition (
        /*[in]*/ BSTR IdentifierString,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall CreateStringAttribute (
        /*[in]*/ long DefinitionTag,
        /*[in]*/ BSTR StringValue,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall FindStringAttribute (
        /*[in]*/ long DefinitionTag,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall RemoveStringAttribute (
        /*[in]*/ long DefinitionTag,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall FindAttribute (
        /*[in]*/ IDispatch * AttributeDef,
        /*[in]*/ long WhichOne,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IFindAttribute (
        /*[in]*/ struct IAttributeDef * AttributeDef,
        /*[in]*/ long WhichOne,
        /*[out,retval]*/ struct IAttribute * * Retval ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT_BOOL AppendFlag,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetType (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetComponent (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetComponent (
        /*[out,retval]*/ struct IComponent * * Retval ) = 0;
      virtual HRESULT __stdcall SelectByMark (
        /*[in]*/ VARIANT_BOOL AppendFlag,
        /*[in]*/ long Mark,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_ModelName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_ModelName (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall DeleteModelName ( ) = 0;
      virtual HRESULT __stdcall DeSelect (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IGetComponent2 (
        /*[out,retval]*/ struct IComponent2 * * Retval ) = 0;
      virtual HRESULT __stdcall Select2 (
        /*[in]*/ VARIANT_BOOL Append,
        /*[in]*/ long Mark,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Select3 (
        /*[in]*/ VARIANT_BOOL Append,
        /*[in]*/ long Mark,
        /*[in]*/ struct ICallout * Callout,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_IsSafe (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetSafeEntity (
        /*[out,retval]*/ struct IEntity * * PpSafeEntity ) = 0;
      virtual HRESULT __stdcall Select4 (
        /*[in]*/ VARIANT_BOOL Append,
        /*[in]*/ struct ISelectData * Data,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetDrawingComponent (
        /*[in]*/ struct IView * View,
        /*[out,retval]*/ struct IDrawingComponent * * Retval ) = 0;
};

struct __declspec(uuid("83a33d71-27c5-11ce-bfd4-00400513bb57"))
IAttribute : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetParameter (
        /*[in]*/ BSTR NameIn,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetParameter (
        /*[in]*/ BSTR NameIn,
        /*[out,retval]*/ struct IParameter * * Retval ) = 0;
      virtual HRESULT __stdcall GetEntity (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetEntity (
        /*[out,retval]*/ struct IEntity * * Retval ) = 0;
      virtual HRESULT __stdcall GetDefinition (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetDefinition (
        /*[out,retval]*/ struct IAttributeDef * * Retval ) = 0;
      virtual HRESULT __stdcall GetName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetEntityState (
        /*[in]*/ long WhichState,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetComponent (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetComponent (
        /*[out,retval]*/ struct IComponent * * Retval ) = 0;
      virtual HRESULT __stdcall IGetComponent2 (
        /*[out,retval]*/ struct IComponent2 * * Retval ) = 0;
      virtual HRESULT __stdcall GetEntity2 (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetEntity2 (
        /*[out,retval]*/ struct IEntity * * Retval ) = 0;
      virtual HRESULT __stdcall GetBody (
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[in]*/ VARIANT_BOOL BuildTree,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("6b39655e-381b-4bd0-89f5-640d48593f15"))
IFeatureManager : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall CreateCustomBendAllowance (
        /*[out,retval]*/ struct ICustomBendAllowance * * PCBA ) = 0;
      virtual HRESULT __stdcall InsertSheetMetalBaseFlange (
        /*[in]*/ double Thickness,
        /*[in]*/ VARIANT_BOOL ThickenDir,
        /*[in]*/ double Radius,
        /*[in]*/ double ExtrudeDist1,
        /*[in]*/ double ExtrudeDist2,
        /*[in]*/ VARIANT_BOOL FlipExtruDir,
        /*[in]*/ long EndCondition1,
        /*[in]*/ long EndCondition2,
        /*[in]*/ long DirToUse,
        /*[in]*/ struct ICustomBendAllowance * PCBA,
        /*[in]*/ VARIANT_BOOL UseDefaultRelief,
        /*[in]*/ long ReliefType,
        /*[in]*/ double ReliefWidth,
        /*[in]*/ double ReliefDepth,
        /*[in]*/ double ReliefRatio,
        /*[in]*/ VARIANT_BOOL UseReliefRatio,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertDeleteBody (
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall FeatureExtrusion (
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2,
        /*[in]*/ VARIANT_BOOL TranslateSurface1,
        /*[in]*/ VARIANT_BOOL TranslateSurface2,
        /*[in]*/ VARIANT_BOOL Merge,
        /*[in]*/ VARIANT_BOOL UseFeatScope,
        /*[in]*/ VARIANT_BOOL UseAutoSelect,
        /*[out,retval]*/ struct IFeature * * PFeat ) = 0;
      virtual HRESULT __stdcall FeatureExtrusionThin (
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2,
        /*[in]*/ VARIANT_BOOL TranslateSurface1,
        /*[in]*/ VARIANT_BOOL TranslateSurface2,
        /*[in]*/ VARIANT_BOOL Merge,
        /*[in]*/ double Thk1,
        /*[in]*/ double Thk2,
        /*[in]*/ double EndThk,
        /*[in]*/ long RevThinDir,
        /*[in]*/ long CapEnds,
        /*[in]*/ VARIANT_BOOL AddBends,
        /*[in]*/ double BendRad,
        /*[in]*/ VARIANT_BOOL UseFeatScope,
        /*[in]*/ VARIANT_BOOL UseAutoSelect,
        /*[out,retval]*/ struct IFeature * * PFeat ) = 0;
      virtual HRESULT __stdcall FeatureCut (
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2,
        /*[in]*/ VARIANT_BOOL TranslateSurface1,
        /*[in]*/ VARIANT_BOOL TranslateSurface2,
        /*[in]*/ VARIANT_BOOL NormalCut,
        /*[in]*/ VARIANT_BOOL UseFeatScope,
        /*[in]*/ VARIANT_BOOL UseAutoSelect,
        /*[out,retval]*/ struct IFeature * * PFeat ) = 0;
      virtual HRESULT __stdcall FeatureCutThin (
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2,
        /*[in]*/ VARIANT_BOOL TranslateSurface1,
        /*[in]*/ VARIANT_BOOL TranslateSurface2,
        /*[in]*/ double Thk1,
        /*[in]*/ double Thk2,
        /*[in]*/ double EndThk,
        /*[in]*/ long RevThinDir,
        /*[in]*/ long CapEnds,
        /*[in]*/ VARIANT_BOOL AddBends,
        /*[in]*/ double BendRad,
        /*[in]*/ VARIANT_BOOL UseFeatScope,
        /*[in]*/ VARIANT_BOOL UseAutoSelect,
        /*[out,retval]*/ struct IFeature * * PFeat ) = 0;
      virtual HRESULT __stdcall FeatureRevolve (
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL ReverseDir,
        /*[in]*/ double Angle2,
        /*[in]*/ long RevType,
        /*[in]*/ long Options,
        /*[in]*/ VARIANT_BOOL Merge,
        /*[in]*/ VARIANT_BOOL UseFeatScope,
        /*[in]*/ VARIANT_BOOL UseAutoSel,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall FeatureRevolveCut (
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL ReverseDir,
        /*[in]*/ double Angle2,
        /*[in]*/ long RevType,
        /*[in]*/ long Options,
        /*[in]*/ VARIANT_BOOL UseFeatScope,
        /*[in]*/ VARIANT_BOOL UseAutoSelect,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall FeatureRevolveThin (
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL ReverseDir,
        /*[in]*/ double Angle2,
        /*[in]*/ long RevType,
        /*[in]*/ double Thickness1,
        /*[in]*/ double Thickness2,
        /*[in]*/ long ReverseThinDir,
        /*[in]*/ VARIANT_BOOL Merge,
        /*[in]*/ VARIANT_BOOL UseFeatScope,
        /*[in]*/ VARIANT_BOOL UseAutoSelect,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall FeatureRevolveThinCut (
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL ReverseDir,
        /*[in]*/ double Angle2,
        /*[in]*/ long RevType,
        /*[in]*/ double Thickness1,
        /*[in]*/ double Thickness2,
        /*[in]*/ long ReverseThinDir,
        /*[in]*/ VARIANT_BOOL UseFeatScope,
        /*[in]*/ VARIANT_BOOL UseAutoSelect,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall FeatureBossThicken (
        /*[in]*/ double Thickness,
        /*[in]*/ long Direction,
        /*[in]*/ long FaceIndex,
        /*[in]*/ VARIANT_BOOL FillVolume,
        /*[in]*/ VARIANT_BOOL Merge,
        /*[in]*/ VARIANT_BOOL UseFeatScope,
        /*[in]*/ VARIANT_BOOL UseAutoSelect,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall FeatureCutThicken (
        /*[in]*/ double Thickness,
        /*[in]*/ long Direction,
        /*[in]*/ long FaceIndex,
        /*[in]*/ VARIANT_BOOL FillVolume,
        /*[in]*/ VARIANT_BOOL UseFeatScope,
        /*[in]*/ VARIANT_BOOL UseAutoSelect,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertProtrusionSwept (
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ VARIANT_BOOL Alignment,
        /*[in]*/ short TwistCtrlOption,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational,
        /*[in]*/ short StartMatchingType,
        /*[in]*/ short EndMatchingType,
        /*[in]*/ VARIANT_BOOL IsThinBody,
        /*[in]*/ double Thickness1,
        /*[in]*/ double Thickness2,
        /*[in]*/ short ThinType,
        /*[in]*/ VARIANT_BOOL Merge,
        /*[in]*/ VARIANT_BOOL UseFeatScope,
        /*[in]*/ VARIANT_BOOL UseAutoSelect,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertCutSwept (
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ VARIANT_BOOL Alignment,
        /*[in]*/ short TwistCtrlOption,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational,
        /*[in]*/ short StartMatchingType,
        /*[in]*/ short EndMatchingType,
        /*[in]*/ VARIANT_BOOL IsThinBody,
        /*[in]*/ double Thickness1,
        /*[in]*/ double Thickness2,
        /*[in]*/ short ThinType,
        /*[in]*/ VARIANT_BOOL UseFeatScope,
        /*[in]*/ VARIANT_BOOL UseAutoSelect,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertProtrusionBlend (
        /*[in]*/ VARIANT_BOOL Closed,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational,
        /*[in]*/ double TessToleranceFactor,
        /*[in]*/ short StartMatchingType,
        /*[in]*/ short EndMatchingType,
        /*[in]*/ double StartTangentLength,
        /*[in]*/ double EndTangentLength,
        /*[in]*/ VARIANT_BOOL StartTangentDir,
        /*[in]*/ VARIANT_BOOL EndTangentDir,
        /*[in]*/ VARIANT_BOOL IsThinBody,
        /*[in]*/ double Thickness1,
        /*[in]*/ double Thickness2,
        /*[in]*/ short ThinType,
        /*[in]*/ VARIANT_BOOL Merge,
        /*[in]*/ VARIANT_BOOL UseFeatScope,
        /*[in]*/ VARIANT_BOOL UseAutoSelect,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertCutBlend (
        /*[in]*/ VARIANT_BOOL Closed,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational,
        /*[in]*/ double TessToleranceFactor,
        /*[in]*/ short StartMatchingType,
        /*[in]*/ short EndMatchingType,
        /*[in]*/ VARIANT_BOOL IsThinBody,
        /*[in]*/ double Thickness1,
        /*[in]*/ double Thickness2,
        /*[in]*/ short ThinType,
        /*[in]*/ VARIANT_BOOL UseFeatScope,
        /*[in]*/ VARIANT_BOOL UseAutoSelect,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall HoleWizard (
        /*[in]*/ long GenericHoleType,
        /*[in]*/ long StandardIndex,
        /*[in]*/ long FastenerTypeIndex,
        /*[in]*/ BSTR SSize,
        /*[in]*/ short EndType,
        /*[in]*/ double Diameter,
        /*[in]*/ double Depth,
        /*[in]*/ double Value1,
        /*[in]*/ double Value2,
        /*[in]*/ double Value3,
        /*[in]*/ double Value4,
        /*[in]*/ double Value5,
        /*[in]*/ double Value6,
        /*[in]*/ double Value7,
        /*[in]*/ double Value8,
        /*[in]*/ double Value9,
        /*[in]*/ double Value10,
        /*[in]*/ double Value11,
        /*[in]*/ double Value12,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertMacroFeature (
        /*[in]*/ BSTR BaseName,
        /*[in]*/ BSTR ProgId,
        /*[in]*/ VARIANT MacroMethods,
        /*[in]*/ VARIANT ParamNames,
        /*[in]*/ VARIANT ParamTypes,
        /*[in]*/ VARIANT ParamValues,
        /*[in]*/ struct IBody2 * EditBody,
        /*[in]*/ long Options,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall IInsertMacroFeature (
        /*[in]*/ BSTR BaseName,
        /*[in]*/ BSTR ProgId,
        /*[in]*/ BSTR * MacroMethods,
        /*[in]*/ long ParamCount,
        /*[in]*/ BSTR * ParamNames,
        /*[in]*/ long * ParamTypes,
        /*[in]*/ BSTR * ParamValues,
        /*[in]*/ struct IBody2 * EditBody,
        /*[in]*/ long Options,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall get_EnableFeatureTree (
        /*[out,retval]*/ VARIANT_BOOL * PState ) = 0;
      virtual HRESULT __stdcall put_EnableFeatureTree (
        /*[in]*/ VARIANT_BOOL PState ) = 0;
      virtual HRESULT __stdcall UpdateFeatureTree ( ) = 0;
      virtual HRESULT __stdcall InsertFeatureTreeFolder (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertSheetMetalCornerTrim (
        /*[in]*/ long InternalCornerFlag,
        /*[in]*/ long BreakType,
        /*[in]*/ double BreakDist,
        /*[in]*/ long ReliefType,
        /*[in]*/ double Param,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall get_ShowFeatureName (
        /*[out,retval]*/ VARIANT_BOOL * ShowName ) = 0;
      virtual HRESULT __stdcall put_ShowFeatureName (
        /*[in]*/ VARIANT_BOOL ShowName ) = 0;
      virtual HRESULT __stdcall get_ShowFeatureDescription (
        /*[out,retval]*/ VARIANT_BOOL * ShowDescription ) = 0;
      virtual HRESULT __stdcall put_ShowFeatureDescription (
        /*[in]*/ VARIANT_BOOL ShowDescription ) = 0;
      virtual HRESULT __stdcall InsertFillSurface (
        /*[in]*/ long Resolution,
        /*[out,retval]*/ struct IFeature * * BRet ) = 0;
      virtual HRESULT __stdcall EditRollback (
        /*[in]*/ long Location,
        /*[in]*/ BSTR Feature,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertSheetMetalLoftedBend (
        /*[in]*/ long ThickDirType,
        /*[in]*/ double Thickness,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall MakeStyledCurves (
        /*[in]*/ double Tol,
        /*[in]*/ long Mode ) = 0;
      virtual HRESULT __stdcall HideBodies ( ) = 0;
      virtual HRESULT __stdcall ShowBodies ( ) = 0;
      virtual HRESULT __stdcall InsertMirrorFeature (
        /*[in]*/ VARIANT_BOOL BMirrorBody,
        /*[in]*/ VARIANT_BOOL BGeometryPattern,
        /*[in]*/ VARIANT_BOOL BMerge,
        /*[in]*/ VARIANT_BOOL BKnit,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertMoveCopyBody (
        /*[in]*/ double TransX,
        /*[in]*/ double TransY,
        /*[in]*/ double TransZ,
        /*[in]*/ double TransDist,
        /*[in]*/ double RotPointX,
        /*[in]*/ double RotPointY,
        /*[in]*/ double RotPointZ,
        /*[in]*/ double RotAngleX,
        /*[in]*/ double RotAngleY,
        /*[in]*/ double RotAngleZ,
        /*[in]*/ VARIANT_BOOL BCopy,
        /*[in]*/ long NumCopies,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct IModelDoc2 * * ModelDoc ) = 0;
      virtual HRESULT __stdcall InsertCombineFeature (
        /*[in]*/ long OperationType,
        /*[in]*/ struct IBody2 * MainBody,
        /*[in]*/ VARIANT ToolVar,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall IInsertCombineFeature (
        /*[in]*/ long OperationType,
        /*[in]*/ struct IBody2 * MainBody,
        /*[in]*/ long ToolsCount,
        /*[in]*/ struct IBody2 * * ToolsArr,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertDwgOrDxfFile (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall FeatureLinearPattern (
        /*[in]*/ long Num1,
        /*[in]*/ double Spacing1,
        /*[in]*/ long Num2,
        /*[in]*/ double Spacing2,
        /*[in]*/ VARIANT_BOOL FlipDir1,
        /*[in]*/ VARIANT_BOOL FlipDir2,
        /*[in]*/ BSTR DName1,
        /*[in]*/ BSTR DName2,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall FeatureCircularPattern (
        /*[in]*/ long Num,
        /*[in]*/ double Spacing,
        /*[in]*/ VARIANT_BOOL FlipDir,
        /*[in]*/ BSTR DName,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertTableDrivenPattern (
        /*[in]*/ BSTR FileName,
        /*[in]*/ VARIANT PointVar,
        /*[in]*/ VARIANT_BOOL UseCentrod,
        /*[in]*/ VARIANT_BOOL GeomPatt,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall IInsertTableDrivenPattern (
        /*[in]*/ BSTR FileName,
        /*[in]*/ long Count,
        /*[in]*/ double * PointArr,
        /*[in]*/ VARIANT_BOOL UseCentrod,
        /*[in]*/ VARIANT_BOOL GeomPatt,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertCosmeticThread (
        /*[in]*/ short Type,
        /*[in]*/ double Depth,
        /*[in]*/ double Length,
        /*[in]*/ BSTR Note,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall InsertScale (
        /*[in]*/ short Type,
        /*[in]*/ VARIANT_BOOL Uniform,
        /*[in]*/ double Xscale,
        /*[in]*/ double YScale,
        /*[in]*/ double ZScale,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertFeatureTreeFolder2 (
        /*[in]*/ long Type,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertMoveCopyBody2 (
        /*[in]*/ double TransX,
        /*[in]*/ double TransY,
        /*[in]*/ double TransZ,
        /*[in]*/ double TransDist,
        /*[in]*/ double RotPointX,
        /*[in]*/ double RotPointY,
        /*[in]*/ double RotPointZ,
        /*[in]*/ double RotAngleX,
        /*[in]*/ double RotAngleY,
        /*[in]*/ double RotAngleZ,
        /*[in]*/ VARIANT_BOOL BCopy,
        /*[in]*/ long NumCopies,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall FeatureSketchDrivenPattern (
        /*[in]*/ VARIANT_BOOL UseCentroid,
        /*[in]*/ VARIANT_BOOL BGeomPatt,
        /*[out,retval]*/ struct IFeature * * PFeat ) = 0;
      virtual HRESULT __stdcall InsertDerivedPattern (
        /*[out,retval]*/ struct IFeature * * PFeat ) = 0;
      virtual HRESULT __stdcall InsertGussetFeature (
        /*[in]*/ double Depth,
        /*[in]*/ short DirType,
        /*[in]*/ short LocType,
        /*[in]*/ VARIANT_BOOL BIsProfile,
        /*[in]*/ double ProfileD1,
        /*[in]*/ double ProfileD2,
        /*[in]*/ double ProfileD3,
        /*[in]*/ double ProfileAngle,
        /*[in]*/ double ProfileD4,
        /*[in]*/ VARIANT_BOOL BOffset,
        /*[in]*/ double DProfileOffset,
        /*[in]*/ long CrvIndex,
        /*[in]*/ VARIANT_BOOL BReverseDir,
        /*[in]*/ VARIANT_BOOL BReverseFace,
        /*[in]*/ VARIANT_BOOL BUseLenDim,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertSubWeldFolder (
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertMoldPartingLine (
        /*[in]*/ VARIANT_BOOL BFlipDir,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertMoldShutOffSurface (
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertWeldmentFeature (
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertMultiFaceDraft (
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL FlipDir,
        /*[in]*/ VARIANT_BOOL EdgeDraft,
        /*[in]*/ long PropType,
        /*[in]*/ VARIANT_BOOL IsStepDraft,
        /*[in]*/ VARIANT_BOOL IsBodyDraft,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertRuledSurfaceFromEdge (
        /*[in]*/ long Type,
        /*[in]*/ double Length,
        /*[in]*/ VARIANT_BOOL FlipPullDir,
        /*[in]*/ VARIANT_BOOL FlipDir,
        /*[in]*/ VARIANT_BOOL TrimAndSew,
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL CoordInput,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall MakeStyledCurves2 (
        /*[in]*/ double Tolerance,
        /*[in]*/ long Mode,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertSaveOutBodies (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertMoldCoreCavitySolids (
        /*[in]*/ double Dist1,
        /*[in]*/ double Dist2,
        /*[in]*/ VARIANT_BOOL Setback,
        /*[in]*/ double Angle,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertMacroFeature2 (
        /*[in]*/ BSTR BaseName,
        /*[in]*/ BSTR ProgId,
        /*[in]*/ VARIANT MacroMethods,
        /*[in]*/ VARIANT ParamNames,
        /*[in]*/ VARIANT ParamTypes,
        /*[in]*/ VARIANT ParamValues,
        /*[in]*/ VARIANT DimTypes,
        /*[in]*/ VARIANT DimValues,
        /*[in]*/ struct IBody2 * EditBody,
        /*[in]*/ VARIANT IconFiles,
        /*[in]*/ long Options,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall IInsertMacroFeature2 (
        /*[in]*/ BSTR BaseName,
        /*[in]*/ BSTR ProgId,
        /*[in]*/ BSTR * MacroMethods,
        /*[in]*/ long ParamCount,
        /*[in]*/ BSTR * ParamNames,
        /*[in]*/ long * ParamTypes,
        /*[in]*/ BSTR * ParamValues,
        /*[in]*/ long DimCount,
        /*[in]*/ long * DimTypes,
        /*[in]*/ double * DimCountValues,
        /*[in]*/ struct IBody2 * EditBody,
        /*[in]*/ long IconCount,
        /*[in]*/ BSTR * IconFiles,
        /*[in]*/ long Options,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall MoldUndercutDetect (
        /*[in]*/ long ColUndercut,
        /*[in]*/ long ColBase,
        /*[in]*/ VARIANT_BOOL BCoordInput,
        /*[in]*/ double Dx,
        /*[in]*/ double Dy,
        /*[in]*/ double Dz ) = 0;
      virtual HRESULT __stdcall PreTrimSurface (
        /*[in]*/ VARIANT_BOOL BMutualTrimIn,
        /*[in]*/ VARIANT_BOOL BSplitSystemIn,
        /*[in]*/ VARIANT_BOOL BSplitLinearIn,
        /*[in]*/ VARIANT_BOOL BRemovePickedIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall PostTrimSurface (
        /*[in]*/ VARIANT_BOOL BSewSurfaceIn,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertStructuralWeldment (
        /*[in]*/ BSTR Path,
        /*[in]*/ long EndCond,
        /*[in]*/ double Angle,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertWeldmentTrimFeature (
        /*[in]*/ long EndCond,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertWrapFeature (
        /*[in]*/ long Type,
        /*[in]*/ double Thickness,
        /*[in]*/ VARIANT_BOOL ReverseDir,
        /*[out,retval]*/ struct IFeature * * WrapFeature ) = 0;
      virtual HRESULT __stdcall InsertFilletBeadFeature (
        /*[in]*/ short Type1,
        /*[in]*/ double Size1,
        /*[in]*/ double Length1,
        /*[in]*/ double Pitch,
        /*[in]*/ short Type2,
        /*[in]*/ double Size2,
        /*[in]*/ double Length2,
        /*[in]*/ long Flag,
        /*[in]*/ long EdgeNum1,
        /*[in]*/ VARIANT DeSelEdge1,
        /*[in]*/ long EdgeNum2,
        /*[in]*/ VARIANT DeSelEdge2,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertEndCapFeature (
        /*[in]*/ double Depth,
        /*[in]*/ VARIANT_BOOL BIsGivenOffset,
        /*[in]*/ VARIANT_BOOL BIsChamfer,
        /*[in]*/ double OffsetValue,
        /*[in]*/ double WallThicknessRatio,
        /*[in]*/ double ChamferValue,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertReferencePoint (
        /*[in]*/ long NRefPointType,
        /*[in]*/ long NRefPointAlongCurveType,
        /*[in]*/ double DDistance_or_Percent,
        /*[in]*/ long NumberOfRefPoints,
        /*[out,retval]*/ VARIANT * PRefPointFeatures ) = 0;
      virtual HRESULT __stdcall IInsertReferencePoint (
        /*[in]*/ long NRefPointType,
        /*[in]*/ long NRefPointAlongCurveType,
        /*[in]*/ double DDistance_or_Percent,
        /*[in]*/ long NumberOfRefPoints,
        /*[out,retval]*/ struct IFeature * * PRefPointFeatures ) = 0;
      virtual HRESULT __stdcall InsertProtrusionSwept2 (
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ VARIANT_BOOL Alignment,
        /*[in]*/ short TwistCtrlOption,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational,
        /*[in]*/ short StartMatchingType,
        /*[in]*/ short EndMatchingType,
        /*[in]*/ VARIANT_BOOL IsThinBody,
        /*[in]*/ double Thickness1,
        /*[in]*/ double Thickness2,
        /*[in]*/ short ThinType,
        /*[in]*/ short PathAlign,
        /*[in]*/ VARIANT_BOOL Merge,
        /*[in]*/ VARIANT_BOOL UseFeatScope,
        /*[in]*/ VARIANT_BOOL UseAutoSelect,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertCutSwept2 (
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ VARIANT_BOOL Alignment,
        /*[in]*/ short TwistCtrlOption,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational,
        /*[in]*/ short StartMatchingType,
        /*[in]*/ short EndMatchingType,
        /*[in]*/ VARIANT_BOOL IsThinBody,
        /*[in]*/ double Thickness1,
        /*[in]*/ double Thickness2,
        /*[in]*/ short ThinType,
        /*[in]*/ short PathAlign,
        /*[in]*/ VARIANT_BOOL UseFeatScope,
        /*[in]*/ VARIANT_BOOL UseAutoSelect,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertSweepSurface (
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ short TwistCtrlOption,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL ForceNonRational,
        /*[in]*/ short StartMatchingType,
        /*[in]*/ short EndMatchingType,
        /*[in]*/ short PathAlign,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall SimpleHole (
        /*[in]*/ double Dia,
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2,
        /*[in]*/ VARIANT_BOOL TranslateSurface1,
        /*[in]*/ VARIANT_BOOL TranslateSurface2,
        /*[in]*/ VARIANT_BOOL UseFeatScope,
        /*[in]*/ VARIANT_BOOL UseAutoSelect,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertMoldPartingSurface (
        /*[in]*/ long Radiate,
        /*[in]*/ VARIANT_BOOL ReverseAlignment,
        /*[in]*/ VARIANT_BOOL ReverseOffset,
        /*[in]*/ double OffsetDistance,
        /*[in]*/ double Angle,
        /*[in]*/ long Smooth,
        /*[in]*/ double SmoothDistance,
        /*[in]*/ VARIANT_BOOL Knit,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertRuledSurfaceFromEdge2 (
        /*[in]*/ long Type,
        /*[in]*/ double Length,
        /*[in]*/ VARIANT_BOOL FlipPullDir,
        /*[in]*/ VARIANT_BOOL FlipDir,
        /*[in]*/ VARIANT_BOOL TrimAndSew,
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL CoordInput,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in]*/ VARIANT_BOOL BConnectSurface,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertWeldmentCutList (
        /*[out,retval]*/ struct IFeature * * PFeat ) = 0;
      virtual HRESULT __stdcall InsertUntrimSurface (
        /*[in]*/ long FaceUntrimType,
        /*[in]*/ long EdgeUntrimType,
        /*[in]*/ double Distance,
        /*[in]*/ VARIANT_BOOL BMerge,
        /*[out,retval]*/ struct IFeature * * PFeat ) = 0;
      virtual HRESULT __stdcall InsertCosmeticThread2 (
        /*[in]*/ short Type,
        /*[in]*/ double Depth,
        /*[in]*/ double Length,
        /*[in]*/ BSTR Note,
        /*[out,retval]*/ struct IFeature * * LpCThread ) = 0;
      virtual HRESULT __stdcall InsertStructuralWeldment2 (
        /*[in]*/ BSTR Path,
        /*[in]*/ long EndCond,
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL Merge,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertSheetMetalMiterFlange (
        /*[in]*/ VARIANT_BOOL UseDefaultRadius,
        /*[in]*/ double GlobalRadius,
        /*[in]*/ double RipGap,
        /*[in]*/ VARIANT_BOOL UseDefaultRelief,
        /*[in]*/ VARIANT_BOOL UseReliefRatio,
        /*[in]*/ double ReliefRatio,
        /*[in]*/ double ReliefWidth,
        /*[in]*/ double ReliefDepth,
        /*[in]*/ long ReliefType,
        /*[in]*/ VARIANT_BOOL TrimSideBends,
        /*[in]*/ long FlangePos,
        /*[in]*/ double OffsetDist1,
        /*[in]*/ double OffsetDist2,
        /*[in]*/ struct ICustomBendAllowance * PCBA,
        /*[out,retval]*/ struct IFeature * * PFeat ) = 0;
      virtual HRESULT __stdcall InsertSubFolder (
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertFeatureChamfer (
        /*[in]*/ long Options,
        /*[in]*/ long ChamferType,
        /*[in]*/ double Width,
        /*[in]*/ double Angle,
        /*[in]*/ double OtherDist,
        /*[in]*/ double VertexChamDist1,
        /*[in]*/ double VertexChamDist2,
        /*[in]*/ double VertexChamDist3,
        /*[out,retval]*/ struct IFeature * * PFeat ) = 0;
      virtual HRESULT __stdcall MoveToFolder (
        /*[in]*/ BSTR MoveToFeat,
        /*[in]*/ BSTR MoveFromFeat,
        /*[in]*/ VARIANT_BOOL IsFolder,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertMateReference (
        /*[in]*/ BSTR BstrMateReferenceName,
        /*[in]*/ struct IEntity * PrimaryReferenceEntity,
        /*[in]*/ long PrimaryReferenceType,
        /*[in]*/ long PrimaryReferenceAlignment,
        /*[in]*/ struct IEntity * SecondaryReferenceEntity,
        /*[in]*/ long SecondaryReferenceType,
        /*[in]*/ long SecondaryReferenceAlignment,
        /*[in]*/ struct IEntity * TertiaryReferenceEntity,
        /*[in]*/ long TertiaryReferenceType,
        /*[in]*/ long TertiaryReferenceAlignment,
        /*[out,retval]*/ struct IFeature * * LpMateRef ) = 0;
      virtual HRESULT __stdcall FeatureFillet (
        /*[in]*/ long Options,
        /*[in]*/ double R1,
        /*[in]*/ long Ftyp,
        /*[in]*/ long OverflowType,
        /*[in]*/ VARIANT Radii,
        /*[in]*/ VARIANT SetBackDistances,
        /*[in]*/ VARIANT PointRadiusArray,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IFeatureFillet (
        /*[in]*/ long Options,
        /*[in]*/ double R1,
        /*[in]*/ long Ftyp,
        /*[in]*/ long OverflowType,
        /*[in]*/ long NRadii,
        /*[in]*/ double * Radii,
        /*[in]*/ long SetbackDistCount,
        /*[in]*/ double * SetBackDistances,
        /*[in]*/ long PointCount,
        /*[in]*/ double * PointRadiusArray,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertProtrusionSwept3 (
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ VARIANT_BOOL Alignment,
        /*[in]*/ short TwistCtrlOption,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL BAdvancedSmoothing,
        /*[in]*/ short StartMatchingType,
        /*[in]*/ short EndMatchingType,
        /*[in]*/ VARIANT_BOOL IsThinBody,
        /*[in]*/ double Thickness1,
        /*[in]*/ double Thickness2,
        /*[in]*/ short ThinType,
        /*[in]*/ short PathAlign,
        /*[in]*/ VARIANT_BOOL Merge,
        /*[in]*/ VARIANT_BOOL UseFeatScope,
        /*[in]*/ VARIANT_BOOL UseAutoSelect,
        /*[in]*/ double TwistAngle,
        /*[in]*/ VARIANT_BOOL BMergeSmoothFaces,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertCutSwept3 (
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ VARIANT_BOOL Alignment,
        /*[in]*/ short TwistCtrlOption,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL BAdvancedSmoothing,
        /*[in]*/ short StartMatchingType,
        /*[in]*/ short EndMatchingType,
        /*[in]*/ VARIANT_BOOL IsThinBody,
        /*[in]*/ double Thickness1,
        /*[in]*/ double Thickness2,
        /*[in]*/ short ThinType,
        /*[in]*/ short PathAlign,
        /*[in]*/ VARIANT_BOOL UseFeatScope,
        /*[in]*/ VARIANT_BOOL UseAutoSelect,
        /*[in]*/ double TwistAngle,
        /*[in]*/ VARIANT_BOOL BMergeSmoothFaces,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertSweepSurface2 (
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ short TwistCtrlOption,
        /*[in]*/ VARIANT_BOOL KeepTangency,
        /*[in]*/ VARIANT_BOOL BAdvancedSmoothing,
        /*[in]*/ short StartMatchingType,
        /*[in]*/ short EndMatchingType,
        /*[in]*/ short PathAlign,
        /*[in]*/ VARIANT_BOOL UseFeatScope,
        /*[in]*/ VARIANT_BOOL UseAutoSelect,
        /*[in]*/ double TwistAngle,
        /*[in]*/ VARIANT_BOOL BMergeSmoothFaces,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertSheetMetalHem (
        /*[in]*/ long Type,
        /*[in]*/ long Position,
        /*[in]*/ VARIANT_BOOL Reverse,
        /*[in]*/ double DLength,
        /*[in]*/ double DGap,
        /*[in]*/ double DAngle,
        /*[in]*/ double DRad,
        /*[in]*/ double DMiterGap,
        /*[in]*/ struct ICustomBendAllowance * PCBA,
        /*[out,retval]*/ struct IFeature * * PFeat ) = 0;
      virtual HRESULT __stdcall InsertSheetMetalEdgeFlange (
        /*[in]*/ struct IEdge * FlangeEdge,
        /*[in]*/ struct IFeature * SketchFeat,
        /*[in]*/ long BooleanOptions,
        /*[in]*/ double DAngle,
        /*[in]*/ double DRadius,
        /*[in]*/ long BendPosition,
        /*[in]*/ double DOffsetDist,
        /*[in]*/ long ReliefType,
        /*[in]*/ double DReliefRatio,
        /*[in]*/ double DReliefWidth,
        /*[in]*/ double DReliefDepth,
        /*[in]*/ long FlangeSharpType,
        /*[in]*/ struct ICustomBendAllowance * PCBA,
        /*[out,retval]*/ struct IFeature * * PFeat ) = 0;
      virtual HRESULT __stdcall InsertSheetMetal3dBend (
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL BUseDefaultRadius,
        /*[in]*/ double Radius,
        /*[in]*/ VARIANT_BOOL FlipDir,
        /*[in]*/ short BendPos,
        /*[in]*/ struct ICustomBendAllowance * PCBA,
        /*[out,retval]*/ struct IFeature * * PFeat ) = 0;
      virtual HRESULT __stdcall InsertEdgeMerge (
        /*[in]*/ double Angular_tolerance,
        /*[in]*/ double Edge_length_tolerance,
        /*[out,retval]*/ struct IFeature * * PEdgeMerge ) = 0;
      virtual HRESULT __stdcall MoldUndercutDetect2 (
        /*[in]*/ long ColUndercut1,
        /*[in]*/ long ColUndercut2,
        /*[in]*/ long ColOccluded,
        /*[in]*/ long ColStraddle,
        /*[in]*/ long ColBase,
        /*[in]*/ VARIANT_BOOL BCoordInput,
        /*[in]*/ double Dx,
        /*[in]*/ double Dy,
        /*[in]*/ double Dz ) = 0;
      virtual HRESULT __stdcall InsertIndent (
        /*[in]*/ double Thickness,
        /*[in]*/ double Clearance,
        /*[in]*/ VARIANT_BOOL Exclude,
        /*[in]*/ VARIANT_BOOL ClrDir,
        /*[in]*/ VARIANT_BOOL Cut,
        /*[in]*/ VARIANT_BOOL CutDir,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall FeatureLinearPattern2 (
        /*[in]*/ long Num1,
        /*[in]*/ double Spacing1,
        /*[in]*/ long Num2,
        /*[in]*/ double Spacing2,
        /*[in]*/ VARIANT_BOOL FlipDir1,
        /*[in]*/ VARIANT_BOOL FlipDir2,
        /*[in]*/ BSTR DName1,
        /*[in]*/ BSTR DName2,
        /*[in]*/ VARIANT_BOOL GeometryPattern,
        /*[out,retval]*/ struct IFeature * * LpLinearPatt ) = 0;
      virtual HRESULT __stdcall FeatureCircularPattern2 (
        /*[in]*/ long Num,
        /*[in]*/ double Spacing,
        /*[in]*/ VARIANT_BOOL FlipDir,
        /*[in]*/ BSTR DName,
        /*[in]*/ VARIANT_BOOL GeometryPattern,
        /*[out,retval]*/ struct IFeature * * LpCircularPatt ) = 0;
      virtual HRESULT __stdcall InsertSplitLineIntersect (
        /*[in]*/ long CompleteOption,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertFlexFeature (
        /*[in]*/ double RotX,
        /*[in]*/ double RotY,
        /*[in]*/ double RotZ,
        /*[in]*/ double TanX,
        /*[in]*/ double TanY,
        /*[in]*/ double TanZ,
        /*[in]*/ double RadX,
        /*[in]*/ double RadY,
        /*[in]*/ double RadZ,
        /*[in]*/ double Angle,
        /*[in]*/ double PivotX,
        /*[in]*/ double PivotY,
        /*[in]*/ double PivotZ,
        /*[in]*/ long Type,
        /*[in]*/ double LeftTrim,
        /*[in]*/ double RightTrim,
        /*[in]*/ VARIANT_BOOL HardEdges,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall FeatureExtrusion2 (
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2,
        /*[in]*/ VARIANT_BOOL TranslateSurface1,
        /*[in]*/ VARIANT_BOOL TranslateSurface2,
        /*[in]*/ VARIANT_BOOL Merge,
        /*[in]*/ VARIANT_BOOL UseFeatScope,
        /*[in]*/ VARIANT_BOOL UseAutoSelect,
        /*[in]*/ long T0,
        /*[in]*/ double StartOffset,
        /*[in]*/ VARIANT_BOOL FlipStartOffset,
        /*[out,retval]*/ struct IFeature * * PFeat ) = 0;
      virtual HRESULT __stdcall InsertMoveFace (
        /*[in]*/ long MoveType,
        /*[in]*/ VARIANT_BOOL ReverseDir,
        /*[in]*/ double Angle,
        /*[in]*/ double Distance,
        /*[out,retval]*/ struct IFeature * * PFeat ) = 0;
      virtual HRESULT __stdcall get_FeatureName (
        /*[in]*/ long NameID,
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall IsNameUsed (
        /*[in]*/ long Type,
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * BRet ) = 0;
      virtual HRESULT __stdcall get_EnableFeatureTreeWindow (
        /*[out,retval]*/ VARIANT_BOOL * State ) = 0;
      virtual HRESULT __stdcall put_EnableFeatureTreeWindow (
        /*[in]*/ VARIANT_BOOL State ) = 0;
      virtual HRESULT __stdcall HoleWizard2 (
        /*[in]*/ long GenericHoleType,
        /*[in]*/ long StandardIndex,
        /*[in]*/ long FastenerTypeIndex,
        /*[in]*/ BSTR SSize,
        /*[in]*/ short EndType,
        /*[in]*/ double Diameter,
        /*[in]*/ double Depth,
        /*[in]*/ double Value1,
        /*[in]*/ double Value2,
        /*[in]*/ double Value3,
        /*[in]*/ double Value4,
        /*[in]*/ double Value5,
        /*[in]*/ double Value6,
        /*[in]*/ double Value7,
        /*[in]*/ double Value8,
        /*[in]*/ double Value9,
        /*[in]*/ double Value10,
        /*[in]*/ double Value11,
        /*[in]*/ double Value12,
        /*[in]*/ BSTR ThreadClass,
        /*[in]*/ VARIANT_BOOL RevDir,
        /*[in]*/ VARIANT_BOOL UseFeatScope,
        /*[in]*/ VARIANT_BOOL UseAutoSelect,
        /*[in]*/ VARIANT_BOOL AssemblyFeatureScope,
        /*[in]*/ VARIANT_BOOL AutoSelectComponents,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall CreateDefinition (
        /*[in]*/ long Type,
        /*[out,retval]*/ IDispatch * * PDispOut ) = 0;
      virtual HRESULT __stdcall CreateFeature (
        /*[in]*/ IDispatch * FeatureData,
        /*[out,retval]*/ struct IFeature * * PFeat ) = 0;
      virtual HRESULT __stdcall CreateFormTool (
        /*[out,retval]*/ struct IFeature * * FormToolFeat ) = 0;
      virtual HRESULT __stdcall InsertVariablePitchHelix (
        /*[in]*/ VARIANT_BOOL Reversed,
        /*[in]*/ VARIANT_BOOL Clockwise,
        /*[in]*/ long Helixdef,
        /*[in]*/ double Startangle,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddVariablePitchHelixSegment (
        /*[in]*/ double Height,
        /*[in]*/ double Diameter,
        /*[in]*/ double Pitch,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall EndVariablePitchHelix (
        /*[out,retval]*/ struct IFeature * * PFeat ) = 0;
      virtual HRESULT __stdcall GetFeatureCount (
        /*[in]*/ VARIANT_BOOL TopLevelOnly,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetFeatures (
        /*[in]*/ VARIANT_BOOL TopLevelOnly,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetFeatures (
        /*[in]*/ VARIANT_BOOL TopLevelOnly,
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall FeatureExtrusionThin2 (
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2,
        /*[in]*/ VARIANT_BOOL TranslateSurface1,
        /*[in]*/ VARIANT_BOOL TranslateSurface2,
        /*[in]*/ VARIANT_BOOL Merge,
        /*[in]*/ double Thk1,
        /*[in]*/ double Thk2,
        /*[in]*/ double EndThk,
        /*[in]*/ long RevThinDir,
        /*[in]*/ long CapEnds,
        /*[in]*/ VARIANT_BOOL AddBends,
        /*[in]*/ double BendRad,
        /*[in]*/ VARIANT_BOOL UseFeatScope,
        /*[in]*/ VARIANT_BOOL UseAutoSelect,
        /*[in]*/ long T0,
        /*[in]*/ double StartOffset,
        /*[in]*/ VARIANT_BOOL FlipStartOffset,
        /*[out,retval]*/ struct IFeature * * PFeat ) = 0;
      virtual HRESULT __stdcall InsertSecurityNote (
        /*[in]*/ BSTR Text,
        /*[in]*/ struct IFeature * FeatureOwner,
        /*[out,retval]*/ struct INote * * Retval ) = 0;
      virtual HRESULT __stdcall PreSplitBody (
        /*[out,retval]*/ VARIANT * ResultingBodies ) = 0;
      virtual HRESULT __stdcall PostSplitBody (
        /*[in]*/ VARIANT BodiesToMark,
        /*[in]*/ VARIANT_BOOL ConsumeCut,
        /*[in]*/ VARIANT Origins,
        /*[in]*/ VARIANT SavePaths,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertMacroFeature3 (
        /*[in]*/ BSTR BaseName,
        /*[in]*/ BSTR ProgId,
        /*[in]*/ VARIANT MacroMethods,
        /*[in]*/ VARIANT ParamNames,
        /*[in]*/ VARIANT ParamTypes,
        /*[in]*/ VARIANT ParamValues,
        /*[in]*/ VARIANT DimTypes,
        /*[in]*/ VARIANT DimValues,
        /*[in]*/ VARIANT EditBodies,
        /*[in]*/ VARIANT IconFiles,
        /*[in]*/ long Options,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall IInsertMacroFeature3 (
        /*[in]*/ BSTR BaseName,
        /*[in]*/ BSTR ProgId,
        /*[in]*/ BSTR * MacroMethods,
        /*[in]*/ long ParamCount,
        /*[in]*/ BSTR * ParamNames,
        /*[in]*/ long * ParamTypes,
        /*[in]*/ BSTR * ParamValues,
        /*[in]*/ long DimCount,
        /*[in]*/ long * DimTypes,
        /*[in]*/ double * DimCountValues,
        /*[in]*/ long BodyCount,
        /*[in]*/ struct IBody2 * * EditBodies,
        /*[in]*/ long IconCount,
        /*[in]*/ BSTR * IconFiles,
        /*[in]*/ long Options,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertNetBlend (
        /*[in]*/ short Type,
        /*[in]*/ short NCurvesDir1,
        /*[in]*/ short NCurvesDir2,
        /*[in]*/ VARIANT_BOOL HasCenterline,
        /*[in]*/ double TessTolFactor,
        /*[in]*/ VARIANT_BOOL WantsSolid,
        /*[in]*/ VARIANT_BOOL MergeBody,
        /*[in]*/ VARIANT_BOOL FeatureScope,
        /*[in]*/ VARIANT_BOOL AutoSelect,
        /*[in]*/ VARIANT_BOOL Thin,
        /*[in]*/ double Thickness1,
        /*[in]*/ double Thickness2,
        /*[in]*/ VARIANT_BOOL ReverseThickness,
        /*[in]*/ short ThinSolidType,
        /*[in]*/ VARIANT_BOOL UseSharedThickness,
        /*[in]*/ VARIANT_BOOL CapEnds,
        /*[in]*/ double EndThickness,
        /*[in]*/ VARIANT_BOOL AutoFillet,
        /*[in]*/ double FilletRadius,
        /*[in]*/ VARIANT_BOOL ForceNonRational,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall SetNetBlendCurveData (
        /*[in]*/ short Direction,
        /*[in]*/ short CurveIndex,
        /*[in]*/ short TangentType,
        /*[in]*/ double SignedDraftAngle,
        /*[in]*/ double SignedTangentLength,
        /*[in]*/ VARIANT_BOOL TangentLengthApplyAll,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall SetNetBlendDirectionData (
        /*[in]*/ short Direction,
        /*[in]*/ short InfluenceType,
        /*[in]*/ short TrimCurves,
        /*[in]*/ VARIANT_BOOL BlendClosed,
        /*[in]*/ VARIANT_BOOL SplitSurfaces,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall SetNetBlendCenterlineData (
        /*[in]*/ VARIANT_BOOL CombineWithDir2,
        /*[in]*/ short TwistType,
        /*[in]*/ short PathAlignmentType,
        /*[in]*/ short TwistAngleType,
        /*[in]*/ double TwistAngle,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall ConvertLoftOrSweepToNetBlend (
        /*[out,retval]*/ struct IFeature * * NetBlendFeat ) = 0;
      virtual HRESULT __stdcall InsertSheetMetalEdgeFlange2 (
        /*[in]*/ VARIANT FlangeEdges,
        /*[in]*/ VARIANT SketchFeats,
        /*[in]*/ long BooleanOptions,
        /*[in]*/ double FlangeAngle,
        /*[in]*/ double FlangeRadius,
        /*[in]*/ long BendPosition,
        /*[in]*/ double FlangeOffsetDist,
        /*[in]*/ long ReliefType,
        /*[in]*/ double FlangeReliefRatio,
        /*[in]*/ double FlangeReliefWidth,
        /*[in]*/ double FlangeReliefDepth,
        /*[in]*/ long FlangeSharpType,
        /*[in]*/ struct ICustomBendAllowance * CustomBendAllowance,
        /*[out,retval]*/ struct IFeature * * FeatureOut ) = 0;
      virtual HRESULT __stdcall IInsertSheetMetalEdgeFlange2 (
        /*[in]*/ long EdgeCount,
        /*[in]*/ struct IEdge * * FlangeEdges,
        /*[in]*/ long SketchFeatCount,
        /*[in]*/ struct IFeature * * SketchFeat,
        /*[in]*/ long BooleanOptions,
        /*[in]*/ double FlangeAngle,
        /*[in]*/ double FlangeRadius,
        /*[in]*/ long BendPosition,
        /*[in]*/ double FlangeOffsetDist,
        /*[in]*/ long ReliefType,
        /*[in]*/ double FlangeReliefRatio,
        /*[in]*/ double FlangeReliefWidth,
        /*[in]*/ double FlangeReliefDepth,
        /*[in]*/ long FlangeSharpType,
        /*[in]*/ struct ICustomBendAllowance * CustomBendAllowance,
        /*[out,retval]*/ struct IFeature * * FeatureOut ) = 0;
      virtual HRESULT __stdcall InsertFillSurface2 (
        /*[in]*/ long Resolutions,
        /*[in]*/ long Options,
        /*[in]*/ VARIANT VPatchBoundaries,
        /*[in]*/ VARIANT VCurvatureControlType,
        /*[in]*/ VARIANT VFaces,
        /*[in]*/ VARIANT VConstraintCurves,
        /*[out,retval]*/ struct IFeature * * PFeatureOut ) = 0;
      virtual HRESULT __stdcall InsertFreeform (
        /*[in]*/ short Continuity0,
        /*[in]*/ short Continuity1,
        /*[in]*/ short Continuity2,
        /*[in]*/ short Continuity3,
        /*[in]*/ VARIANT_BOOL Symmetric0,
        /*[in]*/ VARIANT_BOOL Symmetric1,
        /*[out,retval]*/ struct IFeature * * PFeatureOut ) = 0;
      virtual HRESULT __stdcall SetFreeformCurveData (
        /*[in]*/ short Direction,
        /*[in]*/ double CurveParameter,
        /*[in]*/ double Tangent0X,
        /*[in]*/ double Tangent0Y,
        /*[in]*/ double Tangent0Z,
        /*[in]*/ double Tangent1X,
        /*[in]*/ double Tangent1Y,
        /*[in]*/ double Tangent1Z ) = 0;
      virtual HRESULT __stdcall SetFreeformPointData (
        /*[in]*/ short Direction,
        /*[in]*/ double CurveParameter,
        /*[in]*/ double ParameterOnCurve,
        /*[in]*/ double XOffset,
        /*[in]*/ double YOffset,
        /*[in]*/ double ZOffset ) = 0;
      virtual HRESULT __stdcall DraftXpertChange (
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL FlipDir,
        /*[in]*/ VARIANT_BOOL EdgeDraft,
        /*[in]*/ long PropType,
        /*[in]*/ VARIANT_BOOL IsStepDraft,
        /*[in]*/ VARIANT_BOOL IsBodyDraft,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall DraftXpertRemove (
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall FilletXpertChange (
        /*[in]*/ long Options,
        /*[in]*/ double R1,
        /*[in]*/ long Ftyp,
        /*[in]*/ long OverflowType,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall FilletXpertRemove (
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertRevolvedRefSurface (
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL ReverseDir,
        /*[in]*/ double Angle2,
        /*[in]*/ long RevType,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall get_ShowComponentNames (
        /*[out,retval]*/ VARIANT_BOOL * ShowCompName ) = 0;
      virtual HRESULT __stdcall put_ShowComponentNames (
        /*[in]*/ VARIANT_BOOL ShowCompName ) = 0;
      virtual HRESULT __stdcall get_ShowComponentDescriptions (
        /*[out,retval]*/ VARIANT_BOOL * ShowCompDescriptions ) = 0;
      virtual HRESULT __stdcall put_ShowComponentDescriptions (
        /*[in]*/ VARIANT_BOOL ShowCompDescriptions ) = 0;
      virtual HRESULT __stdcall get_ShowComponentConfigurationNames (
        /*[out,retval]*/ VARIANT_BOOL * ShowCompConfigName ) = 0;
      virtual HRESULT __stdcall put_ShowComponentConfigurationNames (
        /*[in]*/ VARIANT_BOOL ShowCompConfigName ) = 0;
      virtual HRESULT __stdcall get_ShowComponentConfigurationDescriptions (
        /*[out,retval]*/ VARIANT_BOOL * ShowConfigDescription ) = 0;
      virtual HRESULT __stdcall put_ShowComponentConfigurationDescriptions (
        /*[in]*/ VARIANT_BOOL ShowConfigDescription ) = 0;
      virtual HRESULT __stdcall GetPreTrimmedBodies (
        /*[in]*/ struct IBody2 * TargetSurface,
        /*[out,retval]*/ VARIANT * TrimmedBodies ) = 0;
      virtual HRESULT __stdcall FilletXpertMakeCorner (
        /*[in]*/ long CornerType,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall get_MoveSizeFeatures (
        /*[out,retval]*/ VARIANT_BOOL * MoveSizeToggle ) = 0;
      virtual HRESULT __stdcall put_MoveSizeFeatures (
        /*[in]*/ VARIANT_BOOL MoveSizeToggle ) = 0;
      virtual HRESULT __stdcall InsertMirrorFeature2 (
        /*[in]*/ VARIANT_BOOL BMirrorBody,
        /*[in]*/ VARIANT_BOOL BGeometryPattern,
        /*[in]*/ VARIANT_BOOL BMerge,
        /*[in]*/ VARIANT_BOOL BKnit,
        /*[in]*/ long ScopeOptions,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertFilletBeadFeature2 (
        /*[in]*/ short Type1,
        /*[in]*/ double Size1,
        /*[in]*/ double Length1,
        /*[in]*/ short PenetrationType1,
        /*[in]*/ double PenetrationValue1,
        /*[in]*/ double Pitch,
        /*[in]*/ short Type2,
        /*[in]*/ double Size2,
        /*[in]*/ double Length2,
        /*[in]*/ short PenetrationType2,
        /*[in]*/ double PenetrationValue2,
        /*[in]*/ long Flag,
        /*[in]*/ long EdgeNum1,
        /*[in]*/ VARIANT DeSelEdge1,
        /*[in]*/ long EdgeNum2,
        /*[in]*/ VARIANT DeSelEdge2,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall GetFeatureTreeRootItem (
        /*[out,retval]*/ struct ITreeControlItem * * Retval ) = 0;
      virtual HRESULT __stdcall SimpleFeatureBossExtrude (
        /*[in]*/ BSTR SketchName,
        /*[in]*/ double Depth,
        /*[in]*/ VARIANT_BOOL Direction,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertMidSurface (
        /*[in]*/ struct IBody2 * PBodyIn,
        /*[in]*/ struct IModelDoc2 * PPartDocIn,
        /*[in]*/ double Placement,
        /*[in]*/ VARIANT_BOOL KnitFlag,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall CreateSaveBodyFeature (
        /*[in]*/ VARIANT Bodies,
        /*[in]*/ VARIANT FilePaths,
        /*[in]*/ BSTR AssemName,
        /*[in]*/ VARIANT_BOOL ConsumeBody,
        /*[in]*/ VARIANT_BOOL CopyCustomProperty,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall HoleWizard3 (
        /*[in]*/ long GenericHoleType,
        /*[in]*/ long StandardIndex,
        /*[in]*/ long FastenerTypeIndex,
        /*[in]*/ BSTR SSize,
        /*[in]*/ short EndType,
        /*[in]*/ double Diameter,
        /*[in]*/ double Depth,
        /*[in]*/ double Value1,
        /*[in]*/ double Value2,
        /*[in]*/ double Value3,
        /*[in]*/ double Value4,
        /*[in]*/ double Value5,
        /*[in]*/ double Value6,
        /*[in]*/ double Value7,
        /*[in]*/ double Value8,
        /*[in]*/ double Value9,
        /*[in]*/ double Value10,
        /*[in]*/ double Value11,
        /*[in]*/ double Value12,
        /*[in]*/ BSTR ThreadClass,
        /*[in]*/ VARIANT_BOOL RevDir,
        /*[in]*/ VARIANT_BOOL UseFeatScope,
        /*[in]*/ VARIANT_BOOL UseAutoSelect,
        /*[in]*/ VARIANT_BOOL AssemblyFeatureScope,
        /*[in]*/ VARIANT_BOOL AutoSelectComponents,
        /*[in]*/ VARIANT_BOOL PropagateFeatureToParts,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall SimpleHole2 (
        /*[in]*/ double Dia,
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2,
        /*[in]*/ VARIANT_BOOL TranslateSurface1,
        /*[in]*/ VARIANT_BOOL TranslateSurface2,
        /*[in]*/ VARIANT_BOOL UseFeatScope,
        /*[in]*/ VARIANT_BOOL UseAutoSelect,
        /*[in]*/ VARIANT_BOOL AssemblyFeatureScope,
        /*[in]*/ VARIANT_BOOL AutoSelectComponents,
        /*[in]*/ VARIANT_BOOL PropagateFeatureToParts,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall FeatureCut2 (
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2,
        /*[in]*/ VARIANT_BOOL TranslateSurface1,
        /*[in]*/ VARIANT_BOOL TranslateSurface2,
        /*[in]*/ VARIANT_BOOL NormalCut,
        /*[in]*/ VARIANT_BOOL UseFeatScope,
        /*[in]*/ VARIANT_BOOL UseAutoSelect,
        /*[in]*/ VARIANT_BOOL AssemblyFeatureScope,
        /*[in]*/ VARIANT_BOOL AutoSelectComponents,
        /*[in]*/ VARIANT_BOOL PropagateFeatureToParts,
        /*[out,retval]*/ struct IFeature * * PFeat ) = 0;
      virtual HRESULT __stdcall FeatureRevolveCut2 (
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL ReverseDir,
        /*[in]*/ double Angle2,
        /*[in]*/ long RevType,
        /*[in]*/ long Options,
        /*[in]*/ VARIANT_BOOL UseFeatScope,
        /*[in]*/ VARIANT_BOOL UseAutoSelect,
        /*[in]*/ VARIANT_BOOL AssemblyFeatureScope,
        /*[in]*/ VARIANT_BOOL AutoSelectComponents,
        /*[in]*/ VARIANT_BOOL PropagateFeatureToParts,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertFreeform2 (
        /*[in]*/ VARIANT_BOOL Nsided,
        /*[in]*/ VARIANT_BOOL Symmetric0,
        /*[in]*/ VARIANT_BOOL Symmetric1,
        /*[in]*/ double Angle,
        /*[out,retval]*/ struct IFeature * * PFeatureOut ) = 0;
      virtual HRESULT __stdcall SetFreeformBoundaryContinuity (
        /*[in]*/ short BoundaryIndex,
        /*[in]*/ short Continuity ) = 0;
      virtual HRESULT __stdcall EditReferencePoint (
        /*[in]*/ long NRefPointType,
        /*[in]*/ long NRefPointAlongCurveType,
        /*[in]*/ double DDistance_or_Percent,
        /*[in]*/ long NumberOfRefPoints,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall EditDeleteFace (
        /*[in]*/ long Refill,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertLiveSectionPlane (
        /*[in]*/ short Type,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall MoveRotateLiveSectionPlane (
        /*[in]*/ BSTR Feat,
        /*[in]*/ short Type,
        /*[in]*/ double XorDeltaX,
        /*[in]*/ double YorDeltaY,
        /*[in]*/ double ZorDeltaZ,
        /*[in]*/ double Axisx,
        /*[in]*/ double Axisy,
        /*[in]*/ double Axisz,
        /*[in]*/ double Angle,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertCrossBreak (
        /*[in]*/ double Angle,
        /*[in]*/ double Radius,
        /*[out,retval]*/ struct IFeature * * LpCrossBreak ) = 0;
      virtual HRESULT __stdcall InsertRib (
        /*[in]*/ VARIANT_BOOL Is2Sided,
        /*[in]*/ VARIANT_BOOL ReverseThicknessDir,
        /*[in]*/ double Thickness,
        /*[in]*/ long ReferenceEdgeIndex,
        /*[in]*/ VARIANT_BOOL ReverseMaterialDir,
        /*[in]*/ VARIANT_BOOL IsDrafted,
        /*[in]*/ VARIANT_BOOL DraftOutward,
        /*[in]*/ double DraftAngle,
        /*[in]*/ VARIANT_BOOL IsNormToSketch,
        /*[in]*/ VARIANT_BOOL IsDraftedFromWall ) = 0;
      virtual HRESULT __stdcall GetPlasticsShellType (
        /*[out,retval]*/ short * ShellType ) = 0;
      virtual HRESULT __stdcall InsertCoordinateSystem (
        /*[in]*/ VARIANT_BOOL XFlippedIn,
        /*[in]*/ VARIANT_BOOL YFlippedIn,
        /*[in]*/ VARIANT_BOOL ZFlippedIn,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall CreateCoordinateSystem (
        /*[in]*/ IDispatch * OriginPointEntity,
        /*[in]*/ VARIANT XAxisEntities,
        /*[in]*/ VARIANT YAxisEntities,
        /*[in]*/ VARIANT ZAxisEntities,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertConvertToSheetMetal (
        /*[in]*/ double Thickness,
        /*[in]*/ VARIANT_BOOL ReverseThickDir,
        /*[in]*/ VARIANT_BOOL FindBends,
        /*[in]*/ double Radius,
        /*[in]*/ double Gap,
        /*[in]*/ long ReliefType,
        /*[in]*/ double ReliefRatio,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("9ef72595-1414-46bf-b4bb-b0da133c893c"))
IFaultEntity : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * NCount ) = 0;
      virtual HRESULT __stdcall get_Entity (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct IEntity * * Entity ) = 0;
      virtual HRESULT __stdcall get_ErrorCode (
        /*[in]*/ long Index,
        /*[out,retval]*/ long * ErrorCode ) = 0;
      virtual HRESULT __stdcall get_Entity2 (
        /*[in]*/ long Index,
        /*[out,retval]*/ IDispatch * * LpDisp ) = 0;
};

struct __declspec(uuid("83a33d32-27c5-11ce-bfd4-00400513bb57"))
IPartDoc : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_MaterialUserName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_MaterialUserName (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall get_MaterialIdName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_MaterialIdName (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall get_MaterialPropertyValues (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall put_MaterialPropertyValues (
        /*[in]*/ VARIANT Retval ) = 0;
      virtual HRESULT __stdcall FirstFeature (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IFirstFeature (
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall FeatureByName (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IFeatureByName (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall FeatureById (
        /*[in]*/ long ID,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IFeatureById (
        /*[in]*/ long ID,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall Body (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IBodyObject (
        /*[out,retval]*/ struct IBody * * Retval ) = 0;
      virtual HRESULT __stdcall Dummy18 ( ) = 0;
      virtual HRESULT __stdcall FeatureExtrusion (
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2 ) = 0;
      virtual HRESULT __stdcall FeatureRevolve (
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL ReverseDir,
        /*[in]*/ double Angle2,
        /*[in]*/ long RevType ) = 0;
      virtual HRESULT __stdcall FeatureRevolveCut (
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL ReverseDir,
        /*[in]*/ double Angle2,
        /*[in]*/ long RevType ) = 0;
      virtual HRESULT __stdcall GetTessTriangles (
        /*[in]*/ VARIANT_BOOL NoConversion,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetTessNorms (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetProcessedBody (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetProcessedBody (
        /*[out,retval]*/ struct IBody * * Retval ) = 0;
      virtual HRESULT __stdcall GetPartBox (
        /*[in]*/ VARIANT_BOOL NoConversion,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall CreateNewBody (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateNewBody (
        /*[out,retval]*/ struct IBody * * Retval ) = 0;
      virtual HRESULT __stdcall EditRebuild ( ) = 0;
      virtual HRESULT __stdcall Dummy17 ( ) = 0;
      virtual HRESULT __stdcall Dummy19 ( ) = 0;
      virtual HRESULT __stdcall ForceRebuild ( ) = 0;
      virtual HRESULT __stdcall EditUnsuppressDependent ( ) = 0;
      virtual HRESULT __stdcall EditRollforward ( ) = 0;
      virtual HRESULT __stdcall InsertStockTurned ( ) = 0;
      virtual HRESULT __stdcall EditUnsuppress ( ) = 0;
      virtual HRESULT __stdcall MakeSection ( ) = 0;
      virtual HRESULT __stdcall Dumpfacets ( ) = 0;
      virtual HRESULT __stdcall FeatureStock ( ) = 0;
      virtual HRESULT __stdcall EditRollback ( ) = 0;
      virtual HRESULT __stdcall EditSuppress ( ) = 0;
      virtual HRESULT __stdcall AddPropertyExtension (
        /*[in]*/ VARIANT PropertyExtension,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetPropertyExtension (
        /*[in]*/ long ID,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall MirrorFeature ( ) = 0;
      virtual HRESULT __stdcall ResetPropertyExtension ( ) = 0;
      virtual HRESULT __stdcall Dummy1 ( ) = 0;
      virtual HRESULT __stdcall Dummy2 ( ) = 0;
      virtual HRESULT __stdcall Dummy3 ( ) = 0;
      virtual HRESULT __stdcall Dummy4 ( ) = 0;
      virtual HRESULT __stdcall Dummy5 ( ) = 0;
      virtual HRESULT __stdcall Dummy6 ( ) = 0;
      virtual HRESULT __stdcall Dummy7 ( ) = 0;
      virtual HRESULT __stdcall Dummy8 ( ) = 0;
      virtual HRESULT __stdcall Dummy9 ( ) = 0;
      virtual HRESULT __stdcall Dummy10 ( ) = 0;
      virtual HRESULT __stdcall Dummy11 ( ) = 0;
      virtual HRESULT __stdcall Dummy12 ( ) = 0;
      virtual HRESULT __stdcall Dummy13 ( ) = 0;
      virtual HRESULT __stdcall Dummy14 ( ) = 0;
      virtual HRESULT __stdcall Dummy15 ( ) = 0;
      virtual HRESULT __stdcall Dummy16 ( ) = 0;
      virtual HRESULT __stdcall GetProcessedBodyWithSelFace (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetProcessedBodyWithSelFace (
        /*[out,retval]*/ struct IBody * * Retval ) = 0;
      virtual HRESULT __stdcall GetTessTriStrips (
        /*[in]*/ VARIANT_BOOL NoConversion,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetTessTriStripNorms (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall MirrorPart ( ) = 0;
      virtual HRESULT __stdcall IGetTessTriangles (
        /*[in]*/ VARIANT_BOOL NoConversion,
        /*[out,retval]*/ float * Retval ) = 0;
      virtual HRESULT __stdcall IGetTessNorms (
        /*[out,retval]*/ float * Retval ) = 0;
      virtual HRESULT __stdcall GetTessTriangleCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IGetPartBox (
        /*[in]*/ VARIANT_BOOL NoConversion,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall IGetTessTriStrips (
        /*[in]*/ VARIANT_BOOL NoConversion,
        /*[out,retval]*/ float * Retval ) = 0;
      virtual HRESULT __stdcall IGetTessTriStripNorms (
        /*[out,retval]*/ float * Retval ) = 0;
      virtual HRESULT __stdcall GetTessTriStripSize (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetEntityByName (
        /*[in]*/ BSTR Name,
        /*[in]*/ long EntityType,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetEntityByName (
        /*[in]*/ BSTR Name,
        /*[in]*/ long EntityType,
        /*[out,retval]*/ struct IEntity * * Retval ) = 0;
      virtual HRESULT __stdcall GetEntityName (
        /*[in]*/ IDispatch * Entity,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall IGetEntityName (
        /*[in]*/ struct IEntity * Entity,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetEntityName (
        /*[in]*/ IDispatch * Entity,
        /*[in]*/ BSTR StringValue,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ISetEntityName (
        /*[in]*/ struct IEntity * Entity,
        /*[in]*/ BSTR StringValue,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ReorderFeature (
        /*[in]*/ BSTR FeatureToMove,
        /*[in]*/ BSTR MoveAfterFeature,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall EnumRelatedBodies (
        /*[out,retval]*/ struct IEnumBodies * * Retval ) = 0;
      virtual HRESULT __stdcall GetSectionedBody (
        /*[in]*/ IDispatch * ViewIn,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetSectionedBody (
        /*[in]*/ struct IModelView * ViewIn,
        /*[out,retval]*/ struct IBody * * Retval ) = 0;
      virtual HRESULT __stdcall EnumRelatedSectionedBodies (
        /*[in]*/ struct IModelView * ViewIn,
        /*[out,retval]*/ struct IEnumBodies * * Retval ) = 0;
      virtual HRESULT __stdcall get_IMaterialPropertyValues (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_IMaterialPropertyValues (
        /*[in]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall FeatureRevolveThin (
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL ReverseDir,
        /*[in]*/ double Angle2,
        /*[in]*/ long RevType,
        /*[in]*/ double Thickness1,
        /*[in]*/ double Thickness2,
        /*[in]*/ long ReverseThinDir ) = 0;
      virtual HRESULT __stdcall FeatureRevolveThinCut (
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL ReverseDir,
        /*[in]*/ double Angle2,
        /*[in]*/ long RevType,
        /*[in]*/ double Thickness1,
        /*[in]*/ double Thickness2,
        /*[in]*/ long ReverseThinDir ) = 0;
      virtual HRESULT __stdcall FeatureExtrusionThin (
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2,
        /*[in]*/ double Thk1,
        /*[in]*/ double Thk2,
        /*[in]*/ double EndThk,
        /*[in]*/ long RevThinDir,
        /*[in]*/ long CapEnds,
        /*[in]*/ VARIANT_BOOL AddBends,
        /*[in]*/ double BendRad ) = 0;
      virtual HRESULT __stdcall InsertBends (
        /*[in]*/ double Radius,
        /*[in]*/ BSTR UseBendTable,
        /*[in]*/ double UseKfactor,
        /*[in]*/ double UseBendAllowance,
        /*[in]*/ VARIANT_BOOL UseAutoRelief,
        /*[in]*/ double OffsetRatio,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateFeatureFromBody (
        /*[in]*/ IDispatch * Body,
        /*[out,retval]*/ IDispatch * * Feature ) = 0;
      virtual HRESULT __stdcall ICreateFeatureFromBody (
        /*[in]*/ struct IBody * Body,
        /*[out,retval]*/ struct IFeature * * Feature ) = 0;
      virtual HRESULT __stdcall CreateFeatureFromBody2 (
        /*[in]*/ IDispatch * Body,
        /*[in]*/ VARIANT_BOOL MakeRefSurface,
        /*[out,retval]*/ IDispatch * * Feature ) = 0;
      virtual HRESULT __stdcall ICreateFeatureFromBody2 (
        /*[in]*/ struct IBody * Body,
        /*[in]*/ VARIANT_BOOL MakeRefSurface,
        /*[out,retval]*/ struct IFeature * * Feature ) = 0;
      virtual HRESULT __stdcall ImportDiagnosis (
        /*[in]*/ VARIANT_BOOL CloseAllGaps,
        /*[in]*/ VARIANT_BOOL RemoveFaces,
        /*[in]*/ VARIANT_BOOL FixFaces,
        /*[in]*/ long Options,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall DeleteEntityName (
        /*[in]*/ IDispatch * Entity,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IDeleteEntityName (
        /*[in]*/ struct IEntity * Entity,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetTessTriStripEdges (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTessTriStripEdges (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IGetTessTriStripEdgeSize (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall EnumBodies (
        /*[in]*/ long BodyType,
        /*[out,retval]*/ struct IEnumBodies * * Retval ) = 0;
      virtual HRESULT __stdcall GetBodies (
        /*[in]*/ long BodyType,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetRelatedBodies (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetRelatedSectionedBodies (
        /*[in]*/ IDispatch * ViewIn,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall InsertBends2 (
        /*[in]*/ double Radius,
        /*[in]*/ BSTR UseBendTable,
        /*[in]*/ double UseKfactor,
        /*[in]*/ double UseBendAllowance,
        /*[in]*/ VARIANT_BOOL UseAutoRelief,
        /*[in]*/ double OffsetRatio,
        /*[in]*/ VARIANT_BOOL DoFlatten,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateFeatureFromBody3 (
        /*[in]*/ IDispatch * Body,
        /*[in]*/ VARIANT_BOOL MakeRefSurface,
        /*[in]*/ long Options,
        /*[out,retval]*/ IDispatch * * Feature ) = 0;
      virtual HRESULT __stdcall ICreateFeatureFromBody3 (
        /*[in]*/ struct IBody * Body,
        /*[in]*/ VARIANT_BOOL MakeRefSurface,
        /*[in]*/ long Options,
        /*[out,retval]*/ struct IFeature * * Feature ) = 0;
      virtual HRESULT __stdcall GetMateReferenceEntity (
        /*[out,retval]*/ IDispatch * * MateRefEntity ) = 0;
      virtual HRESULT __stdcall FeatureExtrusion2 (
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2,
        /*[in]*/ VARIANT_BOOL Merge ) = 0;
      virtual HRESULT __stdcall FeatureExtrusionThin2 (
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2,
        /*[in]*/ VARIANT_BOOL Merge,
        /*[in]*/ double Thk1,
        /*[in]*/ double Thk2,
        /*[in]*/ double EndThk,
        /*[in]*/ long RevThinDir,
        /*[in]*/ long CapEnds,
        /*[in]*/ VARIANT_BOOL AddBends,
        /*[in]*/ double BendRad ) = 0;
      virtual HRESULT __stdcall CreateSurfaceFeatureFromBody (
        /*[in]*/ IDispatch * Body,
        /*[in]*/ long Options,
        /*[out,retval]*/ VARIANT * FeatArray ) = 0;
      virtual HRESULT __stdcall ICreateSurfaceFeatureFromBodyCount (
        /*[in]*/ struct IBody * Body,
        /*[in]*/ long Options,
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall ICreateSurfaceFeatureFromBody (
        /*[out,retval]*/ struct IFeature * * FeatArray ) = 0;
      virtual HRESULT __stdcall IBodyObject2 (
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall IGetProcessedBody2 (
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateNewBody2 (
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall IGetProcessedBodyWithSelFace2 (
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall IGetSectionedBody2 (
        /*[in]*/ struct IModelView * ViewIn,
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateFeatureFromBody4 (
        /*[in]*/ struct IBody2 * Body,
        /*[in]*/ VARIANT_BOOL MakeRefSurface,
        /*[in]*/ long Options,
        /*[out,retval]*/ struct IFeature * * Feature ) = 0;
      virtual HRESULT __stdcall ICreateSurfaceFeatureFromBodyCount2 (
        /*[in]*/ struct IBody2 * Body,
        /*[in]*/ long Options,
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall EnumRelatedBodies2 (
        /*[out,retval]*/ struct IEnumBodies2 * * Retval ) = 0;
      virtual HRESULT __stdcall EnumRelatedSectionedBodies2 (
        /*[in]*/ struct IModelView * ViewIn,
        /*[out,retval]*/ struct IEnumBodies2 * * Retval ) = 0;
      virtual HRESULT __stdcall EnumBodies2 (
        /*[in]*/ long BodyType,
        /*[out,retval]*/ struct IEnumBodies2 * * Retval ) = 0;
      virtual HRESULT __stdcall GetNamedEntitiesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetNamedEntities (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetNamedEntities (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IEntity * * Retval ) = 0;
      virtual HRESULT __stdcall GetCorrespondingEntity (
        /*[in]*/ IDispatch * Entity,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetCorrespondingEntity (
        /*[in]*/ struct IEntity * PEntity,
        /*[out,retval]*/ struct IEntity * * Retval ) = 0;
      virtual HRESULT __stdcall InsertBasePart (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall FeatureExtrusion3 (
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2,
        /*[in]*/ VARIANT_BOOL TranslateSurface1,
        /*[in]*/ VARIANT_BOOL TranslateSurface2,
        /*[in]*/ VARIANT_BOOL Merge ) = 0;
      virtual HRESULT __stdcall FeatureExtrusionThin3 (
        /*[in]*/ VARIANT_BOOL Sd,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ VARIANT_BOOL Dir,
        /*[in]*/ long T1,
        /*[in]*/ long T2,
        /*[in]*/ double D1,
        /*[in]*/ double D2,
        /*[in]*/ VARIANT_BOOL Dchk1,
        /*[in]*/ VARIANT_BOOL Dchk2,
        /*[in]*/ VARIANT_BOOL Ddir1,
        /*[in]*/ VARIANT_BOOL Ddir2,
        /*[in]*/ double Dang1,
        /*[in]*/ double Dang2,
        /*[in]*/ VARIANT_BOOL OffsetReverse1,
        /*[in]*/ VARIANT_BOOL OffsetReverse2,
        /*[in]*/ VARIANT_BOOL TranslateSurface1,
        /*[in]*/ VARIANT_BOOL TranslateSurface2,
        /*[in]*/ VARIANT_BOOL Merge,
        /*[in]*/ double Thk1,
        /*[in]*/ double Thk2,
        /*[in]*/ double EndThk,
        /*[in]*/ long RevThinDir,
        /*[in]*/ long CapEnds,
        /*[in]*/ VARIANT_BOOL AddBends,
        /*[in]*/ double BendRad ) = 0;
      virtual HRESULT __stdcall InsertMirrorFeature (
        /*[in]*/ VARIANT_BOOL GeometryPattern,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertMirrorAll (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall FeatureRevolve2 (
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL ReverseDir,
        /*[in]*/ double Angle2,
        /*[in]*/ long RevType,
        /*[in]*/ VARIANT_BOOL Merge ) = 0;
      virtual HRESULT __stdcall FeatureRevolveThin2 (
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL ReverseDir,
        /*[in]*/ double Angle2,
        /*[in]*/ long RevType,
        /*[in]*/ double Thickness1,
        /*[in]*/ double Thickness2,
        /*[in]*/ long ReverseThinDir,
        /*[in]*/ VARIANT_BOOL Merge ) = 0;
      virtual HRESULT __stdcall InsertCombineFeature (
        /*[in]*/ long OperationType,
        /*[in]*/ IDispatch * MainBody,
        /*[in]*/ VARIANT ToolVar,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IInsertCombineFeature (
        /*[in]*/ long OperationType,
        /*[in]*/ struct IBody2 * MainBody,
        /*[in]*/ long ToolsCount,
        /*[in]*/ struct IBody2 * * ToolsArr,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall EnumBodies3 (
        /*[in]*/ long BodyType,
        /*[in]*/ VARIANT_BOOL BVisibleOnly,
        /*[out,retval]*/ struct IEnumBodies2 * * Retval ) = 0;
      virtual HRESULT __stdcall GetBodies2 (
        /*[in]*/ long BodyType,
        /*[in]*/ VARIANT_BOOL BVisibleOnly,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall SetLineStyle (
        /*[in]*/ BSTR StyleName ) = 0;
      virtual HRESULT __stdcall SetLineWidth (
        /*[in]*/ long Width ) = 0;
      virtual HRESULT __stdcall SetLineColor (
        /*[in]*/ long Color ) = 0;
      virtual HRESULT __stdcall InsertPart (
        /*[in]*/ BSTR FileName,
        /*[in]*/ VARIANT_BOOL ImportPlane,
        /*[in]*/ VARIANT_BOOL ImportAxis,
        /*[in]*/ VARIANT_BOOL ImportCThread,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall SaveToFile ( ) = 0;
      virtual HRESULT __stdcall GetMaterialPropertyName (
        /*[out]*/ BSTR * Database,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetMaterialPropertyName (
        /*[in]*/ BSTR Database,
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall SaveToFile2 (
        /*[in]*/ BSTR Name,
        /*[in]*/ long Options,
        /*[out]*/ long * Errors,
        /*[out]*/ long * Warnings,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetMaterialPropertyName2 (
        /*[in]*/ BSTR ConfigName,
        /*[out]*/ BSTR * Database,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetMaterialPropertyName2 (
        /*[in]*/ BSTR ConfigName,
        /*[in]*/ BSTR Database,
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall GetCorresponding (
        /*[in]*/ IDispatch * InputObject,
        /*[out,retval]*/ IDispatch * * OutputObject ) = 0;
      virtual HRESULT __stdcall ImportDiagnosisGapCloser (
        /*[in]*/ double OldX,
        /*[in]*/ double OldY,
        /*[in]*/ double OldZ,
        /*[in]*/ double NewX,
        /*[in]*/ double NewY,
        /*[in]*/ double NewZ,
        /*[in]*/ VARIANT_BOOL LastMove ) = 0;
      virtual HRESULT __stdcall IsWeldment (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetMaterialVisualProperties (
        /*[out,retval]*/ struct IMaterialVisualPropertiesData * * Properties ) = 0;
      virtual HRESULT __stdcall SetMaterialVisualProperties (
        /*[in]*/ struct IMaterialVisualPropertiesData * Properties,
        /*[in]*/ long ConfigOption,
        /*[in]*/ VARIANT ConfigNames,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall FeatureXpert ( ) = 0;
      virtual HRESULT __stdcall InsertPart2 (
        /*[in]*/ BSTR FileName,
        /*[in]*/ long Options,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall ExportFlatPatternView (
        /*[in]*/ BSTR FilePath,
        /*[in]*/ long Options,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsMirrored (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetCosmosWorksMaterial (
        /*[in]*/ BSTR ConfigName,
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall SetDroppedFileName (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("83a33d8a-27c5-11ce-bfd4-00400513bb57"))
IMate : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetMateParams (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetMateParams (
        /*[out]*/ long * MateType,
        /*[out]*/ long * AlignFlag,
        /*[out]*/ long * CanBeFlipped ) = 0;
      virtual HRESULT __stdcall GetMateDimensionValue (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetMateDimensionValue (
        /*[out,retval]*/ double * DimValue ) = 0;
      virtual HRESULT __stdcall GetMateEntities (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetMateEntities (
        /*[out]*/ struct IMateEntity * * Entity1,
        /*[out]*/ struct IMateEntity * * Entity2 ) = 0;
      virtual HRESULT __stdcall GetEntity (
        /*[in]*/ int WhichOne,
        /*[out,retval]*/ IDispatch * * Entity ) = 0;
      virtual HRESULT __stdcall IGetEntity (
        /*[in]*/ int WhichOne,
        /*[out,retval]*/ struct IEntity * * Entity ) = 0;
};

struct __declspec(uuid("b1edf95c-e764-486a-a82e-8402d6553992"))
IHoleSeriesFeatureData : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc * TopDoc,
        /*[in]*/ struct IComponent * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_FastenerDefaultUnits (
        /*[out,retval]*/ BSTR * DefaultUnits ) = 0;
      virtual HRESULT __stdcall get_FastenerTopHoleType (
        /*[out,retval]*/ short * HoleType ) = 0;
      virtual HRESULT __stdcall get_FastenerBottomHoleType (
        /*[out,retval]*/ short * HoleType ) = 0;
      virtual HRESULT __stdcall get_FastenerHoleCount (
        /*[out,retval]*/ long * HoleCount ) = 0;
      virtual HRESULT __stdcall GetHoleTopMateEntity (
        /*[in]*/ long HoleInstance,
        /*[in]*/ short HoleType,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall GetHoleBottomMateEntity (
        /*[in]*/ long HoleInstance,
        /*[in]*/ short HoleType,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetHoleTopMateEntity (
        /*[in]*/ long HoleInstance,
        /*[in]*/ short HoleType,
        /*[out,retval]*/ struct IEntity * * Retval ) = 0;
      virtual HRESULT __stdcall IGetHoleBottomMateEntity (
        /*[in]*/ long HoleInstance,
        /*[in]*/ short HoleType,
        /*[out,retval]*/ struct IEntity * * Retval ) = 0;
      virtual HRESULT __stdcall get_Standard (
        /*[out,retval]*/ long * Standard ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[in]*/ long HoleSeriesWhichPart,
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall get_Size (
        /*[in]*/ long HoleSeriesWhichPart,
        /*[out,retval]*/ BSTR * Size ) = 0;
      virtual HRESULT __stdcall get_Material (
        /*[out,retval]*/ BSTR * Material ) = 0;
      virtual HRESULT __stdcall get_BoltHeadDiameter (
        /*[out,retval]*/ double * BoltHeadDiameter ) = 0;
      virtual HRESULT __stdcall get_BoltDiameter (
        /*[out,retval]*/ double * BoltDiameter ) = 0;
      virtual HRESULT __stdcall get_Preload (
        /*[out,retval]*/ BSTR * Preload ) = 0;
      virtual HRESULT __stdcall get_NutDiameter (
        /*[out,retval]*/ double * NutDiameter ) = 0;
      virtual HRESULT __stdcall get_StartFace (
        /*[out,retval]*/ IDispatch * * StartFace ) = 0;
      virtual HRESULT __stdcall get_EndFace (
        /*[out,retval]*/ IDispatch * * EndFace ) = 0;
      virtual HRESULT __stdcall GetSketchPointsCount (
        /*[out,retval]*/ long * NCount ) = 0;
      virtual HRESULT __stdcall GetSketchPoints (
        /*[out,retval]*/ VARIANT * VSketchPoints ) = 0;
      virtual HRESULT __stdcall IGetSketchPoints (
        /*[in]*/ long NCount,
        /*[out,retval]*/ struct ISketchPoint * * LpSketchPoints ) = 0;
      virtual HRESULT __stdcall GetComponentsCount (
        /*[out,retval]*/ long * NCount ) = 0;
      virtual HRESULT __stdcall GetComponents (
        /*[out,retval]*/ VARIANT * VComponents ) = 0;
      virtual HRESULT __stdcall IGetComponents (
        /*[in]*/ long NCount,
        /*[out,retval]*/ struct IComponent2 * * LpComponents ) = 0;
};

struct __declspec(uuid("2c1bf8ee-6886-4e8e-9ef2-1c48ae94958b"))
IMateReference : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * BstrMateReferenceName ) = 0;
      virtual HRESULT __stdcall get_ReferenceEntityCount (
        /*[out,retval]*/ long * NCount ) = 0;
      virtual HRESULT __stdcall get_ReferenceEntity (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct IEntity * * LpReference ) = 0;
      virtual HRESULT __stdcall get_ReferenceType (
        /*[in]*/ long Index,
        /*[out,retval]*/ long * NReferenceType ) = 0;
      virtual HRESULT __stdcall get_ReferenceAlignment (
        /*[in]*/ long Index,
        /*[out,retval]*/ long * NAlignment ) = 0;
      virtual HRESULT __stdcall Edit (
        /*[in]*/ BSTR BstrMateReferenceName,
        /*[in]*/ struct IEntity * PrimaryReferenceEntity,
        /*[in]*/ long PrimaryReferenceType,
        /*[in]*/ long PrimaryReferenceAlignment,
        /*[in]*/ struct IEntity * SecondaryReferenceEntity,
        /*[in]*/ long SecondaryReferenceType,
        /*[in]*/ long SecondaryReferenceAlignment,
        /*[in]*/ struct IEntity * TertiaryReferenceEntity,
        /*[in]*/ long TertiaryReferenceType,
        /*[in]*/ long TertiaryReferenceAlignment,
        /*[out,retval]*/ VARIANT_BOOL * Success ) = 0;
};

struct __declspec(uuid("fd9b0999-d519-41ab-acaa-4f2adedd7015"))
IDraftFeatureData2 : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ int * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ int Type ) = 0;
      virtual HRESULT __stdcall get_Angle (
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall put_Angle (
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall get_ReverseDirection (
        /*[out,retval]*/ VARIANT_BOOL * ReverseDirection ) = 0;
      virtual HRESULT __stdcall put_ReverseDirection (
        /*[in]*/ VARIANT_BOOL ReverseDirection ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall GetFacesToDraftCount (
        /*[out,retval]*/ short * Count ) = 0;
      virtual HRESULT __stdcall IGetFacesToDraft (
        /*[in]*/ short Count,
        /*[out,retval]*/ struct IFace2 * * FaceArray ) = 0;
      virtual HRESULT __stdcall ISetFacesToDraft (
        /*[in]*/ short Count,
        /*[in]*/ struct IFace2 * * FaceArray ) = 0;
      virtual HRESULT __stdcall get_FacesToDraft (
        /*[out,retval]*/ VARIANT * FaceArray ) = 0;
      virtual HRESULT __stdcall put_FacesToDraft (
        /*[in]*/ VARIANT FaceArray ) = 0;
      virtual HRESULT __stdcall GetPartingLinesCount (
        /*[out,retval]*/ short * Count ) = 0;
      virtual HRESULT __stdcall IGetPartingLines (
        /*[in]*/ short Count,
        /*[out,retval]*/ struct IEdge * * LineArray ) = 0;
      virtual HRESULT __stdcall ISetPartingLines (
        /*[in]*/ short Count,
        /*[in]*/ struct IEdge * * LineArray ) = 0;
      virtual HRESULT __stdcall get_PartingLines (
        /*[out,retval]*/ VARIANT * FaceArray ) = 0;
      virtual HRESULT __stdcall put_PartingLines (
        /*[in]*/ VARIANT FaceArray ) = 0;
      virtual HRESULT __stdcall get_NeutralPlane (
        /*[out,retval]*/ IDispatch * * Face ) = 0;
      virtual HRESULT __stdcall put_NeutralPlane (
        /*[in]*/ IDispatch * Face ) = 0;
      virtual HRESULT __stdcall get_DirectionPull (
        /*[out,retval]*/ IDispatch * * Face ) = 0;
      virtual HRESULT __stdcall put_DirectionPull (
        /*[in]*/ IDispatch * Face ) = 0;
      virtual HRESULT __stdcall get_FacePropagation (
        /*[out,retval]*/ short * FaceProp ) = 0;
      virtual HRESULT __stdcall put_FacePropagation (
        /*[in]*/ short FaceProp ) = 0;
      virtual HRESULT __stdcall GetOtherFacesFlagAtIndex (
        /*[in]*/ short Index,
        /*[out,retval]*/ VARIANT_BOOL * Flag ) = 0;
      virtual HRESULT __stdcall SetOtherFacesFlagAtIndex (
        /*[in]*/ short Index,
        /*[in]*/ VARIANT_BOOL Flag ) = 0;
      virtual HRESULT __stdcall GetDraftedEntityCount (
        /*[out,retval]*/ short * Count ) = 0;
      virtual HRESULT __stdcall IGetDraftedEntities (
        /*[in]*/ short Count,
        /*[out,retval]*/ struct IEntity * * EntityArray ) = 0;
      virtual HRESULT __stdcall GetDraftedEntities (
        /*[out,retval]*/ VARIANT * EntityArray ) = 0;
      virtual HRESULT __stdcall get_StepType (
        /*[out,retval]*/ short * StepType ) = 0;
      virtual HRESULT __stdcall put_StepType (
        /*[in]*/ short StepType ) = 0;
      virtual HRESULT __stdcall get_AllowReducedAngle (
        /*[out,retval]*/ VARIANT_BOOL * Allow ) = 0;
      virtual HRESULT __stdcall put_AllowReducedAngle (
        /*[in]*/ VARIANT_BOOL Allow ) = 0;
};

struct __declspec(uuid("4b65a34a-4c44-11d4-aef6-00c04f683cba"))
IDetailCircle : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetView (
        /*[out,retval]*/ struct IView * * Retval ) = 0;
      virtual HRESULT __stdcall GetDetailView (
        /*[out,retval]*/ struct IView * * Retval ) = 0;
      virtual HRESULT __stdcall GetLabel (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetTextFormat (
        /*[out,retval]*/ struct ITextFormat * * Retval ) = 0;
      virtual HRESULT __stdcall GetName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetArrowInfo (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetArrowInfo (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetStyle (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetDisplay (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetConnectingLine (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetConnectingLine (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall HasFullOutline (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetLeaderInfo (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetLeaderInfo (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetUseDocTextFormat (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetTextFormat (
        /*[in]*/ VARIANT_BOOL UseDoc,
        /*[in]*/ struct ITextFormat * TextFormat,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_Layer (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Layer (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall SetLabel (
        /*[in]*/ BSTR Label,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetName (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetStyle (
        /*[in]*/ long Style,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetDisplay (
        /*[in]*/ long Display,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetFullOutline (
        /*[in]*/ VARIANT_BOOL FullOutline,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_PinPosition (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_PinPosition (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_ScaleHatchPattern (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_ScaleHatchPattern (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT_BOOL Append,
        /*[in]*/ struct ISelectData * Data,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetParameters (
        /*[in]*/ double XPosition,
        /*[in]*/ double YPosition,
        /*[in]*/ double Radius,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetProfileItemsCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetProfileItems (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetProfileItems (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct ISketchSegment * * Retval ) = 0;
};

struct __declspec(uuid("83a33dbf-27c5-11ce-bfd4-00400513bb57"))
ISketchSegment : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Layer (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall put_Layer (
        /*[in]*/ BSTR Retval ) = 0;
      virtual HRESULT __stdcall get_LayerOverride (
        /*[out,retval]*/ int * Retval ) = 0;
      virtual HRESULT __stdcall put_LayerOverride (
        /*[in]*/ int Retval ) = 0;
      virtual HRESULT __stdcall get_Color (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall put_Color (
        /*[in]*/ long Retval ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ long Retval ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ long Retval ) = 0;
      virtual HRESULT __stdcall GetType (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetID (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetID (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT_BOOL AppendFlag,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SelectByMark (
        /*[in]*/ VARIANT_BOOL AppendFlag,
        /*[in]*/ long Mark,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DeSelect (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_ConstructionGeometry (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_ConstructionGeometry (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall GetCurve (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetCurve (
        /*[out,retval]*/ struct ICurve * * Retval ) = 0;
      virtual HRESULT __stdcall GetSketch (
        /*[out,retval]*/ struct ISketch * * Sketch ) = 0;
      virtual HRESULT __stdcall GetConstraints (
        /*[out,retval]*/ VARIANT * Constraints ) = 0;
      virtual HRESULT __stdcall IGetConstraintsCount (
        /*[out,retval]*/ long * NumConstraints ) = 0;
      virtual HRESULT __stdcall IGetConstraints (
        /*[out,retval]*/ BSTR * Constraints ) = 0;
      virtual HRESULT __stdcall GetLength (
        /*[out,retval]*/ double * ValueOut ) = 0;
      virtual HRESULT __stdcall Select2 (
        /*[in]*/ VARIANT_BOOL Append,
        /*[in]*/ long Mark,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Select3 (
        /*[in]*/ VARIANT_BOOL Append,
        /*[in]*/ long Mark,
        /*[in]*/ struct ICallout * Callout,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetRelations (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetRelationsCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetRelations (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct ISketchRelation * * PSketchRelationArr ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall put_Status (
        /*[in]*/ long Status ) = 0;
      virtual HRESULT __stdcall Select4 (
        /*[in]*/ VARIANT_BOOL Append,
        /*[in]*/ struct ISelectData * Data,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateWireBody (
        /*[out,retval]*/ struct IBody2 * * Retval ) = 0;
      virtual HRESULT __stdcall GetSketchPaths (
        /*[out,retval]*/ VARIANT * Paths ) = 0;
      virtual HRESULT __stdcall IGetSketchPaths (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct ISketchPath * * Paths ) = 0;
      virtual HRESULT __stdcall GetSketchPathCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SplitEntity (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in]*/ double ClosedX,
        /*[in]*/ double ClosedY,
        /*[in]*/ double ClosedZ ) = 0;
      virtual HRESULT __stdcall JogLine (
        /*[in]*/ double XOnLine,
        /*[in]*/ double YOnLine,
        /*[in]*/ double ZOnLine,
        /*[in]*/ double XOnJog,
        /*[in]*/ double YOnJog,
        /*[in]*/ double ZOnJog ) = 0;
};

struct __declspec(uuid("41a80156-183c-4b30-a757-8b13aab4e7c5"))
ISketchPath : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT_BOOL Append,
        /*[in]*/ struct ISelectData * Data,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetSketch (
        /*[out,retval]*/ struct ISketch * * Sketch ) = 0;
      virtual HRESULT __stdcall GetConstraints (
        /*[out,retval]*/ VARIANT * Constraints ) = 0;
      virtual HRESULT __stdcall GetConstraintsCount (
        /*[out,retval]*/ long * NumConstraints ) = 0;
      virtual HRESULT __stdcall IGetConstraints (
        /*[in]*/ long Count,
        /*[out,retval]*/ BSTR * Constraints ) = 0;
      virtual HRESULT __stdcall GetRelations (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetRelationsCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetRelations (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct ISketchRelation * * PSketchRelationArr ) = 0;
      virtual HRESULT __stdcall GetLength (
        /*[out,retval]*/ double * ValueOut ) = 0;
      virtual HRESULT __stdcall GetSketchSegments (
        /*[out,retval]*/ VARIANT * Segments ) = 0;
      virtual HRESULT __stdcall GetSketchSegmentCount (
        /*[out,retval]*/ long * NumSegments ) = 0;
      virtual HRESULT __stdcall IGetSketchSegments (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct ISketchSegment * * Segments ) = 0;
};

struct __declspec(uuid("83a33dcf-27c5-11ce-bfd4-00400513bb57"))
IEnumSketchSegments : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Next (
        /*[in]*/ long Celt,
        /*[out]*/ struct ISketchSegment * * Rgelt,
        /*[in,out]*/ long * PceltFetched ) = 0;
      virtual HRESULT __stdcall Skip (
        /*[in]*/ long Celt ) = 0;
      virtual HRESULT __stdcall Reset ( ) = 0;
      virtual HRESULT __stdcall Clone (
        /*[out]*/ struct IEnumSketchSegments * * Ppenum ) = 0;
};

struct __declspec(uuid("eb53b513-e23d-4b6a-b48d-21828af5f151"))
ISketchContour : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Sketch (
        /*[out,retval]*/ struct ISketch * * Retval ) = 0;
      virtual HRESULT __stdcall GetEdgesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetEdges (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetEdges (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IEdge * * EdgeArr ) = 0;
      virtual HRESULT __stdcall GetSketchSegmentsCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetSketchSegments (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetSketchSegments (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct ISketchSegment * * SketchSegmentArr ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT_BOOL Append,
        /*[in]*/ long Mark,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DeSelect (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Select2 (
        /*[in]*/ VARIANT_BOOL Append,
        /*[in]*/ struct ISelectData * Data,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsClosed (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("0c02ad40-f6e6-11d4-aed6-00c04fa0ac51"))
IOneBendFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ IDispatch * TopDoc,
        /*[in]*/ IDispatch * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall IAccessSelections (
        /*[in]*/ struct IModelDoc * TopDoc,
        /*[in]*/ struct IComponent * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_BendRadius (
        /*[out,retval]*/ double * Radius ) = 0;
      virtual HRESULT __stdcall put_BendRadius (
        /*[in]*/ double Radius ) = 0;
      virtual HRESULT __stdcall get_BendAllowanceType (
        /*[out,retval]*/ long * BendAllowanceType ) = 0;
      virtual HRESULT __stdcall put_BendAllowanceType (
        /*[in]*/ long BendAllowanceType ) = 0;
      virtual HRESULT __stdcall get_BendTableFile (
        /*[out,retval]*/ BSTR * BendTableFile ) = 0;
      virtual HRESULT __stdcall put_BendTableFile (
        /*[in]*/ BSTR BendTableFile ) = 0;
      virtual HRESULT __stdcall get_KFactor (
        /*[out,retval]*/ double * KFactor ) = 0;
      virtual HRESULT __stdcall put_KFactor (
        /*[in]*/ double KFactor ) = 0;
      virtual HRESULT __stdcall get_BendAllowance (
        /*[out,retval]*/ double * BendAllowance ) = 0;
      virtual HRESULT __stdcall put_BendAllowance (
        /*[in]*/ double BendAllowance ) = 0;
      virtual HRESULT __stdcall get_UseAutoRelief (
        /*[out,retval]*/ VARIANT_BOOL * AutoRelief ) = 0;
      virtual HRESULT __stdcall put_UseAutoRelief (
        /*[in]*/ VARIANT_BOOL AutoRelief ) = 0;
      virtual HRESULT __stdcall get_AutoReliefType (
        /*[out,retval]*/ long * AutoReliefType ) = 0;
      virtual HRESULT __stdcall put_AutoReliefType (
        /*[in]*/ long AutoReliefType ) = 0;
      virtual HRESULT __stdcall get_UseDefaultBendRadius (
        /*[out,retval]*/ VARIANT_BOOL * UseDefaultBendRadius ) = 0;
      virtual HRESULT __stdcall put_UseDefaultBendRadius (
        /*[in]*/ VARIANT_BOOL UseDefaultBendRadius ) = 0;
      virtual HRESULT __stdcall get_UseDefaultBendAllowance (
        /*[out,retval]*/ VARIANT_BOOL * UseDefaultBendAllowance ) = 0;
      virtual HRESULT __stdcall put_UseDefaultBendAllowance (
        /*[in]*/ VARIANT_BOOL UseDefaultBendAllowance ) = 0;
      virtual HRESULT __stdcall get_UseDefaultBendRelief (
        /*[out,retval]*/ VARIANT_BOOL * UseDefaultBendRelief ) = 0;
      virtual HRESULT __stdcall put_UseDefaultBendRelief (
        /*[in]*/ VARIANT_BOOL UseDefaultBendRelief ) = 0;
      virtual HRESULT __stdcall get_BendDown (
        /*[out,retval]*/ VARIANT_BOOL * BendDown ) = 0;
      virtual HRESULT __stdcall put_BendDown (
        /*[in]*/ VARIANT_BOOL BendDown ) = 0;
      virtual HRESULT __stdcall get_BendAngle (
        /*[out,retval]*/ double * BendAngle ) = 0;
      virtual HRESULT __stdcall put_BendAngle (
        /*[in]*/ double BendAngle ) = 0;
      virtual HRESULT __stdcall get_BendOrder (
        /*[out,retval]*/ long * BendOrder ) = 0;
      virtual HRESULT __stdcall put_BendOrder (
        /*[in]*/ long BendOrder ) = 0;
      virtual HRESULT __stdcall get_ReliefWidth (
        /*[out,retval]*/ double * ReliefWidth ) = 0;
      virtual HRESULT __stdcall put_ReliefWidth (
        /*[in]*/ double ReliefWidth ) = 0;
      virtual HRESULT __stdcall get_ReliefDepth (
        /*[out,retval]*/ double * ReliefDepth ) = 0;
      virtual HRESULT __stdcall put_ReliefDepth (
        /*[in]*/ double ReliefDepth ) = 0;
      virtual HRESULT __stdcall IAccessSelections2 (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall GetType (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetCustomBendAllowance (
        /*[out,retval]*/ struct ICustomBendAllowance * * PBendData ) = 0;
      virtual HRESULT __stdcall SetCustomBendAllowance (
        /*[in]*/ struct ICustomBendAllowance * PBendData ) = 0;
      virtual HRESULT __stdcall get_SimplifyGeometry (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_SimplifyGeometry (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_UseReliefRatio (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_UseReliefRatio (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall get_ReliefRatio (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall put_ReliefRatio (
        /*[in]*/ double Retval ) = 0;
      virtual HRESULT __stdcall get_FlatPatternSketchSegment (
        /*[out,retval]*/ struct ISketchSegment * * Retval ) = 0;
};

struct __declspec(uuid("f3f83396-6439-46bd-9927-2449083ecdc2"))
IStructuralMemberFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ struct IModelDoc2 * TopDoc,
        /*[in]*/ struct IComponent2 * Component,
        /*[out,retval]*/ VARIANT_BOOL * AccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall get_PathSegments (
        /*[out,retval]*/ VARIANT * SegArr ) = 0;
      virtual HRESULT __stdcall put_PathSegments (
        /*[in]*/ VARIANT SegArr ) = 0;
      virtual HRESULT __stdcall GetPathSegmentsCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetPathSegments (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct ISketchSegment * * SegArr ) = 0;
      virtual HRESULT __stdcall ISetPathSegments (
        /*[in]*/ long Count,
        /*[in]*/ struct ISketchSegment * * SegArr ) = 0;
      virtual HRESULT __stdcall get_ApplyCornerTreatment (
        /*[out,retval]*/ VARIANT_BOOL * BApply ) = 0;
      virtual HRESULT __stdcall put_ApplyCornerTreatment (
        /*[in]*/ VARIANT_BOOL BApply ) = 0;
      virtual HRESULT __stdcall get_CornerTreatmentType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_CornerTreatmentType (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall get_RotationAngle (
        /*[out,retval]*/ double * Ang ) = 0;
      virtual HRESULT __stdcall put_RotationAngle (
        /*[in]*/ double Ang ) = 0;
      virtual HRESULT __stdcall get_LocateProfilePoint (
        /*[out,retval]*/ struct ISketchPoint * * Point ) = 0;
      virtual HRESULT __stdcall put_LocateProfilePoint (
        /*[in]*/ struct ISketchPoint * Point ) = 0;
      virtual HRESULT __stdcall GetConnectionPoints (
        /*[out,retval]*/ VARIANT * PtVar ) = 0;
      virtual HRESULT __stdcall GetConnectionPointsCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetConnectionPoints (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct ISketchPoint * * PtVar ) = 0;
      virtual HRESULT __stdcall get_ConnectionType (
        /*[in]*/ struct ISketchPoint * AtPoint,
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_ConnectionType (
        /*[in]*/ struct ISketchPoint * AtPoint,
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall get_WeldmentProfilePath (
        /*[out,retval]*/ BSTR * FileName ) = 0;
      virtual HRESULT __stdcall put_WeldmentProfilePath (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall GetPathSegmentAt (
        /*[in]*/ struct IBody2 * PBodyIn,
        /*[out,retval]*/ struct ISketchSegment * * PSegment ) = 0;
};

struct __declspec(uuid("992a14b6-15cf-11d6-af6e-00c04f603faf"))
IBlockInstance : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetNext (
        /*[out,retval]*/ struct IBlockInstance * * Retval ) = 0;
      virtual HRESULT __stdcall GetAnnotation (
        /*[out,retval]*/ struct IAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall get_Definition (
        /*[out,retval]*/ struct IBlockDefinition * * Definition ) = 0;
      virtual HRESULT __stdcall get_Angle (
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall put_Angle (
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall get_Scale2 (
        /*[out,retval]*/ double * Scale ) = 0;
      virtual HRESULT __stdcall put_Scale2 (
        /*[in]*/ double Scale ) = 0;
      virtual HRESULT __stdcall GetAttributeCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetAttributes (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetAttributes (
        /*[in]*/ long NumAttribs,
        /*[out,retval]*/ struct INote * * Retval ) = 0;
      virtual HRESULT __stdcall GetAttributeValue (
        /*[in]*/ BSTR TagName,
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall SetAttributeValue (
        /*[in]*/ BSTR TagName,
        /*[in]*/ BSTR Value,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_TextDisplay (
        /*[out,retval]*/ long * Propval ) = 0;
      virtual HRESULT __stdcall put_TextDisplay (
        /*[in]*/ long Propval ) = 0;
};

struct __declspec(uuid("8cd8314a-1677-11d6-af6e-00c04f603faf"))
IBlockDefinition : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall GetBlockInstanceCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetBlockInstances (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetBlockInstances (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IBlockInstance * * Retval ) = 0;
      virtual HRESULT __stdcall GetUseExternalFile (
        /*[out,retval]*/ VARIANT_BOOL * UseFile ) = 0;
      virtual HRESULT __stdcall SetUseExternalFile (
        /*[in]*/ VARIANT_BOOL UseFile,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetExternalFileName (
        /*[out,retval]*/ BSTR * FileName ) = 0;
      virtual HRESULT __stdcall SetExternalFileName (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall InsertInstance (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Angle,
        /*[in]*/ double Scale,
        /*[out,retval]*/ struct IBlockInstance * * Retval ) = 0;
      virtual HRESULT __stdcall GetBasePoint (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetBasePoint (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall SetBasePoint (
        /*[in]*/ VARIANT BasePoint,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ISetBasePoint (
        /*[in]*/ double * BasePoint,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetSketch (
        /*[out,retval]*/ struct ISketch * * Retval ) = 0;
      virtual HRESULT __stdcall GetNoteCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetNotes (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetNotes (
        /*[in]*/ long NumNotes,
        /*[out,retval]*/ struct INote * * Retval ) = 0;
      virtual HRESULT __stdcall GetDimensionCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetDimensions (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetDimensions (
        /*[in]*/ long NumDimensions,
        /*[out,retval]*/ struct IDisplayDimension * * Retval ) = 0;
};

struct __declspec(uuid("c108723c-ac56-4c08-9591-7980b0a5aab2"))
ITableAnnotation : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetNext (
        /*[out,retval]*/ struct ITableAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall GetAnnotation (
        /*[out,retval]*/ struct IAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall get_BorderLineWeight (
        /*[out,retval]*/ long * LineWeight ) = 0;
      virtual HRESULT __stdcall put_BorderLineWeight (
        /*[in]*/ long LineWeight ) = 0;
      virtual HRESULT __stdcall get_GridLineWeight (
        /*[out,retval]*/ long * LineWeight ) = 0;
      virtual HRESULT __stdcall put_GridLineWeight (
        /*[in]*/ long LineWeight ) = 0;
      virtual HRESULT __stdcall get_AnchorType (
        /*[out,retval]*/ long * Anchor ) = 0;
      virtual HRESULT __stdcall put_AnchorType (
        /*[in]*/ long Anchor ) = 0;
      virtual HRESULT __stdcall GetUseDocTextFormat (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetTextFormat (
        /*[out,retval]*/ struct ITextFormat * * Retval ) = 0;
      virtual HRESULT __stdcall SetTextFormat (
        /*[in]*/ VARIANT_BOOL UseDoc,
        /*[in]*/ struct ITextFormat * TextFormat,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_TextVerticalJustification (
        /*[out,retval]*/ long * Justification ) = 0;
      virtual HRESULT __stdcall put_TextVerticalJustification (
        /*[in]*/ long Justification ) = 0;
      virtual HRESULT __stdcall get_TextHorizontalJustification (
        /*[out,retval]*/ long * Justification ) = 0;
      virtual HRESULT __stdcall put_TextHorizontalJustification (
        /*[in]*/ long Justification ) = 0;
      virtual HRESULT __stdcall get_ColumnCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_RowCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetHeaderStyle (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetHeaderCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetHeader (
        /*[in]*/ long Style,
        /*[in]*/ long Count,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetSplitInformation (
        /*[in,out]*/ long * Index,
        /*[in,out]*/ long * Count,
        /*[in,out]*/ long * RangeStart,
        /*[in,out]*/ long * RangeEnd,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall Split (
        /*[in]*/ long Where,
        /*[in]*/ long Index,
        /*[out,retval]*/ struct ITableAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall Merge (
        /*[in]*/ long Where,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertColumn (
        /*[in]*/ long Where,
        /*[in]*/ long Index,
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertRow (
        /*[in]*/ long Where,
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall MoveColumn (
        /*[in]*/ long Source,
        /*[in]*/ long Where,
        /*[in]*/ long Destination,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall MoveRow (
        /*[in]*/ long Source,
        /*[in]*/ long Where,
        /*[in]*/ long Destination,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DeleteColumn (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DeleteRow (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetCellRange (
        /*[in,out]*/ long * FirstRow,
        /*[in,out]*/ long * LastRow,
        /*[in,out]*/ long * FirstColumn,
        /*[in,out]*/ long * LastColumn ) = 0;
      virtual HRESULT __stdcall SetCellRange (
        /*[in]*/ long FirstRow,
        /*[in]*/ long LastRow,
        /*[in]*/ long FirstColumn,
        /*[in]*/ long LastColumn ) = 0;
      virtual HRESULT __stdcall GetColumnWidth (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall SetColumnWidth (
        /*[in]*/ long Index,
        /*[in]*/ double Width,
        /*[in]*/ long Options,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetRowHeight (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall SetRowHeight (
        /*[in]*/ long Index,
        /*[in]*/ double Height,
        /*[in]*/ long Options,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetColumnType (
        /*[in]*/ long Index,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetColumnType (
        /*[in]*/ long Index,
        /*[in]*/ long Type,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetColumnTitle (
        /*[in]*/ long Index,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetColumnTitle (
        /*[in]*/ long Index,
        /*[in]*/ BSTR Title,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[in]*/ long Row,
        /*[in]*/ long Column,
        /*[out,retval]*/ BSTR * Text ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ long Row,
        /*[in]*/ long Column,
        /*[in]*/ BSTR Text ) = 0;
      virtual HRESULT __stdcall GetCellUseDocTextFormat (
        /*[in]*/ long Row,
        /*[in]*/ long Column,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetCellTextFormat (
        /*[in]*/ long Row,
        /*[in]*/ long Column,
        /*[out,retval]*/ struct ITextFormat * * Retval ) = 0;
      virtual HRESULT __stdcall SetCellTextFormat (
        /*[in]*/ long Row,
        /*[in]*/ long Column,
        /*[in]*/ VARIANT_BOOL UseDoc,
        /*[in]*/ struct ITextFormat * TextFormat,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_CellTextHorizontalJustification (
        /*[in]*/ long Row,
        /*[in]*/ long Column,
        /*[out,retval]*/ long * Justification ) = 0;
      virtual HRESULT __stdcall put_CellTextHorizontalJustification (
        /*[in]*/ long Row,
        /*[in]*/ long Column,
        /*[in]*/ long Justification ) = 0;
      virtual HRESULT __stdcall get_CellTextVerticalJustification (
        /*[in]*/ long Row,
        /*[in]*/ long Column,
        /*[out,retval]*/ long * Justification ) = 0;
      virtual HRESULT __stdcall put_CellTextVerticalJustification (
        /*[in]*/ long Row,
        /*[in]*/ long Column,
        /*[in]*/ long Justification ) = 0;
      virtual HRESULT __stdcall MergeCells (
        /*[in]*/ long RowStart,
        /*[in]*/ long ColumnStart,
        /*[in]*/ long RowEnd,
        /*[in]*/ long ColumnEnd,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall UnmergeCells (
        /*[in]*/ long Row,
        /*[in]*/ long Column,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsCellMerged (
        /*[in]*/ long Row,
        /*[in]*/ long Column,
        /*[in,out]*/ long * WithRow,
        /*[in,out]*/ long * WithColumn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsCellTextEditable (
        /*[in]*/ long Row,
        /*[in]*/ long Column,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_Title (
        /*[out,retval]*/ BSTR * TableTitle ) = 0;
      virtual HRESULT __stdcall put_Title (
        /*[in]*/ BSTR TableTitle ) = 0;
      virtual HRESULT __stdcall get_TitleVisible (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall put_TitleVisible (
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
      virtual HRESULT __stdcall SaveAsTemplate (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SaveAsText (
        /*[in]*/ BSTR FileName,
        /*[in]*/ BSTR Separator,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_Anchored (
        /*[out,retval]*/ VARIANT_BOOL * Attached ) = 0;
      virtual HRESULT __stdcall put_Anchored (
        /*[in]*/ VARIANT_BOOL Attached ) = 0;
      virtual HRESULT __stdcall get_GeneralTableFeature (
        /*[out,retval]*/ struct IGeneralTableFeature * * Retval ) = 0;
      virtual HRESULT __stdcall GetRowVerticalGap (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall SetRowVerticalGap (
        /*[in]*/ long Index,
        /*[in]*/ double Gap,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_DisplayedText (
        /*[in]*/ long Row,
        /*[in]*/ long Column,
        /*[out,retval]*/ BSTR * Text ) = 0;
      virtual HRESULT __stdcall get_RowHidden (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT_BOOL * Hidden ) = 0;
      virtual HRESULT __stdcall put_RowHidden (
        /*[in]*/ long Index,
        /*[in]*/ VARIANT_BOOL Hidden ) = 0;
      virtual HRESULT __stdcall get_BorderLineWeightCustom (
        /*[out,retval]*/ double * Width ) = 0;
      virtual HRESULT __stdcall put_BorderLineWeightCustom (
        /*[in]*/ double Width ) = 0;
      virtual HRESULT __stdcall get_GridLineWeightCustom (
        /*[out,retval]*/ double * Width ) = 0;
      virtual HRESULT __stdcall put_GridLineWeightCustom (
        /*[in]*/ double Width ) = 0;
};

struct __declspec(uuid("846c6e0f-7319-4c13-b12e-a6b231dacc89"))
IGeneralTableFeature : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetFeature (
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall GetTableAnnotationCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTableAnnotations (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTableAnnotations (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct ITableAnnotation * * Retval ) = 0;
};

struct __declspec(uuid("61e4109e-d5d1-48cb-8593-8283ef0bb79a"))
IHoleTableAnnotation : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_HoleTable (
        /*[out,retval]*/ struct IHoleTable * * Retval ) = 0;
};

struct __declspec(uuid("727dd5df-15f4-4916-854a-be9e30614c97"))
IHoleTable : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetFeature (
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall GetTableAnnotationCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTableAnnotations (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTableAnnotations (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IHoleTableAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall get_DatumOrigin (
        /*[out,retval]*/ struct IDatumOrigin * * Retval ) = 0;
      virtual HRESULT __stdcall AddHole (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall get_HoleCentersVisible (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall put_HoleCentersVisible (
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
      virtual HRESULT __stdcall get_CombineTags (
        /*[out,retval]*/ VARIANT_BOOL * Combine ) = 0;
      virtual HRESULT __stdcall put_CombineTags (
        /*[in]*/ VARIANT_BOOL Combine ) = 0;
      virtual HRESULT __stdcall get_CombineSameSize (
        /*[out,retval]*/ VARIANT_BOOL * Combine ) = 0;
      virtual HRESULT __stdcall put_CombineSameSize (
        /*[in]*/ VARIANT_BOOL Combine ) = 0;
      virtual HRESULT __stdcall get_TagStyle (
        /*[out,retval]*/ long * Style ) = 0;
      virtual HRESULT __stdcall put_TagStyle (
        /*[in]*/ long Style ) = 0;
      virtual HRESULT __stdcall GetHoleLocationUseDocPrecision (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetHoleLocationPrecision (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SetHoleLocationPrecision (
        /*[in]*/ VARIANT_BOOL UseDoc,
        /*[in]*/ long Precision,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_HoleTagsVisible (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall put_HoleTagsVisible (
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
};

struct __declspec(uuid("5d9a743b-fa81-4d23-ab0a-2898584f6f1e"))
IDatumOrigin : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetNext (
        /*[out,retval]*/ struct IDatumOrigin * * Retval ) = 0;
      virtual HRESULT __stdcall GetAnnotation (
        /*[out,retval]*/ struct IAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall get_XLabel (
        /*[out,retval]*/ BSTR * Label ) = 0;
      virtual HRESULT __stdcall put_XLabel (
        /*[in]*/ BSTR Label ) = 0;
      virtual HRESULT __stdcall get_YLabel (
        /*[out,retval]*/ BSTR * Label ) = 0;
      virtual HRESULT __stdcall put_YLabel (
        /*[in]*/ BSTR Label ) = 0;
      virtual HRESULT __stdcall get_Table (
        /*[out,retval]*/ struct IHoleTable * * Retval ) = 0;
      virtual HRESULT __stdcall Reattach (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetAxisPoints (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetAxisPoints (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall SetAxisPoints (
        /*[in]*/ VARIANT PointData,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ISetAxisPoints (
        /*[in]*/ double * PointData,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetAxisPoints2 (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetAxisPoints2 (
        /*[out,retval]*/ double * Retval ) = 0;
};

struct __declspec(uuid("98fd64dc-285d-4b48-9bdb-d85c253e2baf"))
IBomTableAnnotation : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_BomFeature (
        /*[out,retval]*/ struct IBomFeature * * Retval ) = 0;
      virtual HRESULT __stdcall GetColumnUseTitleAsPartNumber (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetColumnUseTitleAsPartNumber (
        /*[in]*/ long Index,
        /*[in]*/ VARIANT_BOOL UseTitle,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetColumnCustomProperty (
        /*[in]*/ long Index,
        /*[out,retval]*/ BSTR * CustomProp ) = 0;
      virtual HRESULT __stdcall SetColumnCustomProperty (
        /*[in]*/ long Index,
        /*[in]*/ BSTR CustomProp,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetAllCustomPropertiesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetAllCustomProperties (
        /*[out,retval]*/ VARIANT * CustomProps ) = 0;
      virtual HRESULT __stdcall IGetAllCustomProperties (
        /*[in]*/ long Count,
        /*[out,retval]*/ BSTR * CustomProps ) = 0;
      virtual HRESULT __stdcall GetComponentsCount (
        /*[in]*/ long RowIndex,
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetComponents (
        /*[in]*/ long RowIndex,
        /*[out,retval]*/ VARIANT * Component ) = 0;
      virtual HRESULT __stdcall IGetComponents (
        /*[in]*/ long RowIndex,
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IComponent2 * * Component ) = 0;
};

struct __declspec(uuid("3368f34b-85f2-4d61-9325-3353cf110d5a"))
IBomFeature : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetFeature (
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall GetTableAnnotationCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTableAnnotations (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTableAnnotations (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IBomTableAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall get_TableType (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_TableType (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall get_Configuration (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Configuration (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_KeepMissingItems (
        /*[out,retval]*/ VARIANT_BOOL * Keep ) = 0;
      virtual HRESULT __stdcall put_KeepMissingItems (
        /*[in]*/ VARIANT_BOOL Keep ) = 0;
      virtual HRESULT __stdcall get_StrikeoutMissingItems (
        /*[out,retval]*/ VARIANT_BOOL * Strike ) = 0;
      virtual HRESULT __stdcall put_StrikeoutMissingItems (
        /*[in]*/ VARIANT_BOOL Strike ) = 0;
      virtual HRESULT __stdcall get_ZeroQuantityDisplay (
        /*[out,retval]*/ long * Display ) = 0;
      virtual HRESULT __stdcall put_ZeroQuantityDisplay (
        /*[in]*/ long Display ) = 0;
      virtual HRESULT __stdcall get_SequenceStartNumber (
        /*[out,retval]*/ long * Number ) = 0;
      virtual HRESULT __stdcall put_SequenceStartNumber (
        /*[in]*/ long Number ) = 0;
      virtual HRESULT __stdcall GetConfigurationCount (
        /*[in]*/ VARIANT_BOOL OnlyVisible,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetConfigurations (
        /*[in]*/ VARIANT_BOOL OnlyVisible,
        /*[in,out]*/ VARIANT * Visible,
        /*[out,retval]*/ VARIANT * Names ) = 0;
      virtual HRESULT __stdcall IGetConfigurations (
        /*[in]*/ VARIANT_BOOL OnlyVisible,
        /*[in]*/ long Count,
        /*[in,out]*/ VARIANT_BOOL * Visible,
        /*[out,retval]*/ BSTR * Names ) = 0;
      virtual HRESULT __stdcall SetConfigurations (
        /*[in]*/ VARIANT_BOOL OnlyVisible,
        /*[in]*/ VARIANT Visible,
        /*[in]*/ VARIANT Names,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ISetConfigurations (
        /*[in]*/ VARIANT_BOOL OnlyVisible,
        /*[in]*/ long Count,
        /*[in]*/ VARIANT_BOOL * Visible,
        /*[in]*/ BSTR * Names,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_DisplayAsOneItem (
        /*[out,retval]*/ VARIANT_BOOL * OneItem ) = 0;
      virtual HRESULT __stdcall put_DisplayAsOneItem (
        /*[in]*/ VARIANT_BOOL OneItem ) = 0;
      virtual HRESULT __stdcall get_KeepCurrentItemNumbers (
        /*[out,retval]*/ VARIANT_BOOL * Keep ) = 0;
      virtual HRESULT __stdcall put_KeepCurrentItemNumbers (
        /*[in]*/ VARIANT_BOOL Keep ) = 0;
      virtual HRESULT __stdcall FollowAssemblyOrder (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_FollowAssemblyOrder2 (
        /*[out,retval]*/ VARIANT_BOOL * Follow ) = 0;
      virtual HRESULT __stdcall put_FollowAssemblyOrder2 (
        /*[in]*/ VARIANT_BOOL Follow ) = 0;
      virtual HRESULT __stdcall GetReferencedModelName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
};

struct __declspec(uuid("99f4d4af-f268-4ee1-8c55-041f7becf879"))
IModelDocExtension : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct IModelDoc2 * * ModelDoc ) = 0;
      virtual HRESULT __stdcall GetMassProperties (
        /*[in]*/ long Accuracy,
        /*[in,out]*/ long * Status,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetMassProperties (
        /*[in]*/ long Accuracy,
        /*[in,out]*/ long * Status,
        /*[out,retval]*/ double * MPropsData ) = 0;
      virtual HRESULT __stdcall InsertDwgOrDxfFile (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall PrintOut (
        /*[in]*/ long FromPage,
        /*[in]*/ long ToPage,
        /*[in]*/ long Copies,
        /*[in]*/ VARIANT_BOOL Collate,
        /*[in]*/ BSTR Printer,
        /*[in]*/ BSTR PrintFileName ) = 0;
      virtual HRESULT __stdcall SelectByID (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR Type,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in]*/ VARIANT_BOOL Append,
        /*[in]*/ long Mark,
        /*[in]*/ struct ICallout * Callout,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IGet3rdPartyStorageStore (
        /*[in]*/ BSTR SubStorageName,
        /*[in]*/ VARIANT_BOOL IsStoring,
        /*[out,retval]*/ IUnknown * * Retval ) = 0;
      virtual HRESULT __stdcall IRelease3rdPartyStorageStore (
        /*[in]*/ BSTR SubStorageName,
        /*[out,retval]*/ VARIANT_BOOL * Status ) = 0;
      virtual HRESULT __stdcall get_UsePageSetup (
        /*[out,retval]*/ long * WhichOne ) = 0;
      virtual HRESULT __stdcall put_UsePageSetup (
        /*[in]*/ long WhichOne ) = 0;
      virtual HRESULT __stdcall get_AppPageSetup (
        /*[out,retval]*/ struct IPageSetup * * Retval ) = 0;
      virtual HRESULT __stdcall GetSectionProperties (
        /*[in]*/ VARIANT Sections,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetSectionProperties (
        /*[in]*/ long Count,
        /*[in]*/ IUnknown * * Sections,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall CreateMassProperty (
        /*[out,retval]*/ struct IMassProperty * * Retval ) = 0;
      virtual HRESULT __stdcall GetCoordinateSystemTransformByName (
        /*[in]*/ BSTR NameIn,
        /*[out,retval]*/ struct IMathTransform * * Retval ) = 0;
      virtual HRESULT __stdcall SetMaterialPropertyValues (
        /*[in]*/ VARIANT Material_property_values,
        /*[in]*/ long Config_opt,
        /*[in]*/ VARIANT Config_names ) = 0;
      virtual HRESULT __stdcall ISetMaterialPropertyValues (
        /*[in]*/ double * Material_values,
        /*[in]*/ long Config_opt,
        /*[in]*/ long Config_count,
        /*[in]*/ BSTR * Config_names ) = 0;
      virtual HRESULT __stdcall GetMaterialPropertyValues (
        /*[in]*/ long Config_opt,
        /*[in]*/ VARIANT Config_names,
        /*[out,retval]*/ VARIANT * Material_values ) = 0;
      virtual HRESULT __stdcall IGetMaterialPropertyValues (
        /*[in]*/ long Config_opt,
        /*[in]*/ long Config_count,
        /*[in]*/ BSTR * Config_names,
        /*[out,retval]*/ double * Material_values ) = 0;
      virtual HRESULT __stdcall PrintOut2 (
        /*[in]*/ VARIANT PageArray,
        /*[in]*/ long Copies,
        /*[in]*/ VARIANT_BOOL Collate,
        /*[in]*/ BSTR Printer,
        /*[in]*/ BSTR PrintFileName ) = 0;
      virtual HRESULT __stdcall IPrintOut2 (
        /*[in]*/ long ArraySize,
        /*[in]*/ long * PageArray,
        /*[in]*/ long Copies,
        /*[in]*/ VARIANT_BOOL Collate,
        /*[in]*/ BSTR Printer,
        /*[in]*/ BSTR PrintFileName ) = 0;
      virtual HRESULT __stdcall GetPersistReference (
        /*[in]*/ IDispatch * DispObj,
        /*[out,retval]*/ VARIANT * PersistId ) = 0;
      virtual HRESULT __stdcall GetPersistReferenceCount (
        /*[in]*/ IDispatch * DispObj,
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetPersistReference (
        /*[in]*/ IDispatch * DipsObj,
        /*[in]*/ long Count,
        /*[out,retval]*/ unsigned char * PersistId ) = 0;
      virtual HRESULT __stdcall GetObjectByPersistReference (
        /*[in]*/ VARIANT PersistId,
        /*[out,retval]*/ IDispatch * * DispObj ) = 0;
      virtual HRESULT __stdcall IGetObjectByPersistReference (
        /*[in]*/ long Count,
        /*[in]*/ unsigned char * PersistId,
        /*[out,retval]*/ IDispatch * * DispObj ) = 0;
      virtual HRESULT __stdcall GetStream (
        /*[in]*/ long StreamType,
        /*[out]*/ VARIANT_BOOL * ReadOnly,
        /*[out,retval]*/ IUnknown * * DocStream ) = 0;
      virtual HRESULT __stdcall ReleaseStream (
        /*[in]*/ long StreamType,
        /*[out,retval]*/ VARIANT_BOOL * Status ) = 0;
      virtual HRESULT __stdcall GetLastFeatureAdded (
        /*[out,retval]*/ struct IFeature * * FeatObj ) = 0;
      virtual HRESULT __stdcall IMultiSelect (
        /*[in]*/ long Count,
        /*[in]*/ IUnknown * * Objects,
        /*[in]*/ VARIANT_BOOL AppendFlag,
        /*[in]*/ struct ISelectData * Data,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall MultiSelect (
        /*[in]*/ VARIANT Objects,
        /*[in]*/ VARIANT_BOOL AppendFlag,
        /*[in]*/ IDispatch * Data,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetParameterValue (
        /*[in]*/ BSTR DimName,
        /*[in]*/ long Reserved,
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall SetParameterValue (
        /*[in]*/ BSTR DimName,
        /*[in]*/ double Value,
        /*[in]*/ long Reserved,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall MoveOrCopy (
        /*[in]*/ VARIANT_BOOL Copy,
        /*[in]*/ long NumCopies,
        /*[in]*/ VARIANT_BOOL KeepRelations,
        /*[in]*/ double BaseX,
        /*[in]*/ double BaseY,
        /*[in]*/ double BaseZ,
        /*[in]*/ double DestX,
        /*[in]*/ double DestY,
        /*[in]*/ double DestZ ) = 0;
      virtual HRESULT __stdcall RotateOrCopy (
        /*[in]*/ VARIANT_BOOL Copy,
        /*[in]*/ long NumCopies,
        /*[in]*/ VARIANT_BOOL KeepRelations,
        /*[in]*/ double BaseX,
        /*[in]*/ double BaseY,
        /*[in]*/ double BaseZ,
        /*[in]*/ double DestX,
        /*[in]*/ double DestY,
        /*[in]*/ double DestZ,
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall ScaleOrCopy (
        /*[in]*/ VARIANT_BOOL Copy,
        /*[in]*/ long NumCopies,
        /*[in]*/ double BaseX,
        /*[in]*/ double BaseY,
        /*[in]*/ double BaseZ,
        /*[in]*/ double Scale ) = 0;
      virtual HRESULT __stdcall ApplyTexture (
        /*[in]*/ long Scale,
        /*[in]*/ double Angle,
        /*[in]*/ BSTR TextureFilename,
        /*[in]*/ VARIANT_BOOL BlendColor,
        /*[out,retval]*/ VARIANT_BOOL * Status ) = 0;
      virtual HRESULT __stdcall RemoveTexture (
        /*[out,retval]*/ VARIANT_BOOL * Status ) = 0;
      virtual HRESULT __stdcall RemoveMaterialProperty (
        /*[in]*/ long Config_opt,
        /*[in]*/ VARIANT Config_names,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IRemoveMaterialProperty (
        /*[in]*/ long Config_opt,
        /*[in]*/ long Config_count,
        /*[in]*/ BSTR * Config_names,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall RemoveModelColorizer (
        /*[in]*/ IDispatch * PInterface ) = 0;
      virtual HRESULT __stdcall InstallModelColorizer (
        /*[in]*/ IDispatch * PInterface ) = 0;
      virtual HRESULT __stdcall HasDesignTable (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ListExternalFileReferences (
        /*[out]*/ VARIANT * ModelPathName,
        /*[out]*/ VARIANT * ComponentPathName,
        /*[out]*/ VARIANT * Feature,
        /*[out]*/ VARIANT * DataType,
        /*[out]*/ VARIANT * Status,
        /*[out]*/ VARIANT * RefEntity,
        /*[out]*/ VARIANT * FeatCom,
        /*[out]*/ long * ConfigOption,
        /*[out]*/ BSTR * ConfigName ) = 0;
      virtual HRESULT __stdcall ListExternalFileReferencesCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IListExternalFileReferences (
        /*[in]*/ long NumRefs,
        /*[out]*/ BSTR * ModelPathName,
        /*[out]*/ BSTR * CompPathName,
        /*[out]*/ BSTR * Feature,
        /*[out]*/ BSTR * DataType,
        /*[out]*/ long * Status,
        /*[out]*/ BSTR * RefEntity,
        /*[out]*/ BSTR * FeatComp,
        /*[out]*/ long * ConfigOption,
        /*[out]*/ BSTR * ConfigName ) = 0;
      virtual HRESULT __stdcall UpdateExternalFileReferences (
        /*[in]*/ long ConfigOption,
        /*[in]*/ BSTR ConfigName,
        /*[in]*/ long UpdateStatus ) = 0;
      virtual HRESULT __stdcall get_NeedsRebuild (
        /*[out,retval]*/ VARIANT_BOOL * VbNeedsRebuild ) = 0;
      virtual HRESULT __stdcall InsertSurfaceFinishSymbol3 (
        /*[in]*/ long SymType,
        /*[in]*/ long LeaderType,
        /*[in]*/ double LocX,
        /*[in]*/ double LocY,
        /*[in]*/ double LocZ,
        /*[in]*/ long LaySymbol,
        /*[in]*/ long ArrowType,
        /*[in]*/ BSTR MachAllowance,
        /*[in]*/ BSTR OtherVals,
        /*[in]*/ BSTR ProdMethod,
        /*[in]*/ BSTR SampleLen,
        /*[in]*/ BSTR MaxRoughness,
        /*[in]*/ BSTR MinRoughness,
        /*[in]*/ BSTR RoughnessSpacing,
        /*[out,retval]*/ struct ISFSymbol * * LpSfSymbolDisp ) = 0;
      virtual HRESULT __stdcall InsertDatumTargetSymbol2 (
        /*[in]*/ BSTR Datum1,
        /*[in]*/ BSTR Datum2,
        /*[in]*/ BSTR Datum3,
        /*[in]*/ short AreaStyle,
        /*[in]*/ VARIANT_BOOL AreaOutside,
        /*[in]*/ double Value1,
        /*[in]*/ double Value2,
        /*[in]*/ BSTR ValueStr1,
        /*[in]*/ BSTR ValueStr2,
        /*[in]*/ VARIANT_BOOL ArrowsSmart,
        /*[in]*/ short ArrowStyle,
        /*[in]*/ short LeaderLineStyle,
        /*[in]*/ VARIANT_BOOL LeaderBent,
        /*[in]*/ VARIANT_BOOL ShowArea,
        /*[in]*/ VARIANT_BOOL ShowSymbol,
        /*[out,retval]*/ struct IDatumTargetSym * * LpDatumTargetSymDisp ) = 0;
      virtual HRESULT __stdcall GetTexture (
        /*[in]*/ BSTR Config_name,
        /*[out,retval]*/ struct ITexture * * Retval ) = 0;
      virtual HRESULT __stdcall SetTexture (
        /*[in]*/ BSTR Config_name,
        /*[in]*/ struct ITexture * TextureIn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall RemoveTexture2 (
        /*[in]*/ BSTR Config_name,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateTexture (
        /*[in]*/ BSTR MatName,
        /*[in]*/ double Scale,
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL Blend,
        /*[out,retval]*/ struct ITexture * * POut ) = 0;
      virtual HRESULT __stdcall GetObjectByPersistReference2 (
        /*[in]*/ VARIANT PersistId,
        /*[out]*/ long * ErrorCode,
        /*[out,retval]*/ IDispatch * * DispObj ) = 0;
      virtual HRESULT __stdcall IGetObjectByPersistReference2 (
        /*[in]*/ long Count,
        /*[in]*/ unsigned char * PersistId,
        /*[out]*/ long * ErrorCode,
        /*[out,retval]*/ IDispatch * * DispObj ) = 0;
      virtual HRESULT __stdcall GetAnnotationCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetAnnotations (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetAnnotations (
        /*[in]*/ long NumAnnotations,
        /*[out,retval]*/ struct IAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall get_ViewDisplayRealView (
        /*[out,retval]*/ VARIANT_BOOL * VbRealView ) = 0;
      virtual HRESULT __stdcall put_ViewDisplayRealView (
        /*[in]*/ VARIANT_BOOL VbRealView ) = 0;
      virtual HRESULT __stdcall InsertAnnotationFavorite (
        /*[in]*/ BSTR BstrFileName,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ struct IAnnotation * * LpAnnotation ) = 0;
      virtual HRESULT __stdcall InsertAttachment (
        /*[in]*/ BSTR FileName,
        /*[in]*/ VARIANT_BOOL Linked,
        /*[out,retval]*/ VARIANT_BOOL * Result ) = 0;
      virtual HRESULT __stdcall DeleteAttachment (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ VARIANT_BOOL * Result ) = 0;
      virtual HRESULT __stdcall GetAttachmentCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetAttachments (
        /*[out]*/ VARIANT * LinkedVar,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetAttachments (
        /*[in]*/ long NumAttachments,
        /*[out]*/ VARIANT_BOOL * LinkedArr,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetSectionProperties2 (
        /*[in]*/ VARIANT Sections,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetSectionProperties2 (
        /*[in]*/ long Count,
        /*[in]*/ IUnknown * * Sections,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall SelectByID2 (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR Type,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in]*/ VARIANT_BOOL Append,
        /*[in]*/ long Mark,
        /*[in]*/ struct ICallout * Callout,
        /*[in]*/ long SelectOption,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateOLEObject (
        /*[in]*/ long Aspect,
        /*[in]*/ VARIANT Position,
        /*[in]*/ VARIANT Buffer,
        /*[out]*/ long * ErrorCode,
        /*[out,retval]*/ struct ISwOLEObject * * LpOleObject ) = 0;
      virtual HRESULT __stdcall ICreateOLEObject (
        /*[in]*/ long Aspect,
        /*[in]*/ double * Position,
        /*[in]*/ long ByteCount,
        /*[in]*/ unsigned char * Buffer,
        /*[out]*/ long * ErrorCode,
        /*[out,retval]*/ struct ISwOLEObject * * LpOleObject ) = 0;
      virtual HRESULT __stdcall GetOLEObjectCount (
        /*[in]*/ long Options,
        /*[out,retval]*/ long * OleObjectCount ) = 0;
      virtual HRESULT __stdcall GetOLEObjects (
        /*[in]*/ long Options,
        /*[out,retval]*/ VARIANT * VbOleObjects ) = 0;
      virtual HRESULT __stdcall IGetOLEObjects (
        /*[in]*/ long Options,
        /*[in]*/ long OleObjectCount,
        /*[out]*/ struct ISwOLEObject * * LpOleObjects ) = 0;
      virtual HRESULT __stdcall InsertCamera (
        /*[out,retval]*/ struct ICamera * * Retval ) = 0;
      virtual HRESULT __stdcall GetCameraCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetCameraById (
        /*[in]*/ long CameraId,
        /*[out,retval]*/ struct ICamera * * Retval ) = 0;
      virtual HRESULT __stdcall InsertObjectFromFile (
        /*[in]*/ BSTR FilePath,
        /*[in]*/ VARIANT_BOOL CreateLink,
        /*[in]*/ long Aspect,
        /*[in]*/ double XPos,
        /*[in]*/ double YPos,
        /*[in]*/ double ZPos,
        /*[out,retval]*/ struct ISwOLEObject * * LpOleObj ) = 0;
      virtual HRESULT __stdcall AddComment (
        /*[in]*/ BSTR Text,
        /*[out,retval]*/ struct IComment * * Retval ) = 0;
      virtual HRESULT __stdcall DeleteSelection2 (
        /*[in]*/ long DeleteOptions,
        /*[out,retval]*/ VARIANT_BOOL * Result ) = 0;
      virtual HRESULT __stdcall SetSceneBkgDIBx64 (
        /*[in]*/ __int64 L_dib ) = 0;
      virtual HRESULT __stdcall GetSceneBkgDIBx64 (
        /*[out,retval]*/ __int64 * L_dib ) = 0;
      virtual HRESULT __stdcall get_ClearLastActiveConfigModel (
        /*[out,retval]*/ VARIANT_BOOL * Ret ) = 0;
      virtual HRESULT __stdcall put_ClearLastActiveConfigModel (
        /*[in]*/ VARIANT_BOOL Ret ) = 0;
      virtual HRESULT __stdcall get_CustomPropertyManager (
        /*[in]*/ BSTR ConfigName,
        /*[out,retval]*/ struct ICustomPropertyManager * * Retval ) = 0;
      virtual HRESULT __stdcall RunCommand (
        /*[in]*/ long CommandID,
        /*[in]*/ BSTR NewTitle,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall StartRecordingUndoObject ( ) = 0;
      virtual HRESULT __stdcall FinishRecordingUndoObject (
        /*[in]*/ BSTR UndoObjectName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetVisibleBox (
        /*[in]*/ struct IMathPoint * UpperLeft,
        /*[in]*/ struct IMathPoint * LowerRight ) = 0;
      virtual HRESULT __stdcall GetVisibleBox (
        /*[out]*/ struct IMathPoint * * UpperLeft,
        /*[out]*/ struct IMathPoint * * LowerRight,
        /*[out,retval]*/ VARIANT_BOOL * Success ) = 0;
      virtual HRESULT __stdcall RemoveVisibleBox ( ) = 0;
      virtual HRESULT __stdcall GetCameraDefinition (
        /*[out,retval]*/ struct ICamera * * Retval ) = 0;
      virtual HRESULT __stdcall AddOrdinateDimension (
        /*[in]*/ long DimType,
        /*[in]*/ double LocX,
        /*[in]*/ double LocY,
        /*[in]*/ double LocZ,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetUserPreferenceDoubleValueRange (
        /*[in]*/ long UserPref,
        /*[in,out]*/ double * Value,
        /*[in,out]*/ double * MinValue,
        /*[in,out]*/ double * MaxValue,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall SaveAs (
        /*[in]*/ BSTR Name,
        /*[in]*/ long Version,
        /*[in]*/ long Options,
        /*[in]*/ IDispatch * ExportData,
        /*[in,out]*/ long * Errors,
        /*[in,out]*/ long * Warnings,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetCorrespondingEntity (
        /*[in]*/ IDispatch * Entity,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall GetCorresponding (
        /*[in]*/ IDispatch * InputObject,
        /*[out,retval]*/ IDispatch * * OutputObject ) = 0;
      virtual HRESULT __stdcall GetPrint3DDialog (
        /*[out,retval]*/ struct IPrint3DDialog * * Retval ) = 0;
      virtual HRESULT __stdcall DeleteFeatureMgrViewx64 (
        /*[in]*/ __int64 * AppView ) = 0;
      virtual HRESULT __stdcall GetPersistReference3 (
        /*[in]*/ IDispatch * DispObj,
        /*[out,retval]*/ VARIANT * PersistId ) = 0;
      virtual HRESULT __stdcall GetPersistReferenceCount3 (
        /*[in]*/ IDispatch * DispObj,
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetPersistReference3 (
        /*[in]*/ IDispatch * DipsObj,
        /*[in]*/ long Count,
        /*[out,retval]*/ unsigned char * PersistId ) = 0;
      virtual HRESULT __stdcall GetObjectByPersistReference3 (
        /*[in]*/ VARIANT PersistId,
        /*[out]*/ long * ErrorCode,
        /*[out,retval]*/ IDispatch * * DispObj ) = 0;
      virtual HRESULT __stdcall IGetObjectByPersistReference3 (
        /*[in]*/ long Count,
        /*[in]*/ unsigned char * PersistId,
        /*[out]*/ long * ErrorCode,
        /*[out,retval]*/ IDispatch * * DispObj ) = 0;
      virtual HRESULT __stdcall SetApiUndoObject (
        /*[in]*/ IDispatch * PHandler,
        /*[in]*/ BSTR DisplayName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddOrUpdateSearchData (
        /*[in]*/ BSTR AppName,
        /*[in]*/ BSTR AppKeyword,
        /*[in]*/ BSTR AppValue,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertAnnotationView (
        /*[in]*/ long AnnotationViewingDirection,
        /*[in]*/ IDispatch * DirectionReference,
        /*[in]*/ VARIANT_BOOL FlipDirection,
        /*[in]*/ IDispatch * HorizontalDirectionReference,
        /*[in]*/ long AngleMadeWithHorizontal,
        /*[out,retval]*/ struct IAnnotationView * * AnnotationView ) = 0;
      virtual HRESULT __stdcall get_AnnotationViewCount (
        /*[out,retval]*/ long * AnnotationViewCount ) = 0;
      virtual HRESULT __stdcall get_AnnotationViews (
        /*[out,retval]*/ VARIANT * AnnotationViews ) = 0;
      virtual HRESULT __stdcall IGetAnnotationViews (
        /*[in]*/ long AnnotationViewCount,
        /*[out,retval]*/ struct IAnnotationView * * AnnotationViews ) = 0;
      virtual HRESULT __stdcall CreateMeasure (
        /*[out,retval]*/ struct IMeasure * * Retval ) = 0;
      virtual HRESULT __stdcall BreakAllExternalFileReferences2 (
        /*[in]*/ VARIANT_BOOL InsertFeatures ) = 0;
      virtual HRESULT __stdcall InsertScene (
        /*[in]*/ BSTR SceneDefinitionFile,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetModelView (
        /*[in]*/ long WindowID,
        /*[in]*/ long Row,
        /*[in]*/ long Col,
        /*[out,retval]*/ struct IModelView * * Retval ) = 0;
      virtual HRESULT __stdcall GetDecalsCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetDecals (
        /*[out,retval]*/ VARIANT * PDecalsVar ) = 0;
      virtual HRESULT __stdcall IGetDecals (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IDecal * * PDecalsArr ) = 0;
      virtual HRESULT __stdcall CreateDecal (
        /*[out,retval]*/ struct IDecal * * POut ) = 0;
      virtual HRESULT __stdcall AddDecal (
        /*[in]*/ struct IDecal * PDecal,
        /*[out]*/ long * DecalID,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DeleteDecal (
        /*[in]*/ long DecalID,
        /*[in]*/ VARIANT_BOOL BReassignIdsAndInvalidate,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall HideDecal (
        /*[in]*/ long DecalID,
        /*[in]*/ VARIANT_BOOL Hide,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DeleteAllDecals (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall MoveDecal (
        /*[in]*/ long DecalID,
        /*[in]*/ VARIANT_BOOL MoveUp,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ReverseDecalsOrder (
        /*[in]*/ long DecalID,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetRenderMaterialsCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetRenderMaterials (
        /*[out,retval]*/ VARIANT * PPWMaterialsVar ) = 0;
      virtual HRESULT __stdcall IGetRenderMaterials (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IRenderMaterial * * PRenderMaterialsArr ) = 0;
      virtual HRESULT __stdcall CreateRenderMaterial (
        /*[in]*/ BSTR PathName,
        /*[out,retval]*/ struct IRenderMaterial * * POut ) = 0;
      virtual HRESULT __stdcall AddRenderMaterial (
        /*[in]*/ struct IRenderMaterial * PRenderMaterial,
        /*[out]*/ long * PwMaterialId,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DeleteRenderMaterial (
        /*[in]*/ long PwMaterialId,
        /*[in]*/ VARIANT_BOOL BReassignIdsAndInvalidate,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall UpdateRenderMaterialsInSceneGraph (
        /*[in]*/ VARIANT_BOOL AddToSG ) = 0;
      virtual HRESULT __stdcall GetAdvancedSpotLightProperties (
        /*[in]*/ BSTR Name,
        /*[out]*/ double * Exponent,
        /*[out]*/ double * AttenuationConst,
        /*[out]*/ double * AttenuationLinear,
        /*[out]*/ double * AttenuationQuad ) = 0;
      virtual HRESULT __stdcall SetAdvancedSpotLightProperties (
        /*[in]*/ BSTR Name,
        /*[in]*/ double Exponent,
        /*[in]*/ double AttenuationConst,
        /*[in]*/ double AttenuationLinear,
        /*[in]*/ double AttenuationQuad ) = 0;
      virtual HRESULT __stdcall GetDecal (
        /*[in]*/ long ID,
        /*[in]*/ BSTR Configuration,
        /*[out,retval]*/ struct IDecal * * PDecalOut ) = 0;
      virtual HRESULT __stdcall GetMaterial (
        /*[in]*/ long ID,
        /*[in]*/ BSTR Configuration,
        /*[out,retval]*/ struct IRenderMaterial * * PDecalOut ) = 0;
      virtual HRESULT __stdcall SetKeepLightInRenderScene (
        /*[in]*/ long ID,
        /*[in]*/ VARIANT_BOOL Val ) = 0;
      virtual HRESULT __stdcall GetKeepLightInRenderScene (
        /*[in]*/ long ID,
        /*[out,retval]*/ VARIANT_BOOL * Val ) = 0;
      virtual HRESULT __stdcall AddDefaultRenderMaterial (
        /*[in]*/ struct IRenderMaterial * PRenderMaterial,
        /*[out]*/ long * PwMaterialId,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetLightEnabledInRender (
        /*[in]*/ long ID,
        /*[in]*/ VARIANT_BOOL Val ) = 0;
      virtual HRESULT __stdcall GetLightEnabledInRender (
        /*[in]*/ long ID,
        /*[out,retval]*/ VARIANT_BOOL * Val ) = 0;
      virtual HRESULT __stdcall DeleteScene ( ) = 0;
      virtual HRESULT __stdcall GetMotionStudyManager (
        /*[out,retval]*/ IDispatch * * PMotionStudyManager ) = 0;
      virtual HRESULT __stdcall GetSearchDataCount (
        /*[in]*/ BSTR AppName,
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetSearchData (
        /*[in]*/ BSTR AppName,
        /*[in,out]*/ VARIANT * AppNames,
        /*[in,out]*/ VARIANT * NodeNames,
        /*[in,out]*/ VARIANT * NodeValues,
        /*[out,retval]*/ long * NumKeywords ) = 0;
      virtual HRESULT __stdcall IGetSearchData (
        /*[in]*/ BSTR AppName,
        /*[in]*/ long Count,
        /*[in,out]*/ BSTR * AppNames,
        /*[in,out]*/ BSTR * NodeNames,
        /*[in,out]*/ BSTR * NodeValues ) = 0;
      virtual HRESULT __stdcall DeleteSearchData (
        /*[in]*/ BSTR AppName,
        /*[out,retval]*/ VARIANT_BOOL * Val ) = 0;
      virtual HRESULT __stdcall IsVirtualComponent (
        /*[out,retval]*/ BSTR * ParentPath ) = 0;
      virtual HRESULT __stdcall IsVirtualComponent2 (
        /*[out,retval]*/ VARIANT * PathChain ) = 0;
      virtual HRESULT __stdcall IsVirtualComponent3 (
        /*[out]*/ VARIANT * PathChain,
        /*[out]*/ VARIANT * TitleChain,
        /*[out,retval]*/ VARIANT_BOOL * IsVirtual ) = 0;
      virtual HRESULT __stdcall ChangeSketchPlane (
        /*[in]*/ long Config_opt,
        /*[in]*/ VARIANT Config_names,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IChangeSketchPlane (
        /*[in]*/ long Config_opt,
        /*[in]*/ long Config_count,
        /*[in]*/ BSTR * Config_names,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateCallout (
        /*[in]*/ long NumberOfRows,
        /*[in]*/ IDispatch * Handler,
        /*[out,retval]*/ struct ICallout * * Retval ) = 0;
      virtual HRESULT __stdcall CreatePresentation (
        /*[in]*/ BSTR PathName,
        /*[in]*/ BSTR ThemeXML,
        /*[in]*/ long Options,
        /*[in]*/ VARIANT TextNameArray,
        /*[in]*/ VARIANT TextArray,
        /*[in]*/ VARIANT TextureArray,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Stretch (
        /*[in]*/ VARIANT_BOOL KeepRelations,
        /*[in]*/ double BaseX,
        /*[in]*/ double BaseY,
        /*[in]*/ double DestX,
        /*[in]*/ double DestY ) = 0;
      virtual HRESULT __stdcall StartFormatPainter ( ) = 0;
      virtual HRESULT __stdcall StopFormatPainter ( ) = 0;
      virtual HRESULT __stdcall JogDimension (
        /*[in]*/ VARIANT_BOOL Jog,
        /*[in]*/ short WitnessIndex,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetNamedViewRotation (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetNamedViewRotation (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetUserPreferenceToggle (
        /*[in]*/ long UserPref,
        /*[in]*/ long UserPrefOption,
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall SetUserPreferenceToggle (
        /*[in]*/ long UserPref,
        /*[in]*/ long UserPrefOption,
        /*[in]*/ VARIANT_BOOL Value,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetUserPreferenceInteger (
        /*[in]*/ long UserPref,
        /*[in]*/ long UserPrefOption,
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall SetUserPreferenceInteger (
        /*[in]*/ long UserPref,
        /*[in]*/ long UserPrefOption,
        /*[in]*/ long Value,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetUserPreferenceDouble (
        /*[in]*/ long UserPref,
        /*[in]*/ long UserPrefOption,
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall SetUserPreferenceDouble (
        /*[in]*/ long UserPref,
        /*[in]*/ long UserPrefOption,
        /*[in]*/ double Value,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetUserPreferenceString (
        /*[in]*/ long UserPref,
        /*[in]*/ long UserPrefOption,
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall SetUserPreferenceString (
        /*[in]*/ long UserPref,
        /*[in]*/ long UserPrefOption,
        /*[in]*/ BSTR Value,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetUserPreferenceTextFormat (
        /*[in]*/ long UserPref,
        /*[in]*/ long UserPrefOption,
        /*[out,retval]*/ struct ITextFormat * * Value ) = 0;
      virtual HRESULT __stdcall SetUserPreferenceTextFormat (
        /*[in]*/ long UserPref,
        /*[in]*/ long UserPrefOption,
        /*[in]*/ struct ITextFormat * Value,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ShowSmartMessage (
        /*[in]*/ BSTR Name,
        /*[in]*/ long TimeInMillSec,
        /*[in]*/ VARIANT_BOOL ShowInStatusBar,
        /*[in]*/ VARIANT_BOOL RemoveDefaultTip ) = 0;
      virtual HRESULT __stdcall ApplyFormatPainterToAll ( ) = 0;
      virtual HRESULT __stdcall InsertBomTable (
        /*[in]*/ BSTR TemplateName,
        /*[in]*/ long X,
        /*[in]*/ long Y,
        /*[in]*/ long BomType,
        /*[in]*/ BSTR ConfigurationName,
        /*[out,retval]*/ struct IBomTableAnnotation * * LpAnnotation ) = 0;
      virtual HRESULT __stdcall get_FeatureManagerFilterString (
        /*[out,retval]*/ BSTR * FilterString ) = 0;
      virtual HRESULT __stdcall put_FeatureManagerFilterString (
        /*[in]*/ BSTR FilterString ) = 0;
      virtual HRESULT __stdcall GetDraftingStandardNames (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall LoadDraftingStandard (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SaveDraftingStandard (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall RenameDraftingStandard (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CopyDraftingStandard (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DeleteDraftingStandard (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsConverted (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetLicenseType (
        /*[out,retval]*/ long * LicenseType ) = 0;
      virtual HRESULT __stdcall GetModelViewCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetModelViews (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetModelViews (
        /*[in]*/ long NumModelViews,
        /*[out,retval]*/ struct IModelView * * Retval ) = 0;
      virtual HRESULT __stdcall FindTrackedObjects (
        /*[in]*/ long TrackingCookie,
        /*[in]*/ IDispatch * SerachObjet,
        /*[in]*/ VARIANT TypesFilter,
        /*[in]*/ VARIANT TrackingIDs,
        /*[out,retval]*/ VARIANT * TrackedObjects ) = 0;
};

struct __declspec(uuid("83a33d80-27c5-11ce-bfd4-00400513bb57"))
ISheet : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetBomTable (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetBomTable (
        /*[out,retval]*/ struct IBomTable * * Retval ) = 0;
      virtual HRESULT __stdcall GetName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetName (
        /*[in]*/ BSTR NameIn ) = 0;
      virtual HRESULT __stdcall GetTemplateName (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetTemplateName (
        /*[in]*/ BSTR NameIn ) = 0;
      virtual HRESULT __stdcall GetProperties (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetProperties (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall SetProperties (
        /*[in]*/ long PaperSz,
        /*[in]*/ long Templ,
        /*[in]*/ double Scale1,
        /*[in]*/ double Scale2,
        /*[in]*/ VARIANT_BOOL FirstAngle,
        /*[in]*/ double Width,
        /*[in]*/ double Height ) = 0;
      virtual HRESULT __stdcall GetCustomColorsCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall IGetCustomColors (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetOLEObjectCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetOLEObjectSettings (
        /*[in]*/ long Index,
        /*[in,out]*/ long * ByteCount,
        /*[in,out]*/ long * Aspect,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetOLEObjectSettings (
        /*[in]*/ long Index,
        /*[in,out]*/ long * ByteCount,
        /*[in,out]*/ long * Aspect,
        /*[in,out]*/ double * Position,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetOLEObjectData (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetOLEObjectData (
        /*[in]*/ long Index,
        /*[in,out]*/ unsigned char * Buffer,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateOLEObject (
        /*[in]*/ long Aspect,
        /*[in]*/ VARIANT Position,
        /*[in]*/ VARIANT Buffer,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ICreateOLEObject (
        /*[in]*/ long Aspect,
        /*[in]*/ double * Position,
        /*[in]*/ long ByteCount,
        /*[in]*/ unsigned char * Buffer,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_PageSetup (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall get_IPageSetup (
        /*[out,retval]*/ struct IPageSetup * * Retval ) = 0;
      virtual HRESULT __stdcall SetScale (
        /*[in]*/ double Numerator,
        /*[in]*/ double Denominator,
        /*[in]*/ VARIANT_BOOL ScaleAnnoPosition,
        /*[in]*/ VARIANT_BOOL ScaleAnnoTextHeight,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_CustomPropertyView (
        /*[out,retval]*/ BSTR * ViewName ) = 0;
      virtual HRESULT __stdcall put_CustomPropertyView (
        /*[in]*/ BSTR ViewName ) = 0;
      virtual HRESULT __stdcall InsertRevisionTable (
        /*[in]*/ VARIANT_BOOL UseAnchorPoint,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ long AnchorType,
        /*[in]*/ BSTR TableTemplate,
        /*[out,retval]*/ struct IRevisionTableAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall get_RevisionTable (
        /*[out,retval]*/ struct IRevisionTableAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall GetTemplateSketch (
        /*[out,retval]*/ struct ISketch * * Retval ) = 0;
      virtual HRESULT __stdcall get_SheetFormatVisible (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall put_SheetFormatVisible (
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
      virtual HRESULT __stdcall get_FocusLocked (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_FocusLocked (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall GetSheetFormatName (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall SetSheetFormatName (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_TableAnchor (
        /*[in]*/ long TableType,
        /*[out,retval]*/ struct ITableAnchor * * Retval ) = 0;
      virtual HRESULT __stdcall GetSize (
        /*[in,out]*/ double * Width,
        /*[in,out]*/ double * Height,
        /*[out,retval]*/ long * Size ) = 0;
      virtual HRESULT __stdcall SetSize (
        /*[in]*/ long Size,
        /*[in]*/ double Width,
        /*[in]*/ double Height,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SaveFormat (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetViews (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall InsertTitleBlock (
        /*[in]*/ VARIANT Notes,
        /*[out,retval]*/ struct ITitleBlock * * Retval ) = 0;
      virtual HRESULT __stdcall get_TitleBlock (
        /*[out,retval]*/ struct ITitleBlock * * Retval ) = 0;
};

struct __declspec(uuid("83a33d33-27c5-11ce-bfd4-00400513bb57"))
IDrawingDoc : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall NewNote (
        /*[in]*/ BSTR Text,
        /*[in]*/ double Height ) = 0;
      virtual HRESULT __stdcall NewSheet (
        /*[in]*/ BSTR Name,
        /*[in]*/ short PaperSize,
        /*[in]*/ short TemplateIn,
        /*[in]*/ double Scale1,
        /*[in]*/ double Scale2 ) = 0;
      virtual HRESULT __stdcall SetupSheet (
        /*[in]*/ BSTR Name,
        /*[in]*/ short PaperSize,
        /*[in]*/ short TemplateIn,
        /*[in]*/ double Scale1,
        /*[in]*/ double Scale2 ) = 0;
      virtual HRESULT __stdcall NewGtol (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall INewGtol (
        /*[out,retval]*/ struct IGtol * * Retval ) = 0;
      virtual HRESULT __stdcall EditSelectedGtol (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IEditSelectedGtol (
        /*[out,retval]*/ struct IGtol * * Retval ) = 0;
      virtual HRESULT __stdcall CreateLinearDim (
        /*[in]*/ VARIANT P0,
        /*[in]*/ VARIANT P1,
        /*[in]*/ VARIANT P2,
        /*[in]*/ VARIANT P3,
        /*[in]*/ VARIANT P4,
        /*[in]*/ double Angle,
        /*[in]*/ double ArrowSize,
        /*[in]*/ BSTR Text,
        /*[in]*/ double TextHeight,
        /*[in]*/ double WitnessGap,
        /*[in]*/ double WitnessOvershoot,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateAngDim (
        /*[in]*/ VARIANT VP0,
        /*[in]*/ VARIANT VP1,
        /*[in]*/ VARIANT VP2,
        /*[in]*/ VARIANT VP3,
        /*[in]*/ VARIANT VP4,
        /*[in]*/ VARIANT VP5,
        /*[in]*/ VARIANT VP6,
        /*[in]*/ double ArrowSize,
        /*[in]*/ BSTR Text,
        /*[in]*/ double TextHeight,
        /*[in]*/ double WitnessGap,
        /*[in]*/ double WitnessOvershoot,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateDiamDim (
        /*[in]*/ double DimVal,
        /*[in]*/ VARIANT VP0,
        /*[in]*/ VARIANT VP1,
        /*[in]*/ VARIANT VP2,
        /*[in]*/ VARIANT VP3,
        /*[in]*/ double ArrowSize,
        /*[in]*/ BSTR Text,
        /*[in]*/ double TextHeight,
        /*[in]*/ double WitnessGap,
        /*[in]*/ double WitnessOvershoot,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateViewport (
        /*[in]*/ double LowerLeftX,
        /*[in]*/ double LowerLeftY,
        /*[in]*/ double UpperRightX,
        /*[in]*/ double UpperRightY,
        /*[in]*/ short SketchSize,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall ActivateView (
        /*[in]*/ BSTR ViewName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Create1stAngleViews (
        /*[in]*/ BSTR ModelName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Create3rdAngleViews (
        /*[in]*/ BSTR ModelName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateDrawViewFromModelView (
        /*[in]*/ BSTR ModelName,
        /*[in]*/ BSTR ViewName,
        /*[in]*/ double LocX,
        /*[in]*/ double LocY,
        /*[in]*/ double LocZ,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateUnfoldedViewAt (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateText (
        /*[in]*/ BSTR TextString,
        /*[in]*/ double TextX,
        /*[in]*/ double TextY,
        /*[in]*/ double TextZ,
        /*[in]*/ double TextHeight,
        /*[in]*/ double TextAngle,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall EditRebuild ( ) = 0;
      virtual HRESULT __stdcall ViewFullPage ( ) = 0;
      virtual HRESULT __stdcall Dummy018 ( ) = 0;
      virtual HRESULT __stdcall CreateSectionView ( ) = 0;
      virtual HRESULT __stdcall SheetNext ( ) = 0;
      virtual HRESULT __stdcall Dimensions ( ) = 0;
      virtual HRESULT __stdcall InsertGroup ( ) = 0;
      virtual HRESULT __stdcall SheetPrevious ( ) = 0;
      virtual HRESULT __stdcall AlignVert ( ) = 0;
      virtual HRESULT __stdcall AlignHorz ( ) = 0;
      virtual HRESULT __stdcall InsertRefDim ( ) = 0;
      virtual HRESULT __stdcall MakeSectionLine ( ) = 0;
      virtual HRESULT __stdcall InsertBaseDim ( ) = 0;
      virtual HRESULT __stdcall EditSketch ( ) = 0;
      virtual HRESULT __stdcall CreateDetailView ( ) = 0;
      virtual HRESULT __stdcall CreateAuxiliaryView ( ) = 0;
      virtual HRESULT __stdcall StartDrawing ( ) = 0;
      virtual HRESULT __stdcall EndDrawing ( ) = 0;
      virtual HRESULT __stdcall GetFirstView (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstView (
        /*[out,retval]*/ struct IView * * Retval ) = 0;
      virtual HRESULT __stdcall GetInsertionPoint (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall AttachDimensions ( ) = 0;
      virtual HRESULT __stdcall InsertModelDimensions (
        /*[in]*/ long Option ) = 0;
      virtual HRESULT __stdcall EditTemplate ( ) = 0;
      virtual HRESULT __stdcall InsertOrdinate ( ) = 0;
      virtual HRESULT __stdcall UnsuppressView ( ) = 0;
      virtual HRESULT __stdcall HideShowDrawingViews ( ) = 0;
      virtual HRESULT __stdcall SuppressView ( ) = 0;
      virtual HRESULT __stdcall AlignOrdinate ( ) = 0;
      virtual HRESULT __stdcall SketchDim ( ) = 0;
      virtual HRESULT __stdcall CenterMark ( ) = 0;
      virtual HRESULT __stdcall EditSheet ( ) = 0;
      virtual HRESULT __stdcall InsertHorizontalOrdinate ( ) = 0;
      virtual HRESULT __stdcall EditOrdinate ( ) = 0;
      virtual HRESULT __stdcall InsertVerticalOrdinate ( ) = 0;
      virtual HRESULT __stdcall ChangeOrdDir ( ) = 0;
      virtual HRESULT __stdcall GetLineFontCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetLineFontName (
        /*[in]*/ long Index,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetLineFontInfo (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall ICreateLinearDim (
        /*[in]*/ double * P0,
        /*[in]*/ double * P1,
        /*[in]*/ double * P2,
        /*[in]*/ double * P3,
        /*[in]*/ double * P4,
        /*[in]*/ double Angle,
        /*[in]*/ double ArrowSize,
        /*[in]*/ BSTR Text,
        /*[in]*/ double TextHeight,
        /*[in]*/ double WitnessGap,
        /*[in]*/ double WitnessOvershoot ) = 0;
      virtual HRESULT __stdcall ICreateAngDim (
        /*[in]*/ double * P0,
        /*[in]*/ double * P1,
        /*[in]*/ double * P2,
        /*[in]*/ double * P3,
        /*[in]*/ double * P4,
        /*[in]*/ double * P5,
        /*[in]*/ double * P6,
        /*[in]*/ double ArrowSize,
        /*[in]*/ BSTR Text,
        /*[in]*/ double TextHeight,
        /*[in]*/ double WitnessGap,
        /*[in]*/ double WitnessOvershoot ) = 0;
      virtual HRESULT __stdcall ICreateDiamDim (
        /*[in]*/ double DimValue,
        /*[in]*/ double * P0,
        /*[in]*/ double * P1,
        /*[in]*/ double * P2,
        /*[in]*/ double * P3,
        /*[in]*/ double ArrowSize,
        /*[in]*/ BSTR Text,
        /*[in]*/ double TextHeight,
        /*[in]*/ double WitnessGap,
        /*[in]*/ double WitnessOvershoot ) = 0;
      virtual HRESULT __stdcall IGetInsertionPoint (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall CreateCompoundNote (
        /*[in]*/ double Height,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateCompoundNote (
        /*[in]*/ double Height,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ struct INote * * Retval ) = 0;
      virtual HRESULT __stdcall CreateOrdinateDim (
        /*[in]*/ VARIANT P0,
        /*[in]*/ VARIANT P1,
        /*[in]*/ VARIANT P2,
        /*[in]*/ VARIANT P3,
        /*[in]*/ VARIANT P4,
        /*[in]*/ double Angle,
        /*[in]*/ double ArrowSize,
        /*[in]*/ BSTR Text,
        /*[in]*/ double TextHeight,
        /*[in]*/ double WitnessGap,
        /*[in]*/ double WitnessOvershoot,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ICreateOrdinateDim (
        /*[in]*/ double * P0,
        /*[in]*/ double * P1,
        /*[in]*/ double * P2,
        /*[in]*/ double * P3,
        /*[in]*/ double * P4,
        /*[in]*/ double Angle,
        /*[in]*/ double ArrowSize,
        /*[in]*/ BSTR Text,
        /*[in]*/ double TextHeight,
        /*[in]*/ double WitnessGap,
        /*[in]*/ double WitnessOvershoot ) = 0;
      virtual HRESULT __stdcall InsertNewNote (
        /*[in]*/ BSTR Text,
        /*[in]*/ VARIANT_BOOL NoLeader,
        /*[in]*/ VARIANT_BOOL BalloonNote,
        /*[in]*/ VARIANT_BOOL BentLeader,
        /*[in]*/ short ArrowStyle,
        /*[in]*/ short LeaderSide ) = 0;
      virtual HRESULT __stdcall AddCenterMark (
        /*[in]*/ double CmSize,
        /*[in]*/ VARIANT_BOOL CmShowLines,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertWeldSymbol (
        /*[in]*/ BSTR Dim1,
        /*[in]*/ BSTR Symbol,
        /*[in]*/ BSTR Dim2,
        /*[in]*/ VARIANT_BOOL Symmetric,
        /*[in]*/ VARIANT_BOOL FieldWeld,
        /*[in]*/ VARIANT_BOOL ShowOtherSide,
        /*[in]*/ VARIANT_BOOL DashOnTop,
        /*[in]*/ VARIANT_BOOL Peripheral,
        /*[in]*/ VARIANT_BOOL HasProcess,
        /*[in]*/ BSTR ProcessValue ) = 0;
      virtual HRESULT __stdcall InsertSurfaceFinishSymbol (
        /*[in]*/ long SymType,
        /*[in]*/ long LeaderType,
        /*[in]*/ double LocX,
        /*[in]*/ double LocY,
        /*[in]*/ double LocZ,
        /*[in]*/ long LaySymbol,
        /*[in]*/ long ArrowType,
        /*[in]*/ BSTR MachAllowance,
        /*[in]*/ BSTR OtherVals,
        /*[in]*/ BSTR ProdMethod,
        /*[in]*/ BSTR SampleLen,
        /*[in]*/ BSTR MaxRoughness,
        /*[in]*/ BSTR MinRoughness,
        /*[in]*/ BSTR RoughnessSpacing,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ModifySurfaceFinishSymbol (
        /*[in]*/ long SymType,
        /*[in]*/ long LeaderType,
        /*[in]*/ double LocX,
        /*[in]*/ double LocY,
        /*[in]*/ double LocZ,
        /*[in]*/ long LaySymbol,
        /*[in]*/ long ArrowType,
        /*[in]*/ BSTR MachAllowance,
        /*[in]*/ BSTR OtherVals,
        /*[in]*/ BSTR ProdMethod,
        /*[in]*/ BSTR SampleLen,
        /*[in]*/ BSTR MaxRoughness,
        /*[in]*/ BSTR MinRoughness,
        /*[in]*/ BSTR RoughnessSpacing,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetCurrentSheet (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetCurrentSheet (
        /*[out,retval]*/ struct ISheet * * Retval ) = 0;
      virtual HRESULT __stdcall CreateConstructionGeometry ( ) = 0;
      virtual HRESULT __stdcall ViewDisplayHidden ( ) = 0;
      virtual HRESULT __stdcall InsertBreakHorizontal ( ) = 0;
      virtual HRESULT __stdcall ViewDisplayWireframe ( ) = 0;
      virtual HRESULT __stdcall BreakLineZigZagCut ( ) = 0;
      virtual HRESULT __stdcall BreakView ( ) = 0;
      virtual HRESULT __stdcall ViewDisplayHiddengreyed ( ) = 0;
      virtual HRESULT __stdcall ViewTangentEdges ( ) = 0;
      virtual HRESULT __stdcall BreakLineSplineCut ( ) = 0;
      virtual HRESULT __stdcall InsertBreakVertical ( ) = 0;
      virtual HRESULT __stdcall UnBreakView ( ) = 0;
      virtual HRESULT __stdcall BreakLineStraightCut ( ) = 0;
      virtual HRESULT __stdcall InsertDatumTag ( ) = 0;
      virtual HRESULT __stdcall ToggleGrid ( ) = 0;
      virtual HRESULT __stdcall FlipSectionLine ( ) = 0;
      virtual HRESULT __stdcall FeatureByName (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IFeatureByName (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall NewSheet2 (
        /*[in]*/ BSTR Name,
        /*[in]*/ long PaperSize,
        /*[in]*/ long TemplateIn,
        /*[in]*/ double Scale1,
        /*[in]*/ double Scale2,
        /*[in]*/ VARIANT_BOOL FirstAngle,
        /*[in]*/ BSTR TemplateName,
        /*[in]*/ double Width,
        /*[in]*/ double Height,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateLinearDim2 (
        /*[in]*/ VARIANT P0,
        /*[in]*/ VARIANT P1,
        /*[in]*/ VARIANT P2,
        /*[in]*/ VARIANT P3,
        /*[in]*/ VARIANT P4,
        /*[in]*/ double Val,
        /*[in]*/ long PrimPrec,
        /*[in]*/ BSTR Text,
        /*[in]*/ VARIANT TextPoint,
        /*[in]*/ double Angle,
        /*[in]*/ double TextHeight,
        /*[in]*/ BSTR Prefix,
        /*[in]*/ BSTR Suffix,
        /*[in]*/ BSTR Callout1,
        /*[in]*/ BSTR Callout2,
        /*[in]*/ long TolType,
        /*[in]*/ BSTR TolMin,
        /*[in]*/ BSTR TolMax,
        /*[in]*/ long TolPrec,
        /*[in]*/ double ArrowSize,
        /*[in]*/ long ArrowStyle,
        /*[in]*/ long ArrowDir,
        /*[in]*/ double WitnessGap,
        /*[in]*/ double WitnessOvershoot,
        /*[in]*/ VARIANT_BOOL DualDisplay,
        /*[in]*/ long DualPrec,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ICreateLinearDim2 (
        /*[in]*/ double * P0,
        /*[in]*/ double * P1,
        /*[in]*/ double * P2,
        /*[in]*/ double * P3,
        /*[in]*/ double * P4,
        /*[in]*/ double Val,
        /*[in]*/ long PrimPrec,
        /*[in]*/ BSTR Text,
        /*[in]*/ double * TextPoint,
        /*[in]*/ double Angle,
        /*[in]*/ double TextHeight,
        /*[in]*/ BSTR Prefix,
        /*[in]*/ BSTR Suffix,
        /*[in]*/ BSTR Callout1,
        /*[in]*/ BSTR Callout2,
        /*[in]*/ long TolType,
        /*[in]*/ BSTR TolMin,
        /*[in]*/ BSTR TolMax,
        /*[in]*/ long TolPrec,
        /*[in]*/ double ArrowSize,
        /*[in]*/ long ArrowStyle,
        /*[in]*/ long ArrowDir,
        /*[in]*/ double WitnessGap,
        /*[in]*/ double WitnessOvershoot,
        /*[in]*/ VARIANT_BOOL DualDisplay,
        /*[in]*/ long DualPrecision ) = 0;
      virtual HRESULT __stdcall CreateAngDim2 (
        /*[in]*/ VARIANT VP0,
        /*[in]*/ VARIANT VP1,
        /*[in]*/ VARIANT VP2,
        /*[in]*/ VARIANT VP3,
        /*[in]*/ VARIANT VP4,
        /*[in]*/ VARIANT VP5,
        /*[in]*/ VARIANT VP6,
        /*[in]*/ double ArrowSize,
        /*[in]*/ BSTR Text,
        /*[in]*/ double TextHeight,
        /*[in]*/ double WitnessGap,
        /*[in]*/ double WitnessOvershoot,
        /*[in]*/ VARIANT VTextPoint,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ICreateAngDim2 (
        /*[in]*/ double * P0,
        /*[in]*/ double * P1,
        /*[in]*/ double * P2,
        /*[in]*/ double * P3,
        /*[in]*/ double * P4,
        /*[in]*/ double * P5,
        /*[in]*/ double * P6,
        /*[in]*/ double ArrowSize,
        /*[in]*/ BSTR Text,
        /*[in]*/ double TextHeight,
        /*[in]*/ double WitnessGap,
        /*[in]*/ double WitnessOvershoot,
        /*[in]*/ double * TextPoint ) = 0;
      virtual HRESULT __stdcall CreateDiamDim2 (
        /*[in]*/ double DimVal,
        /*[in]*/ VARIANT VP0,
        /*[in]*/ VARIANT VP1,
        /*[in]*/ VARIANT VP2,
        /*[in]*/ VARIANT VP3,
        /*[in]*/ double ArrowSize,
        /*[in]*/ BSTR Text,
        /*[in]*/ double TextHeight,
        /*[in]*/ double WitnessGap,
        /*[in]*/ double WitnessOvershoot,
        /*[in]*/ VARIANT VTextPoint,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ICreateDiamDim2 (
        /*[in]*/ double DimValue,
        /*[in]*/ double * P0,
        /*[in]*/ double * P1,
        /*[in]*/ double * P2,
        /*[in]*/ double * P3,
        /*[in]*/ double ArrowSize,
        /*[in]*/ BSTR Text,
        /*[in]*/ double TextHeight,
        /*[in]*/ double WitnessGap,
        /*[in]*/ double WitnessOvershoot,
        /*[in]*/ double * TextPoint ) = 0;
      virtual HRESULT __stdcall CreateOrdinateDim2 (
        /*[in]*/ VARIANT P0,
        /*[in]*/ VARIANT P1,
        /*[in]*/ VARIANT P2,
        /*[in]*/ VARIANT P3,
        /*[in]*/ VARIANT P4,
        /*[in]*/ double Angle,
        /*[in]*/ double ArrowSize,
        /*[in]*/ BSTR Text,
        /*[in]*/ double TextHeight,
        /*[in]*/ double WitnessGap,
        /*[in]*/ double WitnessOvershoot,
        /*[in]*/ VARIANT P5,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ICreateOrdinateDim2 (
        /*[in]*/ double * P0,
        /*[in]*/ double * P1,
        /*[in]*/ double * P2,
        /*[in]*/ double * P3,
        /*[in]*/ double * P4,
        /*[in]*/ double Angle,
        /*[in]*/ double ArrowSize,
        /*[in]*/ BSTR Text,
        /*[in]*/ double TextHeight,
        /*[in]*/ double WitnessGap,
        /*[in]*/ double WitnessOvershoot,
        /*[in]*/ double * P5 ) = 0;
      virtual HRESULT __stdcall InsertNewNote2 (
        /*[in]*/ BSTR UpperText,
        /*[in]*/ BSTR LowerText,
        /*[in]*/ VARIANT_BOOL NoLeader,
        /*[in]*/ VARIANT_BOOL BentLeader,
        /*[in]*/ short ArrowStyle,
        /*[in]*/ short LeaderSide,
        /*[in]*/ double Angle,
        /*[in]*/ short BalloonStyle,
        /*[in]*/ short BalloonFit,
        /*[in]*/ short UpperNoteContent,
        /*[in]*/ short LowerNoteContent ) = 0;
      virtual HRESULT __stdcall DragModelDimension (
        /*[in]*/ BSTR ViewName,
        /*[in]*/ short DropEffect,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z ) = 0;
      virtual HRESULT __stdcall CreateViewport2 (
        /*[in]*/ double LowerLeftX,
        /*[in]*/ double LowerLeftY,
        /*[in]*/ double UpperRightX,
        /*[in]*/ double UpperRightY,
        /*[in]*/ short SketchSize,
        /*[in]*/ double Scale,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall SetupSheet2 (
        /*[in]*/ BSTR Name,
        /*[in]*/ short PaperSize,
        /*[in]*/ short TemplateIn,
        /*[in]*/ double Scale1,
        /*[in]*/ double Scale2,
        /*[in]*/ long SkPointsFlag ) = 0;
      virtual HRESULT __stdcall OnComponentProperties ( ) = 0;
      virtual HRESULT __stdcall GetLineFontCount2 (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetLineFontName2 (
        /*[in]*/ long Index,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetLineFontInfo2 (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall SetLineStyle (
        /*[in]*/ BSTR StyleName ) = 0;
      virtual HRESULT __stdcall SetLineWidth (
        /*[in]*/ long Width ) = 0;
      virtual HRESULT __stdcall SetLineColor (
        /*[in]*/ long Color ) = 0;
      virtual HRESULT __stdcall ShowEdge ( ) = 0;
      virtual HRESULT __stdcall HideEdge ( ) = 0;
      virtual HRESULT __stdcall AddHoleCallout ( ) = 0;
      virtual HRESULT __stdcall GetPenCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetPenInfo (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetPenInfo (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetLineFontId (
        /*[in]*/ long Index,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall CreateAuxiliaryViewAt (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in]*/ VARIANT_BOOL NotAligned,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateDetailViewAt (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateSectionViewAt (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in]*/ VARIANT_BOOL NotAligned,
        /*[in]*/ VARIANT_BOOL IsOffsetSection,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateUnfoldedViewAt2 (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in]*/ VARIANT_BOOL NotAligned,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetupSheet3 (
        /*[in]*/ BSTR Name,
        /*[in]*/ long PaperSize,
        /*[in]*/ long TemplateIn,
        /*[in]*/ double Scale1,
        /*[in]*/ double Scale2,
        /*[in]*/ VARIANT_BOOL FirstAngle,
        /*[in]*/ BSTR TemplateName,
        /*[in]*/ double Width,
        /*[in]*/ double Height,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertModelAnnotations (
        /*[in]*/ long Option,
        /*[in]*/ VARIANT_BOOL AllTypes,
        /*[in]*/ long Types,
        /*[in]*/ VARIANT_BOOL AllViews,
        /*[out,retval]*/ VARIANT_BOOL * Ok ) = 0;
      virtual HRESULT __stdcall InsertCustomSymbol (
        /*[in]*/ BSTR SymbolPath ) = 0;
      virtual HRESULT __stdcall GetSheetCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetSheetNames (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetSheetNames (
        /*[in,out]*/ long * Count,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall ActivateSheet (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateText2 (
        /*[in]*/ BSTR TextString,
        /*[in]*/ double TextX,
        /*[in]*/ double TextY,
        /*[in]*/ double TextZ,
        /*[in]*/ double TextHeight,
        /*[in]*/ double TextAngle,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateText2 (
        /*[in]*/ BSTR TextString,
        /*[in]*/ double TextX,
        /*[in]*/ double TextY,
        /*[in]*/ double TextZ,
        /*[in]*/ double TextHeight,
        /*[in]*/ double TextAngle,
        /*[out,retval]*/ struct INote * * Retval ) = 0;
      virtual HRESULT __stdcall NewSheet3 (
        /*[in]*/ BSTR Name,
        /*[in]*/ long PaperSize,
        /*[in]*/ long TemplateIn,
        /*[in]*/ double Scale1,
        /*[in]*/ double Scale2,
        /*[in]*/ VARIANT_BOOL FirstAngle,
        /*[in]*/ BSTR TemplateName,
        /*[in]*/ double Width,
        /*[in]*/ double Height,
        /*[in]*/ BSTR PropertyViewName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetupSheet4 (
        /*[in]*/ BSTR Name,
        /*[in]*/ long PaperSize,
        /*[in]*/ long TemplateIn,
        /*[in]*/ double Scale1,
        /*[in]*/ double Scale2,
        /*[in]*/ VARIANT_BOOL FirstAngle,
        /*[in]*/ BSTR TemplateName,
        /*[in]*/ double Width,
        /*[in]*/ double Height,
        /*[in]*/ BSTR PropertyViewName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateLinearDim3 (
        /*[in]*/ VARIANT P0,
        /*[in]*/ VARIANT P1,
        /*[in]*/ VARIANT P2,
        /*[in]*/ VARIANT P3,
        /*[in]*/ VARIANT P4,
        /*[in]*/ double Val,
        /*[in]*/ long PrimPrec,
        /*[in]*/ BSTR Text,
        /*[in]*/ VARIANT TextPoint,
        /*[in]*/ double Angle,
        /*[in]*/ double TextHeight,
        /*[in]*/ BSTR Prefix,
        /*[in]*/ BSTR Suffix,
        /*[in]*/ BSTR Callout1,
        /*[in]*/ BSTR Callout2,
        /*[in]*/ long TolType,
        /*[in]*/ BSTR TolMin,
        /*[in]*/ BSTR TolMax,
        /*[in]*/ long TolPrec,
        /*[in]*/ double ArrowSize,
        /*[in]*/ long ArrowStyle,
        /*[in]*/ long ArrowDir,
        /*[in]*/ double WitnessGap,
        /*[in]*/ double WitnessOvershoot,
        /*[in]*/ VARIANT_BOOL DualDisplay,
        /*[in]*/ long DualPrec,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateLinearDim3 (
        /*[in]*/ double * P0,
        /*[in]*/ double * P1,
        /*[in]*/ double * P2,
        /*[in]*/ double * P3,
        /*[in]*/ double * P4,
        /*[in]*/ double Val,
        /*[in]*/ long PrimPrec,
        /*[in]*/ BSTR Text,
        /*[in]*/ double * TextPoint,
        /*[in]*/ double Angle,
        /*[in]*/ double TextHeight,
        /*[in]*/ BSTR Prefix,
        /*[in]*/ BSTR Suffix,
        /*[in]*/ BSTR Callout1,
        /*[in]*/ BSTR Callout2,
        /*[in]*/ long TolType,
        /*[in]*/ BSTR TolMin,
        /*[in]*/ BSTR TolMax,
        /*[in]*/ long TolPrec,
        /*[in]*/ double ArrowSize,
        /*[in]*/ long ArrowStyle,
        /*[in]*/ long ArrowDir,
        /*[in]*/ double WitnessGap,
        /*[in]*/ double WitnessOvershoot,
        /*[in]*/ VARIANT_BOOL DualDisplay,
        /*[in]*/ long DualPrecision,
        /*[out,retval]*/ struct IDisplayDimension * * Retval ) = 0;
      virtual HRESULT __stdcall CreateAngDim3 (
        /*[in]*/ VARIANT VP0,
        /*[in]*/ VARIANT VP1,
        /*[in]*/ VARIANT VP2,
        /*[in]*/ VARIANT VP3,
        /*[in]*/ VARIANT VP4,
        /*[in]*/ VARIANT VP5,
        /*[in]*/ VARIANT VP6,
        /*[in]*/ double ArrowSize,
        /*[in]*/ BSTR Text,
        /*[in]*/ double TextHeight,
        /*[in]*/ double WitnessGap,
        /*[in]*/ double WitnessOvershoot,
        /*[in]*/ VARIANT VTextPoint,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateAngDim3 (
        /*[in]*/ double * P0,
        /*[in]*/ double * P1,
        /*[in]*/ double * P2,
        /*[in]*/ double * P3,
        /*[in]*/ double * P4,
        /*[in]*/ double * P5,
        /*[in]*/ double * P6,
        /*[in]*/ double ArrowSize,
        /*[in]*/ BSTR Text,
        /*[in]*/ double TextHeight,
        /*[in]*/ double WitnessGap,
        /*[in]*/ double WitnessOvershoot,
        /*[in]*/ double * TextPoint,
        /*[out,retval]*/ struct IDisplayDimension * * Retval ) = 0;
      virtual HRESULT __stdcall CreateDiamDim3 (
        /*[in]*/ double DimVal,
        /*[in]*/ VARIANT VP0,
        /*[in]*/ VARIANT VP1,
        /*[in]*/ VARIANT VP2,
        /*[in]*/ VARIANT VP3,
        /*[in]*/ double ArrowSize,
        /*[in]*/ BSTR Text,
        /*[in]*/ double TextHeight,
        /*[in]*/ double WitnessGap,
        /*[in]*/ double WitnessOvershoot,
        /*[in]*/ VARIANT VTextPoint,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateDiamDim3 (
        /*[in]*/ double DimValue,
        /*[in]*/ double * P0,
        /*[in]*/ double * P1,
        /*[in]*/ double * P2,
        /*[in]*/ double * P3,
        /*[in]*/ double ArrowSize,
        /*[in]*/ BSTR Text,
        /*[in]*/ double TextHeight,
        /*[in]*/ double WitnessGap,
        /*[in]*/ double WitnessOvershoot,
        /*[in]*/ double * TextPoint,
        /*[out,retval]*/ struct IDisplayDimension * * Retval ) = 0;
      virtual HRESULT __stdcall CreateOrdinateDim3 (
        /*[in]*/ VARIANT P0,
        /*[in]*/ VARIANT P1,
        /*[in]*/ VARIANT P2,
        /*[in]*/ VARIANT P3,
        /*[in]*/ VARIANT P4,
        /*[in]*/ double Angle,
        /*[in]*/ double ArrowSize,
        /*[in]*/ BSTR Text,
        /*[in]*/ double TextHeight,
        /*[in]*/ double WitnessGap,
        /*[in]*/ double WitnessOvershoot,
        /*[in]*/ VARIANT P5,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateOrdinateDim3 (
        /*[in]*/ double * P0,
        /*[in]*/ double * P1,
        /*[in]*/ double * P2,
        /*[in]*/ double * P3,
        /*[in]*/ double * P4,
        /*[in]*/ double Angle,
        /*[in]*/ double ArrowSize,
        /*[in]*/ BSTR Text,
        /*[in]*/ double TextHeight,
        /*[in]*/ double WitnessGap,
        /*[in]*/ double WitnessOvershoot,
        /*[in]*/ double * P5,
        /*[out,retval]*/ struct IDisplayDimension * * Retval ) = 0;
      virtual HRESULT __stdcall ForceRebuild ( ) = 0;
      virtual HRESULT __stdcall AddOrdinateDimension (
        /*[in]*/ long DimType,
        /*[in]*/ double LocX,
        /*[in]*/ double LocY,
        /*[in]*/ double LocZ,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateLayer (
        /*[in]*/ BSTR Layername,
        /*[in]*/ BSTR LayerDesc,
        /*[in]*/ long LayerColor,
        /*[in]*/ long LayerStyle,
        /*[in]*/ long LayerWidth,
        /*[in]*/ VARIANT_BOOL BOn,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetCurrentLayer (
        /*[in]*/ BSTR Layername,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DrawingViewRotate (
        /*[in]*/ double NewAngle,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateDetailViewAt2 (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall RestoreRotation ( ) = 0;
      virtual HRESULT __stdcall GetEditSheet (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall TranslateDrawing (
        /*[in]*/ double DeltaX,
        /*[in]*/ double DeltaY ) = 0;
      virtual HRESULT __stdcall Create1stAngleViews2 (
        /*[in]*/ BSTR ModelName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Create3rdAngleViews2 (
        /*[in]*/ BSTR ModelName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall HideShowDimensions ( ) = 0;
      virtual HRESULT __stdcall CreateLinearDim4 (
        /*[in]*/ VARIANT P0,
        /*[in]*/ VARIANT P1,
        /*[in]*/ VARIANT P2,
        /*[in]*/ VARIANT P3,
        /*[in]*/ VARIANT P4,
        /*[in]*/ VARIANT TextPoint,
        /*[in]*/ double Val,
        /*[in]*/ double Angle,
        /*[in]*/ double TextHeight,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateLinearDim4 (
        /*[in]*/ double * P0,
        /*[in]*/ double * P1,
        /*[in]*/ double * P2,
        /*[in]*/ double * P3,
        /*[in]*/ double * P4,
        /*[in]*/ double * TextPoint,
        /*[in]*/ double Val,
        /*[in]*/ double Angle,
        /*[in]*/ double TextHeight,
        /*[out,retval]*/ struct IDisplayDimension * * Retval ) = 0;
      virtual HRESULT __stdcall CreateDiamDim4 (
        /*[in]*/ VARIANT P0,
        /*[in]*/ VARIANT P1,
        /*[in]*/ VARIANT P2,
        /*[in]*/ VARIANT P3,
        /*[in]*/ VARIANT TextPoint,
        /*[in]*/ double Val,
        /*[in]*/ double TextHeight,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateDiamDim4 (
        /*[in]*/ double * P0,
        /*[in]*/ double * P1,
        /*[in]*/ double * P2,
        /*[in]*/ double * P3,
        /*[in]*/ double * TextPoint,
        /*[in]*/ double Val,
        /*[in]*/ double TextHeight,
        /*[out,retval]*/ struct IDisplayDimension * * Retval ) = 0;
      virtual HRESULT __stdcall CreateOrdinateDim4 (
        /*[in]*/ VARIANT P0,
        /*[in]*/ VARIANT P1,
        /*[in]*/ VARIANT P2,
        /*[in]*/ VARIANT P3,
        /*[in]*/ VARIANT P4,
        /*[in]*/ VARIANT P5,
        /*[in]*/ double Val,
        /*[in]*/ double Angle,
        /*[in]*/ double TextHeight,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateOrdinateDim4 (
        /*[in]*/ double * P0,
        /*[in]*/ double * P1,
        /*[in]*/ double * P2,
        /*[in]*/ double * P3,
        /*[in]*/ double * P4,
        /*[in]*/ double * P5,
        /*[in]*/ double Val,
        /*[in]*/ double Angle,
        /*[in]*/ double TextHeight,
        /*[out,retval]*/ struct IDisplayDimension * * Retval ) = 0;
      virtual HRESULT __stdcall CreateAngDim4 (
        /*[in]*/ VARIANT P0,
        /*[in]*/ VARIANT P1,
        /*[in]*/ VARIANT P2,
        /*[in]*/ VARIANT P3,
        /*[in]*/ VARIANT P4,
        /*[in]*/ VARIANT P5,
        /*[in]*/ VARIANT P6,
        /*[in]*/ VARIANT TextPoint,
        /*[in]*/ double TextHeight,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateAngDim4 (
        /*[in]*/ double * P0,
        /*[in]*/ double * P1,
        /*[in]*/ double * P2,
        /*[in]*/ double * P3,
        /*[in]*/ double * P4,
        /*[in]*/ double * P5,
        /*[in]*/ double * P6,
        /*[in]*/ double * TextPoint,
        /*[in]*/ double TextHeight,
        /*[out,retval]*/ struct IDisplayDimension * * Retval ) = 0;
      virtual HRESULT __stdcall CreateDetailViewAt3 (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in]*/ long Style,
        /*[in]*/ double Scale1,
        /*[in]*/ double Scale2,
        /*[in]*/ BSTR LabelIn,
        /*[in]*/ long Showtype,
        /*[in]*/ VARIANT_BOOL FullOutline,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateDetailViewAt3 (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in]*/ long Style,
        /*[in]*/ double Scale1,
        /*[in]*/ double Scale2,
        /*[in]*/ BSTR LabelIn,
        /*[in]*/ long Showtype,
        /*[in]*/ VARIANT_BOOL FullOutline,
        /*[out,retval]*/ struct IView * * Retval ) = 0;
      virtual HRESULT __stdcall CreateSectionViewAt2 (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in]*/ VARIANT_BOOL NotAligned,
        /*[in]*/ VARIANT_BOOL IsOffsetSection,
        /*[in]*/ BSTR Label,
        /*[in]*/ VARIANT_BOOL Chgdirection,
        /*[in]*/ VARIANT_BOOL Scwithmodel,
        /*[in]*/ VARIANT_BOOL Partial,
        /*[in]*/ VARIANT_BOOL Dispsurfcut,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateSectionViewAt2 (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in]*/ VARIANT_BOOL NotAligned,
        /*[in]*/ VARIANT_BOOL IsOffsetSection,
        /*[in]*/ BSTR Label,
        /*[in]*/ VARIANT_BOOL Chgdirection,
        /*[in]*/ VARIANT_BOOL Scwithmodel,
        /*[in]*/ VARIANT_BOOL Partial,
        /*[in]*/ VARIANT_BOOL Dispsurfcut,
        /*[out,retval]*/ struct IView * * Retval ) = 0;
      virtual HRESULT __stdcall CreateAuxiliaryViewAt2 (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in]*/ VARIANT_BOOL NotAligned,
        /*[in]*/ BSTR Label,
        /*[in]*/ VARIANT_BOOL Showarrow,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateAuxiliaryViewAt2 (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in]*/ VARIANT_BOOL NotAligned,
        /*[in]*/ BSTR Label,
        /*[in]*/ VARIANT_BOOL Showarrow,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[out,retval]*/ struct IView * * Retval ) = 0;
      virtual HRESULT __stdcall MakeCustomSymbol ( ) = 0;
      virtual HRESULT __stdcall ExplodeCustomSymbol ( ) = 0;
      virtual HRESULT __stdcall SaveCustomSymbol (
        /*[in]*/ BSTR FileNameIn ) = 0;
      virtual HRESULT __stdcall CreateBreakOutSection (
        /*[in]*/ double Depth,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertThreadCallout ( ) = 0;
      virtual HRESULT __stdcall CreateFlatPatternViewFromModelView (
        /*[in]*/ BSTR ModelName,
        /*[in]*/ BSTR ConfigName,
        /*[in]*/ double LocX,
        /*[in]*/ double LocY,
        /*[in]*/ double LocZ,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ChangeRefConfigurationOfFlatPatternView (
        /*[in]*/ BSTR ModelName,
        /*[in]*/ BSTR ConfigName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddHoleCallout2 (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IAddHoleCallout2 (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ struct IDisplayDimension * * Retval ) = 0;
      virtual HRESULT __stdcall EditCenterMarkProperties (
        /*[in]*/ double Angle,
        /*[in]*/ double Size,
        /*[in]*/ VARIANT_BOOL Lines,
        /*[in]*/ VARIANT_BOOL DocSettings ) = 0;
      virtual HRESULT __stdcall InsertDowelSymbol (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IInsertDowelSymbol (
        /*[out,retval]*/ struct IDowelSymbol * * Retval ) = 0;
      virtual HRESULT __stdcall InsertMultiJogLeader ( ) = 0;
      virtual HRESULT __stdcall get_HiddenViewsVisible (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall put_HiddenViewsVisible (
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
      virtual HRESULT __stdcall AddChamferDim (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IAddChamferDim (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ struct IDisplayDimension * * Retval ) = 0;
      virtual HRESULT __stdcall MakeCustomSymbol2 (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IMakeCustomSymbol2 (
        /*[out,retval]*/ struct ICustomSymbol * * Retval ) = 0;
      virtual HRESULT __stdcall InsertCustomSymbol2 (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IInsertCustomSymbol2 (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ struct ICustomSymbol * * Retval ) = 0;
      virtual HRESULT __stdcall CreateCustomSymbol (
        /*[in]*/ VARIANT Segments,
        /*[in]*/ VARIANT Points,
        /*[in]*/ VARIANT Notes,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateCustomSymbol (
        /*[in]*/ long SegmentCount,
        /*[in]*/ struct ISketchSegment * * Segments,
        /*[in]*/ long PointCount,
        /*[in]*/ struct ISketchPoint * * Points,
        /*[in]*/ long NoteCount,
        /*[in]*/ struct INote * * Notes,
        /*[out,retval]*/ struct ICustomSymbol * * Retval ) = 0;
      virtual HRESULT __stdcall ViewDisplayShaded ( ) = 0;
      virtual HRESULT __stdcall ChangeComponentLayer (
        /*[in]*/ BSTR Layername,
        /*[in]*/ VARIANT_BOOL AllViews ) = 0;
      virtual HRESULT __stdcall get_AutomaticViewUpdate (
        /*[out,retval]*/ VARIANT_BOOL * Update ) = 0;
      virtual HRESULT __stdcall put_AutomaticViewUpdate (
        /*[in]*/ VARIANT_BOOL Update ) = 0;
      virtual HRESULT __stdcall get_ActiveDrawingView (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall get_IActiveDrawingView (
        /*[out,retval]*/ struct IView * * Retval ) = 0;
      virtual HRESULT __stdcall InsertCenterMark (
        /*[in]*/ VARIANT_BOOL UseDoc,
        /*[in]*/ double Size,
        /*[in]*/ VARIANT_BOOL ShowLines,
        /*[in]*/ double Angle,
        /*[out,retval]*/ struct ICenterMark * * Retval ) = 0;
      virtual HRESULT __stdcall CreateFlatPatternViewFromModelView2 (
        /*[in]*/ BSTR ModelName,
        /*[in]*/ BSTR ConfigName,
        /*[in]*/ double LocX,
        /*[in]*/ double LocY,
        /*[in]*/ double LocZ,
        /*[in]*/ VARIANT_BOOL HideBendLines,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ViewHlrQuality ( ) = 0;
      virtual HRESULT __stdcall ViewModelEdges ( ) = 0;
      virtual HRESULT __stdcall GetBlockDefinitionCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetBlockDefinitions (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetBlockDefinitions (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IBlockDefinition * * Retval ) = 0;
      virtual HRESULT __stdcall GetBlockDefinition (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct IBlockDefinition * * Retval ) = 0;
      virtual HRESULT __stdcall MakeBlockDefinition (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR XRefFileName,
        /*[in]*/ VARIANT_BOOL Instance,
        /*[out,retval]*/ struct IBlockDefinition * * Retval ) = 0;
      virtual HRESULT __stdcall CreateBlockDefinition (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR XRefFileName,
        /*[in]*/ VARIANT_BOOL Instance,
        /*[in]*/ VARIANT Segments,
        /*[in]*/ VARIANT Points,
        /*[in]*/ VARIANT Notes,
        /*[in]*/ VARIANT Dimensions,
        /*[in]*/ VARIANT Blocks,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateBlockDefinition (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR XRefFileName,
        /*[in]*/ VARIANT_BOOL Instance,
        /*[in]*/ long SegmentCount,
        /*[in]*/ struct ISketchSegment * * Segments,
        /*[in]*/ long PointCount,
        /*[in]*/ struct ISketchPoint * * Points,
        /*[in]*/ long NoteCount,
        /*[in]*/ struct INote * * Notes,
        /*[in]*/ long DimensionCount,
        /*[in]*/ struct IDisplayDimension * * Dimensions,
        /*[in]*/ long BlockCount,
        /*[in]*/ struct IBlockInstance * * Blocks,
        /*[out,retval]*/ struct IBlockDefinition * * Retval ) = 0;
      virtual HRESULT __stdcall InsertBlock (
        /*[in]*/ BSTR FileName,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Angle,
        /*[in]*/ double Scale,
        /*[out,retval]*/ struct IBlockInstance * * Retval ) = 0;
      virtual HRESULT __stdcall SaveBlock (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ExplodeBlockInstance (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertCenterMark2 (
        /*[in]*/ long Style,
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[out,retval]*/ struct ICenterMark * * Retval ) = 0;
      virtual HRESULT __stdcall InsertCenterLine (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddOrdinateDimension2 (
        /*[in]*/ long DimType,
        /*[in]*/ double LocX,
        /*[in]*/ double LocY,
        /*[in]*/ double LocZ,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall InsertTableAnnotation (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ long AnchorType,
        /*[in]*/ long Rows,
        /*[in]*/ long Columns,
        /*[out,retval]*/ struct ITableAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall InsertModelInPredefinedView (
        /*[in]*/ BSTR ModelName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertRevisionSymbol (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[out,retval]*/ struct INote * * Retval ) = 0;
      virtual HRESULT __stdcall AutoBalloon (
        /*[in]*/ long Layout,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall CreateSectionViewAt3 (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in]*/ VARIANT_BOOL NotAligned,
        /*[in]*/ VARIANT_BOOL IsOffsetSection,
        /*[in]*/ BSTR Label,
        /*[in]*/ VARIANT_BOOL Chgdirection,
        /*[in]*/ VARIANT_BOOL Scwithmodel,
        /*[in]*/ VARIANT_BOOL Partial,
        /*[in]*/ VARIANT_BOOL Dispsurfcut,
        /*[in]*/ VARIANT ExcludedComponents,
        /*[out,retval]*/ struct IView * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateSectionViewAt3 (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in]*/ VARIANT_BOOL NotAligned,
        /*[in]*/ VARIANT_BOOL IsOffsetSection,
        /*[in]*/ BSTR Label,
        /*[in]*/ VARIANT_BOOL Chgdirection,
        /*[in]*/ VARIANT_BOOL Scwithmodel,
        /*[in]*/ VARIANT_BOOL Partial,
        /*[in]*/ VARIANT_BOOL Dispsurfcut,
        /*[in]*/ long NumExcludedComponents,
        /*[in]*/ IDispatch * * PExcludedComponents,
        /*[out,retval]*/ struct IView * * Retval ) = 0;
      virtual HRESULT __stdcall InsertModelAnnotations2 (
        /*[in]*/ long Option,
        /*[in]*/ VARIANT_BOOL AllTypes,
        /*[in]*/ long Types,
        /*[in]*/ VARIANT_BOOL AllViews,
        /*[in]*/ VARIANT_BOOL DuplicateDims,
        /*[in]*/ VARIANT_BOOL HiddenFeatureDims,
        /*[out,retval]*/ VARIANT_BOOL * Ok ) = 0;
      virtual HRESULT __stdcall GetEditBlock (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertCenterLine2 (
        /*[out,retval]*/ struct ICenterLine * * LpCenterlineDisp ) = 0;
      virtual HRESULT __stdcall InsertMultiJogLeader2 (
        /*[in]*/ VARIANT Points,
        /*[out,retval]*/ IDispatch * * LpLeaderDisp ) = 0;
      virtual HRESULT __stdcall IInsertMultiJogLeader2 (
        /*[in]*/ long PointsCount,
        /*[in]*/ struct IMathPoint * * Points,
        /*[out,retval]*/ struct IMultiJogLeader * * LpLeader ) = 0;
      virtual HRESULT __stdcall AutoDimension (
        /*[in]*/ long EntitiesToDimension,
        /*[in]*/ long HorizontalScheme,
        /*[in]*/ long HorizontalPlacement,
        /*[in]*/ long VerticalScheme,
        /*[in]*/ long VerticalPlacement,
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall InsertModelAnnotations3 (
        /*[in]*/ long Option,
        /*[in]*/ long Types,
        /*[in]*/ VARIANT_BOOL AllViews,
        /*[in]*/ VARIANT_BOOL DuplicateDims,
        /*[in]*/ VARIANT_BOOL HiddenFeatureDims,
        /*[in]*/ VARIANT_BOOL UsePlacementInSketch,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall CreateUnfoldedViewAt3 (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in]*/ VARIANT_BOOL NotAligned,
        /*[out,retval]*/ struct IView * * Retval ) = 0;
      virtual HRESULT __stdcall CreateDrawViewFromModelView2 (
        /*[in]*/ BSTR ModelName,
        /*[in]*/ BSTR ViewName,
        /*[in]*/ double LocX,
        /*[in]*/ double LocY,
        /*[in]*/ double LocZ,
        /*[out,retval]*/ struct IView * * Retval ) = 0;
      virtual HRESULT __stdcall CreateSectionViewAt4 (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in]*/ BSTR SectionLabel,
        /*[in]*/ long Options,
        /*[in]*/ VARIANT ExcludedComponents,
        /*[out,retval]*/ struct IView * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateSectionViewAt4 (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in]*/ BSTR SectionLabel,
        /*[in]*/ long Options,
        /*[in]*/ long NumExcludedComponents,
        /*[in]*/ IDispatch * * ExcludedComponents,
        /*[out,retval]*/ struct IView * * Retval ) = 0;
      virtual HRESULT __stdcall AutoBalloon2 (
        /*[in]*/ long Layout,
        /*[in]*/ VARIANT_BOOL IgnoreMultiple,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall CreateViewport3 (
        /*[in]*/ double LowerLeftX,
        /*[in]*/ double LowerLeftY,
        /*[in]*/ short SketchSize,
        /*[in]*/ double Scale,
        /*[out,retval]*/ struct IView * * LpView ) = 0;
      virtual HRESULT __stdcall CreateDrawViewFromModelView3 (
        /*[in]*/ BSTR ModelName,
        /*[in]*/ BSTR ViewName,
        /*[in]*/ double LocX,
        /*[in]*/ double LocY,
        /*[in]*/ double LocZ,
        /*[out,retval]*/ struct IView * * Retval ) = 0;
      virtual HRESULT __stdcall InsertMultiJogLeader3 (
        /*[in]*/ VARIANT Points,
        /*[in]*/ long StartPointArrowStyle,
        /*[in]*/ long EndPointArrowStyle,
        /*[out,retval]*/ IDispatch * * LpLeaderDisp ) = 0;
      virtual HRESULT __stdcall IInsertMultiJogLeader3 (
        /*[in]*/ long PointsCount,
        /*[in]*/ struct IMathPoint * * Points,
        /*[in]*/ long StartPointArrowStyle,
        /*[in]*/ long EndPointArrowStyle,
        /*[out,retval]*/ struct IMultiJogLeader * * LpLeader ) = 0;
      virtual HRESULT __stdcall InsertTableAnnotation2 (
        /*[in]*/ VARIANT_BOOL UseAnchorPoint,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ long AnchorType,
        /*[in]*/ BSTR TableTemplate,
        /*[in]*/ long Rows,
        /*[in]*/ long Columns,
        /*[out,retval]*/ struct ITableAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall ResolveOutOfDateLightWeightComponents (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateRelativeView (
        /*[in]*/ BSTR ModelName,
        /*[in]*/ double XPos,
        /*[in]*/ double YPos,
        /*[in]*/ long ViewDirFront,
        /*[in]*/ long ViewDirRight,
        /*[out,retval]*/ struct IView * * LpView ) = 0;
      virtual HRESULT __stdcall AutoBalloon3 (
        /*[in]*/ long Layout,
        /*[in]*/ VARIANT_BOOL IgnoreMultiple,
        /*[in]*/ long Style,
        /*[in]*/ long Size,
        /*[in]*/ long UpperTextContent,
        /*[in]*/ BSTR UpperText,
        /*[in]*/ long LowerTextContent,
        /*[in]*/ BSTR LowerText,
        /*[in]*/ BSTR Layername,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall DropDrawingViewFromPalette (
        /*[in]*/ long Layout,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ struct IView * * Retval ) = 0;
      virtual HRESULT __stdcall ReorderSheets (
        /*[in]*/ VARIANT NewSheetList,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IReorderSheets (
        /*[in]*/ long SheetCount,
        /*[in]*/ BSTR * NewSheetList,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DropDrawingViewFromPalette2 (
        /*[in]*/ BSTR PaletteViewName,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ struct IView * * Retval ) = 0;
      virtual HRESULT __stdcall GetDrawingPaletteViewNames (
        /*[out,retval]*/ VARIANT * PaletteViewNames ) = 0;
      virtual HRESULT __stdcall GenerateViewPaletteViews (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateFlatPatternViewFromModelView3 (
        /*[in]*/ BSTR ModelName,
        /*[in]*/ BSTR ConfigName,
        /*[in]*/ double LocX,
        /*[in]*/ double LocY,
        /*[in]*/ double LocZ,
        /*[in]*/ VARIANT_BOOL HideBendLines,
        /*[in]*/ VARIANT_BOOL FlipView,
        /*[out,retval]*/ struct IView * * FlatPatternView ) = 0;
      virtual HRESULT __stdcall SetupSheet5 (
        /*[in]*/ BSTR Name,
        /*[in]*/ long PaperSize,
        /*[in]*/ long TemplateIn,
        /*[in]*/ double Scale1,
        /*[in]*/ double Scale2,
        /*[in]*/ VARIANT_BOOL FirstAngle,
        /*[in]*/ BSTR TemplateName,
        /*[in]*/ double Width,
        /*[in]*/ double Height,
        /*[in]*/ BSTR PropertyViewName,
        /*[in]*/ VARIANT_BOOL RemoveModifiedNotes,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetLineWidthCustom (
        /*[in]*/ double Width ) = 0;
      virtual HRESULT __stdcall GetViews (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetViewCount (
        /*[out,retval]*/ long * NumberOfViews ) = 0;
      virtual HRESULT __stdcall InsertCenterMark3 (
        /*[in]*/ long Style,
        /*[in]*/ VARIANT_BOOL Propagate,
        /*[in]*/ VARIANT_BOOL Slot,
        /*[out,retval]*/ struct ICenterMark * * Retval ) = 0;
};

struct __declspec(uuid("175ca9e4-b05a-48ba-8047-da3d9bb6b583"))
IRevisionTableAnnotation : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_RevisionTableFeature (
        /*[out,retval]*/ struct IRevisionTableFeature * * Retval ) = 0;
      virtual HRESULT __stdcall GetSheet (
        /*[out,retval]*/ struct ISheet * * Retval ) = 0;
      virtual HRESULT __stdcall AddRevision (
        /*[in]*/ BSTR Revision,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall DeleteRevision (
        /*[in]*/ long RevisionId,
        /*[in]*/ VARIANT_BOOL DeleteSymbols,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_CurrentRevision (
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetRevisionForId (
        /*[in]*/ long RevisionId,
        /*[out,retval]*/ BSTR * Retval ) = 0;
      virtual HRESULT __stdcall GetRowNumberForId (
        /*[in]*/ long RevisionId,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetIdForRowNumber (
        /*[in]*/ long RowIndex,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetRevisionSymbolCount (
        /*[in]*/ long RevisionId,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetRevisionSymbols (
        /*[in]*/ long RevisionId,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetRevisionSymbols (
        /*[in]*/ long RevisionId,
        /*[in]*/ long Count,
        /*[out,retval]*/ struct INote * * Retval ) = 0;
      virtual HRESULT __stdcall GetColumnCustomProperty (
        /*[in]*/ long Index,
        /*[out,retval]*/ BSTR * CustomProp ) = 0;
      virtual HRESULT __stdcall SetColumnCustomProperty (
        /*[in]*/ long Index,
        /*[in]*/ BSTR CustomProp,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetAllCustomPropertiesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetAllCustomProperties (
        /*[out,retval]*/ VARIANT * CustomProps ) = 0;
      virtual HRESULT __stdcall IGetAllCustomProperties (
        /*[in]*/ long Count,
        /*[out,retval]*/ BSTR * CustomProps ) = 0;
};

struct __declspec(uuid("660caf6b-65a0-4664-ad9f-81ab7a4664b7"))
IRevisionTableFeature : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetFeature (
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall GetTableAnnotationCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTableAnnotations (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTableAnnotations (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IRevisionTableAnnotation * * Retval ) = 0;
};

struct __declspec(uuid("5253c565-2195-4e99-a353-cb62f5e5963b"))
IWeldmentCutListAnnotation : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_WeldmentCutListFeature (
        /*[out,retval]*/ struct IWeldmentCutListFeature * * Retval ) = 0;
      virtual HRESULT __stdcall GetColumnCustomProperty (
        /*[in]*/ long Index,
        /*[out,retval]*/ BSTR * CustomProp ) = 0;
      virtual HRESULT __stdcall SetColumnCustomProperty (
        /*[in]*/ long Index,
        /*[in]*/ BSTR CustomProp,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetAllCustomPropertiesCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetAllCustomProperties (
        /*[out,retval]*/ VARIANT * CustomProps ) = 0;
      virtual HRESULT __stdcall IGetAllCustomProperties (
        /*[in]*/ long Count,
        /*[out,retval]*/ BSTR * CustomProps ) = 0;
};

struct __declspec(uuid("3cd5de06-83f6-4a7c-a288-d8a41f9f0351"))
IWeldmentCutListFeature : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetFeature (
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall GetTableAnnotationCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetTableAnnotations (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetTableAnnotations (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IWeldmentCutListAnnotation * * Retval ) = 0;
      virtual HRESULT __stdcall get_KeepMissingItems (
        /*[out,retval]*/ VARIANT_BOOL * Keep ) = 0;
      virtual HRESULT __stdcall put_KeepMissingItems (
        /*[in]*/ VARIANT_BOOL Keep ) = 0;
      virtual HRESULT __stdcall get_StrikeoutMissingItems (
        /*[out,retval]*/ VARIANT_BOOL * Strike ) = 0;
      virtual HRESULT __stdcall put_StrikeoutMissingItems (
        /*[in]*/ VARIANT_BOOL Strike ) = 0;
      virtual HRESULT __stdcall get_SequenceStartNumber (
        /*[out,retval]*/ long * Number ) = 0;
      virtual HRESULT __stdcall put_SequenceStartNumber (
        /*[in]*/ long Number ) = 0;
      virtual HRESULT __stdcall get_KeepCurrentItemNumbers (
        /*[out,retval]*/ VARIANT_BOOL * Keep ) = 0;
      virtual HRESULT __stdcall put_KeepCurrentItemNumbers (
        /*[in]*/ VARIANT_BOOL Keep ) = 0;
      virtual HRESULT __stdcall get_Configuration (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Configuration (
        /*[in]*/ BSTR Name ) = 0;
};

struct __declspec(uuid("93f9a5a6-a4f6-435e-bcc6-b4592c06858f"))
ISketchBlockInstance : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Definition (
        /*[out,retval]*/ struct ISketchBlockDefinition * * LpSketchBlockDef ) = 0;
      virtual HRESULT __stdcall put_Definition (
        /*[in]*/ struct ISketchBlockDefinition * LpSketchBlockDef ) = 0;
      virtual HRESULT __stdcall get_InstancePosition (
        /*[out,retval]*/ struct IMathPoint * * LpInstancePosition ) = 0;
      virtual HRESULT __stdcall put_InstancePosition (
        /*[in]*/ struct IMathPoint * LpInstancePosition ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * BstrName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR BstrName ) = 0;
      virtual HRESULT __stdcall get_Angle (
        /*[out,retval]*/ double * DAngle ) = 0;
      virtual HRESULT __stdcall put_Angle (
        /*[in]*/ double DAngle ) = 0;
      virtual HRESULT __stdcall get_Scale (
        /*[out,retval]*/ double * DScale ) = 0;
      virtual HRESULT __stdcall put_Scale (
        /*[in]*/ double DScale ) = 0;
      virtual HRESULT __stdcall Select (
        /*[in]*/ VARIANT_BOOL Append,
        /*[in]*/ struct ISelectData * Data,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetSketch (
        /*[out,retval]*/ struct ISketch * * LpSketch ) = 0;
      virtual HRESULT __stdcall get_BlockToSketchTransform (
        /*[out,retval]*/ struct IMathTransform * * Transform ) = 0;
      virtual HRESULT __stdcall get_TextDisplay (
        /*[out,retval]*/ long * DisplayState ) = 0;
      virtual HRESULT __stdcall put_TextDisplay (
        /*[in]*/ long DisplayState ) = 0;
      virtual HRESULT __stdcall get_DimensionDisplay (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall put_DimensionDisplay (
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
      virtual HRESULT __stdcall get_Layer (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Layer (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall GetLeaderStyle (
        /*[out,retval]*/ long * Style ) = 0;
      virtual HRESULT __stdcall GetArrowHeadStyle (
        /*[out,retval]*/ long * Style ) = 0;
      virtual HRESULT __stdcall SetLeader (
        /*[in]*/ long LeaderStyle,
        /*[in]*/ long ArrowHeadStyle,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetAttributeCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetAttributes (
        /*[out,retval]*/ VARIANT * Attributes ) = 0;
      virtual HRESULT __stdcall IGetAttributes (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct INote * * Attributes ) = 0;
      virtual HRESULT __stdcall GetAttributeValue (
        /*[in]*/ BSTR TagName,
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall SetAttributeValue (
        /*[in]*/ BSTR TagName,
        /*[in]*/ BSTR Value,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetLeaderPoints (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetLeaderPoints (
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall get_LockAngle (
        /*[out,retval]*/ VARIANT_BOOL * LockAngle ) = 0;
      virtual HRESULT __stdcall put_LockAngle (
        /*[in]*/ VARIANT_BOOL LockAngle ) = 0;
      virtual HRESULT __stdcall get_Scale2 (
        /*[out,retval]*/ double * Scale ) = 0;
      virtual HRESULT __stdcall put_Scale2 (
        /*[in]*/ double Scale ) = 0;
      virtual HRESULT __stdcall GetAttachedEntities (
        /*[in,out]*/ VARIANT * Entities,
        /*[in,out]*/ VARIANT * EntityTypes,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("82dc842f-001e-4b72-a762-540dcfb70705"))
ISketchBlockDefinition : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetFeature (
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall GetSketch (
        /*[out,retval]*/ struct ISketch * * Sketch ) = 0;
      virtual HRESULT __stdcall get_InsertionPoint (
        /*[out,retval]*/ struct IMathPoint * * Point ) = 0;
      virtual HRESULT __stdcall put_InsertionPoint (
        /*[in]*/ struct IMathPoint * Point ) = 0;
      virtual HRESULT __stdcall get_LinkToFile (
        /*[out,retval]*/ VARIANT_BOOL * Linked ) = 0;
      virtual HRESULT __stdcall put_LinkToFile (
        /*[in]*/ VARIANT_BOOL Linked ) = 0;
      virtual HRESULT __stdcall get_FileName (
        /*[out,retval]*/ BSTR * FileName ) = 0;
      virtual HRESULT __stdcall put_FileName (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall GetInstanceCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetInstances (
        /*[out,retval]*/ VARIANT * Instances ) = 0;
      virtual HRESULT __stdcall IGetInstances (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct ISketchBlockInstance * * Instances ) = 0;
      virtual HRESULT __stdcall GetLineCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetLines (
        /*[out,retval]*/ VARIANT * Lines ) = 0;
      virtual HRESULT __stdcall IGetLines (
        /*[in]*/ long ArraySize,
        /*[out,retval]*/ double * Lines ) = 0;
      virtual HRESULT __stdcall GetArcCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetArcs (
        /*[out,retval]*/ VARIANT * Arcs ) = 0;
      virtual HRESULT __stdcall IGetArcs (
        /*[in]*/ long ArraySize,
        /*[out,retval]*/ double * Arcs ) = 0;
      virtual HRESULT __stdcall GetEllipseCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetEllipses (
        /*[out,retval]*/ VARIANT * Ellipses ) = 0;
      virtual HRESULT __stdcall IGetEllipses (
        /*[in]*/ long ArraySize,
        /*[out,retval]*/ double * Ellipses ) = 0;
      virtual HRESULT __stdcall GetParabolaCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetParabolas (
        /*[out,retval]*/ VARIANT * Parabolas ) = 0;
      virtual HRESULT __stdcall IGetParabolas (
        /*[in]*/ long ArraySize,
        /*[out,retval]*/ double * Parabolas ) = 0;
      virtual HRESULT __stdcall GetSplineCount (
        /*[in,out]*/ long * PointCount,
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetSplines (
        /*[out,retval]*/ VARIANT * Splines ) = 0;
      virtual HRESULT __stdcall IGetSplines (
        /*[in]*/ long ArraySize,
        /*[out,retval]*/ double * Splines ) = 0;
      virtual HRESULT __stdcall GetUserPointsCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetUserPoints (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetUserPoints (
        /*[in]*/ long ArraySize,
        /*[out,retval]*/ double * Points ) = 0;
      virtual HRESULT __stdcall GetNoteCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetNotes (
        /*[out,retval]*/ VARIANT * Notes ) = 0;
      virtual HRESULT __stdcall IGetNotes (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct INote * * Notes ) = 0;
      virtual HRESULT __stdcall GetDisplayDimensionCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetDisplayDimensions (
        /*[out,retval]*/ VARIANT * Dimensions ) = 0;
      virtual HRESULT __stdcall IGetDisplayDimensions (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IDisplayDimension * * Dimensions ) = 0;
      virtual HRESULT __stdcall Save (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetSplines2 (
        /*[out,retval]*/ VARIANT * Splines ) = 0;
      virtual HRESULT __stdcall IGetSplines2 (
        /*[in]*/ long ArraySize,
        /*[out,retval]*/ double * Splines ) = 0;
      virtual HRESULT __stdcall GetSplineParamsCount (
        /*[in,out]*/ long * ArraySize,
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetSplineParams (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetSplineParams (
        /*[in]*/ long ArraySize,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetSplineInterpolateCount (
        /*[in,out]*/ long * ArraySize,
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall GetSplinesInterpolate (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetSplinesInterpolate (
        /*[in]*/ long ArraySize,
        /*[out,retval]*/ double * Retval ) = 0;
};

struct __declspec(uuid("9ce9dace-e595-4d8f-b893-5ae4899517de"))
ISketchManager : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct IModelDoc2 * * ModelDoc ) = 0;
      virtual HRESULT __stdcall SketchOffset (
        /*[in]*/ double Offset,
        /*[in]*/ VARIANT_BOOL BothDirections,
        /*[in]*/ VARIANT_BOOL Chain,
        /*[in]*/ VARIANT_BOOL CapEnds,
        /*[in]*/ VARIANT_BOOL MakeConstruction,
        /*[in]*/ VARIANT_BOOL AddDimensions,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall PerimeterCircle (
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ double X2,
        /*[in]*/ double Y2,
        /*[in]*/ double X3,
        /*[in]*/ double Y3,
        /*[out,retval]*/ IDispatch * * Result ) = 0;
      virtual HRESULT __stdcall GetDynamicMirror (
        /*[out,retval]*/ VARIANT_BOOL * DynamicMirror ) = 0;
      virtual HRESULT __stdcall SetDynamicMirror (
        /*[in]*/ VARIANT_BOOL DynamicMirror,
        /*[out,retval]*/ VARIANT_BOOL * Success ) = 0;
      virtual HRESULT __stdcall SketchUseEdge (
        /*[in]*/ VARIANT_BOOL Chain,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetSketchBlockDefinitionCount (
        /*[out,retval]*/ long * BlockDefCount ) = 0;
      virtual HRESULT __stdcall GetSketchBlockDefinitions (
        /*[out,retval]*/ VARIANT * VBlockDefs ) = 0;
      virtual HRESULT __stdcall IGetSketchBlockDefinitions (
        /*[in]*/ long BlockDefCount,
        /*[out,retval]*/ struct ISketchBlockDefinition * * LpBlockDefs ) = 0;
      virtual HRESULT __stdcall MakeSketchBlockFromSelected (
        /*[in]*/ struct IMathPoint * InsertionPoint,
        /*[out,retval]*/ struct ISketchBlockDefinition * * BlockDef ) = 0;
      virtual HRESULT __stdcall MakeSketchBlockFromSketch (
        /*[in]*/ struct IMathPoint * InsertionPoint,
        /*[in]*/ struct ISketch * Sketch,
        /*[out,retval]*/ struct ISketchBlockDefinition * * BlockDef ) = 0;
      virtual HRESULT __stdcall MakeSketchBlockFromFile (
        /*[in]*/ struct IMathPoint * InsertionPoint,
        /*[in]*/ BSTR FileName,
        /*[in]*/ VARIANT_BOOL LinkedToFile,
        /*[in]*/ double Scale,
        /*[in]*/ double Angle,
        /*[out,retval]*/ struct ISketchBlockDefinition * * BlockDef ) = 0;
      virtual HRESULT __stdcall InsertSketchBlockInstance (
        /*[in]*/ struct ISketchBlockDefinition * BlockDef,
        /*[in]*/ struct IMathPoint * Position,
        /*[in]*/ double Scale,
        /*[in]*/ double Angle,
        /*[out,retval]*/ struct ISketchBlockInstance * * BlockInst ) = 0;
      virtual HRESULT __stdcall EditSketchBlock ( ) = 0;
      virtual HRESULT __stdcall EndEditSketchBlock (
        /*[in]*/ VARIANT_BOOL AcceptChanges ) = 0;
      virtual HRESULT __stdcall ExplodeSketchBlockInstance (
        /*[in]*/ struct ISketchBlockInstance * LpSketchBlockInstance ) = 0;
      virtual HRESULT __stdcall SketchTrim (
        /*[in]*/ long Option,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SketchExtend (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall MakeSketchChain (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall FullyDefineSketch (
        /*[in]*/ VARIANT_BOOL EntitiesToFullyDefine,
        /*[in]*/ VARIANT_BOOL UseRelations,
        /*[in]*/ long RelationsToApply,
        /*[in]*/ VARIANT_BOOL UseDimensions,
        /*[in]*/ long HorizontalDimScheme,
        /*[in]*/ IDispatch * HorizontalDatumDisp,
        /*[in]*/ long VerticalDimScheme,
        /*[in]*/ IDispatch * VerticalDatumDisp,
        /*[in]*/ long HorizontalDimPlacement,
        /*[in]*/ long VerticalDimPlacement,
        /*[out,retval]*/ long * ErrorCode ) = 0;
      virtual HRESULT __stdcall get_CurvatureScale (
        /*[out,retval]*/ double * Scale ) = 0;
      virtual HRESULT __stdcall put_CurvatureScale (
        /*[in]*/ double Scale ) = 0;
      virtual HRESULT __stdcall get_CurvatureDensity (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_CurvatureDensity (
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall CreateSketchPlane (
        /*[in]*/ long Relation1,
        /*[in]*/ long Relation2,
        /*[in]*/ long Relation3,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateSketchBelt (
        /*[in]*/ double Length,
        /*[in]*/ double Thickness,
        /*[in]*/ long Engage,
        /*[in]*/ long PulleyCount,
        /*[in]*/ long Side1,
        /*[in]*/ long Side2,
        /*[in]*/ long Side3,
        /*[in]*/ long Side4,
        /*[in]*/ long Side5,
        /*[in]*/ long Side6,
        /*[in]*/ long Side7,
        /*[in]*/ long Side8,
        /*[in]*/ long Side9,
        /*[in]*/ long Side10,
        /*[in]*/ long Side11,
        /*[in]*/ long Side12,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertSketch (
        /*[in]*/ VARIANT_BOOL UpdateEditRebuild ) = 0;
      virtual HRESULT __stdcall CreatePoint (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ struct ISketchPoint * * Retval ) = 0;
      virtual HRESULT __stdcall CreateLine (
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ double Z1,
        /*[in]*/ double X2,
        /*[in]*/ double Y2,
        /*[in]*/ double Z2,
        /*[out,retval]*/ struct ISketchSegment * * Retval ) = 0;
      virtual HRESULT __stdcall CreateCenterLine (
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ double Z1,
        /*[in]*/ double X2,
        /*[in]*/ double Y2,
        /*[in]*/ double Z2,
        /*[out,retval]*/ struct ISketchSegment * * Retval ) = 0;
      virtual HRESULT __stdcall CreateCircle (
        /*[in]*/ double XC,
        /*[in]*/ double YC,
        /*[in]*/ double Zc,
        /*[in]*/ double Xp,
        /*[in]*/ double Yp,
        /*[in]*/ double Zp,
        /*[out,retval]*/ struct ISketchSegment * * Retval ) = 0;
      virtual HRESULT __stdcall CreateCircleByRadius (
        /*[in]*/ double XC,
        /*[in]*/ double YC,
        /*[in]*/ double Zc,
        /*[in]*/ double Radius,
        /*[out,retval]*/ struct ISketchSegment * * Retval ) = 0;
      virtual HRESULT __stdcall CreateArc (
        /*[in]*/ double XC,
        /*[in]*/ double YC,
        /*[in]*/ double Zc,
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ double Z1,
        /*[in]*/ double X2,
        /*[in]*/ double Y2,
        /*[in]*/ double Z2,
        /*[in]*/ short Direction,
        /*[out,retval]*/ struct ISketchSegment * * Retval ) = 0;
      virtual HRESULT __stdcall Create3PointArc (
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ double Z1,
        /*[in]*/ double X2,
        /*[in]*/ double Y2,
        /*[in]*/ double Z2,
        /*[in]*/ double X3,
        /*[in]*/ double Y3,
        /*[in]*/ double Z3,
        /*[out,retval]*/ struct ISketchSegment * * Retval ) = 0;
      virtual HRESULT __stdcall CreateTangentArc (
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ double Z1,
        /*[in]*/ double X2,
        /*[in]*/ double Y2,
        /*[in]*/ double Z2,
        /*[in]*/ long ArcType,
        /*[out,retval]*/ struct ISketchSegment * * Retval ) = 0;
      virtual HRESULT __stdcall CreateEllipse (
        /*[in]*/ double XC,
        /*[in]*/ double YC,
        /*[in]*/ double Zc,
        /*[in]*/ double XMajor,
        /*[in]*/ double YMajor,
        /*[in]*/ double ZMajor,
        /*[in]*/ double XMinor,
        /*[in]*/ double YMinor,
        /*[in]*/ double ZMinor,
        /*[out,retval]*/ struct ISketchSegment * * Retval ) = 0;
      virtual HRESULT __stdcall CreateEllipticalArc (
        /*[in]*/ double XC,
        /*[in]*/ double YC,
        /*[in]*/ double Zc,
        /*[in]*/ double XMajor,
        /*[in]*/ double YMajor,
        /*[in]*/ double ZMajor,
        /*[in]*/ double XMinor,
        /*[in]*/ double YMinor,
        /*[in]*/ double ZMinor,
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ double Z1,
        /*[in]*/ double X2,
        /*[in]*/ double Y2,
        /*[in]*/ double Z2,
        /*[in]*/ short Direction,
        /*[out,retval]*/ struct ISketchSegment * * Retval ) = 0;
      virtual HRESULT __stdcall CreateParabola (
        /*[in]*/ double XFocus,
        /*[in]*/ double YFocus,
        /*[in]*/ double ZFocus,
        /*[in]*/ double XApex,
        /*[in]*/ double YApex,
        /*[in]*/ double ZApex,
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ double Z1,
        /*[in]*/ double X2,
        /*[in]*/ double Y2,
        /*[in]*/ double Z2,
        /*[out,retval]*/ struct ISketchSegment * * Retval ) = 0;
      virtual HRESULT __stdcall CreateSpline (
        /*[in]*/ VARIANT PointData,
        /*[out,retval]*/ struct ISketchSegment * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateSpline (
        /*[in]*/ long PointCount,
        /*[in]*/ double * PointData,
        /*[out,retval]*/ struct ISketchSegment * * Retval ) = 0;
      virtual HRESULT __stdcall CreateSplineByEqnParams (
        /*[in]*/ VARIANT Parameters,
        /*[out,retval]*/ struct ISketchSegment * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateSplineByEqnParams (
        /*[in]*/ long * Properties,
        /*[in]*/ long KnotArrayCount,
        /*[in]*/ double * Knots,
        /*[in]*/ long ControlPointArrayCount,
        /*[in]*/ double * ControlPoints,
        /*[out,retval]*/ struct ISketchSegment * * Retval ) = 0;
      virtual HRESULT __stdcall CreateSplinesByEqnParams (
        /*[in]*/ VARIANT Parameters,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall ICreateSplinesByEqnParams (
        /*[in]*/ long * Properties,
        /*[in]*/ long KnotArrayCount,
        /*[in]*/ double * Knots,
        /*[in]*/ long ControlPointArrayCount,
        /*[in]*/ double * ControlPoints,
        /*[out,retval]*/ struct IEnumSketchSegments * * Retval ) = 0;
      virtual HRESULT __stdcall InsertSketchPicture (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ struct ISketchPicture * * Retval ) = 0;
      virtual HRESULT __stdcall CreateCornerRectangle (
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ double Z1,
        /*[in]*/ double X2,
        /*[in]*/ double Y2,
        /*[in]*/ double Z2,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall CreateCenterRectangle (
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ double Z1,
        /*[in]*/ double X2,
        /*[in]*/ double Y2,
        /*[in]*/ double Z2,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall Create3PointCornerRectangle (
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ double Z1,
        /*[in]*/ double X2,
        /*[in]*/ double Y2,
        /*[in]*/ double Z2,
        /*[in]*/ double X3,
        /*[in]*/ double Y3,
        /*[in]*/ double Z3,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall Create3PointCenterRectangle (
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ double Z1,
        /*[in]*/ double X2,
        /*[in]*/ double Y2,
        /*[in]*/ double Z2,
        /*[in]*/ double X3,
        /*[in]*/ double Y3,
        /*[in]*/ double Z3,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall CreateParallelogram (
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ double Z1,
        /*[in]*/ double X2,
        /*[in]*/ double Y2,
        /*[in]*/ double Z2,
        /*[in]*/ double X3,
        /*[in]*/ double Y3,
        /*[in]*/ double Z3,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall CreateChamfer (
        /*[in]*/ long Type,
        /*[in]*/ double Distance,
        /*[in]*/ double AngleORdist,
        /*[out,retval]*/ struct ISketchSegment * * Retval ) = 0;
      virtual HRESULT __stdcall CreateFillet (
        /*[in]*/ double Radius,
        /*[in]*/ long ConstrainedCorners,
        /*[out,retval]*/ struct ISketchSegment * * Retval ) = 0;
      virtual HRESULT __stdcall CreatePolygon (
        /*[in]*/ double XC,
        /*[in]*/ double YC,
        /*[in]*/ double Zc,
        /*[in]*/ double Xp,
        /*[in]*/ double Yp,
        /*[in]*/ double Zp,
        /*[in]*/ long Sides,
        /*[in]*/ VARIANT_BOOL Inscribed,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall get_AutoSolve (
        /*[out,retval]*/ VARIANT_BOOL * AutoSolve ) = 0;
      virtual HRESULT __stdcall put_AutoSolve (
        /*[in]*/ VARIANT_BOOL AutoSolve ) = 0;
      virtual HRESULT __stdcall get_AutoInference (
        /*[out,retval]*/ VARIANT_BOOL * AutoInfer ) = 0;
      virtual HRESULT __stdcall put_AutoInference (
        /*[in]*/ VARIANT_BOOL AutoInfer ) = 0;
      virtual HRESULT __stdcall Insert3DSketch (
        /*[in]*/ VARIANT_BOOL UpdateEditRebuild ) = 0;
      virtual HRESULT __stdcall get_ActiveSketch (
        /*[out,retval]*/ struct ISketch * * Retval ) = 0;
      virtual HRESULT __stdcall SplitOpenSegment (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall SplitClosedSegment (
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ double Z1,
        /*[in]*/ double X2,
        /*[in]*/ double Y2,
        /*[in]*/ double Z2,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall get_AddToDB (
        /*[out,retval]*/ VARIANT_BOOL * ToDatabase ) = 0;
      virtual HRESULT __stdcall put_AddToDB (
        /*[in]*/ VARIANT_BOOL ToDatabase ) = 0;
      virtual HRESULT __stdcall get_DisplayWhenAdded (
        /*[out,retval]*/ VARIANT_BOOL * Display ) = 0;
      virtual HRESULT __stdcall put_DisplayWhenAdded (
        /*[in]*/ VARIANT_BOOL Display ) = 0;
      virtual HRESULT __stdcall get_InferenceMode (
        /*[out,retval]*/ VARIANT_BOOL * Mode ) = 0;
      virtual HRESULT __stdcall put_InferenceMode (
        /*[in]*/ VARIANT_BOOL Mode ) = 0;
      virtual HRESULT __stdcall SetGridOptions (
        /*[in]*/ VARIANT_BOOL Display,
        /*[in]*/ double Spacing,
        /*[in]*/ VARIANT_BOOL Snap,
        /*[in]*/ VARIANT_BOOL DotStyle,
        /*[in]*/ short NumMajor,
        /*[in]*/ short NumMinor,
        /*[in]*/ VARIANT_BOOL AlignToEdge,
        /*[in]*/ VARIANT_BOOL AngleSnap,
        /*[in]*/ double AngleUnit,
        /*[in]*/ VARIANT_BOOL MinorAuto ) = 0;
      virtual HRESULT __stdcall CreateBoundaryHatch (
        /*[in]*/ double Angle,
        /*[in]*/ double Scale,
        /*[in]*/ long Color,
        /*[in]*/ BSTR Hatchname,
        /*[in]*/ BSTR Layername,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall CreateRegionHatch (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in]*/ double Angle,
        /*[in]*/ double Scale,
        /*[in]*/ long Color,
        /*[in]*/ BSTR Hatchname,
        /*[in]*/ BSTR Layername,
        /*[out,retval]*/ struct ISketchHatch * * Retval ) = 0;
      virtual HRESULT __stdcall CreateSketchSlot (
        /*[in]*/ long SlotCreationType,
        /*[in]*/ long SlotLengthType,
        /*[in]*/ double Width,
        /*[in]*/ double X1,
        /*[in]*/ double Y1,
        /*[in]*/ double Z1,
        /*[in]*/ double X2,
        /*[in]*/ double Y2,
        /*[in]*/ double Z2,
        /*[in]*/ double X3,
        /*[in]*/ double Y3,
        /*[in]*/ double Z3,
        /*[in]*/ long CenterArcDirection,
        /*[in]*/ VARIANT_BOOL AddDimension,
        /*[out,retval]*/ struct ISketchSlot * * Retval ) = 0;
      virtual HRESULT __stdcall CreateConstructionGeometry ( ) = 0;
      virtual HRESULT __stdcall CreateEquationSpline (
        /*[in]*/ BSTR YExpression,
        /*[in]*/ double RangeStart,
        /*[in]*/ double RangeEnd,
        /*[in]*/ VARIANT_BOOL IsAngleRange,
        /*[in]*/ double RotationAngle,
        /*[in]*/ double XOffset,
        /*[in]*/ double YOffset,
        /*[in]*/ VARIANT_BOOL LockStart,
        /*[in]*/ VARIANT_BOOL LockEnd,
        /*[out,retval]*/ struct ISketchSpline * * Retval ) = 0;
      virtual HRESULT __stdcall ConvertEntities ( ) = 0;
      virtual HRESULT __stdcall IntersectCurves ( ) = 0;
      virtual HRESULT __stdcall CreateSpline2 (
        /*[in]*/ VARIANT PointData,
        /*[in]*/ VARIANT_BOOL SimulateNaturalEnds,
        /*[out,retval]*/ struct ISketchSegment * * Retval ) = 0;
      virtual HRESULT __stdcall ICreateSpline2 (
        /*[in]*/ long PointCount,
        /*[in]*/ double * PointData,
        /*[in]*/ VARIANT_BOOL SimulateNaturalEnds,
        /*[out,retval]*/ struct ISketchSegment * * Retval ) = 0;
};

struct __declspec(uuid("83a33d35-27c5-11ce-bfd4-00400513bb57"))
IAssemblyDoc : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AddComponent (
        /*[in]*/ BSTR CompName,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Dummy2 ( ) = 0;
      virtual HRESULT __stdcall FeatureExtrusion ( ) = 0;
      virtual HRESULT __stdcall EditRebuild ( ) = 0;
      virtual HRESULT __stdcall Dummy3 ( ) = 0;
      virtual HRESULT __stdcall Dummy4 ( ) = 0;
      virtual HRESULT __stdcall ToolsCheckInterference ( ) = 0;
      virtual HRESULT __stdcall Dummy5 ( ) = 0;
      virtual HRESULT __stdcall Dummy6 ( ) = 0;
      virtual HRESULT __stdcall GetFirstMember (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall GetSelectedMember (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetFirstMember (
        /*[out,retval]*/ struct IMember * * Retval ) = 0;
      virtual HRESULT __stdcall IGetSelectedMember (
        /*[out,retval]*/ struct IMember * * Retval ) = 0;
      virtual HRESULT __stdcall Dummy7 ( ) = 0;
      virtual HRESULT __stdcall ViewCollapseAssembly ( ) = 0;
      virtual HRESULT __stdcall ViewExplodeAssembly ( ) = 0;
      virtual HRESULT __stdcall TranslateComponent ( ) = 0;
      virtual HRESULT __stdcall InsertNewPart ( ) = 0;
      virtual HRESULT __stdcall Dummy1 ( ) = 0;
      virtual HRESULT __stdcall RotateComponent ( ) = 0;
      virtual HRESULT __stdcall FileDeriveComponentPart ( ) = 0;
      virtual HRESULT __stdcall InsertCavity ( ) = 0;
      virtual HRESULT __stdcall HideComponent ( ) = 0;
      virtual HRESULT __stdcall ShowComponent ( ) = 0;
      virtual HRESULT __stdcall FixComponent ( ) = 0;
      virtual HRESULT __stdcall UnfixComponent ( ) = 0;
      virtual HRESULT __stdcall EditAssembly ( ) = 0;
      virtual HRESULT __stdcall EditPart ( ) = 0;
      virtual HRESULT __stdcall OpenCompFile ( ) = 0;
      virtual HRESULT __stdcall UpdateFeatureScope ( ) = 0;
      virtual HRESULT __stdcall AddMate (
        /*[in]*/ long MateType,
        /*[in]*/ long Align,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ double Dist,
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall CompConfigProperties (
        /*[in]*/ VARIANT_BOOL M_suppressed,
        /*[in]*/ VARIANT_BOOL M_show_component,
        /*[in]*/ VARIANT_BOOL M_fdetail ) = 0;
      virtual HRESULT __stdcall AddToFeatureScope (
        /*[in]*/ BSTR CompName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall RemoveFromFeatureScope (
        /*[in]*/ BSTR CompName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall EditExplodeParameters ( ) = 0;
      virtual HRESULT __stdcall RotateComponentAxis ( ) = 0;
      virtual HRESULT __stdcall ViewFeatureManagerByFeatures ( ) = 0;
      virtual HRESULT __stdcall ComponentReload ( ) = 0;
      virtual HRESULT __stdcall ViewFeatureManagerByDependencies ( ) = 0;
      virtual HRESULT __stdcall AssemblyPartToggle ( ) = 0;
      virtual HRESULT __stdcall FeatureByName (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IFeatureByName (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct IFeature * * Retval ) = 0;
      virtual HRESULT __stdcall InsertJoin ( ) = 0;
      virtual HRESULT __stdcall UpdateBox ( ) = 0;
      virtual HRESULT __stdcall InsertWeld (
        /*[in]*/ BSTR Type,
        /*[in]*/ BSTR Shape,
        /*[in]*/ double TopDelta,
        /*[in]*/ double BottomDelta,
        /*[in]*/ double Radius,
        /*[in]*/ BSTR Part ) = 0;
      virtual HRESULT __stdcall ForceRebuild ( ) = 0;
      virtual HRESULT __stdcall GetEditTarget (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetEditTarget (
        /*[out,retval]*/ struct IModelDoc * * Retval ) = 0;
      virtual HRESULT __stdcall InsertCavity2 (
        /*[in]*/ double ScaleFactor,
        /*[in]*/ long ScaleType ) = 0;
      virtual HRESULT __stdcall AutoExplode (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ShowExploded (
        /*[in]*/ VARIANT_BOOL ShowIt,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddComponent2 (
        /*[in]*/ BSTR CompName,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IAddComponent2 (
        /*[in]*/ BSTR CompName,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ struct IComponent * * Retval ) = 0;
      virtual HRESULT __stdcall EditMate (
        /*[in]*/ long MateType,
        /*[in]*/ long Align,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ double Dist,
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall InsertDerivedPattern (
        /*[out,retval]*/ VARIANT_BOOL * Ok ) = 0;
      virtual HRESULT __stdcall ResolveAllLightWeightComponents (
        /*[in]*/ VARIANT_BOOL WarnUser,
        /*[out,retval]*/ long * Result ) = 0;
      virtual HRESULT __stdcall GetLightWeightComponentCount (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall InsertCavity3 (
        /*[in]*/ double ScaleFactor,
        /*[in]*/ long ScaleType,
        /*[in]*/ long KeepPieceIndex ) = 0;
      virtual HRESULT __stdcall ComponentReload2 (
        /*[in]*/ IDispatch * Component,
        /*[in]*/ VARIANT_BOOL ReadOnly,
        /*[in]*/ long Options,
        /*[out,retval]*/ long * Result ) = 0;
      virtual HRESULT __stdcall IComponentReload2 (
        /*[in]*/ struct IComponent * Component,
        /*[in]*/ VARIANT_BOOL ReadOnly,
        /*[in]*/ long Options,
        /*[out,retval]*/ long * Result ) = 0;
      virtual HRESULT __stdcall CompConfigProperties2 (
        /*[in]*/ long Suppression,
        /*[in]*/ VARIANT_BOOL Visibility,
        /*[in]*/ VARIANT_BOOL FeatureDetails,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddPipePenetration (
        /*[out,retval]*/ long * Status ) = 0;
      virtual HRESULT __stdcall AddPipingFitting (
        /*[in]*/ BSTR PathName,
        /*[in]*/ BSTR ConfigName,
        /*[in]*/ short AlignmentIndex,
        /*[out,retval]*/ VARIANT_BOOL * Success ) = 0;
      virtual HRESULT __stdcall IsComponentTreeValid (
        /*[out,retval]*/ VARIANT_BOOL * IsValid ) = 0;
      virtual HRESULT __stdcall ForceRebuild2 (
        /*[in]*/ VARIANT_BOOL TopOnly ) = 0;
      virtual HRESULT __stdcall SetDroppedFileConfigName (
        /*[in]*/ BSTR ConfigName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddComponents (
        /*[in]*/ VARIANT Names,
        /*[in]*/ VARIANT Transforms,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IAddComponents (
        /*[in]*/ long * Count,
        /*[in]*/ BSTR * Names,
        /*[in]*/ double * Transforms,
        /*[out,retval]*/ struct IComponent * * Retval ) = 0;
      virtual HRESULT __stdcall EditPart2 (
        /*[in]*/ VARIANT_BOOL Silent,
        /*[in]*/ VARIANT_BOOL AllowReadOnly,
        /*[in]*/ long * Information,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall InsertCavity4 (
        /*[in]*/ double ScaleFactor_x,
        /*[in]*/ double ScaleFactor_y,
        /*[in]*/ double ScaleFactor_z,
        /*[in]*/ VARIANT_BOOL IsUniform,
        /*[in]*/ long ScaleType,
        /*[in]*/ long KeepPieceIndex ) = 0;
      virtual HRESULT __stdcall ToolsCheckInterference2 (
        /*[in]*/ long NumComponents,
        /*[in]*/ VARIANT LpComponents,
        /*[in]*/ VARIANT_BOOL CoincidentInterference,
        /*[out]*/ VARIANT * PComp,
        /*[out]*/ VARIANT * PFace ) = 0;
      virtual HRESULT __stdcall IToolsCheckInterference2 (
        /*[in]*/ long NumComponents,
        /*[in]*/ struct IComponent * * LpComponents,
        /*[in]*/ VARIANT_BOOL CoincidentInterference,
        /*[out]*/ VARIANT * PComp,
        /*[out]*/ VARIANT * PFace ) = 0;
      virtual HRESULT __stdcall GetDroppedAtEntity (
        /*[out,retval]*/ IDispatch * * Entity ) = 0;
      virtual HRESULT __stdcall CompConfigProperties3 (
        /*[in]*/ long Suppression,
        /*[in]*/ long Solving,
        /*[in]*/ VARIANT_BOOL Visibility,
        /*[in]*/ VARIANT_BOOL FeatureDetails,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IGetEditTarget2 (
        /*[out,retval]*/ struct IModelDoc2 * * Retval ) = 0;
      virtual HRESULT __stdcall IAddComponent3 (
        /*[in]*/ BSTR CompName,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ struct IComponent2 * * Retval ) = 0;
      virtual HRESULT __stdcall IComponentReload3 (
        /*[in]*/ struct IComponent2 * Component,
        /*[in]*/ VARIANT_BOOL ReadOnly,
        /*[in]*/ long Options,
        /*[out,retval]*/ long * Result ) = 0;
      virtual HRESULT __stdcall IAddComponents2 (
        /*[in]*/ long * Count,
        /*[in]*/ BSTR * Names,
        /*[in]*/ double * Transforms,
        /*[out,retval]*/ struct IComponent2 * * Retval ) = 0;
      virtual HRESULT __stdcall IToolsCheckInterference3 (
        /*[in]*/ long NumComponents,
        /*[in]*/ struct IComponent2 * * LpComponents,
        /*[in]*/ VARIANT_BOOL CoincidentInterference,
        /*[out]*/ VARIANT * PComp,
        /*[out]*/ VARIANT * PFace ) = 0;
      virtual HRESULT __stdcall SetDroppedFileName (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetDragOperator (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IGetDragOperator (
        /*[out,retval]*/ struct IDragOperator * * Retval ) = 0;
      virtual HRESULT __stdcall ViewFeatureManagerFeatureDetail (
        /*[in]*/ VARIANT_BOOL Detail ) = 0;
      virtual HRESULT __stdcall InsertJoin2 (
        /*[in]*/ VARIANT_BOOL HideParts,
        /*[in]*/ VARIANT_BOOL ForceContact,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall DissolveSubAssembly (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_EnablePresentation (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall put_EnablePresentation (
        /*[in]*/ VARIANT_BOOL Retval ) = 0;
      virtual HRESULT __stdcall SetComponentState (
        /*[in]*/ long SuppressionState,
        /*[in]*/ VARIANT CompArr,
        /*[in]*/ long ConfigOption,
        /*[in]*/ BSTR WhichConfig,
        /*[in]*/ VARIANT_BOOL SaveClosedDocs,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ISetComponentState (
        /*[in]*/ long SuppressionState,
        /*[in]*/ long NumComps,
        /*[in]*/ struct IComponent2 * * CompArr,
        /*[in]*/ long ConfigOption,
        /*[in]*/ BSTR WhichConfig,
        /*[in]*/ VARIANT_BOOL SaveClosedDocs,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ReplaceComponents (
        /*[in]*/ BSTR FileName,
        /*[in]*/ BSTR ConfigName,
        /*[in]*/ VARIANT_BOOL ReplaceAllInstance,
        /*[in]*/ VARIANT_BOOL ReAttachMates,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetVisibleComponentsInView (
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall GetVisibleComponentsInViewCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall IGetVisibleComponentsInView (
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IComponent2 * * Component ) = 0;
      virtual HRESULT __stdcall MakeLightWeight ( ) = 0;
      virtual HRESULT __stdcall GetBox (
        /*[in]*/ long Options,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetBox (
        /*[in]*/ long Options,
        /*[out,retval]*/ double * Retval ) = 0;
      virtual HRESULT __stdcall GetFeatureScopeCount (
        /*[in]*/ struct IFeature * FeatureIn,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetFeatureScope (
        /*[in]*/ struct IFeature * FeatureIn,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetFeatureScope (
        /*[in]*/ struct IFeature * FeatureIn,
        /*[in]*/ long NumComponents,
        /*[out,retval]*/ struct IComponent2 * * Retval ) = 0;
      virtual HRESULT __stdcall AddComponent4 (
        /*[in]*/ BSTR CompName,
        /*[in]*/ BSTR ConfigName,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ struct IComponent2 * * Retval ) = 0;
      virtual HRESULT __stdcall InsertNewPart2 (
        /*[in]*/ BSTR FilePathIn,
        /*[in]*/ IDispatch * Face_or_Plane_to_select,
        /*[out,retval]*/ long * Errors ) = 0;
      virtual HRESULT __stdcall AddMate2 (
        /*[in]*/ long MateTypeFromEnum,
        /*[in]*/ long AlignFromEnum,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ double Distance,
        /*[in]*/ double DistanceAbsUpperLimit,
        /*[in]*/ double DistanceAbsLowerLimit,
        /*[in]*/ double GearRatioNumerator,
        /*[in]*/ double GearRatioDenominator,
        /*[in]*/ double Angle,
        /*[in]*/ double AngleAbsUpperLimit,
        /*[in]*/ double AngleAbsLowerLimit,
        /*[out]*/ long * ErrorStatus,
        /*[out,retval]*/ struct IMate2 * * PMateObjOut ) = 0;
      virtual HRESULT __stdcall EditMate2 (
        /*[in]*/ long MateTypeFromEnum,
        /*[in]*/ long AlignFromEnum,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ double Distance,
        /*[in]*/ double DistanceAbsUpperLimit,
        /*[in]*/ double DistanceAbsLowerLimit,
        /*[in]*/ double GearRatioNumerator,
        /*[in]*/ double GearRatioDenominator,
        /*[in]*/ double Angle,
        /*[in]*/ double AngleAbsUpperLimit,
        /*[in]*/ double AngleAbsLowerLimit,
        /*[out]*/ long * ErrorStatus ) = 0;
      virtual HRESULT __stdcall DissolveComponentPattern (
        /*[out,retval]*/ VARIANT_BOOL * Ok ) = 0;
      virtual HRESULT __stdcall GetPhysicalSimulationComponents (
        /*[in]*/ double InDuration,
        /*[out]*/ long * OutCount,
        /*[out]*/ VARIANT * OutComponents,
        /*[out]*/ VARIANT * OutTransforms,
        /*[out]*/ VARIANT * OutStepStartTimes,
        /*[out]*/ VARIANT * OutStepDurations,
        /*[out]*/ double * OutTotalPhysSimDuration ) = 0;
      virtual HRESULT __stdcall SetComponentVisibility (
        /*[in]*/ VARIANT_BOOL Visibility,
        /*[in]*/ long Config_opt,
        /*[in]*/ VARIANT Config_names ) = 0;
      virtual HRESULT __stdcall ISetComponentVisibility (
        /*[in]*/ VARIANT_BOOL Visibility,
        /*[in]*/ long Config_opt,
        /*[in]*/ long Config_count,
        /*[in]*/ BSTR * Config_names ) = 0;
      virtual HRESULT __stdcall ForceUpdateElectricalData (
        /*[in]*/ long Stream ) = 0;
      virtual HRESULT __stdcall CompConfigProperties4 (
        /*[in]*/ long Suppression,
        /*[in]*/ long Solving,
        /*[in]*/ VARIANT_BOOL Visibility,
        /*[in]*/ VARIANT_BOOL UseNamedRefConfig,
        /*[in]*/ BSTR RefConfigName,
        /*[in]*/ VARIANT_BOOL ExcludeFromBOM,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddComponentConfiguration (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR Comment,
        /*[in]*/ BSTR AlternateName,
        /*[in]*/ long Options,
        /*[out,retval]*/ struct IConfiguration * * Retval ) = 0;
      virtual HRESULT __stdcall get_EnableAssemblyRebuild (
        /*[out,retval]*/ VARIANT_BOOL * VbEnable ) = 0;
      virtual HRESULT __stdcall put_EnableAssemblyRebuild (
        /*[in]*/ VARIANT_BOOL VbEnable ) = 0;
      virtual HRESULT __stdcall AddMate3 (
        /*[in]*/ long MateTypeFromEnum,
        /*[in]*/ long AlignFromEnum,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[in]*/ double Distance,
        /*[in]*/ double DistanceAbsUpperLimit,
        /*[in]*/ double DistanceAbsLowerLimit,
        /*[in]*/ double GearRatioNumerator,
        /*[in]*/ double GearRatioDenominator,
        /*[in]*/ double Angle,
        /*[in]*/ double AngleAbsUpperLimit,
        /*[in]*/ double AngleAbsLowerLimit,
        /*[in]*/ VARIANT_BOOL ForPositioningOnly,
        /*[out]*/ long * ErrorStatus,
        /*[out,retval]*/ struct IMate2 * * PMateObjOut ) = 0;
      virtual HRESULT __stdcall GetRouteManager (
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall GetSimulation (
        /*[out,retval]*/ struct ISimulation * * Retval ) = 0;
      virtual HRESULT __stdcall GetAdvancedSelection (
        /*[out,retval]*/ struct IAdvancedSelectionCriteria * * Retval ) = 0;
      virtual HRESULT __stdcall GetEditTargetComponent (
        /*[out,retval]*/ struct IComponent2 * * Retval ) = 0;
      virtual HRESULT __stdcall ForceUpdateElectricalData2 (
        /*[in]*/ long Stream,
        /*[out,retval]*/ long * ErrorCode ) = 0;
      virtual HRESULT __stdcall GetComponentCount (
        /*[in]*/ VARIANT_BOOL TopLevelOnly,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall GetComponents (
        /*[in]*/ VARIANT_BOOL TopLevelOnly,
        /*[out,retval]*/ VARIANT * Retval ) = 0;
      virtual HRESULT __stdcall IGetComponents (
        /*[in]*/ VARIANT_BOOL TopLevelOnly,
        /*[in]*/ long Count,
        /*[out,retval]*/ struct IComponent2 * * Retval ) = 0;
      virtual HRESULT __stdcall ResolveOutOfDateLightWeightComponents (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall InsertEnvelope (
        /*[in]*/ BSTR CompName,
        /*[in]*/ BSTR ConfigName,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ struct IComponent2 * * Retval ) = 0;
      virtual HRESULT __stdcall InsertLoadReference (
        /*[in]*/ struct IMate2 * Mate,
        /*[out,retval]*/ struct IMateLoadReference * * Retval ) = 0;
      virtual HRESULT __stdcall ResolveAllLightweight (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall LightweightAllResolved (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetComponentSuppression (
        /*[in]*/ long State,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_InterferenceDetectionManager (
        /*[out,retval]*/ struct IInterferenceDetectionMgr * * LpInterMgr ) = 0;
      virtual HRESULT __stdcall SetComponentTransparent (
        /*[in]*/ VARIANT_BOOL State,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall CreateSmartComponent (
        /*[in]*/ struct IComponent2 * ComponentIn,
        /*[in]*/ VARIANT RelatedComponents,
        /*[in]*/ VARIANT RelatedFeatures,
        /*[in]*/ VARIANT_BOOL AutoSizeDiameter,
        /*[in]*/ struct IEntity * LpMateReference,
        /*[in]*/ VARIANT BoundingValues,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IsRouteAssembly (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetForceResetConfigName (
        /*[in]*/ VARIANT_BOOL Set,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall ReorderComponents (
        /*[in]*/ VARIANT Source,
        /*[in]*/ IDispatch * Target,
        /*[in]*/ long Where,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IReorderComponents (
        /*[in]*/ long Count,
        /*[in]*/ struct IComponent2 * * Source,
        /*[in]*/ IDispatch * Target,
        /*[in]*/ long Where,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall MirrorComponents (
        /*[in]*/ IDispatch * Plane,
        /*[in]*/ VARIANT ComponentsToInstance,
        /*[in]*/ VARIANT ComponentsToMirror,
        /*[in]*/ VARIANT MirroredComponentFilenames,
        /*[in]*/ VARIANT_BOOL RecreateMates,
        /*[in]*/ long ComponentModifier,
        /*[in]*/ BSTR ComponentNameModifier,
        /*[in]*/ BSTR MirroredFileLocation,
        /*[in]*/ VARIANT_BOOL CopyCustomProperties,
        /*[out,retval]*/ VARIANT * ResultantComponents ) = 0;
      virtual HRESULT __stdcall IMirrorComponents (
        /*[in]*/ IDispatch * Plane,
        /*[in]*/ long InstanceCount,
        /*[in]*/ struct IComponent2 * * ComponentsToInstance,
        /*[in]*/ long MirrorCount,
        /*[in]*/ struct IComponent2 * * ComponentsToMirror,
        /*[in]*/ long NameCount,
        /*[in]*/ BSTR * MirroredComponentFilenames,
        /*[in]*/ VARIANT_BOOL RecreateMates,
        /*[in]*/ long ComponentModifier,
        /*[in]*/ BSTR ComponentNameModifier,
        /*[in]*/ BSTR MirroredFileLocation,
        /*[in]*/ VARIANT_BOOL CopyCustomProperties,
        /*[out,retval]*/ struct IComponent2 * * ResultantComponents ) = 0;
      virtual HRESULT __stdcall SetDroppedFileFeatureName (
        /*[in]*/ BSTR FeatureName,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall HasUnloadedComponents (
        /*[out,retval]*/ VARIANT_BOOL * Status ) = 0;
      virtual HRESULT __stdcall GetUnloadedComponentNames (
        /*[out]*/ VARIANT * UnloadedComponentPathNames,
        /*[out]*/ VARIANT * UnloadedComponentReferencedConfigurationNames,
        /*[out]*/ VARIANT * ReasonForUnloadingComponents,
        /*[out]*/ VARIANT * DocTypes,
        /*[out,retval]*/ VARIANT * UnloadedComponentNames ) = 0;
      virtual HRESULT __stdcall ReorganizeComponents (
        /*[in]*/ VARIANT Source,
        /*[in]*/ IDispatch * Target,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall IReorganizeComponents (
        /*[in]*/ long Count,
        /*[in]*/ struct IComponent2 * * Source,
        /*[in]*/ IDispatch * Target,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetComponentByName (
        /*[in]*/ BSTR CompName,
        /*[out,retval]*/ struct IComponent2 * * Retval ) = 0;
};

struct __declspec(uuid("b09d234a-7581-408e-b3b3-fc0a514aafa8"))
IMate2 : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetMateEntityCount (
        /*[out,retval]*/ long * EntityCount ) = 0;
      virtual HRESULT __stdcall MateEntity (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct IMateEntity2 * * LpMateEntity ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall get_Alignment (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall get_CanBeFlipped (
        /*[out,retval]*/ VARIANT_BOOL * BCanBeFlipped ) = 0;
      virtual HRESULT __stdcall get_DisplayDimension (
        /*[out,retval]*/ struct IDisplayDimension * * LpDispDim ) = 0;
      virtual HRESULT __stdcall get_MaximumVariation (
        /*[out,retval]*/ double * NMaxVariation ) = 0;
      virtual HRESULT __stdcall get_MinimumVariation (
        /*[out,retval]*/ double * NMinVariation ) = 0;
      virtual HRESULT __stdcall get_Flipped (
        /*[out,retval]*/ VARIANT_BOOL * VbFlipped ) = 0;
      virtual HRESULT __stdcall put_Flipped (
        /*[in]*/ VARIANT_BOOL VbFlipped ) = 0;
      virtual HRESULT __stdcall get_DisplayDimension2 (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct IDisplayDimension * * LpDispDim ) = 0;
      virtual HRESULT __stdcall get_MateLoadReference (
        /*[out,retval]*/ struct IMateLoadReference * * Retval ) = 0;
      virtual HRESULT __stdcall GetForce (
        /*[out]*/ double * Magnitude,
        /*[out,retval]*/ struct IMathVector * * Direction ) = 0;
      virtual HRESULT __stdcall SetForce (
        /*[in]*/ double Magnitude,
        /*[in]*/ struct IMathVector * Direction,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetTorque (
        /*[out]*/ double * Angle,
        /*[out,retval]*/ struct IMathVector * * Axis ) = 0;
      virtual HRESULT __stdcall SetTorque (
        /*[in]*/ double Angle,
        /*[in]*/ struct IMathVector * Axis,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_HasTreatInterferenceAsShrinkFit (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_IsLoadBearingFacesBonded (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_HasLoadBearingFaces (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall GetSupplementalFaces (
        /*[in]*/ long WhichOne,
        /*[out,retval]*/ VARIANT * Faces ) = 0;
      virtual HRESULT __stdcall IGetSupplementalFaces (
        /*[in]*/ long WhichOne,
        /*[in]*/ long FaceCount,
        /*[out,retval]*/ struct IFace2 * * Faces ) = 0;
};

struct __declspec(uuid("35627cfb-32e3-468c-aaa3-9222d2f190bd"))
IMateLoadReference : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Mate (
        /*[out,retval]*/ struct IMate2 * * Retval ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_Component (
        /*[in]*/ long WhichOne,
        /*[out,retval]*/ struct IComponent2 * * Name ) = 0;
      virtual HRESULT __stdcall GetFaces (
        /*[in]*/ long WhichOne,
        /*[out,retval]*/ VARIANT * Faces ) = 0;
      virtual HRESULT __stdcall GetFacesCount (
        /*[in]*/ long WhichOne,
        /*[out,retval]*/ long * Faces ) = 0;
      virtual HRESULT __stdcall IGetFaces (
        /*[in]*/ long WhichOne,
        /*[in]*/ long FaceCount,
        /*[out,retval]*/ struct IFace2 * * Faces ) = 0;
      virtual HRESULT __stdcall Delete (
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
};

struct __declspec(uuid("6d5845f5-68f8-4492-9220-58ea193a7b24"))
IMoveCopyBodyFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AccessSelections (
        /*[in]*/ struct IModelDoc2 * PTopDoc,
        /*[in]*/ struct IComponent2 * PComponent,
        /*[out,retval]*/ VARIANT_BOOL * VbAccessGained ) = 0;
      virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
      virtual HRESULT __stdcall GetBodiesCount (
        /*[out,retval]*/ long * NCount ) = 0;
      virtual HRESULT __stdcall get_Bodies (
        /*[out,retval]*/ VARIANT * VBodies ) = 0;
      virtual HRESULT __stdcall put_Bodies (
        /*[in]*/ VARIANT VBodies ) = 0;
      virtual HRESULT __stdcall IGetBodies (
        /*[in]*/ long NCount,
        /*[out,retval]*/ struct IBody2 * * PBodies ) = 0;
      virtual HRESULT __stdcall ISetBodies (
        /*[in]*/ long NCount,
        /*[in]*/ struct IBody2 * * PBodies ) = 0;
      virtual HRESULT __stdcall get_TransformType (
        /*[out,retval]*/ long * NTransformType ) = 0;
      virtual HRESULT __stdcall put_TransformType (
        /*[in]*/ long NTransformType ) = 0;
      virtual HRESULT __stdcall get_Copy (
        /*[out,retval]*/ VARIANT_BOOL * VbCopy ) = 0;
      virtual HRESULT __stdcall put_Copy (
        /*[in]*/ VARIANT_BOOL VbCopy ) = 0;
      virtual HRESULT __stdcall get_NumberOfCopies (
        /*[out,retval]*/ long * NNumberOfCopies ) = 0;
      virtual HRESULT __stdcall put_NumberOfCopies (
        /*[in]*/ long NNumberOfCopies ) = 0;
      virtual HRESULT __stdcall get_TransformReferenceEntity (
        /*[out,retval]*/ IDispatch * * LpRefEntity ) = 0;
      virtual HRESULT __stdcall put_TransformReferenceEntity (
        /*[in]*/ IDispatch * LpRefEntity ) = 0;
      virtual HRESULT __stdcall get_TranslateToVertex (
        /*[out,retval]*/ IDispatch * * LpDispatch ) = 0;
      virtual HRESULT __stdcall put_TranslateToVertex (
        /*[in]*/ IDispatch * LpDispatch ) = 0;
      virtual HRESULT __stdcall get_TransformValue (
        /*[out,retval]*/ double * DValue ) = 0;
      virtual HRESULT __stdcall put_TransformValue (
        /*[in]*/ double DValue ) = 0;
      virtual HRESULT __stdcall get_RotationOriginX (
        /*[out,retval]*/ double * DValue ) = 0;
      virtual HRESULT __stdcall put_RotationOriginX (
        /*[in]*/ double DValue ) = 0;
      virtual HRESULT __stdcall get_RotationOriginY (
        /*[out,retval]*/ double * DValue ) = 0;
      virtual HRESULT __stdcall put_RotationOriginY (
        /*[in]*/ double DValue ) = 0;
      virtual HRESULT __stdcall get_RotationOriginZ (
        /*[out,retval]*/ double * DValue ) = 0;
      virtual HRESULT __stdcall put_RotationOriginZ (
        /*[in]*/ double DValue ) = 0;
      virtual HRESULT __stdcall get_TransformX (
        /*[out,retval]*/ double * DValue ) = 0;
      virtual HRESULT __stdcall put_TransformX (
        /*[in]*/ double DValue ) = 0;
      virtual HRESULT __stdcall get_TransformY (
        /*[out,retval]*/ double * DValue ) = 0;
      virtual HRESULT __stdcall put_TransformY (
        /*[in]*/ double DValue ) = 0;
      virtual HRESULT __stdcall get_TransformZ (
        /*[out,retval]*/ double * DValue ) = 0;
      virtual HRESULT __stdcall put_TransformZ (
        /*[in]*/ double DValue ) = 0;
      virtual HRESULT __stdcall AddMate (
        /*[in]*/ VARIANT MateEntVar,
        /*[in]*/ long MateTypeFromEnum,
        /*[in]*/ long AlignFromEnum,
        /*[in]*/ double Distance,
        /*[in]*/ double Angle,
        /*[out]*/ long * ErrorStatus,
        /*[out,retval]*/ struct IMate2 * * PMateOut ) = 0;
      virtual HRESULT __stdcall IAddMate (
        /*[in]*/ long Nsize,
        /*[in]*/ IDispatch * * MateEntArr,
        /*[in]*/ long MateTypeFromEnum,
        /*[in]*/ long AlignFromEnum,
        /*[in]*/ double Distance,
        /*[in]*/ double Angle,
        /*[out]*/ long * ErrorStatus,
        /*[out,retval]*/ struct IMate2 * * PMateOut ) = 0;
};

struct __declspec(uuid("b92e624a-0dc3-11d5-af1e-00c04f603faf"))
IPropertyManagerPage2 : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall SetTitleBitmap (
        /*[in]*/ long ModuleHandle,
        /*[in]*/ long Identifier,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall AddGroupBox (
        /*[in]*/ long ID,
        /*[in]*/ BSTR Caption,
        /*[in]*/ long Options,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IAddGroupBox (
        /*[in]*/ long ID,
        /*[in]*/ BSTR Caption,
        /*[in]*/ long Options,
        /*[out,retval]*/ struct IPropertyManagerPageGroup * * Retval ) = 0;
      virtual HRESULT __stdcall AddControl (
        /*[in]*/ long ID,
        /*[in]*/ short ControlType,
        /*[in]*/ BSTR Caption,
        /*[in]*/ short LeftAlign,
        /*[in]*/ long Options,
        /*[in]*/ BSTR Tip,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IAddControl (
        /*[in]*/ long ID,
        /*[in]*/ short ControlType,
        /*[in]*/ BSTR Caption,
        /*[in]*/ short LeftAlign,
        /*[in]*/ long Options,
        /*[in]*/ BSTR Tip,
        /*[out,retval]*/ struct IPropertyManagerPageControl * * Retval ) = 0;
      virtual HRESULT __stdcall SetMessage (
        /*[in]*/ BSTR Message,
        /*[in]*/ long Visibility,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Show (
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall Close (
        /*[in]*/ VARIANT_BOOL Okay ) = 0;
      virtual HRESULT __stdcall EnableButton (
        /*[in]*/ long WhichOne,
        /*[in]*/ VARIANT_BOOL Enable,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_Pinned (
        /*[out,retval]*/ VARIANT_BOOL * Pinned ) = 0;
      virtual HRESULT __stdcall put_Pinned (
        /*[in]*/ VARIANT_BOOL Pinned ) = 0;
      virtual HRESULT __stdcall SetTitleBitmap2 (
        /*[in]*/ BSTR FilePathName ) = 0;
      virtual HRESULT __stdcall AddTab (
        /*[in]*/ long ID,
        /*[in]*/ BSTR Caption,
        /*[in]*/ BSTR Bitmap,
        /*[in]*/ long Options,
        /*[out,retval]*/ struct IPropertyManagerPageTab * * Retval ) = 0;
      virtual HRESULT __stdcall get_Title (
        /*[out,retval]*/ BSTR * PageTitle ) = 0;
      virtual HRESULT __stdcall put_Title (
        /*[in]*/ BSTR PageTitle ) = 0;
      virtual HRESULT __stdcall SetMessage2 (
        /*[in]*/ BSTR Message,
        /*[in]*/ long Visibility,
        /*[in]*/ BSTR Caption,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall Show2 (
        /*[in]*/ long Options,
        /*[out,retval]*/ long * Retval ) = 0;
      virtual HRESULT __stdcall AddMenuPopupItem (
        /*[in]*/ long ID,
        /*[in]*/ BSTR ItemText,
        /*[in]*/ long DocumentType,
        /*[in]*/ BSTR HintText,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetMessage3 (
        /*[in]*/ BSTR Message,
        /*[in]*/ long Visibility,
        /*[in]*/ long Expanded,
        /*[in]*/ BSTR Caption,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetExitConfirmationCursor (
        /*[in]*/ VARIANT_BOOL Enable ) = 0;
};

struct __declspec(uuid("2e23d2ee-0f57-11d5-af1f-00c04f603faf"))
IPropertyManagerPageGroup : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
      virtual HRESULT __stdcall get_Expanded (
        /*[out,retval]*/ VARIANT_BOOL * Expanded ) = 0;
      virtual HRESULT __stdcall put_Expanded (
        /*[in]*/ VARIANT_BOOL Expanded ) = 0;
      virtual HRESULT __stdcall AddControl (
        /*[in]*/ long ID,
        /*[in]*/ short ControlType,
        /*[in]*/ BSTR Caption,
        /*[in]*/ short LeftAlign,
        /*[in]*/ long Options,
        /*[in]*/ BSTR Tip,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IAddControl (
        /*[in]*/ long ID,
        /*[in]*/ short ControlType,
        /*[in]*/ BSTR Caption,
        /*[in]*/ short LeftAlign,
        /*[in]*/ long Options,
        /*[in]*/ BSTR Tip,
        /*[out,retval]*/ struct IPropertyManagerPageControl * * Retval ) = 0;
      virtual HRESULT __stdcall get_Checked (
        /*[out,retval]*/ VARIANT_BOOL * Checked ) = 0;
      virtual HRESULT __stdcall put_Checked (
        /*[in]*/ VARIANT_BOOL Checked ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * Text ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR Text ) = 0;
      virtual HRESULT __stdcall get_BackgroundColor (
        /*[out,retval]*/ long * Color ) = 0;
      virtual HRESULT __stdcall put_BackgroundColor (
        /*[in]*/ long Color ) = 0;
};

struct __declspec(uuid("ced9caf4-16fa-11d5-af24-00c04f603faf"))
IPropertyManagerPageControl : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall SetStandardPictureLabel (
        /*[in]*/ long Bitmap,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall SetPictureLabelByName (
        /*[in]*/ BSTR ColorBitmap,
        /*[in]*/ BSTR MaskBitmap,
        /*[out,retval]*/ VARIANT_BOOL * Retval ) = 0;
      virtual HRESULT __stdcall get_Tip (
        /*[out,retval]*/ BSTR * Tip ) = 0;
      virtual HRESULT __stdcall put_Tip (
        /*[in]*/ BSTR Tip ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ short * X ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ short X ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ short * Width ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ short Width ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ short * Y ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ short Y ) = 0;
      virtual HRESULT __stdcall get_TextColor (
        /*[out,retval]*/ long * Color ) = 0;
      virtual HRESULT __stdcall put_TextColor (
        /*[in]*/ long Color ) = 0;
      virtual HRESULT __stdcall get_BackgroundColor (
        /*[out,retval]*/ long * Color ) = 0;
      virtual HRESULT __stdcall put_BackgroundColor (
        /*[in]*/ long Color ) = 0;
      virtual HRESULT __stdcall GetGroupBox (
        /*[out,retval]*/ struct IPropertyManagerPageGroup * * Retval ) = 0;
      virtual HRESULT __stdcall get_OptionsForResize (
        /*[out,retval]*/ long * Options ) = 0;
      virtual HRESULT __stdcall put_OptionsForResize (
        /*[in]*/ long Options ) = 0;
};

struct __declspec(uuid("22bcfa78-d2bf-449c-88ab-99cbc4468bdb"))
IPropertyManagerPageTab : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * Text ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR Text ) = 0;
      virtual HRESULT __stdcall AddGroupBox (
        /*[in]*/ long ID,
        /*[in]*/ BSTR Caption,
        /*[in]*/ long Options,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IAddGroupBox (
        /*[in]*/ long ID,
        /*[in]*/ BSTR Caption,
        /*[in]*/ long Options,
        /*[out,retval]*/ struct IPropertyManagerPageGroup * * Retval ) = 0;
      virtual HRESULT __stdcall AddControl (
        /*[in]*/ long ID,
        /*[in]*/ short ControlType,
        /*[in]*/ BSTR Caption,
        /*[in]*/ short LeftAlign,
        /*[in]*/ long Options,
        /*[in]*/ BSTR Tip,
        /*[out,retval]*/ IDispatch * * Retval ) = 0;
      virtual HRESULT __stdcall IAddControl (
        /*[in]*/ long ID,
        /*[in]*/ short ControlType,
        /*[in]*/ BSTR Caption,
        /*[in]*/ short LeftAlign,
        /*[in]*/ long Options,
        /*[in]*/ BSTR Tip,
        /*[out,retval]*/ struct IPropertyManagerPageControl * * Retval ) = 0;
};

//
// Named GUID constants initializations
//

extern "C" const GUID __declspec(selectany) LIBID_SldWorks =
    {0x83a33d31,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IMouse =
    {0x9ed126f7,0x935e,0x4279,{0x91,0x71,0x40,0x86,0xa2,0x35,0x71,0x9b}};
extern "C" const GUID __declspec(selectany) IID_ISketchRelation =
    {0x7033ea1b,0x744a,0x44f3,{0xa2,0xb4,0xe4,0x50,0xd4,0xc9,0x9f,0x0e}};
extern "C" const GUID __declspec(selectany) IID_ITextFormat =
    {0x83a33db9,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IDisplayData =
    {0x83a33d9c,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IParameter =
    {0x83a33d69,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ITexture =
    {0xb81f43f1,0x8f16,0x4482,{0xbf,0x05,0x8b,0xee,0x97,0x3b,0x6c,0xe8}};
extern "C" const GUID __declspec(selectany) IID_IDecal =
    {0x263f0ff6,0x4c7e,0x477a,{0xb0,0xae,0x49,0xee,0x41,0xe4,0x33,0x51}};
extern "C" const GUID __declspec(selectany) IID_IRenderMaterial =
    {0xd3bd935b,0xdfb4,0x4eda,{0xb0,0x3a,0xda,0x4e,0xb2,0x02,0x4f,0x3f}};
extern "C" const GUID __declspec(selectany) IID_ICustomPropertyManager =
    {0xf1938d94,0x0d1f,0x4e88,{0x98,0x74,0x16,0x4b,0x1e,0x65,0x68,0xf1}};
extern "C" const GUID __declspec(selectany) IID_IDimensionTolerance =
    {0xf43444a8,0x1d72,0x4178,{0x95,0xc8,0x71,0x08,0xcf,0x29,0xe0,0x16}};
extern "C" const GUID __declspec(selectany) IID_IBomTable =
    {0x83a33d82,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IPageSetup =
    {0x931374cc,0xce0e,0x11d5,{0xaf,0x59,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_ISketchRelationManager =
    {0xd5f6d2c9,0x79d6,0x4cc8,{0xad,0x19,0xdf,0xf1,0xae,0xd8,0x8f,0xe5}};
extern "C" const GUID __declspec(selectany) IID_IFeatMgrView =
    {0x83a33d75,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IColorTable =
    {0x83a33da5,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IDetailingDefaults =
    {0x83a33db7,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ILayer =
    {0x04b7287c,0xf19d,0x11d2,{0xb8,0xe9,0x00,0xc0,0x4f,0x8e,0xf7,0x38}};
extern "C" const GUID __declspec(selectany) IID_ILayerMgr =
    {0x75173e30,0xf19e,0x11d2,{0xb8,0xe9,0x00,0xc0,0x4f,0x8e,0xf7,0x38}};
extern "C" const GUID __declspec(selectany) IID_IDesignTable =
    {0xce1eaa88,0x25ad,0x11d3,{0xae,0x91,0x00,0xc0,0x4f,0x68,0x3c,0xba}};
extern "C" const GUID __declspec(selectany) IID_IPropertyManagerPage =
    {0xe981b4fa,0x7e86,0x11d4,{0xae,0xf2,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IUserUnit =
    {0x82071121,0x8b32,0x4f51,{0x89,0x83,0x93,0x04,0x75,0x65,0x03,0xe7}};
extern "C" const GUID __declspec(selectany) IID_IEquationMgr =
    {0x02272ce8,0xfe52,0x4b94,{0xb1,0x20,0x6d,0x18,0x26,0xfd,0xbe,0x32}};
extern "C" const GUID __declspec(selectany) IID_ICustomBendAllowance =
    {0x442b6462,0x0350,0x4f5c,{0xa1,0x68,0x3f,0x75,0x3f,0x6c,0xa7,0x92}};
extern "C" const GUID __declspec(selectany) IID_ITreeControlItem =
    {0x3aea5179,0x14d5,0x407c,{0xb6,0x69,0x48,0xe9,0x20,0x90,0x43,0xd2}};
extern "C" const GUID __declspec(selectany) IID_ISwOLEObject =
    {0xb0bad545,0x4dd8,0x4d2a,{0x8d,0xde,0x43,0x81,0x24,0x12,0x69,0x32}};
extern "C" const GUID __declspec(selectany) IID_IPrint3DDialog =
    {0x41bd2a2f,0xbf57,0x49d6,{0x9a,0x56,0xd4,0x6b,0x82,0xda,0x04,0xc8}};
extern "C" const GUID __declspec(selectany) IID_IMeasure =
    {0x151497a7,0x8b45,0x4a2c,{0x9d,0xa1,0xca,0xd5,0x4e,0xef,0x58,0x55}};
extern "C" const GUID __declspec(selectany) IID_ISplineHandle =
    {0x41607756,0x57a8,0x4e03,{0x9b,0xac,0x24,0x44,0xb5,0xfa,0xbc,0x9d}};
extern "C" const GUID __declspec(selectany) IID_IFaceDecalProperties =
    {0x49077ce2,0xd642,0x464c,{0xbc,0x16,0xfc,0x45,0xc5,0xe3,0xac,0x86}};
extern "C" const GUID __declspec(selectany) IID_IMaterialVisualPropertiesData =
    {0x66e0fcbd,0x16d4,0x4483,{0x87,0x31,0xdb,0x08,0xf9,0x02,0x18,0xda}};
extern "C" const GUID __declspec(selectany) IID_IStatusBarPane =
    {0x931f2702,0x3257,0x4372,{0xbb,0xcc,0xcb,0xd4,0xa7,0xfb,0xbc,0x41}};
extern "C" const GUID __declspec(selectany) IID_IMember =
    {0x83a33d4e,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IAnimation =
    {0x4f50fa8d,0xbcf3,0x4395,{0xb1,0x46,0xb5,0xae,0x93,0x3a,0xff,0xd5}};
extern "C" const GUID __declspec(selectany) IID_IAdvancedSelectionCriteria =
    {0xf40e5fa3,0x6c6a,0x4c23,{0xa5,0xaf,0x62,0x83,0x57,0xcc,0xee,0x50}};
extern "C" const GUID __declspec(selectany) IID_IEnvironment =
    {0x83a33d78,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ITaskpaneView =
    {0xedbba0e9,0xb701,0x419e,{0xa4,0xae,0x34,0x09,0xdb,0xf1,0x2d,0x40}};
extern "C" const GUID __declspec(selectany) IID_IPtnrPMPage =
    {0x2a586331,0xa56d,0x44c9,{0xaa,0x32,0x28,0x68,0xa9,0x6f,0x04,0x4d}};
extern "C" const GUID __declspec(selectany) IID_ICommandGroup =
    {0xff545450,0xb559,0x400d,{0x96,0x4c,0xa3,0x81,0x1f,0x20,0x91,0x48}};
extern "C" const GUID __declspec(selectany) IID_ICommandTabBox =
    {0x1dbaab20,0x9626,0x4cb8,{0xa2,0x75,0xc3,0x46,0xac,0x42,0x53,0x62}};
extern "C" const GUID __declspec(selectany) IID_ICommandTab =
    {0xfc248e07,0x607d,0x4429,{0x96,0x0b,0xe4,0xce,0x20,0xab,0x55,0xab}};
extern "C" const GUID __declspec(selectany) IID_ICommandManager =
    {0xf61069cf,0x2e42,0x4ac4,{0xa5,0x17,0x6a,0x95,0xb7,0x9e,0x45,0xee}};
extern "C" const GUID __declspec(selectany) IID_IUserProgressBar =
    {0x01e97594,0x34eb,0x46bd,{0x90,0x36,0x51,0x8c,0x1b,0x35,0x22,0x45}};
extern "C" const GUID __declspec(selectany) IID_IJournalManager =
    {0x338d2790,0xa47f,0x45bc,{0xaa,0x03,0xe7,0x0b,0x71,0x1c,0xa8,0x11}};
extern "C" const GUID __declspec(selectany) IID_IRefAxis =
    {0x83a33d86,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ISWPropertySheet =
    {0x83a33da7,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IRibFeatureData =
    {0x83a33dad,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ILightDialog =
    {0x83a33df1,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IChamferFeatureData =
    {0x7271d7c7,0xacc9,0x11d3,{0xb9,0x7f,0x00,0x10,0x83,0x02,0x9a,0x97}};
extern "C" const GUID __declspec(selectany) IID_IDraftFeatureData =
    {0xbc633ce1,0xb367,0x11d3,{0xb9,0x81,0x00,0x10,0x83,0x02,0x9a,0x97}};
extern "C" const GUID __declspec(selectany) IID_IRevolveFeatureData =
    {0xb7fff613,0xb735,0x11d3,{0xb9,0x81,0x00,0x10,0x83,0x02,0x9a,0x97}};
extern "C" const GUID __declspec(selectany) IID_IPropertyManagerPageLabel =
    {0xebbd7b58,0x170d,0x11d5,{0xaf,0x24,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IPropertyManagerPageCheckbox =
    {0xebbd7b5a,0x170d,0x11d5,{0xaf,0x24,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IPropertyManagerPageButton =
    {0x3a66c294,0x17ce,0x11d5,{0xaf,0x24,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IPropertyManagerPageOption =
    {0x3a66c296,0x17ce,0x11d5,{0xaf,0x24,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IPropertyManagerPageTextbox =
    {0xeb18a468,0x1800,0x11d5,{0xaf,0x24,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IPropertyManagerPageCombobox =
    {0x0bd2ba62,0x18c5,0x11d5,{0xaf,0x24,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IPropertyManagerPageActiveX =
    {0xff956369,0xae71,0x4643,{0xaf,0xa8,0x83,0xd7,0x54,0x8f,0x75,0x8a}};
extern "C" const GUID __declspec(selectany) IID_IPropertyManagerPageBitmapButton =
    {0xe508ce7d,0x0439,0x4c3d,{0xa6,0x1f,0xa7,0xc9,0xec,0xdc,0x78,0xbd}};
extern "C" const GUID __declspec(selectany) IID_IFreePointCurveFeatureData =
    {0xc11527fa,0xe833,0x4453,{0x80,0xdd,0x22,0x9f,0x6b,0xac,0xc5,0xd9}};
extern "C" const GUID __declspec(selectany) IID_IHelixFeatureData =
    {0x70e634ee,0x890a,0x421f,{0xab,0xce,0x52,0x08,0xa5,0x63,0x42,0x3c}};
extern "C" const GUID __declspec(selectany) IID_IEdgePoint =
    {0xccb5966e,0x03d5,0x4169,{0xa3,0x03,0xad,0x49,0x26,0x5a,0x7b,0x36}};
extern "C" const GUID __declspec(selectany) IID_ISimulationGravityFeatureData =
    {0x51cb1551,0x09a0,0x408f,{0xb9,0x11,0xda,0xfe,0x79,0x2d,0xeb,0xfa}};
extern "C" const GUID __declspec(selectany) IID_ISimulationLinearSpringFeatureData =
    {0x3c9c2ba4,0xb021,0x4bb8,{0xa9,0x92,0x50,0x05,0x75,0xb0,0x8e,0x72}};
extern "C" const GUID __declspec(selectany) IID_IImportIgesData =
    {0x57988505,0x3843,0x4124,{0x9c,0xbe,0xaf,0x12,0x1d,0x9e,0x0b,0xe8}};
extern "C" const GUID __declspec(selectany) IID_IImportDxfDwgData =
    {0x11f1f395,0x9064,0x44cb,{0xae,0x29,0xe1,0xa3,0xa5,0x43,0xae,0xdc}};
extern "C" const GUID __declspec(selectany) IID_IImportStepData =
    {0xad749a73,0x9aa2,0x4a3e,{0xbc,0xa5,0x8f,0xc0,0x12,0x11,0x4b,0xb0}};
extern "C" const GUID __declspec(selectany) IID_IExportPdfData =
    {0x33d23c34,0xd27a,0x4635,{0x91,0xdf,0x8b,0xef,0xfe,0x51,0x90,0x0a}};
extern "C" const GUID __declspec(selectany) IID_IPropertyManagerPageSlider =
    {0xcf38209e,0x52dc,0x414c,{0x81,0xbd,0xeb,0xac,0x6c,0x10,0x69,0x2d}};
extern "C" const GUID __declspec(selectany) IID_IDocumentSpecification =
    {0x2fc5ea82,0xb937,0x4719,{0x81,0x4f,0x21,0x03,0xaa,0x15,0x7f,0x35}};
extern "C" const GUID __declspec(selectany) IID_ISimulation3DContactFeatureData =
    {0x1a546f45,0x179e,0x44b3,{0x93,0xcf,0xe1,0xc9,0x8f,0x42,0xa1,0xae}};
extern "C" const GUID __declspec(selectany) DIID_DSldWorksEvents =
    {0x83a33d22,0x37c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_SldWorks =
    {0xda12c069,0xd938,0x4e44,{0xbd,0x4e,0x7a,0x47,0xa3,0x95,0xe2,0xf5}};
extern "C" const GUID __declspec(selectany) DIID_DPartDocEvents =
    {0x83a33d32,0x37c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_PartDoc =
    {0x83a33d30,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) DIID_DDrawingDocEvents =
    {0x83a33d34,0x37c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_DrawingDoc =
    {0x83a33d34,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) DIID_DAssemblyDocEvents =
    {0x83a33d35,0x37c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_AssemblyDoc =
    {0x83a33d36,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Feature =
    {0x83a33d37,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Dimension =
    {0x83a33d39,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Body =
    {0x83a33d3b,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Face =
    {0x83a33d3d,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Surface =
    {0x83a33d3f,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Edge =
    {0x83a33d41,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Curve =
    {0x83a33d43,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_ModelDoc =
    {0x83a33d45,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Frame =
    {0x83a33d47,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Gtol =
    {0x83a33d49,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) DIID_DModelViewEvents =
    {0x83a33d4c,0x37c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_ModelView =
    {0x83a33d4b,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Member =
    {0x83a33d4d,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_View =
    {0x83a33d4f,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Sketch =
    {0x83a33d52,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Loop =
    {0x83a33d54,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Note =
    {0x83a33d56,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_CoEdge =
    {0x83a33d58,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Vertex =
    {0x83a33d64,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_SelectionMgr =
    {0x83a33d5a,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_EnumFaces =
    {0x83a33d5c,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_EnumFaces2 =
    {0x5f269d24,0xe7a6,0x45b4,{0x88,0x50,0x15,0x98,0x32,0x15,0xb0,0xfe}};
extern "C" const GUID __declspec(selectany) CLSID_EnumLoops =
    {0x83a33d5e,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_EnumLoops2 =
    {0xbaa5c9a5,0xcce2,0x44d7,{0x97,0x9a,0x88,0xc1,0x72,0x0f,0x82,0xaa}};
extern "C" const GUID __declspec(selectany) CLSID_EnumEdges =
    {0x83a33d60,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_EnumCoEdges =
    {0x83a33d62,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_EnumBodies =
    {0x83a33d97,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_EnumBodies2 =
    {0xf5519211,0x91ac,0x4234,{0x8c,0x2f,0x42,0x72,0x5b,0xc6,0xb3,0xfe}};
extern "C" const GUID __declspec(selectany) CLSID_Entity =
    {0x83a33d66,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_AttributeDef =
    {0x83a33d68,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Parameter =
    {0x83a33d70,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Attribute =
    {0x83a33d72,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Modeler =
    {0x83a33d74,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) DIID_DFeatMgrViewEvents =
    {0x83a33d76,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_FeatMgrView =
    {0x83a33d77,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Environment =
    {0x83a33d79,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Sheet =
    {0x83a33d81,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_BomTable =
    {0x83a33d83,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_RefPlane =
    {0x83a33d85,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_RefAxis =
    {0x83a33d87,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_MidSurface =
    {0x83a33d89,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Mate =
    {0x83a33d8b,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_MateEntity =
    {0x83a33d8d,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_SFSymbol =
    {0x83a33d8f,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_DatumTag =
    {0x83a33d91,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_DatumTargetSym =
    {0x83a33d93,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_WeldSymbol =
    {0x83a33d95,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Configuration =
    {0x83a33d99,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Component =
    {0x83a33d9b,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_DisplayData =
    {0x83a33d9d,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_CThread =
    {0x83a33d9f,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_DisplayDimension =
    {0x83a33da2,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_ReferenceCurve =
    {0x83a33da4,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_ColorTable =
    {0x83a33da6,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) DIID_DSWPropertySheetEvents =
    {0xe05ff9e0,0xfc82,0x11d2,{0x93,0x95,0x00,0xc0,0x4f,0x79,0xbf,0xfe}};
extern "C" const GUID __declspec(selectany) CLSID_SWPropertySheet =
    {0x83a33da8,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Annotation =
    {0x83a33daa,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_EnumDisplayDimensions =
    {0x83a33dac,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_RibFeatureData =
    {0x83a33dae,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_DomeFeatureData =
    {0x83a33db0,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_EnumModelViews =
    {0x83a33db2,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_EnumDocuments =
    {0x83a33db4,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_EnumDocuments2 =
    {0xfce9fe1b,0xa6b2,0x4ab9,{0x81,0x7d,0xd4,0x9f,0x14,0xe7,0xf7,0x83}};
extern "C" const GUID __declspec(selectany) CLSID_CustomSymbol =
    {0x83a33db6,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_DetailingDefaults =
    {0x83a33db8,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_TextFormat =
    {0x83a33dba,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_SketchPoint =
    {0x83a33dbe,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_SketchSegment =
    {0x83a33dc0,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_SketchLine =
    {0x83a33dc2,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_SketchArc =
    {0x83a33dc4,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_SketchText =
    {0x83a33dc6,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_SketchEllipse =
    {0x83a33dc8,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_SketchParabola =
    {0x83a33dca,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_SketchSpline =
    {0x83a33dcc,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_SketchSlot =
    {0x6b70777f,0x8cc5,0x4933,{0x9d,0x64,0xcc,0x55,0x23,0xa4,0xe1,0x9f}};
extern "C" const GUID __declspec(selectany) CLSID_EnumSketchPoints =
    {0x83a33dce,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_EnumSketchSegments =
    {0x83a33df0,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_LightDialog =
    {0x83a33df2,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Layer =
    {0x04b7287d,0xf19d,0x11d2,{0xb8,0xe9,0x00,0xc0,0x4f,0x8e,0xf7,0x38}};
extern "C" const GUID __declspec(selectany) CLSID_LayerMgr =
    {0x75173e31,0xf19e,0x11d2,{0xb8,0xe9,0x00,0xc0,0x4f,0x8e,0xf7,0x38}};
extern "C" const GUID __declspec(selectany) CLSID_DesignTable =
    {0xce1eaa89,0x25ad,0x11d3,{0xae,0x91,0x00,0xc0,0x4f,0x68,0x3c,0xba}};
extern "C" const GUID __declspec(selectany) CLSID_SketchHatch =
    {0xc3d00927,0x4068,0x11d3,{0xae,0x9b,0x00,0xc0,0x4f,0x68,0x3c,0xba}};
extern "C" const GUID __declspec(selectany) CLSID_EnumSketchHatches =
    {0x54729b8f,0x4086,0x11d3,{0xae,0x9b,0x00,0xc0,0x4f,0x68,0x3c,0xba}};
extern "C" const GUID __declspec(selectany) CLSID_EnumCurves =
    {0x5b57e3bd,0x7139,0x11d3,{0xae,0xa2,0x00,0xc0,0x4f,0x68,0x3c,0xba}};
extern "C" const GUID __declspec(selectany) CLSID_SimpleHoleFeatureData =
    {0x1d06fd55,0x96dd,0x11d3,{0xae,0xaa,0x00,0xc0,0x4f,0x68,0x3c,0xba}};
extern "C" const GUID __declspec(selectany) CLSID_WizardHoleFeatureData =
    {0x887ab458,0xa739,0x11d3,{0xb9,0x7f,0x00,0x10,0x83,0x02,0x9a,0x97}};
extern "C" const GUID __declspec(selectany) CLSID_ChamferFeatureData =
    {0x7271d7c8,0xacc9,0x11d3,{0xb9,0x7f,0x00,0x10,0x83,0x02,0x9a,0x97}};
extern "C" const GUID __declspec(selectany) CLSID_DraftFeatureData =
    {0xbc633ce2,0xb367,0x11d3,{0xb9,0x81,0x00,0x10,0x83,0x02,0x9a,0x97}};
extern "C" const GUID __declspec(selectany) CLSID_SimpleFilletFeatureData =
    {0xcc929f0c,0xb404,0x11d3,{0xb9,0x81,0x00,0x10,0x83,0x02,0x9a,0x97}};
extern "C" const GUID __declspec(selectany) CLSID_VariableFilletFeatureData =
    {0xcc929f0e,0xb404,0x11d3,{0xb9,0x81,0x00,0x10,0x83,0x02,0x9a,0x97}};
extern "C" const GUID __declspec(selectany) CLSID_ExtrudeFeatureData =
    {0x908a7176,0xb72c,0x11d3,{0xb9,0x81,0x00,0x10,0x83,0x02,0x9a,0x97}};
extern "C" const GUID __declspec(selectany) CLSID_RevolveFeatureData =
    {0xb7fff614,0xb735,0x11d3,{0xb9,0x81,0x00,0x10,0x83,0x02,0x9a,0x97}};
extern "C" const GUID __declspec(selectany) DIID_ISdmDoc =
    {0xac048cea,0xae93,0x11d3,{0xae,0xa7,0x00,0xc0,0x4f,0x60,0xf0,0x2a}};
extern "C" const GUID __declspec(selectany) CLSID_SdmDoc =
    {0xac048ce8,0xae93,0x11d3,{0xae,0xa7,0x00,0xc0,0x4f,0x60,0xf0,0x2a}};
extern "C" const GUID __declspec(selectany) CLSID_DrSection =
    {0xf183a340,0xd4db,0x11d3,{0xae,0xb2,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_EnumComponents =
    {0x51efb945,0xd449,0x11d3,{0xae,0xbe,0x00,0xc0,0x4f,0x68,0x3c,0xba}};
extern "C" const GUID __declspec(selectany) CLSID_EnumComponents2 =
    {0xfd27da22,0x03e0,0x4db9,{0x82,0xda,0xfc,0xf9,0x4b,0x11,0xa2,0xfe}};
extern "C" const GUID __declspec(selectany) CLSID_EnumDrSections =
    {0x585a6a16,0xe95b,0x11d3,{0xae,0xbc,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_ExplodeStep =
    {0x7241680c,0x0bc6,0x11d4,{0xae,0xee,0x00,0xc0,0x4f,0x61,0x02,0x5c}};
extern "C" const GUID __declspec(selectany) CLSID_MathUtility =
    {0xf7d97f81,0x162e,0x11d4,{0xae,0xab,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_MathTransform =
    {0xf7d97f83,0x162e,0x11d4,{0xae,0xab,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_MathPoint =
    {0xf7d97f85,0x162e,0x11d4,{0xae,0xab,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_MathVector =
    {0xf7d97f87,0x162e,0x11d4,{0xae,0xab,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_MirrorPatternFeatureData =
    {0x414f4f1f,0x30ec,0x11d4,{0xae,0xeb,0x00,0xc0,0x4f,0x68,0x3c,0xba}};
extern "C" const GUID __declspec(selectany) CLSID_DetailCircle =
    {0x4b65a34b,0x4c44,0x11d4,{0xae,0xf6,0x00,0xc0,0x4f,0x68,0x3c,0xba}};
extern "C" const GUID __declspec(selectany) CLSID_CircularPatternFeatureData =
    {0xdbbf39df,0x7ab5,0x11d4,{0xae,0xb6,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_LinearPatternFeatureData =
    {0xf86d1e95,0x7de8,0x11d4,{0xae,0xb7,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_TablePatternFeatureData =
    {0xe5d1af7d,0x7f5d,0x11d4,{0xae,0xb7,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_SketchPatternFeatureData =
    {0xae998465,0x8050,0x11d4,{0xae,0xb7,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_MirrorSolidFeatureData =
    {0xe9172719,0x836b,0x11d4,{0xae,0xb7,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_PropertyManagerPage =
    {0xe981b4fb,0x7e86,0x11d4,{0xae,0xf2,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_ProjectionArrow =
    {0xa2227e66,0xa3a7,0x11d4,{0xae,0xff,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_Tessellation =
    {0x699c7493,0xdb56,0x4cc2,{0xb7,0xa2,0x9f,0xfd,0x56,0x69,0x84,0x34}};
extern "C" const GUID __declspec(selectany) CLSID_SheetMetalFeatureData =
    {0x2f6c1e89,0xf2d6,0x11d4,{0xae,0xd5,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_OneBendFeatureData =
    {0x0c02ad41,0xf6e6,0x11d4,{0xae,0xd6,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_BendsFeatureData =
    {0xf3bdb64f,0xf7c6,0x11d4,{0xae,0xd6,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_UserUnit =
    {0x3cc0bc03,0x541f,0x40c3,{0x86,0x6b,0x8b,0xac,0x50,0x2d,0xb4,0xeb}};
extern "C" const GUID __declspec(selectany) CLSID_BaseFlangeFeatureData =
    {0xc61e9dd7,0x0813,0x11d5,{0xae,0xdd,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_EdgeFlangeFeatureData =
    {0xb58e432b,0x09c8,0x11d5,{0xae,0xdd,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_MiterFlangeFeatureData =
    {0xe6194f73,0x0cec,0x11d5,{0xae,0xdd,0x00,0xc0,0x4f,0xa0,0xac,0x52}};
extern "C" const GUID __declspec(selectany) CLSID_SketchedBendFeatureData =
    {0xa4d90a71,0x0da5,0x11d5,{0xae,0xdd,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_ClosedCornerFeatureData =
    {0x2134cbfd,0x0dda,0x11d5,{0xae,0xdd,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_FoldsFeatureData =
    {0x32700a63,0x0e5c,0x11d5,{0xae,0xdd,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_FlatPatternFeatureData =
    {0x00644209,0x0e6c,0x11d5,{0xae,0xdd,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_LocalLinearPatternFeatureData =
    {0x9890c04d,0x1196,0x11d5,{0xae,0xde,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_LocalCircularPatternFeatureData =
    {0xf2e81435,0x13fb,0x11d5,{0xae,0xde,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_DerivedPatternFeatureData =
    {0x98eadb33,0x141a,0x11d5,{0xae,0xde,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_Body2 =
    {0xcb928817,0x2a89,0x446e,{0xa1,0xbb,0xa6,0xee,0xe1,0x81,0x35,0x9e}};
extern "C" const GUID __declspec(selectany) CLSID_Face2 =
    {0x545470a9,0xef3c,0x4fc0,{0xaa,0x89,0x96,0x76,0xee,0x0b,0xf3,0x18}};
extern "C" const GUID __declspec(selectany) CLSID_ModelDoc2 =
    {0x27526253,0x6119,0x4b38,{0xa1,0xf9,0x2d,0xc8,0x77,0xe7,0x23,0x34}};
extern "C" const GUID __declspec(selectany) CLSID_Loop2 =
    {0x071b4d3e,0x0cd5,0x4c4b,{0xb6,0xe7,0x67,0x43,0x63,0xa1,0x8f,0x4b}};
extern "C" const GUID __declspec(selectany) CLSID_MidSurface2 =
    {0x285fd964,0x4ba2,0x40d3,{0x89,0xe5,0x0d,0x7b,0x42,0x36,0x59,0x7f}};
extern "C" const GUID __declspec(selectany) CLSID_Component2 =
    {0xae61a94d,0xe228,0x4ac0,{0x8e,0x2a,0xf0,0x00,0x24,0x4e,0x3c,0x8b}};
extern "C" const GUID __declspec(selectany) CLSID_PropertyManagerPage2 =
    {0xb92e624b,0x0dc3,0x11d5,{0xaf,0x1e,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_PropertyManagerPageGroup =
    {0x2e23d2ef,0x0f57,0x11d5,{0xaf,0x1f,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_PropertyManagerPageControl =
    {0xced9caf5,0x16fa,0x11d5,{0xaf,0x24,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_PropertyManagerPageLabel =
    {0xebbd7b59,0x170d,0x11d5,{0xaf,0x24,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_PropertyManagerPageCheckbox =
    {0xebbd7b5b,0x170d,0x11d5,{0xaf,0x24,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_PropertyManagerPageButton =
    {0x3a66c295,0x17ce,0x11d5,{0xaf,0x24,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_PropertyManagerPageOption =
    {0x3a66c297,0x17ce,0x11d5,{0xaf,0x24,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_PropertyManagerPageTextbox =
    {0xeb18a469,0x1800,0x11d5,{0xaf,0x24,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IPropertyManagerPageListbox =
    {0xcdb49982,0x1a18,0x11d5,{0xaf,0x24,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_PropertyManagerPageListbox =
    {0xcdb49983,0x1a18,0x11d5,{0xaf,0x24,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_PropertyManagerPageCombobox =
    {0x0bd2ba63,0x18c5,0x11d5,{0xaf,0x24,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IPropertyManagerPageNumberbox =
    {0x96567554,0x1eda,0x11d5,{0xaf,0x25,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_PropertyManagerPageNumberbox =
    {0x96567555,0x1eda,0x11d5,{0xaf,0x25,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_PropertyManagerPageSelectionbox =
    {0x96567557,0x1eda,0x11d5,{0xaf,0x25,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_MultiJogLeader =
    {0x06df8fe1,0x1344,0x4e69,{0x95,0x19,0x53,0x5d,0x01,0x60,0xd2,0x95}};
extern "C" const GUID __declspec(selectany) CLSID_ProjectionCurveFeatureData =
    {0x459f4b5d,0x7f8c,0x4a7e,{0x8a,0xa0,0xfc,0xfb,0x6e,0xd2,0xd2,0x86}};
extern "C" const GUID __declspec(selectany) CLSID_ScaleFeatureData =
    {0xd335d62b,0xacba,0x4b09,{0x96,0x31,0x8b,0x53,0xd5,0x7f,0x86,0xc9}};
extern "C" const GUID __declspec(selectany) CLSID_ShellFeatureData =
    {0xd4c512b3,0xa169,0x40ac,{0x83,0xc6,0xa8,0xf0,0x22,0x2a,0x83,0x81}};
extern "C" const GUID __declspec(selectany) CLSID_SweepFeatureData =
    {0xd45b744b,0xdfdc,0x405c,{0xae,0x88,0x69,0x91,0xfb,0xbc,0x44,0xd2}};
extern "C" const GUID __declspec(selectany) CLSID_LoftFeatureData =
    {0x6fda5236,0xac50,0x480e,{0xaa,0x3f,0xa5,0x68,0x1d,0x37,0x3a,0xbd}};
extern "C" const GUID __declspec(selectany) CLSID_ThickenFeatureData =
    {0x97c75b25,0x7466,0x44ca,{0x9e,0x0a,0x31,0xca,0xa7,0xf9,0x28,0xf0}};
extern "C" const GUID __declspec(selectany) CLSID_SurfCutFeatureData =
    {0x0e16c025,0x301f,0x414b,{0x92,0xd3,0x53,0x83,0x3f,0x99,0x98,0xd6}};
extern "C" const GUID __declspec(selectany) CLSID_ReplaceFaceFeatureData =
    {0x489f09c4,0x02db,0x4e6b,{0xa7,0x87,0x09,0x4b,0xaf,0x52,0x1e,0xe3}};
extern "C" const GUID __declspec(selectany) CLSID_RibFeatureData2 =
    {0xdddbaed3,0xdb70,0x4037,{0xac,0x91,0x45,0x26,0x5c,0xb3,0xe0,0x84}};
extern "C" const GUID __declspec(selectany) CLSID_DomeFeatureData2 =
    {0xb27af2df,0x2fd2,0x4f54,{0x91,0x30,0x1a,0x79,0xc1,0x30,0x5c,0x18}};
extern "C" const GUID __declspec(selectany) CLSID_SimpleHoleFeatureData2 =
    {0xdc8795e8,0x8fe0,0x4837,{0x83,0x28,0x70,0x16,0x58,0x44,0xde,0x95}};
extern "C" const GUID __declspec(selectany) CLSID_WizardHoleFeatureData2 =
    {0xa9da797d,0x2303,0x486b,{0xbe,0xb1,0x6f,0x80,0xb7,0x65,0xbf,0xb5}};
extern "C" const GUID __declspec(selectany) CLSID_ChamferFeatureData2 =
    {0x5c97a73f,0xb200,0x4d1b,{0xa8,0x3c,0x76,0x22,0x7e,0xce,0x58,0x77}};
extern "C" const GUID __declspec(selectany) CLSID_DraftFeatureData2 =
    {0x06c757d2,0x4e1a,0x4455,{0x95,0x18,0x8a,0x5a,0x90,0x21,0x8a,0xbb}};
extern "C" const GUID __declspec(selectany) CLSID_SimpleFilletFeatureData2 =
    {0xe461d38b,0x5063,0x4992,{0xa8,0xff,0xfc,0x04,0xa6,0x9a,0xab,0xb8}};
extern "C" const GUID __declspec(selectany) CLSID_VariableFilletFeatureData2 =
    {0xe3b83840,0x88c8,0x4388,{0xbf,0x13,0x62,0x0a,0xd7,0xcd,0xdc,0xac}};
extern "C" const GUID __declspec(selectany) CLSID_ExtrudeFeatureData2 =
    {0x0aa8ade4,0xa503,0x4d79,{0xa2,0x09,0x69,0xd3,0xdb,0xd6,0xe7,0x25}};
extern "C" const GUID __declspec(selectany) CLSID_RevolveFeatureData2 =
    {0xac3a7d68,0x1ea5,0x4fc8,{0xa7,0x26,0xef,0xfd,0x23,0x19,0x59,0x3b}};
extern "C" const GUID __declspec(selectany) CLSID_MacroFeatureData =
    {0x739ac7cf,0x9017,0x11d5,{0xaf,0x07,0x00,0x02,0xb3,0x41,0x43,0xe5}};
extern "C" const GUID __declspec(selectany) CLSID_DowelSymbol =
    {0x55aacd8c,0x97c5,0x11d5,{0xaf,0x4b,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_DragOperator =
    {0x2f8be28e,0xf829,0x40f7,{0xb5,0x68,0x7f,0x46,0x15,0x72,0xce,0x41}};
extern "C" const GUID __declspec(selectany) CLSID_CurveDrivenPatternFeatureData =
    {0xf67412a3,0xfebf,0x4319,{0x9e,0x8d,0x32,0x3b,0x6e,0xe6,0x2c,0x5a}};
extern "C" const GUID __declspec(selectany) CLSID_BalloonStack =
    {0x4944f9e7,0xbf50,0x11d5,{0xaf,0x56,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_StatusBarPane =
    {0x95b8a1aa,0x1977,0x46ad,{0xb9,0x44,0x7d,0x52,0x5d,0xd7,0x6d,0x65}};
extern "C" const GUID __declspec(selectany) CLSID_EquationMgr =
    {0x9015e438,0xc504,0x4e9f,{0xa4,0xfa,0xa0,0x3d,0x57,0x8f,0xe2,0x1f}};
extern "C" const GUID __declspec(selectany) CLSID_PageSetup =
    {0x931374cd,0xce0e,0x11d5,{0xaf,0x59,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_RipFeatureData =
    {0xab3b9122,0x1208,0x4ed3,{0xb5,0x3f,0xfa,0x5c,0x06,0xfc,0xbe,0x1d}};
extern "C" const GUID __declspec(selectany) CLSID_HemFeatureData =
    {0x59675115,0xa0f0,0x4aa1,{0x9f,0xed,0x89,0xb1,0x0e,0xb3,0x6d,0x12}};
extern "C" const GUID __declspec(selectany) CLSID_BreakCornerFeatureData =
    {0xbf2347c1,0xcf5f,0x4168,{0xb2,0x03,0x7b,0x1e,0x54,0x4d,0x46,0x97}};
extern "C" const GUID __declspec(selectany) CLSID_JogFeatureData =
    {0xcd1ce2ae,0xa4bb,0x4280,{0xa1,0x93,0xd8,0xa9,0xd0,0xd7,0x31,0x17}};
extern "C" const GUID __declspec(selectany) CLSID_SurfExtrudeFeatureData =
    {0xacddd04c,0xa393,0x462a,{0xbe,0x52,0xdc,0xc9,0xf7,0x88,0x51,0xf0}};
extern "C" const GUID __declspec(selectany) CLSID_SurfRevolveFeatureData =
    {0x69c9d6e8,0x3b00,0x48dd,{0xbb,0x69,0x5a,0xd5,0x9c,0x6d,0x33,0xe2}};
extern "C" const GUID __declspec(selectany) CLSID_SurfaceOffsetFeatureData =
    {0xae587c54,0x9cec,0x43e8,{0x9a,0x9b,0x31,0x82,0x74,0xb7,0xd3,0x5f}};
extern "C" const GUID __declspec(selectany) CLSID_SurfaceKnitFeatureData =
    {0xb32901e5,0x1a5d,0x4c16,{0x98,0xc6,0x2a,0x3d,0x76,0x02,0xf7,0x23}};
extern "C" const GUID __declspec(selectany) CLSID_SurfaceExtendFeatureData =
    {0x79ee057d,0xbe92,0x4557,{0xb6,0x79,0xe0,0x48,0x24,0xa2,0x6c,0x3f}};
extern "C" const GUID __declspec(selectany) CLSID_SurfacePlanarFeatureData =
    {0x467c984e,0xdf2d,0x4644,{0xb4,0xcf,0x0a,0xc4,0xa7,0x22,0x32,0x3b}};
extern "C" const GUID __declspec(selectany) CLSID_CenterMark =
    {0x6beb0424,0xeda4,0x11d5,{0xaf,0x64,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_SurfaceTrimFeatureData =
    {0x2fb4b7b6,0x87b4,0x4b10,{0x89,0x61,0x9e,0xbf,0x65,0xea,0xc7,0x3f}};
extern "C" const GUID __declspec(selectany) CLSID_SurfaceRadiateFeatureData =
    {0x678dcddd,0xc6ec,0x4e81,{0x89,0x48,0xf9,0xfb,0x5c,0x79,0xf3,0xe4}};
extern "C" const GUID __declspec(selectany) CLSID_RefPlaneFeatureData =
    {0x5ee2bf86,0xc159,0x4dcb,{0x94,0x4a,0x99,0xac,0xc7,0x72,0x67,0x9e}};
extern "C" const GUID __declspec(selectany) CLSID_Callout =
    {0x9caaa1ab,0xf2fc,0x11d5,{0xaf,0x66,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_CustomBendAllowance =
    {0xfd7c6301,0x1942,0x41fb,{0x80,0x36,0xd9,0xf8,0xce,0xaa,0xc8,0xf9}};
extern "C" const GUID __declspec(selectany) CLSID_BlockInstance =
    {0x992a14b7,0x15cf,0x11d6,{0xaf,0x6e,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_BlockDefinition =
    {0x8cd8314b,0x1677,0x11d6,{0xaf,0x6e,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_BreakLine =
    {0x0d789448,0x973b,0x4411,{0xb2,0xd6,0xa9,0x0a,0x16,0x75,0x27,0x6d}};
extern "C" const GUID __declspec(selectany) CLSID_FaceHatch =
    {0x51440e4b,0x7ff5,0x4806,{0xb8,0x52,0xdc,0x23,0x86,0x34,0xa1,0x60}};
extern "C" const GUID __declspec(selectany) CLSID_PropertyManagerPageActiveX =
    {0xb02f9e06,0xfc39,0x422b,{0x98,0x01,0x27,0xb8,0x97,0xec,0xaf,0xa9}};
extern "C" const GUID __declspec(selectany) CLSID_LoftedBendsFeatureData =
    {0xcbd8bea9,0xe41e,0x4ef3,{0x88,0x4c,0xdc,0xa3,0xc7,0xbe,0xf1,0xd8}};
extern "C" const GUID __declspec(selectany) CLSID_FeatureManager =
    {0xb322a200,0x3015,0x467c,{0xb4,0x29,0xdc,0xe9,0x94,0x45,0xd7,0x5b}};
extern "C" const GUID __declspec(selectany) CLSID_ModelViewManager =
    {0xacf23730,0xed2c,0x410f,{0x8f,0x9d,0x94,0x27,0x7d,0xb7,0xdb,0x4e}};
extern "C" const GUID __declspec(selectany) CLSID_ModelDocExtension =
    {0xd192049a,0x49a7,0x4819,{0x9c,0x2e,0xf7,0xe0,0xf9,0x8a,0x04,0x31}};
extern "C" const GUID __declspec(selectany) CLSID_ConfigurationManager =
    {0x64ebf95d,0xba6f,0x47cb,{0x85,0x58,0xac,0x94,0x87,0x62,0x5e,0xd6}};
extern "C" const GUID __declspec(selectany) CLSID_CosmeticThreadFeatureData =
    {0x154778cb,0x11fc,0x40cc,{0x94,0xbe,0xb8,0x57,0x63,0x2c,0x49,0x9e}};
extern "C" const GUID __declspec(selectany) CLSID_CenterLine =
    {0x9680e56c,0x4d4e,0x4509,{0x97,0x42,0xc8,0x29,0xbe,0xfc,0xd3,0x9a}};
extern "C" const GUID __declspec(selectany) CLSID_ReferencePointCurveFeatureData =
    {0x1f440727,0x3a73,0x4128,{0x8d,0xa9,0xd2,0x0b,0xaf,0x34,0x1b,0xbc}};
extern "C" const GUID __declspec(selectany) CLSID_FreePointCurveFeatureData =
    {0x830fc5d2,0x05ef,0x48ef,{0xad,0xab,0xbf,0x0f,0xf2,0xb4,0xc6,0x77}};
extern "C" const GUID __declspec(selectany) CLSID_CompositeCurveFeatureData =
    {0x96eb4aa2,0x167f,0x4a41,{0x9f,0xae,0x2f,0x88,0xec,0xec,0x6f,0x92}};
extern "C" const GUID __declspec(selectany) CLSID_HelixFeatureData =
    {0x5118f2bc,0xa0e6,0x4205,{0xa9,0x6d,0x09,0xe9,0x98,0x19,0x00,0x30}};
extern "C" const GUID __declspec(selectany) CLSID_ImportedCurveFeatureData =
    {0xd50c4a6e,0x4cbc,0x4ea9,{0xb6,0xb8,0x10,0x62,0xba,0xa6,0x97,0xd2}};
extern "C" const GUID __declspec(selectany) CLSID_SketchRegion =
    {0xeb53b512,0xe23d,0x4b6a,{0xb4,0x8d,0x21,0x82,0x8a,0xf5,0xf1,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_SketchContour =
    {0xeb53b514,0xe23d,0x4b6a,{0xb4,0x8d,0x21,0x82,0x8a,0xf5,0xf1,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_MassProperty =
    {0xbcaf190b,0x5407,0x4ae0,{0x9c,0x9a,0xe7,0x19,0x43,0x61,0xfc,0x1b}};
extern "C" const GUID __declspec(selectany) CLSID_DrawingComponent =
    {0xd2e960f8,0x7d71,0x46ea,{0x96,0x1e,0x12,0x11,0xda,0xa3,0x53,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_SketchRelationManager =
    {0x468abd02,0xd693,0x4f03,{0x8e,0xca,0x2a,0x02,0x93,0xf5,0xe2,0xb2}};
extern "C" const GUID __declspec(selectany) CLSID_SketchRelation =
    {0xc453de5e,0xb50c,0x4745,{0x89,0x35,0x60,0x76,0x70,0x3c,0xf3,0xae}};
extern "C" const GUID __declspec(selectany) CLSID_Mate2 =
    {0x9ec0b96e,0x3592,0x40bb,{0xba,0x61,0xe9,0xa2,0x4d,0xca,0xa4,0x2c}};
extern "C" const GUID __declspec(selectany) CLSID_MateEntity2 =
    {0x92344712,0xe494,0x46cc,{0xab,0x7b,0x03,0x69,0xdb,0x51,0x85,0xc3}};
extern "C" const GUID __declspec(selectany) CLSID_SelectData =
    {0x5c891970,0x6a93,0x47ab,{0xa0,0xcd,0xbc,0x85,0xa4,0x48,0x72,0xc0}};
extern "C" const GUID __declspec(selectany) CLSID_TableAnnotation =
    {0xa51126c8,0xee44,0x48b9,{0xa9,0x1f,0x72,0x3c,0x64,0xcf,0xb7,0x93}};
extern "C" const GUID __declspec(selectany) CLSID_HoleTableAnnotation =
    {0x48cfe729,0x7ba8,0x4274,{0x98,0x6c,0xcd,0x5e,0x06,0x8d,0xbc,0xab}};
extern "C" const GUID __declspec(selectany) CLSID_HoleTable =
    {0xea2909eb,0x9e57,0x464b,{0xaa,0x3f,0x66,0xe5,0x54,0x70,0xad,0x6c}};
extern "C" const GUID __declspec(selectany) CLSID_DatumOrigin =
    {0xcac76aa7,0xc659,0x4214,{0xa4,0xfe,0xbc,0xf9,0x0b,0xc5,0xc3,0xd3}};
extern "C" const GUID __declspec(selectany) CLSID_BomTableAnnotation =
    {0x5eb57e29,0xb782,0x480f,{0x8a,0x28,0x3f,0x14,0x40,0xce,0xeb,0xf0}};
extern "C" const GUID __declspec(selectany) CLSID_BomFeature =
    {0xda78af57,0xc8ca,0x4516,{0x84,0xa9,0xd8,0xc8,0x31,0x6f,0x58,0x0a}};
extern "C" const GUID __declspec(selectany) CLSID_RevisionTableAnnotation =
    {0x1a19c5dc,0x3113,0x447c,{0x9c,0xaa,0x2c,0xee,0x14,0xa1,0xd7,0xba}};
extern "C" const GUID __declspec(selectany) CLSID_RevisionTableFeature =
    {0xda0d8d86,0x5c82,0x455f,{0x92,0xdd,0x22,0x3a,0x79,0xc2,0x95,0x18}};
extern "C" const GUID __declspec(selectany) CLSID_MateInPlace =
    {0x06c500af,0xde51,0x458b,{0x84,0xb2,0x09,0x54,0x26,0x00,0xa8,0xba}};
extern "C" const GUID __declspec(selectany) CLSID_PropertyManagerPageBitmapButton =
    {0xf88a1d38,0x8725,0x45f2,{0x99,0x8f,0x9e,0xe1,0x65,0x5b,0x87,0xa2}};
extern "C" const GUID __declspec(selectany) CLSID_CustomPropertyManager =
    {0x75467d64,0x77f6,0x4479,{0x8f,0xf6,0x0d,0xf8,0x2a,0xa2,0xe8,0x6a}};
extern "C" const GUID __declspec(selectany) IID_ILight =
    {0x9eeb4de9,0xac14,0x4a80,{0xb4,0x84,0x7e,0x41,0xaf,0x41,0xb5,0x6c}};
extern "C" const GUID __declspec(selectany) CLSID_Light =
    {0xce4c6464,0xb577,0x4a9e,{0x82,0x15,0xd0,0x0b,0xd0,0x14,0x9e,0x95}};
extern "C" const GUID __declspec(selectany) CLSID_RefPointFeatureData =
    {0x22245747,0x0420,0x4d86,{0x91,0x71,0x75,0x0e,0x6f,0x32,0xc1,0xa8}};
extern "C" const GUID __declspec(selectany) CLSID_RefPoint =
    {0xf5e056b0,0x9fe6,0x4d5b,{0x8b,0xb6,0x0e,0x2d,0x53,0xd9,0x9f,0xa5}};
extern "C" const GUID __declspec(selectany) CLSID_RefAxisFeatureData =
    {0x0d7dd9cb,0x1536,0x4ade,{0xa9,0x7c,0xd2,0xc7,0x0b,0x08,0x09,0xbf}};
extern "C" const GUID __declspec(selectany) CLSID_EdgePoint =
    {0x55bb6dbe,0x6f19,0x4e28,{0x91,0x8d,0x50,0x9c,0x53,0xd9,0xe6,0x0b}};
extern "C" const GUID __declspec(selectany) DIID_DTaskpaneViewEvents =
    {0xd78003d7,0x378a,0x46d5,{0x93,0xb3,0xbc,0xd8,0xab,0xc9,0xd3,0x4b}};
extern "C" const GUID __declspec(selectany) CLSID_TaskpaneView =
    {0xedbba0eb,0xb701,0x419e,{0xa4,0xae,0x34,0x09,0xdb,0xf1,0x2d,0x40}};
extern "C" const GUID __declspec(selectany) CLSID_Texture =
    {0x5a6d2ebf,0x9b91,0x4a1d,{0x89,0xd6,0xc5,0x63,0xde,0x8b,0x43,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_MateReference =
    {0xb303dc27,0x19b1,0x4358,{0xa6,0xff,0x4d,0x91,0x4b,0x70,0xb4,0x73}};
extern "C" const GUID __declspec(selectany) CLSID_PartingLineFeatureData =
    {0x35c4ca38,0x9625,0x4303,{0x96,0x60,0x26,0x6f,0x91,0xf6,0xc9,0xb4}};
extern "C" const GUID __declspec(selectany) CLSID_DeleteBodyFeatureData =
    {0x82c2f45a,0xcfb7,0x48b9,{0x82,0x6e,0x08,0x4d,0x00,0x1d,0xc3,0x1a}};
extern "C" const GUID __declspec(selectany) CLSID_PartingSurfaceFeatureData =
    {0x29ab8541,0x2c74,0x461d,{0xbc,0xfc,0x93,0xbd,0x90,0xf3,0x42,0x17}};
extern "C" const GUID __declspec(selectany) CLSID_ShutOffSurfaceFeatureData =
    {0x88aaa130,0x14a4,0x4f18,{0xab,0x24,0x01,0x50,0xef,0xe7,0x56,0xef}};
extern "C" const GUID __declspec(selectany) CLSID_ToolingSplitFeatureData =
    {0xa972458f,0xec07,0x4d11,{0x87,0x2a,0xc5,0xc2,0x07,0xd6,0xf5,0x80}};
extern "C" const GUID __declspec(selectany) CLSID_PtnrPMPage =
    {0x09731c48,0xe3c7,0x4154,{0x96,0x2c,0xcf,0xd5,0x07,0x14,0xed,0x45}};
extern "C" const GUID __declspec(selectany) CLSID_JoinFeatureData =
    {0x3a47cab7,0x6c3d,0x4de5,{0xa5,0xbb,0x41,0xe3,0xc1,0xd7,0xfb,0xd0}};
extern "C" const GUID __declspec(selectany) CLSID_Manipulator =
    {0xdde50233,0xe98d,0x4076,{0x81,0x5c,0x3e,0xc7,0xd4,0xa2,0x93,0xbf}};
extern "C" const GUID __declspec(selectany) CLSID_TriadManipulator =
    {0xfd8a3cf7,0x7fc8,0x442b,{0x97,0xcd,0xab,0x24,0x7f,0x81,0x33,0x5f}};
extern "C" const GUID __declspec(selectany) CLSID_FillSurfaceFeatureData =
    {0x5d0c251d,0xd518,0x43b1,{0x88,0xf5,0x3c,0x1e,0x35,0xd1,0x6d,0x4d}};
extern "C" const GUID __declspec(selectany) CLSID_MoveCopyBodyFeatureData =
    {0x3f7bb99e,0x6f60,0x4f99,{0x9f,0x80,0x9f,0x27,0x13,0x68,0x52,0x3a}};
extern "C" const GUID __declspec(selectany) CLSID_RuledSurfaceFeatureData =
    {0xdfebd0f6,0xcb0b,0x4e4a,{0xb7,0xa1,0x2b,0xe1,0x0c,0x83,0x9a,0xdd}};
extern "C" const GUID __declspec(selectany) CLSID_CavityFeatureData =
    {0xf7dd20c6,0x9b15,0x4413,{0x9d,0xc7,0xf8,0x53,0x3c,0x0d,0xd4,0x94}};
extern "C" const GUID __declspec(selectany) CLSID_WeldBead =
    {0xd5833e0a,0x5ed7,0x499a,{0x98,0x25,0x1f,0xfe,0xa5,0xe4,0xc7,0x26}};
extern "C" const GUID __declspec(selectany) CLSID_SplitLineFeatureData =
    {0x78072827,0xb489,0x4f93,{0x89,0x06,0xe2,0x58,0x00,0x85,0x08,0x99}};
extern "C" const GUID __declspec(selectany) CLSID_WrapSketchFeatureData =
    {0x4755397d,0x6f07,0x4f8f,{0xbb,0x62,0x6f,0x5f,0x50,0x9a,0x3c,0x25}};
extern "C" const GUID __declspec(selectany) CLSID_StructuralMemberFeatureData =
    {0xd1f5d09c,0x7509,0x4c45,{0x97,0xff,0xed,0x1d,0xbe,0xc2,0xe9,0x32}};
extern "C" const GUID __declspec(selectany) CLSID_EndCapFeatureData =
    {0x9b3407b8,0x880a,0x40a1,{0x8f,0x73,0xae,0x79,0xbc,0xeb,0x63,0x39}};
extern "C" const GUID __declspec(selectany) CLSID_GussetFeatureData =
    {0x55e2e1e1,0x0a43,0x4ba3,{0xbd,0x44,0xfb,0x08,0xa4,0x62,0x68,0xe9}};
extern "C" const GUID __declspec(selectany) CLSID_SplitBodyFeatureData =
    {0xd05eed21,0xdc9d,0x495f,{0x80,0x32,0xc9,0x97,0x39,0x2a,0x77,0x72}};
extern "C" const GUID __declspec(selectany) CLSID_CombineBodiesFeatureData =
    {0x056b7325,0xf108,0x450a,{0xab,0x35,0x4e,0xd2,0x49,0x1a,0x5a,0x73}};
extern "C" const GUID __declspec(selectany) CLSID_SketchManager =
    {0x588a6ac1,0xb775,0x424b,{0x87,0xa4,0x42,0x17,0x60,0x64,0x30,0x31}};
extern "C" const GUID __declspec(selectany) CLSID_DiagnoseResult =
    {0xf35738f4,0x35c9,0x4e87,{0xad,0x1b,0xbe,0xc2,0xca,0xba,0xd0,0x1b}};
extern "C" const GUID __declspec(selectany) CLSID_Spring =
    {0x74c82c9f,0x5198,0x4e20,{0xa3,0xa4,0x43,0xfe,0xfa,0xf6,0x82,0xee}};
extern "C" const GUID __declspec(selectany) CLSID_FaultEntity =
    {0xb0fd2a48,0x134f,0x4c92,{0x81,0x56,0x2c,0x30,0xd5,0x6e,0x30,0xc8}};
extern "C" const GUID __declspec(selectany) CLSID_SwOLEObject =
    {0x71702538,0x317c,0x4af9,{0xb5,0xde,0x01,0xe8,0xfd,0x3d,0x26,0x76}};
extern "C" const GUID __declspec(selectany) CLSID_LibraryFeatureData =
    {0x330ccc95,0x878a,0x42b3,{0xa4,0x98,0xce,0xf4,0xee,0x7a,0x0a,0x29}};
extern "C" const GUID __declspec(selectany) CLSID_Simulation =
    {0x698a7c5d,0x389d,0x4ce1,{0xa9,0x84,0x7b,0xf3,0x2c,0x6b,0x40,0xf0}};
extern "C" const GUID __declspec(selectany) CLSID_SimulationGravityFeatureData =
    {0x24ff20c9,0x8675,0x41f0,{0x86,0x42,0x68,0x65,0xe8,0xe1,0xb4,0x3c}};
extern "C" const GUID __declspec(selectany) CLSID_SimulationMotorFeatureData =
    {0x8f7f4424,0xb9d6,0x4f67,{0xa7,0x19,0xd2,0x06,0xc5,0x63,0x21,0xe3}};
extern "C" const GUID __declspec(selectany) CLSID_SimulationLinearSpringFeatureData =
    {0x2ffab400,0x3adb,0x4435,{0x92,0x95,0x72,0xb3,0x18,0xe0,0xbe,0x19}};
extern "C" const GUID __declspec(selectany) CLSID_Camera =
    {0xdf427094,0x16b0,0x4783,{0x83,0x60,0x1d,0xb9,0x3e,0xe8,0xfc,0xf6}};
extern "C" const GUID __declspec(selectany) CLSID_WeldmentBeadFeatureData =
    {0x35310c0d,0x3b12,0x470d,{0xaa,0x21,0x2c,0x3c,0x78,0xb2,0x7a,0xbc}};
extern "C" const GUID __declspec(selectany) CLSID_WeldmentTrimExtendFeatureData =
    {0xe3b6aed5,0xa261,0x4101,{0x92,0x49,0xc6,0x0a,0xab,0x9f,0x57,0x2e}};
extern "C" const GUID __declspec(selectany) CLSID_PropertyManagerPageTab =
    {0x8d1e6d74,0x8786,0x463a,{0x86,0xcf,0x7b,0x80,0x48,0x07,0xda,0x17}};
extern "C" const GUID __declspec(selectany) CLSID_BodyFolder =
    {0x23fc4cbc,0x18b0,0x4142,{0x99,0x41,0x5c,0x4a,0x18,0xeb,0x5c,0x78}};
extern "C" const GUID __declspec(selectany) CLSID_CommandManager =
    {0x5a0b252c,0x1c2a,0x46ad,{0xb7,0x06,0xd0,0x3c,0xa9,0xe9,0x2b,0x15}};
extern "C" const GUID __declspec(selectany) CLSID_CommandGroup =
    {0xe80b6827,0x05ff,0x44c1,{0x8a,0xbc,0x2e,0xc2,0xdc,0x92,0x65,0x2b}};
extern "C" const GUID __declspec(selectany) CLSID_CoreFeatureData =
    {0x2d47768f,0x0143,0x498b,{0x99,0xff,0x68,0x26,0xd7,0x75,0xec,0x00}};
extern "C" const GUID __declspec(selectany) CLSID_AdvancedSelectionCriteria =
    {0x53bd3695,0x438e,0x4095,{0xb8,0x9f,0x51,0x9b,0xfe,0x17,0x43,0x8e}};
extern "C" const GUID __declspec(selectany) CLSID_GeneralTableFeature =
    {0xd7883d09,0xb331,0x4710,{0x93,0xef,0xa1,0xd7,0xab,0x9f,0x68,0xfb}};
extern "C" const GUID __declspec(selectany) CLSID_DimensionTolerance =
    {0x3c9a6d24,0xaa35,0x480f,{0xb2,0x0e,0x86,0xe8,0x68,0xa5,0x5a,0x60}};
extern "C" const GUID __declspec(selectany) CLSID_CommentFolder =
    {0xf9cb3678,0x7605,0x481b,{0xbd,0xe9,0x79,0x62,0x18,0x4b,0x3c,0x18}};
extern "C" const GUID __declspec(selectany) CLSID_Comment =
    {0x47d95fd6,0x85ad,0x4dd4,{0x9c,0xb8,0x59,0x8d,0xab,0xc6,0x8c,0x88}};
extern "C" const GUID __declspec(selectany) CLSID_Animation =
    {0x37e2a1fc,0x953e,0x4383,{0xb1,0x90,0xdd,0xb0,0x9e,0x06,0x09,0x6e}};
extern "C" const GUID __declspec(selectany) CLSID_ImportIgesData =
    {0xea5cd784,0x08d9,0x492e,{0x84,0x55,0x1d,0x39,0xc6,0x72,0x06,0x31}};
extern "C" const GUID __declspec(selectany) CLSID_TableAnchor =
    {0x3b6e83f4,0xe4e5,0x4378,{0x88,0xa4,0x38,0x5a,0x43,0xe0,0xdf,0x71}};
extern "C" const GUID __declspec(selectany) CLSID_PropertyManagerPageSlider =
    {0xbdef2eb0,0x0cce,0x4074,{0xbd,0xd5,0x01,0x7f,0xe6,0xf5,0x4d,0xc8}};
extern "C" const GUID __declspec(selectany) CLSID_MateLoadReference =
    {0xc0e2527f,0x34b4,0x4497,{0x84,0x69,0x32,0x67,0xcc,0xd6,0x4a,0x65}};
extern "C" const GUID __declspec(selectany) CLSID_SketchBlockDefinition =
    {0x001ea3c7,0x4fa3,0x488e,{0x92,0x88,0xb7,0x74,0x93,0x94,0x93,0x02}};
extern "C" const GUID __declspec(selectany) CLSID_SketchBlockInstance =
    {0x460c8a97,0xf80f,0x40ef,{0x94,0x13,0xae,0xa1,0x2a,0xad,0x49,0xe8}};
extern "C" const GUID __declspec(selectany) CLSID_UserProgressBar =
    {0x6f70fac3,0xce70,0x4041,{0xb6,0x26,0x6b,0x21,0x9f,0x6c,0xfd,0x1d}};
extern "C" const GUID __declspec(selectany) CLSID_DragArrowManipulator =
    {0xd1f4e2f1,0xd7db,0x46b5,{0x86,0x30,0x41,0x03,0x96,0xa8,0x64,0x97}};
extern "C" const GUID __declspec(selectany) CLSID_MoveFaceFeatureData =
    {0x43a71fba,0xd8a8,0x4d33,{0xa5,0xd7,0x12,0xcf,0x1f,0x6a,0x48,0x3f}};
extern "C" const GUID __declspec(selectany) CLSID_HealEdgesFeatureData =
    {0xe37bdc96,0x2b2f,0x45c3,{0xb9,0x05,0x16,0x73,0x87,0xb4,0xbd,0x66}};
extern "C" const GUID __declspec(selectany) CLSID_WeldmentCutListAnnotation =
    {0x72689891,0x49c6,0x4f9f,{0xbe,0x07,0x2a,0x16,0x07,0x4a,0x9b,0x34}};
extern "C" const GUID __declspec(selectany) CLSID_WeldmentCutListFeature =
    {0x1b6433f7,0x8434,0x494c,{0x90,0xaf,0xa3,0xe9,0xc5,0x32,0x1c,0x6d}};
extern "C" const GUID __declspec(selectany) CLSID_ModelWindow =
    {0xe0d6233d,0x670f,0x4922,{0x98,0x8f,0x81,0x4e,0xab,0xc8,0xd2,0x2b}};
extern "C" const GUID __declspec(selectany) DIID_DMouseEvents =
    {0x5266b813,0xfb5f,0x4831,{0xae,0xd1,0xa6,0x0a,0xb4,0x31,0x99,0x4a}};
extern "C" const GUID __declspec(selectany) CLSID_Mouse =
    {0xc2fb44a9,0x9e38,0x449c,{0xa8,0x4a,0xa3,0x23,0x7b,0x13,0x9f,0xf5}};
extern "C" const GUID __declspec(selectany) CLSID_ImportDxfDwgData =
    {0xd1921253,0x7fef,0x42d9,{0xb4,0xd0,0x0b,0xc4,0x67,0x34,0xae,0x23}};
extern "C" const GUID __declspec(selectany) CLSID_InterferenceDetectionMgr =
    {0x0d82d71b,0x8c8c,0x4833,{0xae,0xf8,0x3b,0x4b,0x05,0xe0,0x10,0x53}};
extern "C" const GUID __declspec(selectany) CLSID_Interference =
    {0xda88e85d,0xebc5,0x4ed3,{0x8d,0x2b,0xde,0xe1,0x4a,0xdf,0x2f,0x05}};
extern "C" const GUID __declspec(selectany) CLSID_SplineHandle =
    {0x155b2d9e,0x5d63,0x4571,{0x87,0xce,0x08,0x6d,0xe4,0xa5,0x34,0x1d}};
extern "C" const GUID __declspec(selectany) CLSID_SectionViewData =
    {0x2953a9b1,0xb272,0x48fa,{0x93,0x2d,0x75,0xa0,0xab,0xc9,0x86,0x98}};
extern "C" const GUID __declspec(selectany) CLSID_MaterialVisualPropertiesData =
    {0xa53e3bd4,0x6f50,0x4407,{0x8d,0x41,0x40,0xce,0xfa,0x46,0x64,0x34}};
extern "C" const GUID __declspec(selectany) IID_IPropertyManagerPageBitmap =
    {0x363f31c7,0x54c0,0x4d22,{0xaf,0xc3,0xe8,0x2f,0xd4,0x82,0xca,0xf6}};
extern "C" const GUID __declspec(selectany) CLSID_PropertyManagerPageBitmap =
    {0xf387861d,0x261d,0x4be4,{0x8c,0xef,0xe5,0x6b,0xf1,0x2f,0xfd,0x03}};
extern "C" const GUID __declspec(selectany) CLSID_ExportPdfData =
    {0x3881c638,0x0401,0x4d74,{0xb7,0x05,0x5e,0x69,0xcd,0xdd,0x4b,0xf7}};
extern "C" const GUID __declspec(selectany) CLSID_Print3DDialog =
    {0xb58f1af0,0xaaef,0x4c4b,{0xa0,0x58,0x4b,0xe0,0x92,0xd2,0xd4,0xa6}};
extern "C" const GUID __declspec(selectany) CLSID_SilhouetteEdge =
    {0x9b004641,0x2e0a,0x46a7,{0x9c,0x6f,0x18,0xe2,0xbe,0xe8,0x96,0x0c}};
extern "C" const GUID __declspec(selectany) CLSID_AnnotationView =
    {0xc7956dc8,0x0ec1,0x44d3,{0x92,0xdd,0xc0,0xae,0xa9,0xf9,0xf5,0xba}};
extern "C" const GUID __declspec(selectany) CLSID_DerivedPartFeatureData =
    {0x8bf722b2,0x6470,0x4ee4,{0x99,0xca,0x92,0x97,0x9b,0x52,0xf7,0xd9}};
extern "C" const GUID __declspec(selectany) CLSID_Measure =
    {0x5ed32255,0x5af4,0x4a9c,{0x9c,0xca,0x1a,0xd7,0xc3,0x30,0xdc,0xe1}};
extern "C" const GUID __declspec(selectany) CLSID_ImportStepData =
    {0x87254726,0x68d1,0x4930,{0xa2,0x5b,0xd0,0xb8,0xee,0xfb,0xb2,0x02}};
extern "C" const GUID __declspec(selectany) CLSID_SketchPicture =
    {0x297b60c7,0xc169,0x4812,{0xbc,0xd2,0x2c,0x13,0xa2,0xae,0x20,0xe3}};
extern "C" const GUID __declspec(selectany) CLSID_SketchPath =
    {0xa123688d,0x775a,0x496b,{0x92,0x4d,0x53,0x5e,0xeb,0x50,0x82,0x89}};
extern "C" const GUID __declspec(selectany) CLSID_Decal =
    {0xd7882be7,0x2248,0x4d94,{0xa3,0x60,0x2f,0xb5,0xf8,0x44,0x91,0x8d}};
extern "C" const GUID __declspec(selectany) CLSID_FaceDecalProperties =
    {0x881d57b6,0x5bf1,0x4a01,{0x8e,0x08,0x6d,0xd0,0xd8,0x05,0xe0,0x6d}};
extern "C" const GUID __declspec(selectany) CLSID_RenderMaterial =
    {0x4434d3c8,0x11bd,0x4c32,{0x93,0xb4,0x17,0x94,0x74,0x1c,0x59,0xeb}};
extern "C" const GUID __declspec(selectany) CLSID_CommandTab =
    {0x44c96fe4,0x754b,0x4593,{0xab,0x83,0x13,0x58,0xcc,0x9d,0xb6,0x7b}};
extern "C" const GUID __declspec(selectany) CLSID_CommandTabBox =
    {0xdc032189,0xbd5d,0x49be,{0xb5,0x99,0x65,0x63,0x92,0x2f,0x05,0xea}};
extern "C" const GUID __declspec(selectany) CLSID_HoleSeriesFeatureData =
    {0x7db64c86,0x0a66,0x4fb5,{0x8e,0x93,0x4a,0x1b,0x7d,0x48,0x23,0xdc}};
extern "C" const GUID __declspec(selectany) CLSID_JournalManager =
    {0x12e5ed6c,0x0a74,0x4a9b,{0xb7,0x80,0x4c,0x6b,0xd6,0xe9,0x53,0x0c}};
extern "C" const GUID __declspec(selectany) CLSID_DocumentSpecification =
    {0x592eeb91,0x01e3,0x4558,{0xad,0xa5,0x9c,0xd3,0xc1,0x8c,0x8f,0xfb}};
extern "C" const GUID __declspec(selectany) CLSID_MidSurface3 =
    {0x4f1ae35d,0x2ad0,0x4cd3,{0xad,0x48,0xb7,0x50,0xb5,0x26,0x81,0x7b}};
extern "C" const GUID __declspec(selectany) CLSID_SimulationDamperFeatureData =
    {0xc46c8663,0x53ac,0x48df,{0x93,0x88,0x06,0xcd,0xc6,0x12,0x44,0xf6}};
extern "C" const GUID __declspec(selectany) CLSID_Simulation3DContactFeatureData =
    {0x3c66bf7e,0xb719,0x4942,{0xae,0xb3,0x61,0xad,0xf9,0xad,0xfa,0x8f}};
extern "C" const GUID __declspec(selectany) CLSID_SimulationForceFeatureData =
    {0x5675ada4,0xece7,0x427b,{0xaa,0xc0,0x06,0xab,0xa7,0x67,0xa4,0x6a}};
extern "C" const GUID __declspec(selectany) CLSID_SaveBodyFeatureData =
    {0x8fde04a5,0x92b0,0x4d33,{0x80,0x6c,0x5a,0x77,0x2b,0xf4,0x82,0x00}};
extern "C" const GUID __declspec(selectany) CLSID_TreeControlItem =
    {0xc87a625c,0x6dee,0x4339,{0xb7,0xe1,0x0d,0x87,0xd1,0x35,0x20,0x18}};
extern "C" const GUID __declspec(selectany) CLSID_CoordinateSystemFeatureData =
    {0x55e35087,0x3f0b,0x48fd,{0x92,0x4f,0xba,0x95,0x6c,0x3f,0x5e,0xd0}};
extern "C" const GUID __declspec(selectany) CLSID_TitleBlock =
    {0xc720c4ac,0xd477,0x42e1,{0xb9,0xfa,0x34,0x94,0x15,0xf7,0xcb,0x1a}};
extern "C" const GUID __declspec(selectany) CLSID_SimulationSpringFeatureData =
    {0x96b37191,0x8c54,0x49eb,{0x9b,0x4e,0x95,0x76,0x6e,0x58,0x22,0xab}};
extern "C" const GUID __declspec(selectany) IID_ISldWorks =
    {0x83a33d22,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IModelDoc =
    {0x83a33d46,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IEnumDocuments =
    {0x83a33db3,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ISelectionMgr =
    {0x83a33d59,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IComponent =
    {0x83a33d9a,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IEnumComponents =
    {0x51efb944,0xd449,0x11d3,{0xae,0xbe,0x00,0xc0,0x4f,0x68,0x3c,0xba}};
extern "C" const GUID __declspec(selectany) IID_IExplodeStep =
    {0x7241680b,0x0bc6,0x11d4,{0xae,0xee,0x00,0xc0,0x4f,0x61,0x02,0x5c}};
extern "C" const GUID __declspec(selectany) IID_ISimpleFilletFeatureData =
    {0xcc929f0b,0xb404,0x11d3,{0xb9,0x81,0x00,0x10,0x83,0x02,0x9a,0x97}};
extern "C" const GUID __declspec(selectany) IID_IBody =
    {0x83a33d3c,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IEnumBodies =
    {0x83a33d96,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IFace =
    {0x83a33d3e,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IEnumFaces =
    {0x83a33d5b,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IDomeFeatureData =
    {0x83a33daf,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ISurface =
    {0x83a33d40,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ICurve =
    {0x83a33d44,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IEnumCurves =
    {0x5b57e3bc,0x7139,0x11d3,{0xae,0xa2,0x00,0xc0,0x4f,0x68,0x3c,0xba}};
extern "C" const GUID __declspec(selectany) IID_IBody2 =
    {0x3a075bfd,0x9962,0x4431,{0x83,0x21,0x7a,0xf4,0x90,0x3c,0x55,0xad}};
extern "C" const GUID __declspec(selectany) IID_IEnumBodies2 =
    {0x97a9befa,0x6814,0x4fa6,{0xac,0xb4,0x8c,0xc8,0x4f,0x76,0xfb,0x99}};
extern "C" const GUID __declspec(selectany) IID_IImportedCurveFeatureData =
    {0x6dc71ec8,0x09f6,0x4d6f,{0xac,0x3f,0x19,0xd8,0xea,0x25,0x8e,0x0b}};
extern "C" const GUID __declspec(selectany) IID_IFace2 =
    {0x4a8ba4d8,0xda25,0x4b75,{0x8e,0x2d,0x49,0x22,0xb7,0x4d,0x81,0xed}};
extern "C" const GUID __declspec(selectany) IID_IFaceHatch =
    {0xe0a98a37,0x8780,0x4e5f,{0xa2,0x8a,0xc7,0xc6,0xaf,0x25,0x23,0x1c}};
extern "C" const GUID __declspec(selectany) IID_IEnumFaces2 =
    {0x61ecff18,0xac2c,0x405e,{0xb9,0xb8,0x30,0xd8,0x5f,0xdb,0x50,0x87}};
extern "C" const GUID __declspec(selectany) IID_IEdge =
    {0x83a33d42,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IEnumEdges =
    {0x83a33d5f,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IMidSurface2 =
    {0x5b6e8476,0x461f,0x43af,{0xb7,0x84,0x90,0xd3,0xcd,0x74,0x33,0x7c}};
extern "C" const GUID __declspec(selectany) IID_IReferenceCurve =
    {0x83a33da3,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ISketchText =
    {0x83a33dc5,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ITessellation =
    {0x699c7492,0xdb56,0x4cc2,{0xb7,0xa2,0x9f,0xfd,0x56,0x69,0x84,0x34}};
extern "C" const GUID __declspec(selectany) IID_IMidSurface =
    {0x83a33d88,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IMidSurface3 =
    {0x7e4684a4,0x9af8,0x4d28,{0x95,0x3d,0x56,0xca,0xbf,0x23,0xd1,0xbd}};
extern "C" const GUID __declspec(selectany) IID_IEnumCoEdges =
    {0x83a33d61,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ICoEdge =
    {0x83a33d57,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ILoop =
    {0x83a33d53,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IDiagnoseResult =
    {0x08cc54d0,0xeca9,0x416c,{0xab,0xf0,0x07,0x58,0x68,0x43,0xd5,0x1d}};
extern "C" const GUID __declspec(selectany) IID_IEnumLoops =
    {0x83a33d5d,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ILoop2 =
    {0x9350ca6e,0x0adb,0x485a,{0x89,0x41,0x94,0x07,0xdd,0x7b,0x3b,0x8e}};
extern "C" const GUID __declspec(selectany) IID_IEnumLoops2 =
    {0x9a6ad388,0x3fc9,0x48de,{0xbf,0xa5,0xb8,0x95,0x34,0x33,0xab,0x36}};
extern "C" const GUID __declspec(selectany) IID_IVertex =
    {0x83a33d63,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ISimpleHoleFeatureData =
    {0x1d06fd54,0x96dd,0x11d3,{0xae,0xaa,0x00,0xc0,0x4f,0x68,0x3c,0xba}};
extern "C" const GUID __declspec(selectany) IID_IWizardHoleFeatureData =
    {0x887ab457,0xa739,0x11d3,{0xb9,0x7f,0x00,0x10,0x83,0x02,0x9a,0x97}};
extern "C" const GUID __declspec(selectany) IID_IVariableFilletFeatureData =
    {0xcc929f0d,0xb404,0x11d3,{0xb9,0x81,0x00,0x10,0x83,0x02,0x9a,0x97}};
extern "C" const GUID __declspec(selectany) IID_IExtrudeFeatureData =
    {0x908a7175,0xb72c,0x11d3,{0xb9,0x81,0x00,0x10,0x83,0x02,0x9a,0x97}};
extern "C" const GUID __declspec(selectany) IID_IModelDoc2 =
    {0xb90793fb,0xef3d,0x4b80,{0xa5,0xc4,0x99,0x95,0x9c,0xdb,0x6c,0xeb}};
extern "C" const GUID __declspec(selectany) IID_IModelWindow =
    {0x84bc447e,0xd4a9,0x43cf,{0x82,0x87,0x5d,0x9f,0x5a,0xb0,0xca,0x41}};
extern "C" const GUID __declspec(selectany) IID_IFrame =
    {0x83a33d48,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IEnumDocuments2 =
    {0x76d82d71,0x339a,0x4d1c,{0x91,0xa1,0xf6,0xac,0x0c,0xf9,0xb6,0x25}};
extern "C" const GUID __declspec(selectany) IID_IModelView =
    {0x83a33d4c,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IEnumModelViews =
    {0x83a33db1,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IMathTransform =
    {0xf7d97f82,0x162e,0x11d4,{0xae,0xab,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_IMassProperty =
    {0x158bad02,0xd515,0x4400,{0xad,0xa4,0xf9,0x94,0x1c,0x97,0x4d,0xc1}};
extern "C" const GUID __declspec(selectany) IID_IMathVector =
    {0xf7d97f86,0x162e,0x11d4,{0xae,0xab,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_IMathPoint =
    {0xf7d97f84,0x162e,0x11d4,{0xae,0xab,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_ICamera =
    {0x48bf52ea,0x4654,0x4227,{0x8c,0x54,0x8a,0xf4,0x9c,0x3b,0xce,0xf2}};
extern "C" const GUID __declspec(selectany) IID_ICallout =
    {0x9caaa1aa,0xf2fc,0x11d5,{0xaf,0x66,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IRefPlane =
    {0x83a33d84,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ISectionViewData =
    {0xf73fa7fd,0xc4e7,0x44ac,{0x82,0xfa,0x3e,0x03,0xa1,0x1d,0xdb,0x21}};
extern "C" const GUID __declspec(selectany) IID_ISpring =
    {0x0f8f1b36,0xfaba,0x4552,{0x82,0xc3,0x55,0x11,0xca,0x51,0x24,0xe6}};
extern "C" const GUID __declspec(selectany) IID_IMathUtility =
    {0xf7d97f80,0x162e,0x11d4,{0xae,0xab,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_IRefPoint =
    {0x71520755,0x04d2,0x4075,{0xb7,0x56,0x12,0x44,0x95,0xc5,0x91,0xc5}};
extern "C" const GUID __declspec(selectany) IID_ITriadManipulator =
    {0x173137b4,0x84ac,0x428c,{0x8f,0x04,0xec,0x0e,0x9f,0xce,0xa3,0x90}};
extern "C" const GUID __declspec(selectany) IID_IDragArrowManipulator =
    {0x4a9ce84f,0x42b5,0x4047,{0xbf,0x37,0xec,0x2e,0x10,0x1b,0x42,0xa2}};
extern "C" const GUID __declspec(selectany) IID_IPropertyManagerPageSelectionbox =
    {0x96567556,0x1eda,0x11d5,{0xaf,0x25,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_ISketch =
    {0x83a33d51,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IEnumSketchPoints =
    {0x83a33dcd,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ISketchPoint =
    {0x83a33dbd,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ISketchSlot =
    {0xe64199c3,0x6876,0x412b,{0xa9,0x24,0x5f,0x62,0xaf,0x5e,0x6c,0x83}};
extern "C" const GUID __declspec(selectany) IID_ISketchSpline =
    {0x83a33dcb,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ISketchLine =
    {0x83a33dc1,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ISketchArc =
    {0x83a33dc3,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ISketchEllipse =
    {0x83a33dc7,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ISketchParabola =
    {0x83a33dc9,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ISelectData =
    {0x4df2e524,0xc744,0x4c8b,{0x92,0xd5,0x1b,0x96,0xec,0xa5,0xa0,0xd0}};
extern "C" const GUID __declspec(selectany) IID_ISketchHatch =
    {0xc3d00926,0x4068,0x11d3,{0xae,0x9b,0x00,0xc0,0x4f,0x68,0x3c,0xba}};
extern "C" const GUID __declspec(selectany) IID_IEnumSketchHatches =
    {0x54729b8e,0x4086,0x11d3,{0xae,0x9b,0x00,0xc0,0x4f,0x68,0x3c,0xba}};
extern "C" const GUID __declspec(selectany) IID_ISketchRegion =
    {0xeb53b511,0xe23d,0x4b6a,{0xb4,0x8d,0x21,0x82,0x8a,0xf5,0xf1,0x51}};
extern "C" const GUID __declspec(selectany) IID_IManipulator =
    {0xc73d0a8d,0xb615,0x4f79,{0xbf,0x31,0x9e,0xc4,0x90,0x16,0xa8,0x61}};
extern "C" const GUID __declspec(selectany) IID_IModelViewManager =
    {0x1aa249ff,0xb758,0x440a,{0x8b,0x88,0x26,0x51,0x2f,0x38,0x5b,0xf3}};
extern "C" const GUID __declspec(selectany) IID_IView =
    {0x83a33d50,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IProjectionArrow =
    {0xa2227e65,0xa3a7,0x11d4,{0xae,0xff,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IBreakLine =
    {0x54e1ffbc,0xd989,0x437f,{0xa7,0x01,0x62,0xbd,0xa3,0x9f,0xd1,0x95}};
extern "C" const GUID __declspec(selectany) IID_ISilhouetteEdge =
    {0xb7a5b9b2,0xca73,0x45b8,{0xa4,0x1d,0x38,0xfb,0x6f,0x2d,0x3b,0x6e}};
extern "C" const GUID __declspec(selectany) IID_INote =
    {0x83a33d55,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IBalloonStack =
    {0x4944f9e6,0xbf50,0x11d5,{0xaf,0x56,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IAnnotation =
    {0x83a33da9,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IAnnotationView =
    {0x78d7fda3,0x83d7,0x4c01,{0x9e,0x54,0x73,0xab,0x48,0x27,0xcc,0x4e}};
extern "C" const GUID __declspec(selectany) IID_IMultiJogLeader =
    {0x01eb5266,0x6ca9,0x4f59,{0xb0,0xb4,0xa0,0x40,0xdd,0x1c,0xcf,0xb6}};
extern "C" const GUID __declspec(selectany) IID_IGtol =
    {0x83a33d4a,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ISFSymbol =
    {0x83a33d8e,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IDatumTag =
    {0x83a33d90,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IDatumTargetSym =
    {0x83a33d92,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IWeldSymbol =
    {0x83a33d94,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ICThread =
    {0x83a33d9e,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ICustomSymbol =
    {0x83a33db5,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IDowelSymbol =
    {0x55aacd8b,0x97c5,0x11d5,{0xaf,0x4b,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_ICenterMark =
    {0x6beb0423,0xeda4,0x11d5,{0xaf,0x64,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_ICenterLine =
    {0x90de8cd7,0xcffc,0x414b,{0x83,0x80,0x13,0x1c,0x73,0x9f,0x9f,0xb5}};
extern "C" const GUID __declspec(selectany) IID_IWeldBead =
    {0x66f09b08,0x8a71,0x4283,{0xa9,0x43,0x3f,0x90,0x56,0x53,0xc8,0x59}};
extern "C" const GUID __declspec(selectany) IID_IDisplayDimension =
    {0x83a33da1,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IEnumDisplayDimensions =
    {0x83a33dab,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IDimension =
    {0x83a33d3a,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IFeature =
    {0x83a33d38,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IComment =
    {0x4e23a946,0x7d96,0x40a2,{0xbd,0xa0,0xfd,0xf9,0x76,0x7c,0x43,0x8d}};
extern "C" const GUID __declspec(selectany) IID_ITableAnchor =
    {0x94d89c12,0x93e7,0x4da1,{0x92,0x39,0x5e,0x93,0x83,0x0b,0x56,0x35}};
extern "C" const GUID __declspec(selectany) IID_ITitleBlock =
    {0x0a002df8,0x354e,0x4376,{0x9a,0x08,0xe3,0x13,0x52,0xe6,0x1d,0x32}};
extern "C" const GUID __declspec(selectany) IID_ISketchPicture =
    {0x0aba4670,0x6fbe,0x4f2e,{0xbe,0x80,0x5c,0x33,0xea,0x2c,0xf7,0x7b}};
extern "C" const GUID __declspec(selectany) IID_ISimulation =
    {0xb2a77cec,0x857c,0x43be,{0x9e,0x28,0x10,0x62,0x01,0x21,0x2b,0x43}};
extern "C" const GUID __declspec(selectany) IID_IModeler =
    {0x83a33d73,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IBodyFolder =
    {0xbcb39259,0xf2aa,0x47fd,{0x80,0x99,0x06,0x5b,0x09,0x50,0x95,0xad}};
extern "C" const GUID __declspec(selectany) IID_ICommentFolder =
    {0x693e3d8b,0x3cb9,0x4d5c,{0x9f,0xcf,0xe0,0x21,0x14,0x9b,0xbc,0x38}};
extern "C" const GUID __declspec(selectany) IID_IComponent2 =
    {0x655d6f2a,0x5441,0x45d1,{0x8c,0xba,0xd3,0x5f,0xb2,0x69,0x88,0xe4}};
extern "C" const GUID __declspec(selectany) IID_IDrawingComponent =
    {0xf25e6093,0x1a6f,0x46d3,{0x98,0x66,0x86,0x09,0x34,0xdf,0x61,0x1d}};
extern "C" const GUID __declspec(selectany) IID_IEnumComponents2 =
    {0xf6804d12,0xb73a,0x49af,{0x81,0xc6,0x05,0xba,0xbb,0x58,0xb8,0x12}};
extern "C" const GUID __declspec(selectany) IID_IDrSection =
    {0xf183a33f,0xd4db,0x11d3,{0xae,0xb2,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IEnumDrSections =
    {0x585a6a15,0xe95b,0x11d3,{0xae,0xbc,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IConfiguration =
    {0x83a33d98,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IConfigurationManager =
    {0x8db64337,0xf36e,0x47cc,{0xbb,0xbc,0xb4,0xb9,0x79,0xd3,0x15,0x05}};
extern "C" const GUID __declspec(selectany) IID_IDragOperator =
    {0xe0aace0f,0x3a47,0x437e,{0x99,0xb4,0x93,0x30,0xcd,0x61,0x86,0xba}};
extern "C" const GUID __declspec(selectany) IID_IMateEntity2 =
    {0xce7fe69d,0xbcfa,0x441f,{0xa3,0x7d,0xe7,0x40,0x54,0x64,0x58,0xa4}};
extern "C" const GUID __declspec(selectany) IID_IInterference =
    {0xf04ec279,0xedf3,0x4a8e,{0xbf,0x87,0xe3,0x23,0x7c,0xbc,0xcd,0x8c}};
extern "C" const GUID __declspec(selectany) IID_IInterferenceDetectionMgr =
    {0xeae282bd,0x588a,0x4c1b,{0xad,0x99,0x5f,0xe6,0x08,0x1c,0x45,0x85}};
extern "C" const GUID __declspec(selectany) IID_IMateEntity =
    {0x83a33d8c,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IMirrorPatternFeatureData =
    {0x414f4f1e,0x30ec,0x11d4,{0xae,0xeb,0x00,0xc0,0x4f,0x68,0x3c,0xba}};
extern "C" const GUID __declspec(selectany) IID_ICircularPatternFeatureData =
    {0xdbbf39de,0x7ab5,0x11d4,{0xae,0xb6,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_ILinearPatternFeatureData =
    {0xf86d1e94,0x7de8,0x11d4,{0xae,0xb7,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_ITablePatternFeatureData =
    {0xe5d1af7c,0x7f5d,0x11d4,{0xae,0xb7,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_ISketchPatternFeatureData =
    {0xae998464,0x8050,0x11d4,{0xae,0xb7,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_IMirrorSolidFeatureData =
    {0xe9172718,0x836b,0x11d4,{0xae,0xb7,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_ISheetMetalFeatureData =
    {0x2f6c1e88,0xf2d6,0x11d4,{0xae,0xd5,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_IBendsFeatureData =
    {0xf3bdb64e,0xf7c6,0x11d4,{0xae,0xd6,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_IBaseFlangeFeatureData =
    {0xc61e9dd6,0x0813,0x11d5,{0xae,0xdd,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_IEdgeFlangeFeatureData =
    {0xb58e432a,0x09c8,0x11d5,{0xae,0xdd,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_IMiterFlangeFeatureData =
    {0xe6194f72,0x0cec,0x11d5,{0xae,0xdd,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_ISketchedBendFeatureData =
    {0xa4d90a70,0x0da5,0x11d5,{0xae,0xdd,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_IClosedCornerFeatureData =
    {0x2134cbfc,0x0dda,0x11d5,{0xae,0xdd,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_IFoldsFeatureData =
    {0x32700a62,0x0e5c,0x11d5,{0xae,0xdd,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_IFlatPatternFeatureData =
    {0x00644208,0x0e6c,0x11d5,{0xae,0xdd,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_ILocalLinearPatternFeatureData =
    {0x9890c04c,0x1196,0x11d5,{0xae,0xde,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_ILocalCircularPatternFeatureData =
    {0xf2e81434,0x13fb,0x11d5,{0xae,0xde,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_IDerivedPatternFeatureData =
    {0x98eadb32,0x141a,0x11d5,{0xae,0xde,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_IProjectionCurveFeatureData =
    {0x459f4b5c,0x7f8c,0x4a7e,{0x8a,0xa0,0xfc,0xfb,0x6e,0xd2,0xd2,0x86}};
extern "C" const GUID __declspec(selectany) IID_IScaleFeatureData =
    {0xe7631115,0xf299,0x4852,{0x9d,0x37,0xfc,0x95,0x08,0xa0,0x0b,0xc1}};
extern "C" const GUID __declspec(selectany) IID_IShellFeatureData =
    {0x58252a5a,0x82af,0x49ef,{0xa2,0xfe,0xe8,0xc9,0x95,0x13,0x2f,0x84}};
extern "C" const GUID __declspec(selectany) IID_ISweepFeatureData =
    {0x07799f9d,0x7e4f,0x40de,{0x87,0xae,0xae,0xba,0xab,0xa6,0xa3,0xbc}};
extern "C" const GUID __declspec(selectany) IID_ILoftFeatureData =
    {0xee8d87fe,0x5202,0x45e9,{0x8e,0x5c,0x91,0x08,0x4c,0x13,0x41,0x68}};
extern "C" const GUID __declspec(selectany) IID_IThickenFeatureData =
    {0x85f4dd78,0x9430,0x4937,{0x85,0x04,0x55,0xd2,0x4f,0x2c,0xee,0x41}};
extern "C" const GUID __declspec(selectany) IID_ISurfaceCutFeatureData =
    {0xdfb6c63b,0x287c,0x4141,{0xa6,0x10,0x08,0xd9,0x4c,0xec,0xe9,0x76}};
extern "C" const GUID __declspec(selectany) IID_IReplaceFaceFeatureData =
    {0xd7792e79,0x5983,0x45c7,{0xae,0x7d,0x96,0x6f,0xcb,0x66,0x04,0xd8}};
extern "C" const GUID __declspec(selectany) IID_IMacroFeatureData =
    {0x739ac7ce,0x9017,0x11d5,{0xaf,0x07,0x00,0x02,0xb3,0x41,0x43,0xe5}};
extern "C" const GUID __declspec(selectany) IID_ICurveDrivenPatternFeatureData =
    {0x496a6d86,0x2180,0x46d8,{0xa9,0x73,0x78,0x85,0x55,0x4e,0xfa,0xf3}};
extern "C" const GUID __declspec(selectany) IID_IRipFeatureData =
    {0xd3352f26,0x3333,0x455e,{0x91,0x0b,0xe0,0xf3,0xa4,0x4e,0x76,0xfd}};
extern "C" const GUID __declspec(selectany) IID_IHemFeatureData =
    {0xd1e54427,0x2421,0x413f,{0x9e,0xb3,0xf5,0x68,0xa6,0xbf,0x82,0x6d}};
extern "C" const GUID __declspec(selectany) IID_IBreakCornerFeatureData =
    {0xdf91cd7f,0xf4d5,0x471a,{0x83,0x1b,0xe2,0x01,0xb2,0xc0,0x20,0x90}};
extern "C" const GUID __declspec(selectany) IID_IJogFeatureData =
    {0xc75ca537,0x4aba,0x44f3,{0xac,0x3b,0x73,0xd5,0xdc,0xd0,0xc8,0x34}};
extern "C" const GUID __declspec(selectany) IID_ISurfExtrudeFeatureData =
    {0x157ce6b0,0x16bc,0x49a3,{0xb2,0x07,0x95,0x15,0x9b,0x02,0x30,0x6c}};
extern "C" const GUID __declspec(selectany) IID_ISurfRevolveFeatureData =
    {0x38d7f138,0x4403,0x4eb0,{0x8e,0x9e,0x7d,0xaf,0x6b,0xa3,0x85,0xcf}};
extern "C" const GUID __declspec(selectany) IID_ISurfaceOffsetFeatureData =
    {0x214152e2,0x2f73,0x42e3,{0xab,0x88,0x69,0x0c,0x2e,0xd9,0x91,0x0d}};
extern "C" const GUID __declspec(selectany) IID_ISurfaceKnitFeatureData =
    {0x6ce5bd99,0x0769,0x4daf,{0x82,0x06,0x07,0x51,0x3b,0x6c,0x00,0x05}};
extern "C" const GUID __declspec(selectany) IID_ISurfaceExtendFeatureData =
    {0x72249e3d,0xb571,0x416d,{0x90,0x34,0xde,0x3b,0xe1,0xd9,0x93,0x7c}};
extern "C" const GUID __declspec(selectany) IID_ISurfacePlanarFeatureData =
    {0x6a0860dc,0xbc79,0x4dfd,{0x8a,0x06,0x25,0x2e,0xfc,0xcf,0xcd,0x37}};
extern "C" const GUID __declspec(selectany) IID_ISurfaceTrimFeatureData =
    {0xc9943dee,0x40de,0x4eb9,{0xa3,0xc5,0x7d,0x5c,0xab,0xee,0x3e,0x85}};
extern "C" const GUID __declspec(selectany) IID_ISurfaceRadiateFeatureData =
    {0x82f0509d,0x402b,0x4d79,{0xab,0x6b,0xaa,0x28,0x88,0xfc,0x1e,0x81}};
extern "C" const GUID __declspec(selectany) IID_IRefPlaneFeatureData =
    {0x02b5cbf8,0x5104,0x41f7,{0x90,0x1d,0xa4,0xdc,0xba,0x54,0x70,0x29}};
extern "C" const GUID __declspec(selectany) IID_IRefPointFeatureData =
    {0x887a2421,0x50f5,0x443f,{0xac,0xd9,0x62,0xe9,0x83,0x2a,0xb5,0x19}};
extern "C" const GUID __declspec(selectany) IID_IRuledSurfaceFeatureData =
    {0x4010a7f4,0xb516,0x4e35,{0xb9,0xb9,0x6e,0x87,0x13,0x55,0xdb,0x9e}};
extern "C" const GUID __declspec(selectany) IID_ICavityFeatureData =
    {0xa72beb28,0x2c74,0x4bcf,{0x88,0x0c,0x64,0x96,0xac,0x90,0x05,0xfa}};
extern "C" const GUID __declspec(selectany) IID_ILoftedBendsFeatureData =
    {0x619dee3d,0x3398,0x48fe,{0x88,0x18,0xed,0xd4,0x16,0x9f,0xdd,0xb8}};
extern "C" const GUID __declspec(selectany) IID_IReferencePointCurveFeatureData =
    {0x8066432c,0x1376,0x4d6b,{0xaa,0x64,0x46,0xb2,0xd3,0xcc,0x5d,0x60}};
extern "C" const GUID __declspec(selectany) IID_ICompositeCurveFeatureData =
    {0x8d5cfab8,0xa9f9,0x4b7f,{0x92,0x75,0x27,0xe2,0x06,0x2c,0x32,0x4e}};
extern "C" const GUID __declspec(selectany) IID_ICosmeticThreadFeatureData =
    {0xdae93be3,0xb9dc,0x4748,{0xad,0x03,0x94,0xca,0x1d,0x64,0x4e,0x59}};
extern "C" const GUID __declspec(selectany) IID_IMateInPlace =
    {0x1c4bc27b,0x4b76,0x4390,{0xae,0x66,0x4a,0x21,0xa9,0x6c,0x0c,0x9c}};
extern "C" const GUID __declspec(selectany) IID_IRefAxisFeatureData =
    {0x3adb2157,0xcf50,0x46ad,{0xb1,0xf6,0x0e,0x8d,0xb3,0x6c,0x29,0xb0}};
extern "C" const GUID __declspec(selectany) IID_IPartingLineFeatureData =
    {0x76c0e8b6,0x0f1b,0x4da1,{0x98,0x12,0xc4,0x6c,0x0e,0x6a,0xd9,0xc0}};
extern "C" const GUID __declspec(selectany) IID_IPartingSurfaceFeatureData =
    {0x243d4c1d,0x6a24,0x4ff9,{0x83,0xb7,0xd4,0x09,0xec,0x6b,0x51,0x85}};
extern "C" const GUID __declspec(selectany) IID_IDeleteBodyFeatureData =
    {0x5f20a7b3,0xed48,0x4103,{0x8d,0x00,0x4c,0xa3,0x8b,0x1a,0x7c,0x73}};
extern "C" const GUID __declspec(selectany) IID_IShutOffSurfaceFeatureData =
    {0xdbe5bcc6,0xfaf5,0x441a,{0xab,0xe5,0x53,0xbf,0x2b,0xba,0x90,0xd0}};
extern "C" const GUID __declspec(selectany) IID_IToolingSplitFeatureData =
    {0xe6fa7aee,0x8f47,0x4187,{0x9c,0x15,0x75,0x54,0x96,0x45,0x01,0x6f}};
extern "C" const GUID __declspec(selectany) IID_ISplitBodyFeatureData =
    {0x4afd6ad9,0xaf35,0x44eb,{0x8e,0x9b,0xe1,0x50,0x07,0xfb,0xda,0x62}};
extern "C" const GUID __declspec(selectany) IID_ISaveBodyFeatureData =
    {0xa8f7e532,0xff58,0x4ea2,{0x9b,0x61,0x99,0x63,0xdf,0xb7,0x8f,0xf7}};
extern "C" const GUID __declspec(selectany) IID_IJoinFeatureData =
    {0xa4e370f5,0x9bfb,0x4e7d,{0x88,0x0c,0x94,0xda,0x7e,0xa2,0x44,0x0d}};
extern "C" const GUID __declspec(selectany) IID_IFillSurfaceFeatureData =
    {0x57eb6a78,0x6e88,0x4ce9,{0xba,0xab,0x89,0x7c,0xcc,0x74,0xa8,0x99}};
extern "C" const GUID __declspec(selectany) IID_ISplitLineFeatureData =
    {0x215b0bec,0xddcd,0x4ece,{0xbd,0x49,0xb2,0x2c,0x8a,0xed,0x9e,0x7d}};
extern "C" const GUID __declspec(selectany) IID_IWrapSketchFeatureData =
    {0xed645449,0xbd48,0x47e6,{0x9a,0x7f,0xa8,0x78,0x2e,0x84,0x9b,0x09}};
extern "C" const GUID __declspec(selectany) IID_IEndCapFeatureData =
    {0x9db80806,0xedb1,0x4463,{0xb0,0xf3,0xd3,0xf3,0xbe,0xae,0x46,0x5e}};
extern "C" const GUID __declspec(selectany) IID_IGussetFeatureData =
    {0xae327ce4,0xcaee,0x42c6,{0x98,0x20,0x12,0x10,0x01,0x11,0x3e,0x06}};
extern "C" const GUID __declspec(selectany) IID_ICombineBodiesFeatureData =
    {0x526d5a18,0x6855,0x411a,{0x90,0x03,0x73,0x45,0xdd,0x56,0xe5,0xe3}};
extern "C" const GUID __declspec(selectany) IID_ILibraryFeatureData =
    {0xac44bc75,0x60b1,0x44b5,{0xba,0x39,0x32,0xcc,0x6e,0xd6,0x72,0x9e}};
extern "C" const GUID __declspec(selectany) IID_ISimulationMotorFeatureData =
    {0xd06c413a,0xfa92,0x4147,{0x85,0xc5,0x47,0xfe,0x67,0xc5,0x87,0x9d}};
extern "C" const GUID __declspec(selectany) IID_ISimulationSpringFeatureData =
    {0xc4799cd9,0xd4ce,0x4452,{0xbe,0x95,0x64,0xfc,0x26,0x01,0x6d,0xd0}};
extern "C" const GUID __declspec(selectany) IID_IWeldmentTrimExtendFeatureData =
    {0xd1d31986,0xc631,0x4726,{0x99,0x88,0xa4,0x5f,0x59,0x2c,0xfa,0xb2}};
extern "C" const GUID __declspec(selectany) IID_IWeldmentBeadFeatureData =
    {0x93f2e4d8,0xad2d,0x41b6,{0xa5,0xf7,0x6e,0x7e,0x62,0x8c,0xcf,0xab}};
extern "C" const GUID __declspec(selectany) IID_ICoreFeatureData =
    {0x900b5953,0x3bd3,0x43ab,{0xb1,0x90,0x67,0xea,0xcd,0x25,0xa6,0x9a}};
extern "C" const GUID __declspec(selectany) IID_IMoveFaceFeatureData =
    {0xbc300b17,0x346f,0x4511,{0x8d,0x31,0x96,0x9c,0x58,0x0b,0xb1,0x6b}};
extern "C" const GUID __declspec(selectany) IID_IHealEdgesFeatureData =
    {0xcfbd8d35,0x9c42,0x44f5,{0xaf,0x20,0xa2,0x79,0x88,0xf9,0x5f,0xd9}};
extern "C" const GUID __declspec(selectany) IID_IDerivedPartFeatureData =
    {0xa1672af7,0xe65f,0x46e8,{0x80,0x0c,0x7c,0xbf,0x4d,0xa6,0xe8,0x0f}};
extern "C" const GUID __declspec(selectany) IID_ISimulationDamperFeatureData =
    {0x0d637236,0x51bb,0x4559,{0x9f,0xdc,0x86,0x63,0x21,0xc5,0x99,0xcb}};
extern "C" const GUID __declspec(selectany) IID_ISimulationForceFeatureData =
    {0x131a6028,0x590b,0x4790,{0xa3,0x6c,0x56,0xcc,0x84,0xf5,0xaf,0x26}};
extern "C" const GUID __declspec(selectany) IID_ICoordinateSystemFeatureData =
    {0x9a543f7e,0xb9e9,0x49f4,{0xb1,0x8a,0xbc,0x31,0x0c,0x8f,0x07,0x9b}};
extern "C" const GUID __declspec(selectany) IID_IRibFeatureData2 =
    {0xefe4958e,0xb373,0x4849,{0xa9,0x3c,0x01,0xbf,0xde,0xbc,0x83,0x0d}};
extern "C" const GUID __declspec(selectany) IID_IDomeFeatureData2 =
    {0x6e8fab36,0x9e1c,0x4a84,{0xa1,0x60,0x1e,0x68,0xb7,0x03,0x43,0x1c}};
extern "C" const GUID __declspec(selectany) IID_ISimpleHoleFeatureData2 =
    {0xd98e9f26,0x73db,0x4bd2,{0xa9,0x67,0x31,0xbf,0x7e,0xf3,0x5b,0x5b}};
extern "C" const GUID __declspec(selectany) IID_IWizardHoleFeatureData2 =
    {0x7a472c09,0x437c,0x4c4b,{0xb3,0x4c,0xa1,0x44,0xd0,0xe2,0x54,0x6c}};
extern "C" const GUID __declspec(selectany) IID_IChamferFeatureData2 =
    {0x8427d092,0xa1fc,0x49c9,{0xb1,0xed,0xec,0x52,0xd2,0x38,0x9e,0x9a}};
extern "C" const GUID __declspec(selectany) IID_ISimpleFilletFeatureData2 =
    {0x9fe7c8db,0x8a4c,0x41bb,{0x8e,0x3b,0x76,0x00,0x69,0x2d,0xbc,0x92}};
extern "C" const GUID __declspec(selectany) IID_IVariableFilletFeatureData2 =
    {0xffcdc95c,0x1ba9,0x423a,{0x87,0x7e,0xcb,0x7a,0xa6,0x0d,0xe9,0xb4}};
extern "C" const GUID __declspec(selectany) IID_IExtrudeFeatureData2 =
    {0x931e939e,0x2fde,0x49a8,{0x84,0x72,0xab,0xcf,0x79,0xe9,0xf5,0xcc}};
extern "C" const GUID __declspec(selectany) IID_IRevolveFeatureData2 =
    {0xe055f0ed,0xdb3e,0x4528,{0xa9,0x82,0xd6,0x6d,0x28,0x91,0x90,0xa0}};
extern "C" const GUID __declspec(selectany) IID_IAttributeDef =
    {0x83a33d67,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IEntity =
    {0x83a33d65,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IAttribute =
    {0x83a33d71,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IFeatureManager =
    {0x6b39655e,0x381b,0x4bd0,{0x89,0xf5,0x64,0x0d,0x48,0x59,0x3f,0x15}};
extern "C" const GUID __declspec(selectany) IID_IFaultEntity =
    {0x9ef72595,0x1414,0x46bf,{0xb4,0xbb,0xb0,0xda,0x13,0x3c,0x89,0x3c}};
extern "C" const GUID __declspec(selectany) IID_IPartDoc =
    {0x83a33d32,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IMate =
    {0x83a33d8a,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IHoleSeriesFeatureData =
    {0xb1edf95c,0xe764,0x486a,{0xa8,0x2e,0x84,0x02,0xd6,0x55,0x39,0x92}};
extern "C" const GUID __declspec(selectany) IID_IMateReference =
    {0x2c1bf8ee,0x6886,0x4e8e,{0x9e,0xf2,0x1c,0x48,0xae,0x94,0x95,0x8b}};
extern "C" const GUID __declspec(selectany) IID_IDraftFeatureData2 =
    {0xfd9b0999,0xd519,0x41ab,{0xac,0xaa,0x4f,0x2a,0xde,0xdd,0x70,0x15}};
extern "C" const GUID __declspec(selectany) IID_IDetailCircle =
    {0x4b65a34a,0x4c44,0x11d4,{0xae,0xf6,0x00,0xc0,0x4f,0x68,0x3c,0xba}};
extern "C" const GUID __declspec(selectany) IID_ISketchSegment =
    {0x83a33dbf,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ISketchPath =
    {0x41a80156,0x183c,0x4b30,{0xa7,0x57,0x8b,0x13,0xaa,0xb4,0xe7,0xc5}};
extern "C" const GUID __declspec(selectany) IID_IEnumSketchSegments =
    {0x83a33dcf,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ISketchContour =
    {0xeb53b513,0xe23d,0x4b6a,{0xb4,0x8d,0x21,0x82,0x8a,0xf5,0xf1,0x51}};
extern "C" const GUID __declspec(selectany) IID_IOneBendFeatureData =
    {0x0c02ad40,0xf6e6,0x11d4,{0xae,0xd6,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_IStructuralMemberFeatureData =
    {0xf3f83396,0x6439,0x46bd,{0x99,0x27,0x24,0x49,0x08,0x3e,0xcd,0xc2}};
extern "C" const GUID __declspec(selectany) IID_IBlockInstance =
    {0x992a14b6,0x15cf,0x11d6,{0xaf,0x6e,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IBlockDefinition =
    {0x8cd8314a,0x1677,0x11d6,{0xaf,0x6e,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_ITableAnnotation =
    {0xc108723c,0xac56,0x4c08,{0x95,0x91,0x79,0x80,0xb0,0xa5,0xaa,0xb2}};
extern "C" const GUID __declspec(selectany) IID_IGeneralTableFeature =
    {0x846c6e0f,0x7319,0x4c13,{0xb1,0x2e,0xa6,0xb2,0x31,0xda,0xcc,0x89}};
extern "C" const GUID __declspec(selectany) IID_IHoleTableAnnotation =
    {0x61e4109e,0xd5d1,0x48cb,{0x85,0x93,0x82,0x83,0xef,0x0b,0xb7,0x9a}};
extern "C" const GUID __declspec(selectany) IID_IHoleTable =
    {0x727dd5df,0x15f4,0x4916,{0x85,0x4a,0xbe,0x9e,0x30,0x61,0x4c,0x97}};
extern "C" const GUID __declspec(selectany) IID_IDatumOrigin =
    {0x5d9a743b,0xfa81,0x4d23,{0xab,0x0a,0x28,0x98,0x58,0x4f,0x6f,0x1e}};
extern "C" const GUID __declspec(selectany) IID_IBomTableAnnotation =
    {0x98fd64dc,0x285d,0x4b48,{0x9b,0xdb,0xd8,0x5c,0x25,0x3e,0x2b,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IBomFeature =
    {0x3368f34b,0x85f2,0x4d61,{0x93,0x25,0x33,0x53,0xcf,0x11,0x0d,0x5a}};
extern "C" const GUID __declspec(selectany) IID_IModelDocExtension =
    {0x99f4d4af,0xf268,0x4ee1,{0x8c,0x55,0x04,0x1f,0x7b,0xec,0xf8,0x79}};
extern "C" const GUID __declspec(selectany) IID_ISheet =
    {0x83a33d80,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IDrawingDoc =
    {0x83a33d33,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IRevisionTableAnnotation =
    {0x175ca9e4,0xb05a,0x48ba,{0x80,0x47,0xda,0x3d,0x9b,0xb6,0xb5,0x83}};
extern "C" const GUID __declspec(selectany) IID_IRevisionTableFeature =
    {0x660caf6b,0x65a0,0x4664,{0xad,0x9f,0x81,0xab,0x7a,0x46,0x64,0xb7}};
extern "C" const GUID __declspec(selectany) IID_IWeldmentCutListAnnotation =
    {0x5253c565,0x2195,0x4e99,{0xa3,0x53,0xcb,0x62,0xf5,0xe5,0x96,0x3b}};
extern "C" const GUID __declspec(selectany) IID_IWeldmentCutListFeature =
    {0x3cd5de06,0x83f6,0x4a7c,{0xa2,0x88,0xd8,0xa4,0x1f,0x9f,0x03,0x51}};
extern "C" const GUID __declspec(selectany) IID_ISketchBlockInstance =
    {0x93f9a5a6,0xa4f6,0x435e,{0xbc,0xc6,0xb4,0x59,0x2c,0x06,0x85,0x8f}};
extern "C" const GUID __declspec(selectany) IID_ISketchBlockDefinition =
    {0x82dc842f,0x001e,0x4b72,{0xa7,0x62,0x54,0x0d,0xcf,0xb7,0x07,0x05}};
extern "C" const GUID __declspec(selectany) IID_ISketchManager =
    {0x9ce9dace,0xe595,0x4d8f,{0xb8,0x93,0x5a,0xe4,0x89,0x95,0x17,0xde}};
extern "C" const GUID __declspec(selectany) IID_IAssemblyDoc =
    {0x83a33d35,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IMate2 =
    {0xb09d234a,0x7581,0x408e,{0xb3,0xb3,0xfc,0x0a,0x51,0x4a,0xaf,0xa8}};
extern "C" const GUID __declspec(selectany) IID_IMateLoadReference =
    {0x35627cfb,0x32e3,0x468c,{0xaa,0xa3,0x92,0x22,0xd2,0xf1,0x90,0xbd}};
extern "C" const GUID __declspec(selectany) IID_IMoveCopyBodyFeatureData =
    {0x6d5845f5,0x68f8,0x4492,{0x92,0x20,0x58,0xea,0x19,0x3a,0x7b,0x24}};
extern "C" const GUID __declspec(selectany) IID_IPropertyManagerPage2 =
    {0xb92e624a,0x0dc3,0x11d5,{0xaf,0x1e,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IPropertyManagerPageGroup =
    {0x2e23d2ee,0x0f57,0x11d5,{0xaf,0x1f,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IPropertyManagerPageControl =
    {0xced9caf4,0x16fa,0x11d5,{0xaf,0x24,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IPropertyManagerPageTab =
    {0x22bcfa78,0xd2bf,0x449c,{0x88,0xab,0x99,0xcb,0xc4,0x46,0x8b,0xdb}};

} // namespace SldWorks

#pragma pack(pop)
